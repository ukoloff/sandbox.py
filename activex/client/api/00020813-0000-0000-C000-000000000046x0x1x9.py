# -*- coding: utf-8 -*-
# Created by makepy.py version 0.5.01
# By python version 3.13.0 (tags/v3.13.0:60403a5, Oct  7 2024, 09:38:07) [MSC v.1941 64 bit (AMD64)]
# From type library 'EXCEL.EXE'
# On Sun Nov  3 20:03:18 2024
'Microsoft Excel 16.0 Object Library'
makepy_version = '0.5.01'
python_version = 0x30d00f0

import win32com.client.CLSIDToClass, pythoncom, pywintypes
import win32com.client.util
from pywintypes import IID
from win32com.client import Dispatch

# The following 3 lines may need tweaking for the particular server
# Candidates are pythoncom.Missing, .Empty and .ArgNotFound
defaultNamedOptArg=pythoncom.Empty
defaultNamedNotOptArg=pythoncom.Empty
defaultUnnamedArg=pythoncom.Empty

CLSID = IID('{00020813-0000-0000-C000-000000000046}')
MajorVersion = 1
MinorVersion = 9
LibraryFlags = 8
LCID = 0x0

class constants:
	xl3DBar                       =-4099      # from enum Constants
	xl3DEffects1                  =13         # from enum Constants
	xl3DEffects2                  =14         # from enum Constants
	xl3DSurface                   =-4103      # from enum Constants
	xlAbove                       =0          # from enum Constants
	xlAccounting1                 =4          # from enum Constants
	xlAccounting2                 =5          # from enum Constants
	xlAccounting3                 =6          # from enum Constants
	xlAccounting4                 =17         # from enum Constants
	xlAdd                         =2          # from enum Constants
	xlAll                         =-4104      # from enum Constants
	xlAllExceptBorders            =7          # from enum Constants
	xlAutomatic                   =-4105      # from enum Constants
	xlBar                         =2          # from enum Constants
	xlBelow                       =1          # from enum Constants
	xlBidi                        =-5000      # from enum Constants
	xlBidiCalendar                =3          # from enum Constants
	xlBoth                        =1          # from enum Constants
	xlBottom                      =-4107      # from enum Constants
	xlCascade                     =7          # from enum Constants
	xlCenter                      =-4108      # from enum Constants
	xlCenterAcrossSelection       =7          # from enum Constants
	xlChart4                      =2          # from enum Constants
	xlChartSeries                 =17         # from enum Constants
	xlChartShort                  =6          # from enum Constants
	xlChartTitles                 =18         # from enum Constants
	xlChecker                     =9          # from enum Constants
	xlCircle                      =8          # from enum Constants
	xlClassic1                    =1          # from enum Constants
	xlClassic2                    =2          # from enum Constants
	xlClassic3                    =3          # from enum Constants
	xlClosed                      =3          # from enum Constants
	xlColor1                      =7          # from enum Constants
	xlColor2                      =8          # from enum Constants
	xlColor3                      =9          # from enum Constants
	xlColumn                      =3          # from enum Constants
	xlCombination                 =-4111      # from enum Constants
	xlComplete                    =4          # from enum Constants
	xlConstants                   =2          # from enum Constants
	xlContents                    =2          # from enum Constants
	xlContext                     =-5002      # from enum Constants
	xlCorner                      =2          # from enum Constants
	xlCrissCross                  =16         # from enum Constants
	xlCross                       =4          # from enum Constants
	xlCustom                      =-4114      # from enum Constants
	xlDebugCodePane               =13         # from enum Constants
	xlDefaultAutoFormat           =-1         # from enum Constants
	xlDesktop                     =9          # from enum Constants
	xlDiamond                     =2          # from enum Constants
	xlDirect                      =1          # from enum Constants
	xlDistributed                 =-4117      # from enum Constants
	xlDivide                      =5          # from enum Constants
	xlDoubleAccounting            =5          # from enum Constants
	xlDoubleClosed                =5          # from enum Constants
	xlDoubleOpen                  =4          # from enum Constants
	xlDoubleQuote                 =1          # from enum Constants
	xlDrawingObject               =14         # from enum Constants
	xlEntireChart                 =20         # from enum Constants
	xlExcelMenus                  =1          # from enum Constants
	xlExtended                    =3          # from enum Constants
	xlFill                        =5          # from enum Constants
	xlFirst                       =0          # from enum Constants
	xlFixedValue                  =1          # from enum Constants
	xlFloating                    =5          # from enum Constants
	xlFormats                     =-4122      # from enum Constants
	xlFormula                     =5          # from enum Constants
	xlFullScript                  =1          # from enum Constants
	xlGeneral                     =1          # from enum Constants
	xlGray16                      =17         # from enum Constants
	xlGray25                      =-4124      # from enum Constants
	xlGray50                      =-4125      # from enum Constants
	xlGray75                      =-4126      # from enum Constants
	xlGray8                       =18         # from enum Constants
	xlGregorian                   =2          # from enum Constants
	xlGrid                        =15         # from enum Constants
	xlGridline                    =22         # from enum Constants
	xlHigh                        =-4127      # from enum Constants
	xlHindiNumerals               =3          # from enum Constants
	xlIcons                       =1          # from enum Constants
	xlImmediatePane               =12         # from enum Constants
	xlInside                      =2          # from enum Constants
	xlInteger                     =2          # from enum Constants
	xlJustify                     =-4130      # from enum Constants
	xlLTR                         =-5003      # from enum Constants
	xlLast                        =1          # from enum Constants
	xlLastCell                    =11         # from enum Constants
	xlLatin                       =-5001      # from enum Constants
	xlLeft                        =-4131      # from enum Constants
	xlLeftToRight                 =2          # from enum Constants
	xlLightDown                   =13         # from enum Constants
	xlLightHorizontal             =11         # from enum Constants
	xlLightUp                     =14         # from enum Constants
	xlLightVertical               =12         # from enum Constants
	xlList1                       =10         # from enum Constants
	xlList2                       =11         # from enum Constants
	xlList3                       =12         # from enum Constants
	xlLocalFormat1                =15         # from enum Constants
	xlLocalFormat2                =16         # from enum Constants
	xlLogicalCursor               =1          # from enum Constants
	xlLong                        =3          # from enum Constants
	xlLotusHelp                   =2          # from enum Constants
	xlLow                         =-4134      # from enum Constants
	xlMacrosheetCell              =7          # from enum Constants
	xlManual                      =-4135      # from enum Constants
	xlMaximum                     =2          # from enum Constants
	xlMinimum                     =4          # from enum Constants
	xlMinusValues                 =3          # from enum Constants
	xlMixed                       =2          # from enum Constants
	xlMixedAuthorizedScript       =4          # from enum Constants
	xlMixedScript                 =3          # from enum Constants
	xlModule                      =-4141      # from enum Constants
	xlMultiply                    =4          # from enum Constants
	xlNarrow                      =1          # from enum Constants
	xlNextToAxis                  =4          # from enum Constants
	xlNoDocuments                 =3          # from enum Constants
	xlNone                        =-4142      # from enum Constants
	xlNotes                       =-4144      # from enum Constants
	xlOff                         =-4146      # from enum Constants
	xlOn                          =1          # from enum Constants
	xlOpaque                      =3          # from enum Constants
	xlOpen                        =2          # from enum Constants
	xlOutside                     =3          # from enum Constants
	xlPartial                     =3          # from enum Constants
	xlPartialScript               =2          # from enum Constants
	xlPercent                     =2          # from enum Constants
	xlPlus                        =9          # from enum Constants
	xlPlusValues                  =2          # from enum Constants
	xlRTL                         =-5004      # from enum Constants
	xlReference                   =4          # from enum Constants
	xlRight                       =-4152      # from enum Constants
	xlScale                       =3          # from enum Constants
	xlSemiGray75                  =10         # from enum Constants
	xlSemiautomatic               =2          # from enum Constants
	xlShort                       =1          # from enum Constants
	xlShowLabel                   =4          # from enum Constants
	xlShowLabelAndPercent         =5          # from enum Constants
	xlShowPercent                 =3          # from enum Constants
	xlShowValue                   =2          # from enum Constants
	xlSimple                      =-4154      # from enum Constants
	xlSingle                      =2          # from enum Constants
	xlSingleAccounting            =4          # from enum Constants
	xlSingleQuote                 =2          # from enum Constants
	xlSolid                       =1          # from enum Constants
	xlSquare                      =1          # from enum Constants
	xlStError                     =4          # from enum Constants
	xlStar                        =5          # from enum Constants
	xlStrict                      =2          # from enum Constants
	xlSubtract                    =3          # from enum Constants
	xlSystem                      =1          # from enum Constants
	xlTextBox                     =16         # from enum Constants
	xlTiled                       =1          # from enum Constants
	xlTitleBar                    =8          # from enum Constants
	xlToolbar                     =1          # from enum Constants
	xlToolbarButton               =2          # from enum Constants
	xlTop                         =-4160      # from enum Constants
	xlTopToBottom                 =1          # from enum Constants
	xlTransparent                 =2          # from enum Constants
	xlTriangle                    =3          # from enum Constants
	xlVeryHidden                  =2          # from enum Constants
	xlVisible                     =12         # from enum Constants
	xlVisualCursor                =2          # from enum Constants
	xlWatchPane                   =11         # from enum Constants
	xlWide                        =3          # from enum Constants
	xlWorkbookTab                 =6          # from enum Constants
	xlWorksheet4                  =1          # from enum Constants
	xlWorksheetCell               =3          # from enum Constants
	xlWorksheetShort              =5          # from enum Constants
	xlAboveAverage                =0          # from enum XlAboveBelow
	xlAboveStdDev                 =4          # from enum XlAboveBelow
	xlBelowAverage                =1          # from enum XlAboveBelow
	xlBelowStdDev                 =5          # from enum XlAboveBelow
	xlEqualAboveAverage           =2          # from enum XlAboveBelow
	xlEqualBelowAverage           =3          # from enum XlAboveBelow
	xlActionTypeDrillthrough      =256        # from enum XlActionType
	xlActionTypeReport            =128        # from enum XlActionType
	xlActionTypeRowset            =16         # from enum XlActionType
	xlActionTypeUrl               =1          # from enum XlActionType
	xlAutomaticAllocation         =2          # from enum XlAllocation
	xlManualAllocation            =1          # from enum XlAllocation
	xlEqualAllocation             =1          # from enum XlAllocationMethod
	xlWeightedAllocation          =2          # from enum XlAllocationMethod
	xlAllocateIncrement           =2          # from enum XlAllocationValue
	xlAllocateValue               =1          # from enum XlAllocationValue
	xl24HourClock                 =33         # from enum XlApplicationInternational
	xl4DigitYears                 =43         # from enum XlApplicationInternational
	xlAlternateArraySeparator     =16         # from enum XlApplicationInternational
	xlColumnSeparator             =14         # from enum XlApplicationInternational
	xlCountryCode                 =1          # from enum XlApplicationInternational
	xlCountrySetting              =2          # from enum XlApplicationInternational
	xlCurrencyBefore              =37         # from enum XlApplicationInternational
	xlCurrencyCode                =25         # from enum XlApplicationInternational
	xlCurrencyDigits              =27         # from enum XlApplicationInternational
	xlCurrencyLeadingZeros        =40         # from enum XlApplicationInternational
	xlCurrencyMinusSign           =38         # from enum XlApplicationInternational
	xlCurrencyNegative            =28         # from enum XlApplicationInternational
	xlCurrencySpaceBefore         =36         # from enum XlApplicationInternational
	xlCurrencyTrailingZeros       =39         # from enum XlApplicationInternational
	xlDateOrder                   =32         # from enum XlApplicationInternational
	xlDateSeparator               =17         # from enum XlApplicationInternational
	xlDayCode                     =21         # from enum XlApplicationInternational
	xlDayLeadingZero              =42         # from enum XlApplicationInternational
	xlDecimalSeparator            =3          # from enum XlApplicationInternational
	xlGeneralFormatName           =26         # from enum XlApplicationInternational
	xlHourCode                    =22         # from enum XlApplicationInternational
	xlLeftBrace                   =12         # from enum XlApplicationInternational
	xlLeftBracket                 =10         # from enum XlApplicationInternational
	xlListSeparator               =5          # from enum XlApplicationInternational
	xlLowerCaseColumnLetter       =9          # from enum XlApplicationInternational
	xlLowerCaseRowLetter          =8          # from enum XlApplicationInternational
	xlMDY                         =44         # from enum XlApplicationInternational
	xlMetric                      =35         # from enum XlApplicationInternational
	xlMinuteCode                  =23         # from enum XlApplicationInternational
	xlMonthCode                   =20         # from enum XlApplicationInternational
	xlMonthLeadingZero            =41         # from enum XlApplicationInternational
	xlMonthNameChars              =30         # from enum XlApplicationInternational
	xlNonEnglishFunctions         =34         # from enum XlApplicationInternational
	xlNoncurrencyDigits           =29         # from enum XlApplicationInternational
	xlRightBrace                  =13         # from enum XlApplicationInternational
	xlRightBracket                =11         # from enum XlApplicationInternational
	xlRowSeparator                =15         # from enum XlApplicationInternational
	xlSecondCode                  =24         # from enum XlApplicationInternational
	xlThousandsSeparator          =4          # from enum XlApplicationInternational
	xlTimeLeadingZero             =45         # from enum XlApplicationInternational
	xlTimeSeparator               =18         # from enum XlApplicationInternational
	xlUICultureTag                =46         # from enum XlApplicationInternational
	xlUpperCaseColumnLetter       =7          # from enum XlApplicationInternational
	xlUpperCaseRowLetter          =6          # from enum XlApplicationInternational
	xlWeekdayNameChars            =31         # from enum XlApplicationInternational
	xlYearCode                    =19         # from enum XlApplicationInternational
	xlColumnThenRow               =2          # from enum XlApplyNamesOrder
	xlRowThenColumn               =1          # from enum XlApplyNamesOrder
	xlArabicBothStrict            =3          # from enum XlArabicModes
	xlArabicNone                  =0          # from enum XlArabicModes
	xlArabicStrictAlefHamza       =1          # from enum XlArabicModes
	xlArabicStrictFinalYaa        =2          # from enum XlArabicModes
	xlArrangeStyleCascade         =7          # from enum XlArrangeStyle
	xlArrangeStyleHorizontal      =-4128      # from enum XlArrangeStyle
	xlArrangeStyleTiled           =1          # from enum XlArrangeStyle
	xlArrangeStyleVertical        =-4166      # from enum XlArrangeStyle
	xlArrowHeadLengthLong         =3          # from enum XlArrowHeadLength
	xlArrowHeadLengthMedium       =-4138      # from enum XlArrowHeadLength
	xlArrowHeadLengthShort        =1          # from enum XlArrowHeadLength
	xlArrowHeadStyleClosed        =3          # from enum XlArrowHeadStyle
	xlArrowHeadStyleDoubleClosed  =5          # from enum XlArrowHeadStyle
	xlArrowHeadStyleDoubleOpen    =4          # from enum XlArrowHeadStyle
	xlArrowHeadStyleNone          =-4142      # from enum XlArrowHeadStyle
	xlArrowHeadStyleOpen          =2          # from enum XlArrowHeadStyle
	xlArrowHeadWidthMedium        =-4138      # from enum XlArrowHeadWidth
	xlArrowHeadWidthNarrow        =1          # from enum XlArrowHeadWidth
	xlArrowHeadWidthWide          =3          # from enum XlArrowHeadWidth
	xlFillCopy                    =1          # from enum XlAutoFillType
	xlFillDays                    =5          # from enum XlAutoFillType
	xlFillDefault                 =0          # from enum XlAutoFillType
	xlFillFormats                 =3          # from enum XlAutoFillType
	xlFillMonths                  =7          # from enum XlAutoFillType
	xlFillSeries                  =2          # from enum XlAutoFillType
	xlFillValues                  =4          # from enum XlAutoFillType
	xlFillWeekdays                =6          # from enum XlAutoFillType
	xlFillYears                   =8          # from enum XlAutoFillType
	xlFlashFill                   =11         # from enum XlAutoFillType
	xlGrowthTrend                 =10         # from enum XlAutoFillType
	xlLinearTrend                 =9          # from enum XlAutoFillType
	xlAnd                         =1          # from enum XlAutoFilterOperator
	xlBottom10Items               =4          # from enum XlAutoFilterOperator
	xlBottom10Percent             =6          # from enum XlAutoFilterOperator
	xlFilterAutomaticFontColor    =13         # from enum XlAutoFilterOperator
	xlFilterCellColor             =8          # from enum XlAutoFilterOperator
	xlFilterDynamic               =11         # from enum XlAutoFilterOperator
	xlFilterFontColor             =9          # from enum XlAutoFilterOperator
	xlFilterIcon                  =10         # from enum XlAutoFilterOperator
	xlFilterNoFill                =12         # from enum XlAutoFilterOperator
	xlFilterNoIcon                =14         # from enum XlAutoFilterOperator
	xlFilterValues                =7          # from enum XlAutoFilterOperator
	xlOr                          =2          # from enum XlAutoFilterOperator
	xlTop10Items                  =3          # from enum XlAutoFilterOperator
	xlTop10Percent                =5          # from enum XlAutoFilterOperator
	xlAxisCrossesAutomatic        =-4105      # from enum XlAxisCrosses
	xlAxisCrossesCustom           =-4114      # from enum XlAxisCrosses
	xlAxisCrossesMaximum          =2          # from enum XlAxisCrosses
	xlAxisCrossesMinimum          =4          # from enum XlAxisCrosses
	xlPrimary                     =1          # from enum XlAxisGroup
	xlSecondary                   =2          # from enum XlAxisGroup
	xlCategory                    =1          # from enum XlAxisType
	xlSeriesAxis                  =3          # from enum XlAxisType
	xlValue                       =2          # from enum XlAxisType
	xlBackgroundAutomatic         =-4105      # from enum XlBackground
	xlBackgroundOpaque            =3          # from enum XlBackground
	xlBackgroundTransparent       =2          # from enum XlBackground
	xlBox                         =0          # from enum XlBarShape
	xlConeToMax                   =5          # from enum XlBarShape
	xlConeToPoint                 =4          # from enum XlBarShape
	xlCylinder                    =3          # from enum XlBarShape
	xlPyramidToMax                =2          # from enum XlBarShape
	xlPyramidToPoint              =1          # from enum XlBarShape
	xlBinsTypeAutomatic           =0          # from enum XlBinsType
	xlBinsTypeBinCount            =4          # from enum XlBinsType
	xlBinsTypeBinSize             =3          # from enum XlBinsType
	xlBinsTypeCategorical         =1          # from enum XlBinsType
	xlBinsTypeManual              =2          # from enum XlBinsType
	xlHairline                    =1          # from enum XlBorderWeight
	xlMedium                      =-4138      # from enum XlBorderWeight
	xlThick                       =4          # from enum XlBorderWeight
	xlThin                        =2          # from enum XlBorderWeight
	xlDiagonalDown                =5          # from enum XlBordersIndex
	xlDiagonalUp                  =6          # from enum XlBordersIndex
	xlEdgeBottom                  =9          # from enum XlBordersIndex
	xlEdgeLeft                    =7          # from enum XlBordersIndex
	xlEdgeRight                   =10         # from enum XlBordersIndex
	xlEdgeTop                     =8          # from enum XlBordersIndex
	xlInsideHorizontal            =12         # from enum XlBordersIndex
	xlInsideVertical              =11         # from enum XlBordersIndex
	_xlDialogChartSourceData      =541        # from enum XlBuiltInDialog
	_xlDialogPhonetic             =538        # from enum XlBuiltInDialog
	xlDialogActivate              =103        # from enum XlBuiltInDialog
	xlDialogActiveCellFont        =476        # from enum XlBuiltInDialog
	xlDialogAddChartAutoformat    =390        # from enum XlBuiltInDialog
	xlDialogAddinManager          =321        # from enum XlBuiltInDialog
	xlDialogAlignment             =43         # from enum XlBuiltInDialog
	xlDialogAppMove               =170        # from enum XlBuiltInDialog
	xlDialogAppSize               =171        # from enum XlBuiltInDialog
	xlDialogApplyNames            =133        # from enum XlBuiltInDialog
	xlDialogApplyStyle            =212        # from enum XlBuiltInDialog
	xlDialogArrangeAll            =12         # from enum XlBuiltInDialog
	xlDialogAssignToObject        =213        # from enum XlBuiltInDialog
	xlDialogAssignToTool          =293        # from enum XlBuiltInDialog
	xlDialogAttachText            =80         # from enum XlBuiltInDialog
	xlDialogAttachToolbars        =323        # from enum XlBuiltInDialog
	xlDialogAutoCorrect           =485        # from enum XlBuiltInDialog
	xlDialogAxes                  =78         # from enum XlBuiltInDialog
	xlDialogBorder                =45         # from enum XlBuiltInDialog
	xlDialogCalculation           =32         # from enum XlBuiltInDialog
	xlDialogCellProtection        =46         # from enum XlBuiltInDialog
	xlDialogChangeLink            =166        # from enum XlBuiltInDialog
	xlDialogChartAddData          =392        # from enum XlBuiltInDialog
	xlDialogChartLocation         =527        # from enum XlBuiltInDialog
	xlDialogChartOptionsDataLabelMultiple=724        # from enum XlBuiltInDialog
	xlDialogChartOptionsDataLabels=505        # from enum XlBuiltInDialog
	xlDialogChartOptionsDataTable =506        # from enum XlBuiltInDialog
	xlDialogChartSourceData       =540        # from enum XlBuiltInDialog
	xlDialogChartTrend            =350        # from enum XlBuiltInDialog
	xlDialogChartType             =526        # from enum XlBuiltInDialog
	xlDialogChartWizard           =288        # from enum XlBuiltInDialog
	xlDialogCheckboxProperties    =435        # from enum XlBuiltInDialog
	xlDialogClear                 =52         # from enum XlBuiltInDialog
	xlDialogColorPalette          =161        # from enum XlBuiltInDialog
	xlDialogColumnWidth           =47         # from enum XlBuiltInDialog
	xlDialogCombination           =73         # from enum XlBuiltInDialog
	xlDialogConditionalFormatting =583        # from enum XlBuiltInDialog
	xlDialogConsolidate           =191        # from enum XlBuiltInDialog
	xlDialogCopyChart             =147        # from enum XlBuiltInDialog
	xlDialogCopyPicture           =108        # from enum XlBuiltInDialog
	xlDialogCreateList            =796        # from enum XlBuiltInDialog
	xlDialogCreateNames           =62         # from enum XlBuiltInDialog
	xlDialogCreatePublisher       =217        # from enum XlBuiltInDialog
	xlDialogCreateRelationship    =1272       # from enum XlBuiltInDialog
	xlDialogCustomViews           =493        # from enum XlBuiltInDialog
	xlDialogCustomizeToolbar      =276        # from enum XlBuiltInDialog
	xlDialogDataDelete            =36         # from enum XlBuiltInDialog
	xlDialogDataLabel             =379        # from enum XlBuiltInDialog
	xlDialogDataLabelMultiple     =723        # from enum XlBuiltInDialog
	xlDialogDataSeries            =40         # from enum XlBuiltInDialog
	xlDialogDataValidation        =525        # from enum XlBuiltInDialog
	xlDialogDefineName            =61         # from enum XlBuiltInDialog
	xlDialogDefineStyle           =229        # from enum XlBuiltInDialog
	xlDialogDeleteFormat          =111        # from enum XlBuiltInDialog
	xlDialogDeleteName            =110        # from enum XlBuiltInDialog
	xlDialogDemote                =203        # from enum XlBuiltInDialog
	xlDialogDisplay               =27         # from enum XlBuiltInDialog
	xlDialogDocumentInspector     =862        # from enum XlBuiltInDialog
	xlDialogEditColor             =223        # from enum XlBuiltInDialog
	xlDialogEditDelete            =54         # from enum XlBuiltInDialog
	xlDialogEditSeries            =228        # from enum XlBuiltInDialog
	xlDialogEditboxProperties     =438        # from enum XlBuiltInDialog
	xlDialogEditionOptions        =251        # from enum XlBuiltInDialog
	xlDialogErrorChecking         =732        # from enum XlBuiltInDialog
	xlDialogErrorbarX             =463        # from enum XlBuiltInDialog
	xlDialogErrorbarY             =464        # from enum XlBuiltInDialog
	xlDialogEvaluateFormula       =709        # from enum XlBuiltInDialog
	xlDialogExternalDataProperties=530        # from enum XlBuiltInDialog
	xlDialogExtract               =35         # from enum XlBuiltInDialog
	xlDialogFileDelete            =6          # from enum XlBuiltInDialog
	xlDialogFileSharing           =481        # from enum XlBuiltInDialog
	xlDialogFillGroup             =200        # from enum XlBuiltInDialog
	xlDialogFillWorkgroup         =301        # from enum XlBuiltInDialog
	xlDialogFilter                =447        # from enum XlBuiltInDialog
	xlDialogFilterAdvanced        =370        # from enum XlBuiltInDialog
	xlDialogFindFile              =475        # from enum XlBuiltInDialog
	xlDialogFont                  =26         # from enum XlBuiltInDialog
	xlDialogFontProperties        =381        # from enum XlBuiltInDialog
	xlDialogForecastETS           =1300       # from enum XlBuiltInDialog
	xlDialogFormatAuto            =269        # from enum XlBuiltInDialog
	xlDialogFormatChart           =465        # from enum XlBuiltInDialog
	xlDialogFormatCharttype       =423        # from enum XlBuiltInDialog
	xlDialogFormatFont            =150        # from enum XlBuiltInDialog
	xlDialogFormatLegend          =88         # from enum XlBuiltInDialog
	xlDialogFormatMain            =225        # from enum XlBuiltInDialog
	xlDialogFormatMove            =128        # from enum XlBuiltInDialog
	xlDialogFormatNumber          =42         # from enum XlBuiltInDialog
	xlDialogFormatOverlay         =226        # from enum XlBuiltInDialog
	xlDialogFormatSize            =129        # from enum XlBuiltInDialog
	xlDialogFormatText            =89         # from enum XlBuiltInDialog
	xlDialogFormulaFind           =64         # from enum XlBuiltInDialog
	xlDialogFormulaGoto           =63         # from enum XlBuiltInDialog
	xlDialogFormulaReplace        =130        # from enum XlBuiltInDialog
	xlDialogFunctionWizard        =450        # from enum XlBuiltInDialog
	xlDialogGallery3dArea         =193        # from enum XlBuiltInDialog
	xlDialogGallery3dBar          =272        # from enum XlBuiltInDialog
	xlDialogGallery3dColumn       =194        # from enum XlBuiltInDialog
	xlDialogGallery3dLine         =195        # from enum XlBuiltInDialog
	xlDialogGallery3dPie          =196        # from enum XlBuiltInDialog
	xlDialogGallery3dSurface      =273        # from enum XlBuiltInDialog
	xlDialogGalleryArea           =67         # from enum XlBuiltInDialog
	xlDialogGalleryBar            =68         # from enum XlBuiltInDialog
	xlDialogGalleryColumn         =69         # from enum XlBuiltInDialog
	xlDialogGalleryCustom         =388        # from enum XlBuiltInDialog
	xlDialogGalleryDoughnut       =344        # from enum XlBuiltInDialog
	xlDialogGalleryLine           =70         # from enum XlBuiltInDialog
	xlDialogGalleryPie            =71         # from enum XlBuiltInDialog
	xlDialogGalleryRadar          =249        # from enum XlBuiltInDialog
	xlDialogGalleryScatter        =72         # from enum XlBuiltInDialog
	xlDialogGoalSeek              =198        # from enum XlBuiltInDialog
	xlDialogGridlines             =76         # from enum XlBuiltInDialog
	xlDialogImportTextFile        =666        # from enum XlBuiltInDialog
	xlDialogInsert                =55         # from enum XlBuiltInDialog
	xlDialogInsertHyperlink       =596        # from enum XlBuiltInDialog
	xlDialogInsertNameLabel       =496        # from enum XlBuiltInDialog
	xlDialogInsertObject          =259        # from enum XlBuiltInDialog
	xlDialogInsertPicture         =342        # from enum XlBuiltInDialog
	xlDialogInsertTitle           =380        # from enum XlBuiltInDialog
	xlDialogLabelProperties       =436        # from enum XlBuiltInDialog
	xlDialogListboxProperties     =437        # from enum XlBuiltInDialog
	xlDialogMacroOptions          =382        # from enum XlBuiltInDialog
	xlDialogMailEditMailer        =470        # from enum XlBuiltInDialog
	xlDialogMailLogon             =339        # from enum XlBuiltInDialog
	xlDialogMailNextLetter        =378        # from enum XlBuiltInDialog
	xlDialogMainChart             =85         # from enum XlBuiltInDialog
	xlDialogMainChartType         =185        # from enum XlBuiltInDialog
	xlDialogManageRelationships   =1271       # from enum XlBuiltInDialog
	xlDialogMenuEditor            =322        # from enum XlBuiltInDialog
	xlDialogMove                  =262        # from enum XlBuiltInDialog
	xlDialogMyPermission          =834        # from enum XlBuiltInDialog
	xlDialogNameManager           =977        # from enum XlBuiltInDialog
	xlDialogNew                   =119        # from enum XlBuiltInDialog
	xlDialogNewName               =978        # from enum XlBuiltInDialog
	xlDialogNewWebQuery           =667        # from enum XlBuiltInDialog
	xlDialogNote                  =154        # from enum XlBuiltInDialog
	xlDialogObjectProperties      =207        # from enum XlBuiltInDialog
	xlDialogObjectProtection      =214        # from enum XlBuiltInDialog
	xlDialogOpen                  =1          # from enum XlBuiltInDialog
	xlDialogOpenLinks             =2          # from enum XlBuiltInDialog
	xlDialogOpenMail              =188        # from enum XlBuiltInDialog
	xlDialogOpenText              =441        # from enum XlBuiltInDialog
	xlDialogOptionsCalculation    =318        # from enum XlBuiltInDialog
	xlDialogOptionsChart          =325        # from enum XlBuiltInDialog
	xlDialogOptionsEdit           =319        # from enum XlBuiltInDialog
	xlDialogOptionsGeneral        =356        # from enum XlBuiltInDialog
	xlDialogOptionsListsAdd       =458        # from enum XlBuiltInDialog
	xlDialogOptionsME             =647        # from enum XlBuiltInDialog
	xlDialogOptionsTransition     =355        # from enum XlBuiltInDialog
	xlDialogOptionsView           =320        # from enum XlBuiltInDialog
	xlDialogOutline               =142        # from enum XlBuiltInDialog
	xlDialogOverlay               =86         # from enum XlBuiltInDialog
	xlDialogOverlayChartType      =186        # from enum XlBuiltInDialog
	xlDialogPageSetup             =7          # from enum XlBuiltInDialog
	xlDialogParse                 =91         # from enum XlBuiltInDialog
	xlDialogPasteNames            =58         # from enum XlBuiltInDialog
	xlDialogPasteSpecial          =53         # from enum XlBuiltInDialog
	xlDialogPatterns              =84         # from enum XlBuiltInDialog
	xlDialogPermission            =832        # from enum XlBuiltInDialog
	xlDialogPhonetic              =656        # from enum XlBuiltInDialog
	xlDialogPivotCalculatedField  =570        # from enum XlBuiltInDialog
	xlDialogPivotCalculatedItem   =572        # from enum XlBuiltInDialog
	xlDialogPivotClientServerSet  =689        # from enum XlBuiltInDialog
	xlDialogPivotDefaultLayout    =1360       # from enum XlBuiltInDialog
	xlDialogPivotFieldGroup       =433        # from enum XlBuiltInDialog
	xlDialogPivotFieldProperties  =313        # from enum XlBuiltInDialog
	xlDialogPivotFieldUngroup     =434        # from enum XlBuiltInDialog
	xlDialogPivotShowPages        =421        # from enum XlBuiltInDialog
	xlDialogPivotSolveOrder       =568        # from enum XlBuiltInDialog
	xlDialogPivotTableOptions     =567        # from enum XlBuiltInDialog
	xlDialogPivotTableSlicerConnections=1183       # from enum XlBuiltInDialog
	xlDialogPivotTableWhatIfAnalysisSettings=1153       # from enum XlBuiltInDialog
	xlDialogPivotTableWizard      =312        # from enum XlBuiltInDialog
	xlDialogPlacement             =300        # from enum XlBuiltInDialog
	xlDialogPrint                 =8          # from enum XlBuiltInDialog
	xlDialogPrintPreview          =222        # from enum XlBuiltInDialog
	xlDialogPrinterSetup          =9          # from enum XlBuiltInDialog
	xlDialogPromote               =202        # from enum XlBuiltInDialog
	xlDialogProperties            =474        # from enum XlBuiltInDialog
	xlDialogPropertyFields        =754        # from enum XlBuiltInDialog
	xlDialogProtectDocument       =28         # from enum XlBuiltInDialog
	xlDialogProtectSharing        =620        # from enum XlBuiltInDialog
	xlDialogPublishAsWebPage      =653        # from enum XlBuiltInDialog
	xlDialogPushbuttonProperties  =445        # from enum XlBuiltInDialog
	xlDialogRecommendedPivotTables=1258       # from enum XlBuiltInDialog
	xlDialogReplaceFont           =134        # from enum XlBuiltInDialog
	xlDialogRoutingSlip           =336        # from enum XlBuiltInDialog
	xlDialogRowHeight             =127        # from enum XlBuiltInDialog
	xlDialogRun                   =17         # from enum XlBuiltInDialog
	xlDialogSaveAs                =5          # from enum XlBuiltInDialog
	xlDialogSaveCopyAs            =456        # from enum XlBuiltInDialog
	xlDialogSaveNewObject         =208        # from enum XlBuiltInDialog
	xlDialogSaveWorkbook          =145        # from enum XlBuiltInDialog
	xlDialogSaveWorkspace         =285        # from enum XlBuiltInDialog
	xlDialogScale                 =87         # from enum XlBuiltInDialog
	xlDialogScenarioAdd           =307        # from enum XlBuiltInDialog
	xlDialogScenarioCells         =305        # from enum XlBuiltInDialog
	xlDialogScenarioEdit          =308        # from enum XlBuiltInDialog
	xlDialogScenarioMerge         =473        # from enum XlBuiltInDialog
	xlDialogScenarioSummary       =311        # from enum XlBuiltInDialog
	xlDialogScrollbarProperties   =420        # from enum XlBuiltInDialog
	xlDialogSearch                =731        # from enum XlBuiltInDialog
	xlDialogSelectSpecial         =132        # from enum XlBuiltInDialog
	xlDialogSendMail              =189        # from enum XlBuiltInDialog
	xlDialogSeriesAxes            =460        # from enum XlBuiltInDialog
	xlDialogSeriesOptions         =557        # from enum XlBuiltInDialog
	xlDialogSeriesOrder           =466        # from enum XlBuiltInDialog
	xlDialogSeriesShape           =504        # from enum XlBuiltInDialog
	xlDialogSeriesX               =461        # from enum XlBuiltInDialog
	xlDialogSeriesY               =462        # from enum XlBuiltInDialog
	xlDialogSetBackgroundPicture  =509        # from enum XlBuiltInDialog
	xlDialogSetMDXEditor          =1208       # from enum XlBuiltInDialog
	xlDialogSetManager            =1109       # from enum XlBuiltInDialog
	xlDialogSetPrintTitles        =23         # from enum XlBuiltInDialog
	xlDialogSetTupleEditorOnColumns=1108       # from enum XlBuiltInDialog
	xlDialogSetTupleEditorOnRows  =1107       # from enum XlBuiltInDialog
	xlDialogSetUpdateStatus       =159        # from enum XlBuiltInDialog
	xlDialogShowDetail            =204        # from enum XlBuiltInDialog
	xlDialogShowToolbar           =220        # from enum XlBuiltInDialog
	xlDialogSize                  =261        # from enum XlBuiltInDialog
	xlDialogSlicerCreation        =1182       # from enum XlBuiltInDialog
	xlDialogSlicerPivotTableConnections=1184       # from enum XlBuiltInDialog
	xlDialogSlicerSettings        =1179       # from enum XlBuiltInDialog
	xlDialogSort                  =39         # from enum XlBuiltInDialog
	xlDialogSortSpecial           =192        # from enum XlBuiltInDialog
	xlDialogSparklineInsertColumn =1134       # from enum XlBuiltInDialog
	xlDialogSparklineInsertLine   =1133       # from enum XlBuiltInDialog
	xlDialogSparklineInsertWinLoss=1135       # from enum XlBuiltInDialog
	xlDialogSplit                 =137        # from enum XlBuiltInDialog
	xlDialogStandardFont          =190        # from enum XlBuiltInDialog
	xlDialogStandardWidth         =472        # from enum XlBuiltInDialog
	xlDialogStyle                 =44         # from enum XlBuiltInDialog
	xlDialogSubscribeTo           =218        # from enum XlBuiltInDialog
	xlDialogSubtotalCreate        =398        # from enum XlBuiltInDialog
	xlDialogSummaryInfo           =474        # from enum XlBuiltInDialog
	xlDialogTabOrder              =394        # from enum XlBuiltInDialog
	xlDialogTable                 =41         # from enum XlBuiltInDialog
	xlDialogTextToColumns         =422        # from enum XlBuiltInDialog
	xlDialogUnhide                =94         # from enum XlBuiltInDialog
	xlDialogUpdateLink            =201        # from enum XlBuiltInDialog
	xlDialogVbaInsertFile         =328        # from enum XlBuiltInDialog
	xlDialogVbaMakeAddin          =478        # from enum XlBuiltInDialog
	xlDialogVbaProcedureDefinition=330        # from enum XlBuiltInDialog
	xlDialogView3d                =197        # from enum XlBuiltInDialog
	xlDialogWebOptionsBrowsers    =773        # from enum XlBuiltInDialog
	xlDialogWebOptionsEncoding    =686        # from enum XlBuiltInDialog
	xlDialogWebOptionsFiles       =684        # from enum XlBuiltInDialog
	xlDialogWebOptionsFonts       =687        # from enum XlBuiltInDialog
	xlDialogWebOptionsGeneral     =683        # from enum XlBuiltInDialog
	xlDialogWebOptionsPictures    =685        # from enum XlBuiltInDialog
	xlDialogWindowMove            =14         # from enum XlBuiltInDialog
	xlDialogWindowSize            =13         # from enum XlBuiltInDialog
	xlDialogWorkbookAdd           =281        # from enum XlBuiltInDialog
	xlDialogWorkbookCopy          =283        # from enum XlBuiltInDialog
	xlDialogWorkbookInsert        =354        # from enum XlBuiltInDialog
	xlDialogWorkbookMove          =282        # from enum XlBuiltInDialog
	xlDialogWorkbookName          =386        # from enum XlBuiltInDialog
	xlDialogWorkbookNew           =302        # from enum XlBuiltInDialog
	xlDialogWorkbookOptions       =284        # from enum XlBuiltInDialog
	xlDialogWorkbookProtect       =417        # from enum XlBuiltInDialog
	xlDialogWorkbookTabSplit      =415        # from enum XlBuiltInDialog
	xlDialogWorkbookUnhide        =384        # from enum XlBuiltInDialog
	xlDialogWorkgroup             =199        # from enum XlBuiltInDialog
	xlDialogWorkspace             =95         # from enum XlBuiltInDialog
	xlDialogZoom                  =256        # from enum XlBuiltInDialog
	xlErrBlocked                  =2047       # from enum XlCVError
	xlErrCalc                     =2050       # from enum XlCVError
	xlErrConnect                  =2046       # from enum XlCVError
	xlErrDiv0                     =2007       # from enum XlCVError
	xlErrField                    =2049       # from enum XlCVError
	xlErrGettingData              =2043       # from enum XlCVError
	xlErrNA                       =2042       # from enum XlCVError
	xlErrName                     =2029       # from enum XlCVError
	xlErrNull                     =2000       # from enum XlCVError
	xlErrNum                      =2036       # from enum XlCVError
	xlErrRef                      =2023       # from enum XlCVError
	xlErrSpill                    =2045       # from enum XlCVError
	xlErrUnknown                  =2048       # from enum XlCVError
	xlErrValue                    =2015       # from enum XlCVError
	xlAllValues                   =0          # from enum XlCalcFor
	xlColGroups                   =2          # from enum XlCalcFor
	xlRowGroups                   =1          # from enum XlCalcFor
	xlNumberFormatTypeDefault     =0          # from enum XlCalcMemNumberFormatType
	xlNumberFormatTypeNumber      =1          # from enum XlCalcMemNumberFormatType
	xlNumberFormatTypePercent     =2          # from enum XlCalcMemNumberFormatType
	xlCalculatedMeasure           =2          # from enum XlCalculatedMemberType
	xlCalculatedMember            =0          # from enum XlCalculatedMemberType
	xlCalculatedSet               =1          # from enum XlCalculatedMemberType
	xlCalculationAutomatic        =-4105      # from enum XlCalculation
	xlCalculationManual           =-4135      # from enum XlCalculation
	xlCalculationSemiautomatic    =2          # from enum XlCalculation
	xlAnyKey                      =2          # from enum XlCalculationInterruptKey
	xlEscKey                      =1          # from enum XlCalculationInterruptKey
	xlNoKey                       =0          # from enum XlCalculationInterruptKey
	xlCalculating                 =1          # from enum XlCalculationState
	xlDone                        =0          # from enum XlCalculationState
	xlPending                     =2          # from enum XlCalculationState
	xlCategoryLabelLevelAll       =-1         # from enum XlCategoryLabelLevel
	xlCategoryLabelLevelCustom    =-2         # from enum XlCategoryLabelLevel
	xlCategoryLabelLevelNone      =-3         # from enum XlCategoryLabelLevel
	xlCategoryAscending           =2          # from enum XlCategorySortOrder
	xlCategoryDescending          =3          # from enum XlCategorySortOrder
	xlIndexAscending              =0          # from enum XlCategorySortOrder
	xlIndexDescending             =1          # from enum XlCategorySortOrder
	xlAutomaticScale              =-4105      # from enum XlCategoryType
	xlCategoryScale               =2          # from enum XlCategoryType
	xlTimeScale                   =3          # from enum XlCategoryType
	xlCellChangeApplied           =3          # from enum XlCellChangedState
	xlCellChanged                 =2          # from enum XlCellChangedState
	xlCellNotChanged              =1          # from enum XlCellChangedState
	xlTypeCheckbox                =2          # from enum XlCellControlType
	xlTypeNone                    =0          # from enum XlCellControlType
	xlTypeUnknown                 =1          # from enum XlCellControlType
	xlInsertDeleteCells           =1          # from enum XlCellInsertionMode
	xlInsertEntireRows            =2          # from enum XlCellInsertionMode
	xlOverwriteCells              =0          # from enum XlCellInsertionMode
	xlCellTypeAllFormatConditions =-4172      # from enum XlCellType
	xlCellTypeAllValidation       =-4174      # from enum XlCellType
	xlCellTypeBlanks              =4          # from enum XlCellType
	xlCellTypeComments            =-4144      # from enum XlCellType
	xlCellTypeConstants           =2          # from enum XlCellType
	xlCellTypeFormulas            =-4123      # from enum XlCellType
	xlCellTypeLastCell            =11         # from enum XlCellType
	xlCellTypeSameFormatConditions=-4173      # from enum XlCellType
	xlCellTypeSameValidation      =-4175      # from enum XlCellType
	xlCellTypeVisible             =12         # from enum XlCellType
	xlChartElementPositionAutomatic=-4105      # from enum XlChartElementPosition
	xlChartElementPositionCustom  =-4114      # from enum XlChartElementPosition
	xlAnyGallery                  =23         # from enum XlChartGallery
	xlBuiltIn                     =21         # from enum XlChartGallery
	xlUserDefined                 =22         # from enum XlChartGallery
	xlAxis                        =21         # from enum XlChartItem
	xlAxisTitle                   =17         # from enum XlChartItem
	xlChartArea                   =2          # from enum XlChartItem
	xlChartTitle                  =4          # from enum XlChartItem
	xlCorners                     =6          # from enum XlChartItem
	xlDataLabel                   =0          # from enum XlChartItem
	xlDataTable                   =7          # from enum XlChartItem
	xlDisplayUnitLabel            =30         # from enum XlChartItem
	xlDownBars                    =20         # from enum XlChartItem
	xlDropLines                   =26         # from enum XlChartItem
	xlErrorBars                   =9          # from enum XlChartItem
	xlFloor                       =23         # from enum XlChartItem
	xlHiLoLines                   =25         # from enum XlChartItem
	xlLeaderLines                 =29         # from enum XlChartItem
	xlLegend                      =24         # from enum XlChartItem
	xlLegendEntry                 =12         # from enum XlChartItem
	xlLegendKey                   =13         # from enum XlChartItem
	xlMajorGridlines              =15         # from enum XlChartItem
	xlMinorGridlines              =16         # from enum XlChartItem
	xlNothing                     =28         # from enum XlChartItem
	xlPivotChartCollapseEntireFieldButton=34         # from enum XlChartItem
	xlPivotChartDropZone          =32         # from enum XlChartItem
	xlPivotChartExpandEntireFieldButton=33         # from enum XlChartItem
	xlPivotChartFieldButton       =31         # from enum XlChartItem
	xlPlotArea                    =19         # from enum XlChartItem
	xlRadarAxisLabels             =27         # from enum XlChartItem
	xlSeries                      =3          # from enum XlChartItem
	xlSeriesLines                 =22         # from enum XlChartItem
	xlShape                       =14         # from enum XlChartItem
	xlTrendline                   =8          # from enum XlChartItem
	xlUpBars                      =18         # from enum XlChartItem
	xlWalls                       =5          # from enum XlChartItem
	xlXErrorBars                  =10         # from enum XlChartItem
	xlYErrorBars                  =11         # from enum XlChartItem
	xlLocationAsNewSheet          =1          # from enum XlChartLocation
	xlLocationAsObject            =2          # from enum XlChartLocation
	xlLocationAutomatic           =3          # from enum XlChartLocation
	xlAllFaces                    =7          # from enum XlChartPicturePlacement
	xlEnd                         =2          # from enum XlChartPicturePlacement
	xlEndSides                    =3          # from enum XlChartPicturePlacement
	xlFront                       =4          # from enum XlChartPicturePlacement
	xlFrontEnd                    =6          # from enum XlChartPicturePlacement
	xlFrontSides                  =5          # from enum XlChartPicturePlacement
	xlSides                       =1          # from enum XlChartPicturePlacement
	xlStack                       =2          # from enum XlChartPictureType
	xlStackScale                  =3          # from enum XlChartPictureType
	xlStretch                     =1          # from enum XlChartPictureType
	xlSplitByCustomSplit          =4          # from enum XlChartSplitType
	xlSplitByPercentValue         =3          # from enum XlChartSplitType
	xlSplitByPosition             =1          # from enum XlChartSplitType
	xlSplitByValue                =2          # from enum XlChartSplitType
	xl3DArea                      =-4098      # from enum XlChartType
	xl3DAreaStacked               =78         # from enum XlChartType
	xl3DAreaStacked100            =79         # from enum XlChartType
	xl3DBarClustered              =60         # from enum XlChartType
	xl3DBarStacked                =61         # from enum XlChartType
	xl3DBarStacked100             =62         # from enum XlChartType
	xl3DColumn                    =-4100      # from enum XlChartType
	xl3DColumnClustered           =54         # from enum XlChartType
	xl3DColumnStacked             =55         # from enum XlChartType
	xl3DColumnStacked100          =56         # from enum XlChartType
	xl3DLine                      =-4101      # from enum XlChartType
	xl3DPie                       =-4102      # from enum XlChartType
	xl3DPieExploded               =70         # from enum XlChartType
	xlArea                        =1          # from enum XlChartType
	xlAreaStacked                 =76         # from enum XlChartType
	xlAreaStacked100              =77         # from enum XlChartType
	xlBarClustered                =57         # from enum XlChartType
	xlBarOfPie                    =71         # from enum XlChartType
	xlBarStacked                  =58         # from enum XlChartType
	xlBarStacked100               =59         # from enum XlChartType
	xlBoxwhisker                  =121        # from enum XlChartType
	xlBubble                      =15         # from enum XlChartType
	xlBubble3DEffect              =87         # from enum XlChartType
	xlColumnClustered             =51         # from enum XlChartType
	xlColumnStacked               =52         # from enum XlChartType
	xlColumnStacked100            =53         # from enum XlChartType
	xlConeBarClustered            =102        # from enum XlChartType
	xlConeBarStacked              =103        # from enum XlChartType
	xlConeBarStacked100           =104        # from enum XlChartType
	xlConeCol                     =105        # from enum XlChartType
	xlConeColClustered            =99         # from enum XlChartType
	xlConeColStacked              =100        # from enum XlChartType
	xlConeColStacked100           =101        # from enum XlChartType
	xlCylinderBarClustered        =95         # from enum XlChartType
	xlCylinderBarStacked          =96         # from enum XlChartType
	xlCylinderBarStacked100       =97         # from enum XlChartType
	xlCylinderCol                 =98         # from enum XlChartType
	xlCylinderColClustered        =92         # from enum XlChartType
	xlCylinderColStacked          =93         # from enum XlChartType
	xlCylinderColStacked100       =94         # from enum XlChartType
	xlDoughnut                    =-4120      # from enum XlChartType
	xlDoughnutExploded            =80         # from enum XlChartType
	xlFunnel                      =123        # from enum XlChartType
	xlHistogram                   =118        # from enum XlChartType
	xlLine                        =4          # from enum XlChartType
	xlLineMarkers                 =65         # from enum XlChartType
	xlLineMarkersStacked          =66         # from enum XlChartType
	xlLineMarkersStacked100       =67         # from enum XlChartType
	xlLineStacked                 =63         # from enum XlChartType
	xlLineStacked100              =64         # from enum XlChartType
	xlPareto                      =122        # from enum XlChartType
	xlPie                         =5          # from enum XlChartType
	xlPieExploded                 =69         # from enum XlChartType
	xlPieOfPie                    =68         # from enum XlChartType
	xlPyramidBarClustered         =109        # from enum XlChartType
	xlPyramidBarStacked           =110        # from enum XlChartType
	xlPyramidBarStacked100        =111        # from enum XlChartType
	xlPyramidCol                  =112        # from enum XlChartType
	xlPyramidColClustered         =106        # from enum XlChartType
	xlPyramidColStacked           =107        # from enum XlChartType
	xlPyramidColStacked100        =108        # from enum XlChartType
	xlRadar                       =-4151      # from enum XlChartType
	xlRadarFilled                 =82         # from enum XlChartType
	xlRadarMarkers                =81         # from enum XlChartType
	xlRegionMap                   =140        # from enum XlChartType
	xlStockHLC                    =88         # from enum XlChartType
	xlStockOHLC                   =89         # from enum XlChartType
	xlStockVHLC                   =90         # from enum XlChartType
	xlStockVOHLC                  =91         # from enum XlChartType
	xlSunburst                    =120        # from enum XlChartType
	xlSurface                     =83         # from enum XlChartType
	xlSurfaceTopView              =85         # from enum XlChartType
	xlSurfaceTopViewWireframe     =86         # from enum XlChartType
	xlSurfaceWireframe            =84         # from enum XlChartType
	xlTreemap                     =117        # from enum XlChartType
	xlWaterfall                   =119        # from enum XlChartType
	xlXYScatter                   =-4169      # from enum XlChartType
	xlXYScatterLines              =74         # from enum XlChartType
	xlXYScatterLinesNoMarkers     =75         # from enum XlChartType
	xlXYScatterSmooth             =72         # from enum XlChartType
	xlXYScatterSmoothNoMarkers    =73         # from enum XlChartType
	xlCheckInMajorVersion         =1          # from enum XlCheckInVersionType
	xlCheckInMinorVersion         =0          # from enum XlCheckInVersionType
	xlCheckInOverwriteVersion     =2          # from enum XlCheckInVersionType
	xlClipboardFormatBIFF         =8          # from enum XlClipboardFormat
	xlClipboardFormatBIFF12       =63         # from enum XlClipboardFormat
	xlClipboardFormatBIFF2        =18         # from enum XlClipboardFormat
	xlClipboardFormatBIFF3        =20         # from enum XlClipboardFormat
	xlClipboardFormatBIFF4        =30         # from enum XlClipboardFormat
	xlClipboardFormatBinary       =15         # from enum XlClipboardFormat
	xlClipboardFormatBitmap       =9          # from enum XlClipboardFormat
	xlClipboardFormatCGM          =13         # from enum XlClipboardFormat
	xlClipboardFormatCSV          =5          # from enum XlClipboardFormat
	xlClipboardFormatDIF          =4          # from enum XlClipboardFormat
	xlClipboardFormatDspText      =12         # from enum XlClipboardFormat
	xlClipboardFormatEmbedSource  =22         # from enum XlClipboardFormat
	xlClipboardFormatEmbeddedObject=21         # from enum XlClipboardFormat
	xlClipboardFormatLink         =11         # from enum XlClipboardFormat
	xlClipboardFormatLinkSource   =23         # from enum XlClipboardFormat
	xlClipboardFormatLinkSourceDesc=32         # from enum XlClipboardFormat
	xlClipboardFormatMovie        =24         # from enum XlClipboardFormat
	xlClipboardFormatNative       =14         # from enum XlClipboardFormat
	xlClipboardFormatObjectDesc   =31         # from enum XlClipboardFormat
	xlClipboardFormatObjectLink   =19         # from enum XlClipboardFormat
	xlClipboardFormatOwnerLink    =17         # from enum XlClipboardFormat
	xlClipboardFormatPICT         =2          # from enum XlClipboardFormat
	xlClipboardFormatPrintPICT    =3          # from enum XlClipboardFormat
	xlClipboardFormatRTF          =7          # from enum XlClipboardFormat
	xlClipboardFormatSYLK         =6          # from enum XlClipboardFormat
	xlClipboardFormatScreenPICT   =29         # from enum XlClipboardFormat
	xlClipboardFormatStandardFont =28         # from enum XlClipboardFormat
	xlClipboardFormatStandardScale=27         # from enum XlClipboardFormat
	xlClipboardFormatTable        =16         # from enum XlClipboardFormat
	xlClipboardFormatText         =0          # from enum XlClipboardFormat
	xlClipboardFormatToolFace     =25         # from enum XlClipboardFormat
	xlClipboardFormatToolFacePICT =26         # from enum XlClipboardFormat
	xlClipboardFormatVALU         =1          # from enum XlClipboardFormat
	xlClipboardFormatWK1          =10         # from enum XlClipboardFormat
	xlCmdCube                     =1          # from enum XlCmdType
	xlCmdDAX                      =8          # from enum XlCmdType
	xlCmdDefault                  =4          # from enum XlCmdType
	xlCmdExcel                    =7          # from enum XlCmdType
	xlCmdList                     =5          # from enum XlCmdType
	xlCmdSql                      =2          # from enum XlCmdType
	xlCmdTable                    =3          # from enum XlCmdType
	xlCmdTableCollection          =6          # from enum XlCmdType
	xlColorIndexAutomatic         =-4105      # from enum XlColorIndex
	xlColorIndexNone              =-4142      # from enum XlColorIndex
	xlDMYFormat                   =4          # from enum XlColumnDataType
	xlDYMFormat                   =7          # from enum XlColumnDataType
	xlEMDFormat                   =10         # from enum XlColumnDataType
	xlGeneralFormat               =1          # from enum XlColumnDataType
	xlMDYFormat                   =3          # from enum XlColumnDataType
	xlMYDFormat                   =6          # from enum XlColumnDataType
	xlSkipColumn                  =9          # from enum XlColumnDataType
	xlTextFormat                  =2          # from enum XlColumnDataType
	xlYDMFormat                   =8          # from enum XlColumnDataType
	xlYMDFormat                   =5          # from enum XlColumnDataType
	xlCommandUnderlinesAutomatic  =-4105      # from enum XlCommandUnderlines
	xlCommandUnderlinesOff        =-4146      # from enum XlCommandUnderlines
	xlCommandUnderlinesOn         =1          # from enum XlCommandUnderlines
	xlCommentAndIndicator         =1          # from enum XlCommentDisplayMode
	xlCommentIndicatorOnly        =-1         # from enum XlCommentDisplayMode
	xlNoIndicator                 =0          # from enum XlCommentDisplayMode
	xlConditionValueAutomaticMax  =7          # from enum XlConditionValueTypes
	xlConditionValueAutomaticMin  =6          # from enum XlConditionValueTypes
	xlConditionValueFormula       =4          # from enum XlConditionValueTypes
	xlConditionValueHighestValue  =2          # from enum XlConditionValueTypes
	xlConditionValueLowestValue   =1          # from enum XlConditionValueTypes
	xlConditionValueNone          =-1         # from enum XlConditionValueTypes
	xlConditionValueNumber        =0          # from enum XlConditionValueTypes
	xlConditionValuePercent       =3          # from enum XlConditionValueTypes
	xlConditionValuePercentile    =5          # from enum XlConditionValueTypes
	xlConnectionTypeDATAFEED      =6          # from enum XlConnectionType
	xlConnectionTypeMODEL         =7          # from enum XlConnectionType
	xlConnectionTypeNOSOURCE      =9          # from enum XlConnectionType
	xlConnectionTypeODBC          =2          # from enum XlConnectionType
	xlConnectionTypeOLEDB         =1          # from enum XlConnectionType
	xlConnectionTypeTEXT          =4          # from enum XlConnectionType
	xlConnectionTypeWEB           =5          # from enum XlConnectionType
	xlConnectionTypeWORKSHEET     =8          # from enum XlConnectionType
	xlConnectionTypeXMLMAP        =3          # from enum XlConnectionType
	xlAverage                     =-4106      # from enum XlConsolidationFunction
	xlCount                       =-4112      # from enum XlConsolidationFunction
	xlCountNums                   =-4113      # from enum XlConsolidationFunction
	xlDistinctCount               =11         # from enum XlConsolidationFunction
	xlMax                         =-4136      # from enum XlConsolidationFunction
	xlMin                         =-4139      # from enum XlConsolidationFunction
	xlProduct                     =-4149      # from enum XlConsolidationFunction
	xlStDev                       =-4155      # from enum XlConsolidationFunction
	xlStDevP                      =-4156      # from enum XlConsolidationFunction
	xlSum                         =-4157      # from enum XlConsolidationFunction
	xlUnknown                     =1000       # from enum XlConsolidationFunction
	xlVar                         =-4164      # from enum XlConsolidationFunction
	xlVarP                        =-4165      # from enum XlConsolidationFunction
	xlBeginsWith                  =2          # from enum XlContainsOperator
	xlContains                    =0          # from enum XlContainsOperator
	xlDoesNotContain              =1          # from enum XlContainsOperator
	xlEndsWith                    =3          # from enum XlContainsOperator
	xlBitmap                      =2          # from enum XlCopyPictureFormat
	xlPicture                     =-4147      # from enum XlCopyPictureFormat
	xlExtractData                 =2          # from enum XlCorruptLoad
	xlNormalLoad                  =0          # from enum XlCorruptLoad
	xlRepairFile                  =1          # from enum XlCorruptLoad
	xlCreatorCode                 =1480803660 # from enum XlCreator
	xlCredentialsMethodIntegrated =0          # from enum XlCredentialsMethod
	xlCredentialsMethodNone       =1          # from enum XlCredentialsMethod
	xlCredentialsMethodStored     =2          # from enum XlCredentialsMethod
	xlCubeAttribute               =4          # from enum XlCubeFieldSubType
	xlCubeCalculatedMeasure       =5          # from enum XlCubeFieldSubType
	xlCubeHierarchy               =1          # from enum XlCubeFieldSubType
	xlCubeImplicitMeasure         =11         # from enum XlCubeFieldSubType
	xlCubeKPIGoal                 =7          # from enum XlCubeFieldSubType
	xlCubeKPIStatus               =8          # from enum XlCubeFieldSubType
	xlCubeKPITrend                =9          # from enum XlCubeFieldSubType
	xlCubeKPIValue                =6          # from enum XlCubeFieldSubType
	xlCubeKPIWeight               =10         # from enum XlCubeFieldSubType
	xlCubeMeasure                 =2          # from enum XlCubeFieldSubType
	xlCubeSet                     =3          # from enum XlCubeFieldSubType
	xlHierarchy                   =1          # from enum XlCubeFieldType
	xlMeasure                     =2          # from enum XlCubeFieldType
	xlSet                         =3          # from enum XlCubeFieldType
	xlCopy                        =1          # from enum XlCutCopyMode
	xlCut                         =2          # from enum XlCutCopyMode
	xlValidAlertInformation       =3          # from enum XlDVAlertStyle
	xlValidAlertStop              =1          # from enum XlDVAlertStyle
	xlValidAlertWarning           =2          # from enum XlDVAlertStyle
	xlValidateCustom              =7          # from enum XlDVType
	xlValidateDate                =4          # from enum XlDVType
	xlValidateDecimal             =2          # from enum XlDVType
	xlValidateInputOnly           =0          # from enum XlDVType
	xlValidateList                =3          # from enum XlDVType
	xlValidateTextLength          =6          # from enum XlDVType
	xlValidateTime                =5          # from enum XlDVType
	xlValidateWholeNumber         =1          # from enum XlDVType
	xlDataBarAxisAutomatic        =0          # from enum XlDataBarAxisPosition
	xlDataBarAxisMidpoint         =1          # from enum XlDataBarAxisPosition
	xlDataBarAxisNone             =2          # from enum XlDataBarAxisPosition
	xlDataBarBorderNone           =0          # from enum XlDataBarBorderType
	xlDataBarBorderSolid          =1          # from enum XlDataBarBorderType
	xlDataBarFillGradient         =1          # from enum XlDataBarFillType
	xlDataBarFillSolid            =0          # from enum XlDataBarFillType
	xlDataBarColor                =0          # from enum XlDataBarNegativeColorType
	xlDataBarSameAsPositive       =1          # from enum XlDataBarNegativeColorType
	xlLabelPositionAbove          =0          # from enum XlDataLabelPosition
	xlLabelPositionBelow          =1          # from enum XlDataLabelPosition
	xlLabelPositionBestFit        =5          # from enum XlDataLabelPosition
	xlLabelPositionCenter         =-4108      # from enum XlDataLabelPosition
	xlLabelPositionCustom         =7          # from enum XlDataLabelPosition
	xlLabelPositionInsideBase     =4          # from enum XlDataLabelPosition
	xlLabelPositionInsideEnd      =3          # from enum XlDataLabelPosition
	xlLabelPositionLeft           =-4131      # from enum XlDataLabelPosition
	xlLabelPositionMixed          =6          # from enum XlDataLabelPosition
	xlLabelPositionOutsideEnd     =2          # from enum XlDataLabelPosition
	xlLabelPositionRight          =-4152      # from enum XlDataLabelPosition
	xlDataLabelSeparatorDefault   =1          # from enum XlDataLabelSeparator
	xlDataLabelsShowBubbleSizes   =6          # from enum XlDataLabelsType
	xlDataLabelsShowLabel         =4          # from enum XlDataLabelsType
	xlDataLabelsShowLabelAndPercent=5          # from enum XlDataLabelsType
	xlDataLabelsShowNone          =-4142      # from enum XlDataLabelsType
	xlDataLabelsShowPercent       =3          # from enum XlDataLabelsType
	xlDataLabelsShowValue         =2          # from enum XlDataLabelsType
	xlDay                         =1          # from enum XlDataSeriesDate
	xlMonth                       =3          # from enum XlDataSeriesDate
	xlWeekday                     =2          # from enum XlDataSeriesDate
	xlYear                        =4          # from enum XlDataSeriesDate
	xlAutoFill                    =4          # from enum XlDataSeriesType
	xlChronological               =3          # from enum XlDataSeriesType
	xlDataSeriesLinear            =-4132      # from enum XlDataSeriesType
	xlGrowth                      =2          # from enum XlDataSeriesType
	xlShiftToLeft                 =-4159      # from enum XlDeleteShiftDirection
	xlShiftUp                     =-4162      # from enum XlDeleteShiftDirection
	xlDown                        =-4121      # from enum XlDirection
	xlToLeft                      =-4159      # from enum XlDirection
	xlToRight                     =-4161      # from enum XlDirection
	xlUp                          =-4162      # from enum XlDirection
	xlInterpolated                =3          # from enum XlDisplayBlanksAs
	xlNotPlotted                  =1          # from enum XlDisplayBlanksAs
	xlZero                        =2          # from enum XlDisplayBlanksAs
	xlDisplayShapes               =-4104      # from enum XlDisplayDrawingObjects
	xlHide                        =3          # from enum XlDisplayDrawingObjects
	xlPlaceholders                =2          # from enum XlDisplayDrawingObjects
	xlHundredMillions             =-8         # from enum XlDisplayUnit
	xlHundredThousands            =-5         # from enum XlDisplayUnit
	xlHundreds                    =-2         # from enum XlDisplayUnit
	xlMillionMillions             =-10        # from enum XlDisplayUnit
	xlMillions                    =-6         # from enum XlDisplayUnit
	xlTenMillions                 =-7         # from enum XlDisplayUnit
	xlTenThousands                =-4         # from enum XlDisplayUnit
	xlThousandMillions            =-9         # from enum XlDisplayUnit
	xlThousands                   =-3         # from enum XlDisplayUnit
	xlDuplicate                   =1          # from enum XlDupeUnique
	xlUnique                      =0          # from enum XlDupeUnique
	xlFilterAboveAverage          =33         # from enum XlDynamicFilterCriteria
	xlFilterAllDatesInPeriodApril =24         # from enum XlDynamicFilterCriteria
	xlFilterAllDatesInPeriodAugust=28         # from enum XlDynamicFilterCriteria
	xlFilterAllDatesInPeriodDecember=32         # from enum XlDynamicFilterCriteria
	xlFilterAllDatesInPeriodFebruray=22         # from enum XlDynamicFilterCriteria
	xlFilterAllDatesInPeriodJanuary=21         # from enum XlDynamicFilterCriteria
	xlFilterAllDatesInPeriodJuly  =27         # from enum XlDynamicFilterCriteria
	xlFilterAllDatesInPeriodJune  =26         # from enum XlDynamicFilterCriteria
	xlFilterAllDatesInPeriodMarch =23         # from enum XlDynamicFilterCriteria
	xlFilterAllDatesInPeriodMay   =25         # from enum XlDynamicFilterCriteria
	xlFilterAllDatesInPeriodNovember=31         # from enum XlDynamicFilterCriteria
	xlFilterAllDatesInPeriodOctober=30         # from enum XlDynamicFilterCriteria
	xlFilterAllDatesInPeriodQuarter1=17         # from enum XlDynamicFilterCriteria
	xlFilterAllDatesInPeriodQuarter2=18         # from enum XlDynamicFilterCriteria
	xlFilterAllDatesInPeriodQuarter3=19         # from enum XlDynamicFilterCriteria
	xlFilterAllDatesInPeriodQuarter4=20         # from enum XlDynamicFilterCriteria
	xlFilterAllDatesInPeriodSeptember=29         # from enum XlDynamicFilterCriteria
	xlFilterBelowAverage          =34         # from enum XlDynamicFilterCriteria
	xlFilterLastMonth             =8          # from enum XlDynamicFilterCriteria
	xlFilterLastQuarter           =11         # from enum XlDynamicFilterCriteria
	xlFilterLastWeek              =5          # from enum XlDynamicFilterCriteria
	xlFilterLastYear              =14         # from enum XlDynamicFilterCriteria
	xlFilterNextMonth             =9          # from enum XlDynamicFilterCriteria
	xlFilterNextQuarter           =12         # from enum XlDynamicFilterCriteria
	xlFilterNextWeek              =6          # from enum XlDynamicFilterCriteria
	xlFilterNextYear              =15         # from enum XlDynamicFilterCriteria
	xlFilterThisMonth             =7          # from enum XlDynamicFilterCriteria
	xlFilterThisQuarter           =10         # from enum XlDynamicFilterCriteria
	xlFilterThisWeek              =4          # from enum XlDynamicFilterCriteria
	xlFilterThisYear              =13         # from enum XlDynamicFilterCriteria
	xlFilterToday                 =1          # from enum XlDynamicFilterCriteria
	xlFilterTomorrow              =3          # from enum XlDynamicFilterCriteria
	xlFilterYearToDate            =16         # from enum XlDynamicFilterCriteria
	xlFilterYesterday             =2          # from enum XlDynamicFilterCriteria
	xlBIFF                        =2          # from enum XlEditionFormat
	xlPICT                        =1          # from enum XlEditionFormat
	xlRTF                         =4          # from enum XlEditionFormat
	xlVALU                        =8          # from enum XlEditionFormat
	xlAutomaticUpdate             =4          # from enum XlEditionOptionsOption
	xlCancel                      =1          # from enum XlEditionOptionsOption
	xlChangeAttributes            =6          # from enum XlEditionOptionsOption
	xlManualUpdate                =5          # from enum XlEditionOptionsOption
	xlOpenSource                  =3          # from enum XlEditionOptionsOption
	xlSelect                      =3          # from enum XlEditionOptionsOption
	xlSendPublisher               =2          # from enum XlEditionOptionsOption
	xlUpdateSubscriber            =2          # from enum XlEditionOptionsOption
	xlPublisher                   =1          # from enum XlEditionType
	xlSubscriber                  =2          # from enum XlEditionType
	xlDisabled                    =0          # from enum XlEnableCancelKey
	xlErrorHandler                =2          # from enum XlEnableCancelKey
	xlInterrupt                   =1          # from enum XlEnableCancelKey
	xlNoRestrictions              =0          # from enum XlEnableSelection
	xlNoSelection                 =-4142      # from enum XlEnableSelection
	xlUnlockedCells               =1          # from enum XlEnableSelection
	xlCap                         =1          # from enum XlEndStyleCap
	xlNoCap                       =2          # from enum XlEndStyleCap
	xlX                           =-4168      # from enum XlErrorBarDirection
	xlY                           =1          # from enum XlErrorBarDirection
	xlErrorBarIncludeBoth         =1          # from enum XlErrorBarInclude
	xlErrorBarIncludeMinusValues  =3          # from enum XlErrorBarInclude
	xlErrorBarIncludeNone         =-4142      # from enum XlErrorBarInclude
	xlErrorBarIncludePlusValues   =2          # from enum XlErrorBarInclude
	xlErrorBarTypeCustom          =-4114      # from enum XlErrorBarType
	xlErrorBarTypeFixedValue      =1          # from enum XlErrorBarType
	xlErrorBarTypePercent         =2          # from enum XlErrorBarType
	xlErrorBarTypeStDev           =-4155      # from enum XlErrorBarType
	xlErrorBarTypeStError         =4          # from enum XlErrorBarType
	xlEmptyCellReferences         =7          # from enum XlErrorChecks
	xlEvaluateToError             =1          # from enum XlErrorChecks
	xlInconsistentFormula         =4          # from enum XlErrorChecks
	xlInconsistentListFormula     =9          # from enum XlErrorChecks
	xlListDataValidation          =8          # from enum XlErrorChecks
	xlMisleadingFormat            =10         # from enum XlErrorChecks
	xlNumberAsText                =3          # from enum XlErrorChecks
	xlOmittedCells                =5          # from enum XlErrorChecks
	xlOutdatedLinkedDataType      =11         # from enum XlErrorChecks
	xlStaleValue                  =12         # from enum XlErrorChecks
	xlTextDate                    =2          # from enum XlErrorChecks
	xlUnlockedFormulaCells        =6          # from enum XlErrorChecks
	xlReadOnly                    =3          # from enum XlFileAccess
	xlReadWrite                   =2          # from enum XlFileAccess
	xlAddIn                       =18         # from enum XlFileFormat
	xlAddIn8                      =18         # from enum XlFileFormat
	xlCSV                         =6          # from enum XlFileFormat
	xlCSVMSDOS                    =24         # from enum XlFileFormat
	xlCSVMac                      =22         # from enum XlFileFormat
	xlCSVUTF8                     =62         # from enum XlFileFormat
	xlCSVWindows                  =23         # from enum XlFileFormat
	xlCurrentPlatformText         =-4158      # from enum XlFileFormat
	xlDBF2                        =7          # from enum XlFileFormat
	xlDBF3                        =8          # from enum XlFileFormat
	xlDBF4                        =11         # from enum XlFileFormat
	xlDIF                         =9          # from enum XlFileFormat
	xlExcel12                     =50         # from enum XlFileFormat
	xlExcel2                      =16         # from enum XlFileFormat
	xlExcel2FarEast               =27         # from enum XlFileFormat
	xlExcel3                      =29         # from enum XlFileFormat
	xlExcel4                      =33         # from enum XlFileFormat
	xlExcel4Workbook              =35         # from enum XlFileFormat
	xlExcel5                      =39         # from enum XlFileFormat
	xlExcel7                      =39         # from enum XlFileFormat
	xlExcel8                      =56         # from enum XlFileFormat
	xlExcel9795                   =43         # from enum XlFileFormat
	xlHtml                        =44         # from enum XlFileFormat
	xlIntlAddIn                   =26         # from enum XlFileFormat
	xlIntlMacro                   =25         # from enum XlFileFormat
	xlOpenDocumentSpreadsheet     =60         # from enum XlFileFormat
	xlOpenXMLAddIn                =55         # from enum XlFileFormat
	xlOpenXMLStrictWorkbook       =61         # from enum XlFileFormat
	xlOpenXMLTemplate             =54         # from enum XlFileFormat
	xlOpenXMLTemplateMacroEnabled =53         # from enum XlFileFormat
	xlOpenXMLWorkbook             =51         # from enum XlFileFormat
	xlOpenXMLWorkbookMacroEnabled =52         # from enum XlFileFormat
	xlSYLK                        =2          # from enum XlFileFormat
	xlTemplate                    =17         # from enum XlFileFormat
	xlTemplate8                   =17         # from enum XlFileFormat
	xlTextMSDOS                   =21         # from enum XlFileFormat
	xlTextMac                     =19         # from enum XlFileFormat
	xlTextPrinter                 =36         # from enum XlFileFormat
	xlTextWindows                 =20         # from enum XlFileFormat
	xlUnicodeText                 =42         # from enum XlFileFormat
	xlWJ2WD1                      =14         # from enum XlFileFormat
	xlWJ3                         =40         # from enum XlFileFormat
	xlWJ3FJ3                      =41         # from enum XlFileFormat
	xlWK1                         =5          # from enum XlFileFormat
	xlWK1ALL                      =31         # from enum XlFileFormat
	xlWK1FMT                      =30         # from enum XlFileFormat
	xlWK3                         =15         # from enum XlFileFormat
	xlWK3FM3                      =32         # from enum XlFileFormat
	xlWK4                         =38         # from enum XlFileFormat
	xlWKS                         =4          # from enum XlFileFormat
	xlWQ1                         =34         # from enum XlFileFormat
	xlWebArchive                  =45         # from enum XlFileFormat
	xlWorkbookDefault             =51         # from enum XlFileFormat
	xlWorkbookNormal              =-4143      # from enum XlFileFormat
	xlWorks2FarEast               =28         # from enum XlFileFormat
	xlXMLSpreadsheet              =46         # from enum XlFileFormat
	xlFileValidationPivotDefault  =0          # from enum XlFileValidationPivotMode
	xlFileValidationPivotRun      =1          # from enum XlFileValidationPivotMode
	xlFileValidationPivotSkip     =2          # from enum XlFileValidationPivotMode
	xlFillWithAll                 =-4104      # from enum XlFillWith
	xlFillWithContents            =2          # from enum XlFillWith
	xlFillWithFormats             =-4122      # from enum XlFillWith
	xlFilterCopy                  =2          # from enum XlFilterAction
	xlFilterInPlace               =1          # from enum XlFilterAction
	xlFilterAllDatesInPeriodDay   =2          # from enum XlFilterAllDatesInPeriod
	xlFilterAllDatesInPeriodHour  =3          # from enum XlFilterAllDatesInPeriod
	xlFilterAllDatesInPeriodMinute=4          # from enum XlFilterAllDatesInPeriod
	xlFilterAllDatesInPeriodMonth =1          # from enum XlFilterAllDatesInPeriod
	xlFilterAllDatesInPeriodSecond=5          # from enum XlFilterAllDatesInPeriod
	xlFilterAllDatesInPeriodYear  =0          # from enum XlFilterAllDatesInPeriod
	xlFilterStatusDateHasTime     =2          # from enum XlFilterStatus
	xlFilterStatusDateWrongOrder  =1          # from enum XlFilterStatus
	xlFilterStatusInvalidDate     =3          # from enum XlFilterStatus
	xlFilterStatusOK              =0          # from enum XlFilterStatus
	xlComments                    =-4144      # from enum XlFindLookIn
	xlCommentsThreaded            =-4184      # from enum XlFindLookIn
	xlFormulas                    =-4123      # from enum XlFindLookIn
	xlFormulas2                   =-4185      # from enum XlFindLookIn
	xlValues                      =-4163      # from enum XlFindLookIn
	xlQualityMinimum              =1          # from enum XlFixedFormatQuality
	xlQualityStandard             =0          # from enum XlFixedFormatQuality
	xlTypePDF                     =0          # from enum XlFixedFormatType
	xlTypeXPS                     =1          # from enum XlFixedFormatType
	xlForecastAggregationAverage  =1          # from enum XlForecastAggregation
	xlForecastAggregationCount    =2          # from enum XlForecastAggregation
	xlForecastAggregationCountA   =3          # from enum XlForecastAggregation
	xlForecastAggregationMax      =4          # from enum XlForecastAggregation
	xlForecastAggregationMedian   =5          # from enum XlForecastAggregation
	xlForecastAggregationMin      =6          # from enum XlForecastAggregation
	xlForecastAggregationSum      =7          # from enum XlForecastAggregation
	xlForecastChartTypeColumn     =1          # from enum XlForecastChartType
	xlForecastChartTypeLine       =0          # from enum XlForecastChartType
	xlForecastDataCompletionInterpolate=1          # from enum XlForecastDataCompletion
	xlForecastDataCompletionZeros =0          # from enum XlForecastDataCompletion
	xlButtonControl               =0          # from enum XlFormControl
	xlCheckBox                    =1          # from enum XlFormControl
	xlDropDown                    =2          # from enum XlFormControl
	xlEditBox                     =3          # from enum XlFormControl
	xlGroupBox                    =4          # from enum XlFormControl
	xlLabel                       =5          # from enum XlFormControl
	xlListBox                     =6          # from enum XlFormControl
	xlOptionButton                =7          # from enum XlFormControl
	xlScrollBar                   =8          # from enum XlFormControl
	xlSpinner                     =9          # from enum XlFormControl
	xlBetween                     =1          # from enum XlFormatConditionOperator
	xlEqual                       =3          # from enum XlFormatConditionOperator
	xlGreater                     =5          # from enum XlFormatConditionOperator
	xlGreaterEqual                =7          # from enum XlFormatConditionOperator
	xlLess                        =6          # from enum XlFormatConditionOperator
	xlLessEqual                   =8          # from enum XlFormatConditionOperator
	xlNotBetween                  =2          # from enum XlFormatConditionOperator
	xlNotEqual                    =4          # from enum XlFormatConditionOperator
	xlAboveAverageCondition       =12         # from enum XlFormatConditionType
	xlBlanksCondition             =10         # from enum XlFormatConditionType
	xlCellValue                   =1          # from enum XlFormatConditionType
	xlColorScale                  =3          # from enum XlFormatConditionType
	xlDatabar                     =4          # from enum XlFormatConditionType
	xlErrorsCondition             =16         # from enum XlFormatConditionType
	xlExpression                  =2          # from enum XlFormatConditionType
	xlIconSets                    =6          # from enum XlFormatConditionType
	xlNoBlanksCondition           =13         # from enum XlFormatConditionType
	xlNoErrorsCondition           =17         # from enum XlFormatConditionType
	xlTextString                  =9          # from enum XlFormatConditionType
	xlTimePeriod                  =11         # from enum XlFormatConditionType
	xlTop10                       =5          # from enum XlFormatConditionType
	xlUniqueValues                =8          # from enum XlFormatConditionType
	xlFilterBottom                =0          # from enum XlFormatFilterTypes
	xlFilterBottomPercent         =2          # from enum XlFormatFilterTypes
	xlFilterTop                   =1          # from enum XlFormatFilterTypes
	xlFilterTopPercent            =3          # from enum XlFormatFilterTypes
	xlColumnLabels                =2          # from enum XlFormulaLabel
	xlMixedLabels                 =3          # from enum XlFormulaLabel
	xlNoLabels                    =-4142      # from enum XlFormulaLabel
	xlRowLabels                   =1          # from enum XlFormulaLabel
	xlReplaceFormula              =0          # from enum XlFormulaVersion
	xlReplaceFormula2             =1          # from enum XlFormulaVersion
	xlGenerateTableRefA1          =0          # from enum XlGenerateTableRefs
	xlGenerateTableRefStruct      =1          # from enum XlGenerateTableRefs
	xlGeoMappingLevelAutomatic    =0          # from enum XlGeoMappingLevel
	xlGeoMappingLevelCountryRegion=5          # from enum XlGeoMappingLevel
	xlGeoMappingLevelCountryRegionList=6          # from enum XlGeoMappingLevel
	xlGeoMappingLevelCounty       =3          # from enum XlGeoMappingLevel
	xlGeoMappingLevelDataOnly     =1          # from enum XlGeoMappingLevel
	xlGeoMappingLevelPostalCode   =2          # from enum XlGeoMappingLevel
	xlGeoMappingLevelState        =4          # from enum XlGeoMappingLevel
	xlGeoMappingLevelWorld        =7          # from enum XlGeoMappingLevel
	xlGeoProjectionTypeAlbers     =3          # from enum XlGeoProjectionType
	xlGeoProjectionTypeAutomatic  =0          # from enum XlGeoProjectionType
	xlGeoProjectionTypeMercator   =1          # from enum XlGeoProjectionType
	xlGeoProjectionTypeMiller     =2          # from enum XlGeoProjectionType
	xlGeoProjectionTypeRobinson   =4          # from enum XlGeoProjectionType
	xlGradientFillLinear          =0          # from enum XlGradientFillType
	xlGradientFillPath            =1          # from enum XlGradientFillType
	xlGradientStopPositionTypeExtremeValue=0          # from enum XlGradientStopPositionType
	xlGradientStopPositionTypeNumber=1          # from enum XlGradientStopPositionType
	xlGradientStopPositionTypePercent=2          # from enum XlGradientStopPositionType
	xlHAlignCenter                =-4108      # from enum XlHAlign
	xlHAlignCenterAcrossSelection =7          # from enum XlHAlign
	xlHAlignDistributed           =-4117      # from enum XlHAlign
	xlHAlignFill                  =5          # from enum XlHAlign
	xlHAlignGeneral               =1          # from enum XlHAlign
	xlHAlignJustify               =-4130      # from enum XlHAlign
	xlHAlignLeft                  =-4131      # from enum XlHAlign
	xlHAlignRight                 =-4152      # from enum XlHAlign
	xlHebrewFullScript            =0          # from enum XlHebrewModes
	xlHebrewMixedAuthorizedScript =3          # from enum XlHebrewModes
	xlHebrewMixedScript           =2          # from enum XlHebrewModes
	xlHebrewPartialScript         =1          # from enum XlHebrewModes
	xlAllChanges                  =2          # from enum XlHighlightChangesTime
	xlNotYetReviewed              =3          # from enum XlHighlightChangesTime
	xlSinceMyLastSave             =1          # from enum XlHighlightChangesTime
	xlHtmlCalc                    =1          # from enum XlHtmlType
	xlHtmlChart                   =3          # from enum XlHtmlType
	xlHtmlList                    =2          # from enum XlHtmlType
	xlHtmlStatic                  =0          # from enum XlHtmlType
	xlIMEModeAlpha                =8          # from enum XlIMEMode
	xlIMEModeAlphaFull            =7          # from enum XlIMEMode
	xlIMEModeDisable              =3          # from enum XlIMEMode
	xlIMEModeHangul               =10         # from enum XlIMEMode
	xlIMEModeHangulFull           =9          # from enum XlIMEMode
	xlIMEModeHiragana             =4          # from enum XlIMEMode
	xlIMEModeKatakana             =5          # from enum XlIMEMode
	xlIMEModeKatakanaHalf         =6          # from enum XlIMEMode
	xlIMEModeNoControl            =0          # from enum XlIMEMode
	xlIMEModeOff                  =2          # from enum XlIMEMode
	xlIMEModeOn                   =1          # from enum XlIMEMode
	xlIcon0Bars                   =37         # from enum XlIcon
	xlIcon0FilledBoxes            =52         # from enum XlIcon
	xlIcon1Bar                    =38         # from enum XlIcon
	xlIcon1FilledBox              =51         # from enum XlIcon
	xlIcon2Bars                   =39         # from enum XlIcon
	xlIcon2FilledBoxes            =50         # from enum XlIcon
	xlIcon3Bars                   =40         # from enum XlIcon
	xlIcon3FilledBoxes            =49         # from enum XlIcon
	xlIcon4Bars                   =41         # from enum XlIcon
	xlIcon4FilledBoxes            =48         # from enum XlIcon
	xlIconBlackCircle             =32         # from enum XlIcon
	xlIconBlackCircleWithBorder   =13         # from enum XlIcon
	xlIconCircleWithOneWhiteQuarter=33         # from enum XlIcon
	xlIconCircleWithThreeWhiteQuarters=35         # from enum XlIcon
	xlIconCircleWithTwoWhiteQuarters=34         # from enum XlIcon
	xlIconGoldStar                =42         # from enum XlIcon
	xlIconGrayCircle              =31         # from enum XlIcon
	xlIconGrayDownArrow           =6          # from enum XlIcon
	xlIconGrayDownInclineArrow    =28         # from enum XlIcon
	xlIconGraySideArrow           =5          # from enum XlIcon
	xlIconGrayUpArrow             =4          # from enum XlIcon
	xlIconGrayUpInclineArrow      =27         # from enum XlIcon
	xlIconGreenCheck              =22         # from enum XlIcon
	xlIconGreenCheckSymbol        =19         # from enum XlIcon
	xlIconGreenCircle             =10         # from enum XlIcon
	xlIconGreenFlag               =7          # from enum XlIcon
	xlIconGreenTrafficLight       =14         # from enum XlIcon
	xlIconGreenUpArrow            =1          # from enum XlIcon
	xlIconGreenUpTriangle         =45         # from enum XlIcon
	xlIconHalfGoldStar            =43         # from enum XlIcon
	xlIconNoCellIcon              =-1         # from enum XlIcon
	xlIconPinkCircle              =30         # from enum XlIcon
	xlIconRedCircle               =29         # from enum XlIcon
	xlIconRedCircleWithBorder     =12         # from enum XlIcon
	xlIconRedCross                =24         # from enum XlIcon
	xlIconRedCrossSymbol          =21         # from enum XlIcon
	xlIconRedDiamond              =18         # from enum XlIcon
	xlIconRedDownArrow            =3          # from enum XlIcon
	xlIconRedDownTriangle         =47         # from enum XlIcon
	xlIconRedFlag                 =9          # from enum XlIcon
	xlIconRedTrafficLight         =16         # from enum XlIcon
	xlIconSilverStar              =44         # from enum XlIcon
	xlIconWhiteCircleAllWhiteQuarters=36         # from enum XlIcon
	xlIconYellowCircle            =11         # from enum XlIcon
	xlIconYellowDash              =46         # from enum XlIcon
	xlIconYellowDownInclineArrow  =26         # from enum XlIcon
	xlIconYellowExclamation       =23         # from enum XlIcon
	xlIconYellowExclamationSymbol =20         # from enum XlIcon
	xlIconYellowFlag              =8          # from enum XlIcon
	xlIconYellowSideArrow         =2          # from enum XlIcon
	xlIconYellowTrafficLight      =15         # from enum XlIcon
	xlIconYellowTriangle          =17         # from enum XlIcon
	xlIconYellowUpInclineArrow    =25         # from enum XlIcon
	xl3Arrows                     =1          # from enum XlIconSet
	xl3ArrowsGray                 =2          # from enum XlIconSet
	xl3Flags                      =3          # from enum XlIconSet
	xl3Signs                      =6          # from enum XlIconSet
	xl3Stars                      =18         # from enum XlIconSet
	xl3Symbols                    =7          # from enum XlIconSet
	xl3Symbols2                   =8          # from enum XlIconSet
	xl3TrafficLights1             =4          # from enum XlIconSet
	xl3TrafficLights2             =5          # from enum XlIconSet
	xl3Triangles                  =19         # from enum XlIconSet
	xl4Arrows                     =9          # from enum XlIconSet
	xl4ArrowsGray                 =10         # from enum XlIconSet
	xl4CRV                        =12         # from enum XlIconSet
	xl4RedToBlack                 =11         # from enum XlIconSet
	xl4TrafficLights              =13         # from enum XlIconSet
	xl5Arrows                     =14         # from enum XlIconSet
	xl5ArrowsGray                 =15         # from enum XlIconSet
	xl5Boxes                      =20         # from enum XlIconSet
	xl5CRV                        =16         # from enum XlIconSet
	xl5Quarters                   =17         # from enum XlIconSet
	xlCustomSet                   =-1         # from enum XlIconSet
	xlPivotTableReport            =1          # from enum XlImportDataAs
	xlQueryTable                  =0          # from enum XlImportDataAs
	xlTable                       =2          # from enum XlImportDataAs
	xlFormatFromLeftOrAbove       =0          # from enum XlInsertFormatOrigin
	xlFormatFromRightOrBelow      =1          # from enum XlInsertFormatOrigin
	xlShiftDown                   =-4121      # from enum XlInsertShiftDirection
	xlShiftToRight                =-4161      # from enum XlInsertShiftDirection
	xlOutline                     =1          # from enum XlLayoutFormType
	xlTabular                     =0          # from enum XlLayoutFormType
	xlCompactRow                  =0          # from enum XlLayoutRowType
	xlOutlineRow                  =2          # from enum XlLayoutRowType
	xlTabularRow                  =1          # from enum XlLayoutRowType
	xlLegendPositionBottom        =-4107      # from enum XlLegendPosition
	xlLegendPositionCorner        =2          # from enum XlLegendPosition
	xlLegendPositionCustom        =-4161      # from enum XlLegendPosition
	xlLegendPositionLeft          =-4131      # from enum XlLegendPosition
	xlLegendPositionRight         =-4152      # from enum XlLegendPosition
	xlLegendPositionTop           =-4160      # from enum XlLegendPosition
	xlContinuous                  =1          # from enum XlLineStyle
	xlDash                        =-4115      # from enum XlLineStyle
	xlDashDot                     =4          # from enum XlLineStyle
	xlDashDotDot                  =5          # from enum XlLineStyle
	xlDot                         =-4118      # from enum XlLineStyle
	xlDouble                      =-4119      # from enum XlLineStyle
	xlLineStyleNone               =-4142      # from enum XlLineStyle
	xlSlantDashDot                =13         # from enum XlLineStyle
	xlExcelLinks                  =1          # from enum XlLink
	xlOLELinks                    =2          # from enum XlLink
	xlPublishers                  =5          # from enum XlLink
	xlSubscribers                 =6          # from enum XlLink
	xlEditionDate                 =2          # from enum XlLinkInfo
	xlLinkInfoStatus              =3          # from enum XlLinkInfo
	xlUpdateState                 =1          # from enum XlLinkInfo
	xlLinkInfoOLELinks            =2          # from enum XlLinkInfoType
	xlLinkInfoPublishers          =5          # from enum XlLinkInfoType
	xlLinkInfoSubscribers         =6          # from enum XlLinkInfoType
	xlLinkStatusCopiedValues      =10         # from enum XlLinkStatus
	xlLinkStatusIndeterminate     =5          # from enum XlLinkStatus
	xlLinkStatusInvalidName       =7          # from enum XlLinkStatus
	xlLinkStatusMissingFile       =1          # from enum XlLinkStatus
	xlLinkStatusMissingSheet      =2          # from enum XlLinkStatus
	xlLinkStatusNotStarted        =6          # from enum XlLinkStatus
	xlLinkStatusOK                =0          # from enum XlLinkStatus
	xlLinkStatusOld               =3          # from enum XlLinkStatus
	xlLinkStatusSourceNotCalculated=4          # from enum XlLinkStatus
	xlLinkStatusSourceNotOpen     =8          # from enum XlLinkStatus
	xlLinkStatusSourceOpen        =9          # from enum XlLinkStatus
	xlLinkTypeExcelLinks          =1          # from enum XlLinkType
	xlLinkTypeOLELinks            =2          # from enum XlLinkType
	xlLinkedDataTypeStateBrokenLinkedData=3          # from enum XlLinkedDataTypeState
	xlLinkedDataTypeStateDisambiguationNeeded=2          # from enum XlLinkedDataTypeState
	xlLinkedDataTypeStateFetchingData=4          # from enum XlLinkedDataTypeState
	xlLinkedDataTypeStateNone     =0          # from enum XlLinkedDataTypeState
	xlLinkedDataTypeStateValidLinkedData=1          # from enum XlLinkedDataTypeState
	xlListConflictDialog          =0          # from enum XlListConflict
	xlListConflictDiscardAllConflicts=2          # from enum XlListConflict
	xlListConflictError           =3          # from enum XlListConflict
	xlListConflictRetryAllConflicts=1          # from enum XlListConflict
	xlListDataTypeCheckbox        =9          # from enum XlListDataType
	xlListDataTypeChoice          =6          # from enum XlListDataType
	xlListDataTypeChoiceMulti     =7          # from enum XlListDataType
	xlListDataTypeCounter         =11         # from enum XlListDataType
	xlListDataTypeCurrency        =4          # from enum XlListDataType
	xlListDataTypeDateTime        =5          # from enum XlListDataType
	xlListDataTypeHyperLink       =10         # from enum XlListDataType
	xlListDataTypeListLookup      =8          # from enum XlListDataType
	xlListDataTypeMultiLineRichText=12         # from enum XlListDataType
	xlListDataTypeMultiLineText   =2          # from enum XlListDataType
	xlListDataTypeNone            =0          # from enum XlListDataType
	xlListDataTypeNumber          =3          # from enum XlListDataType
	xlListDataTypeText            =1          # from enum XlListDataType
	xlSrcExternal                 =0          # from enum XlListObjectSourceType
	xlSrcModel                    =4          # from enum XlListObjectSourceType
	xlSrcQuery                    =3          # from enum XlListObjectSourceType
	xlSrcRange                    =1          # from enum XlListObjectSourceType
	xlSrcXml                      =2          # from enum XlListObjectSourceType
	xlColumnHeader                =-4110      # from enum XlLocationInTable
	xlColumnItem                  =5          # from enum XlLocationInTable
	xlDataHeader                  =3          # from enum XlLocationInTable
	xlDataItem                    =7          # from enum XlLocationInTable
	xlPageHeader                  =2          # from enum XlLocationInTable
	xlPageItem                    =6          # from enum XlLocationInTable
	xlRowHeader                   =-4153      # from enum XlLocationInTable
	xlRowItem                     =4          # from enum XlLocationInTable
	xlTableBody                   =8          # from enum XlLocationInTable
	xlPart                        =2          # from enum XlLookAt
	xlWhole                       =1          # from enum XlLookAt
	xlLookForBlanks               =0          # from enum XlLookFor
	xlLookForErrors               =1          # from enum XlLookFor
	xlLookForFormulas             =2          # from enum XlLookFor
	xlMicrosoftAccess             =4          # from enum XlMSApplication
	xlMicrosoftFoxPro             =5          # from enum XlMSApplication
	xlMicrosoftMail               =3          # from enum XlMSApplication
	xlMicrosoftPowerPoint         =2          # from enum XlMSApplication
	xlMicrosoftProject            =6          # from enum XlMSApplication
	xlMicrosoftSchedulePlus       =7          # from enum XlMSApplication
	xlMicrosoftWord               =1          # from enum XlMSApplication
	xlMAPI                        =1          # from enum XlMailSystem
	xlNoMailSystem                =0          # from enum XlMailSystem
	xlPowerTalk                   =2          # from enum XlMailSystem
	xlMarkerStyleAutomatic        =-4105      # from enum XlMarkerStyle
	xlMarkerStyleCircle           =8          # from enum XlMarkerStyle
	xlMarkerStyleDash             =-4115      # from enum XlMarkerStyle
	xlMarkerStyleDiamond          =2          # from enum XlMarkerStyle
	xlMarkerStyleDot              =-4118      # from enum XlMarkerStyle
	xlMarkerStyleNone             =-4142      # from enum XlMarkerStyle
	xlMarkerStylePicture          =-4147      # from enum XlMarkerStyle
	xlMarkerStylePlus             =9          # from enum XlMarkerStyle
	xlMarkerStyleSquare           =1          # from enum XlMarkerStyle
	xlMarkerStyleStar             =5          # from enum XlMarkerStyle
	xlMarkerStyleTriangle         =3          # from enum XlMarkerStyle
	xlMarkerStyleX                =-4168      # from enum XlMarkerStyle
	xlCentimeters                 =1          # from enum XlMeasurementUnits
	xlInches                      =0          # from enum XlMeasurementUnits
	xlMillimeters                 =2          # from enum XlMeasurementUnits
	xlChangeByExcel               =0          # from enum XlModelChangeSource
	xlChangeByPowerPivotAddIn     =1          # from enum XlModelChangeSource
	xlNoButton                    =0          # from enum XlMouseButton
	xlPrimaryButton               =1          # from enum XlMouseButton
	xlSecondaryButton             =2          # from enum XlMouseButton
	xlDefault                     =-4143      # from enum XlMousePointer
	xlIBeam                       =3          # from enum XlMousePointer
	xlNorthwestArrow              =1          # from enum XlMousePointer
	xlWait                        =2          # from enum XlMousePointer
	xlOLEControl                  =2          # from enum XlOLEType
	xlOLEEmbed                    =1          # from enum XlOLEType
	xlOLELink                     =0          # from enum XlOLEType
	xlVerbOpen                    =2          # from enum XlOLEVerb
	xlVerbPrimary                 =1          # from enum XlOLEVerb
	xlOartHorizontalOverflowClip  =1          # from enum XlOartHorizontalOverflow
	xlOartHorizontalOverflowOverflow=0          # from enum XlOartHorizontalOverflow
	xlOartVerticalOverflowClip    =1          # from enum XlOartVerticalOverflow
	xlOartVerticalOverflowEllipsis=2          # from enum XlOartVerticalOverflow
	xlOartVerticalOverflowOverflow=0          # from enum XlOartVerticalOverflow
	xlFitToPage                   =2          # from enum XlObjectSize
	xlFullPage                    =3          # from enum XlObjectSize
	xlScreenSize                  =1          # from enum XlObjectSize
	xlDownThenOver                =1          # from enum XlOrder
	xlOverThenDown                =2          # from enum XlOrder
	xlDownward                    =-4170      # from enum XlOrientation
	xlHorizontal                  =-4128      # from enum XlOrientation
	xlUpward                      =-4171      # from enum XlOrientation
	xlVertical                    =-4166      # from enum XlOrientation
	xlBlanks                      =4          # from enum XlPTSelectionMode
	xlButton                      =15         # from enum XlPTSelectionMode
	xlDataAndLabel                =0          # from enum XlPTSelectionMode
	xlDataOnly                    =2          # from enum XlPTSelectionMode
	xlFirstRow                    =256        # from enum XlPTSelectionMode
	xlLabelOnly                   =1          # from enum XlPTSelectionMode
	xlOrigin                      =3          # from enum XlPTSelectionMode
	xlPageBreakAutomatic          =-4105      # from enum XlPageBreak
	xlPageBreakManual             =-4135      # from enum XlPageBreak
	xlPageBreakNone               =-4142      # from enum XlPageBreak
	xlPageBreakFull               =1          # from enum XlPageBreakExtent
	xlPageBreakPartial            =2          # from enum XlPageBreakExtent
	xlLandscape                   =2          # from enum XlPageOrientation
	xlPortrait                    =1          # from enum XlPageOrientation
	xlPaper10x14                  =16         # from enum XlPaperSize
	xlPaper11x17                  =17         # from enum XlPaperSize
	xlPaperA3                     =8          # from enum XlPaperSize
	xlPaperA4                     =9          # from enum XlPaperSize
	xlPaperA4Small                =10         # from enum XlPaperSize
	xlPaperA5                     =11         # from enum XlPaperSize
	xlPaperB4                     =12         # from enum XlPaperSize
	xlPaperB5                     =13         # from enum XlPaperSize
	xlPaperCsheet                 =24         # from enum XlPaperSize
	xlPaperDsheet                 =25         # from enum XlPaperSize
	xlPaperEnvelope10             =20         # from enum XlPaperSize
	xlPaperEnvelope11             =21         # from enum XlPaperSize
	xlPaperEnvelope12             =22         # from enum XlPaperSize
	xlPaperEnvelope14             =23         # from enum XlPaperSize
	xlPaperEnvelope9              =19         # from enum XlPaperSize
	xlPaperEnvelopeB4             =33         # from enum XlPaperSize
	xlPaperEnvelopeB5             =34         # from enum XlPaperSize
	xlPaperEnvelopeB6             =35         # from enum XlPaperSize
	xlPaperEnvelopeC3             =29         # from enum XlPaperSize
	xlPaperEnvelopeC4             =30         # from enum XlPaperSize
	xlPaperEnvelopeC5             =28         # from enum XlPaperSize
	xlPaperEnvelopeC6             =31         # from enum XlPaperSize
	xlPaperEnvelopeC65            =32         # from enum XlPaperSize
	xlPaperEnvelopeDL             =27         # from enum XlPaperSize
	xlPaperEnvelopeItaly          =36         # from enum XlPaperSize
	xlPaperEnvelopeMonarch        =37         # from enum XlPaperSize
	xlPaperEnvelopePersonal       =38         # from enum XlPaperSize
	xlPaperEsheet                 =26         # from enum XlPaperSize
	xlPaperExecutive              =7          # from enum XlPaperSize
	xlPaperFanfoldLegalGerman     =41         # from enum XlPaperSize
	xlPaperFanfoldStdGerman       =40         # from enum XlPaperSize
	xlPaperFanfoldUS              =39         # from enum XlPaperSize
	xlPaperFolio                  =14         # from enum XlPaperSize
	xlPaperLedger                 =4          # from enum XlPaperSize
	xlPaperLegal                  =5          # from enum XlPaperSize
	xlPaperLetter                 =1          # from enum XlPaperSize
	xlPaperLetterSmall            =2          # from enum XlPaperSize
	xlPaperNote                   =18         # from enum XlPaperSize
	xlPaperQuarto                 =15         # from enum XlPaperSize
	xlPaperStatement              =6          # from enum XlPaperSize
	xlPaperTabloid                =3          # from enum XlPaperSize
	xlPaperUser                   =256        # from enum XlPaperSize
	xlParamTypeBigInt             =-5         # from enum XlParameterDataType
	xlParamTypeBinary             =-2         # from enum XlParameterDataType
	xlParamTypeBit                =-7         # from enum XlParameterDataType
	xlParamTypeChar               =1          # from enum XlParameterDataType
	xlParamTypeDate               =9          # from enum XlParameterDataType
	xlParamTypeDecimal            =3          # from enum XlParameterDataType
	xlParamTypeDouble             =8          # from enum XlParameterDataType
	xlParamTypeFloat              =6          # from enum XlParameterDataType
	xlParamTypeInteger            =4          # from enum XlParameterDataType
	xlParamTypeLongVarBinary      =-4         # from enum XlParameterDataType
	xlParamTypeLongVarChar        =-1         # from enum XlParameterDataType
	xlParamTypeNumeric            =2          # from enum XlParameterDataType
	xlParamTypeReal               =7          # from enum XlParameterDataType
	xlParamTypeSmallInt           =5          # from enum XlParameterDataType
	xlParamTypeTime               =10         # from enum XlParameterDataType
	xlParamTypeTimestamp          =11         # from enum XlParameterDataType
	xlParamTypeTinyInt            =-6         # from enum XlParameterDataType
	xlParamTypeUnknown            =0          # from enum XlParameterDataType
	xlParamTypeVarBinary          =-3         # from enum XlParameterDataType
	xlParamTypeVarChar            =12         # from enum XlParameterDataType
	xlParamTypeWChar              =-8         # from enum XlParameterDataType
	xlConstant                    =1          # from enum XlParameterType
	xlPrompt                      =0          # from enum XlParameterType
	xlRange                       =2          # from enum XlParameterType
	xlParentDataLabelOptionsBanner=1          # from enum XlParentDataLabelOptions
	xlParentDataLabelOptionsNone  =0          # from enum XlParentDataLabelOptions
	xlParentDataLabelOptionsOverlapping=2          # from enum XlParentDataLabelOptions
	xlPasteSpecialOperationAdd    =2          # from enum XlPasteSpecialOperation
	xlPasteSpecialOperationDivide =5          # from enum XlPasteSpecialOperation
	xlPasteSpecialOperationMultiply=4          # from enum XlPasteSpecialOperation
	xlPasteSpecialOperationNone   =-4142      # from enum XlPasteSpecialOperation
	xlPasteSpecialOperationSubtract=3          # from enum XlPasteSpecialOperation
	xlPasteAll                    =-4104      # from enum XlPasteType
	xlPasteAllExceptBorders       =7          # from enum XlPasteType
	xlPasteAllMergingConditionalFormats=14         # from enum XlPasteType
	xlPasteAllUsingSourceTheme    =13         # from enum XlPasteType
	xlPasteColumnWidths           =8          # from enum XlPasteType
	xlPasteComments               =-4144      # from enum XlPasteType
	xlPasteFormats                =-4122      # from enum XlPasteType
	xlPasteFormulas               =-4123      # from enum XlPasteType
	xlPasteFormulasAndNumberFormats=11         # from enum XlPasteType
	xlPasteValidation             =6          # from enum XlPasteType
	xlPasteValues                 =-4163      # from enum XlPasteType
	xlPasteValuesAndNumberFormats =12         # from enum XlPasteType
	xlPatternAutomatic            =-4105      # from enum XlPattern
	xlPatternChecker              =9          # from enum XlPattern
	xlPatternCrissCross           =16         # from enum XlPattern
	xlPatternDown                 =-4121      # from enum XlPattern
	xlPatternGray16               =17         # from enum XlPattern
	xlPatternGray25               =-4124      # from enum XlPattern
	xlPatternGray50               =-4125      # from enum XlPattern
	xlPatternGray75               =-4126      # from enum XlPattern
	xlPatternGray8                =18         # from enum XlPattern
	xlPatternGrid                 =15         # from enum XlPattern
	xlPatternHorizontal           =-4128      # from enum XlPattern
	xlPatternLightDown            =13         # from enum XlPattern
	xlPatternLightHorizontal      =11         # from enum XlPattern
	xlPatternLightUp              =14         # from enum XlPattern
	xlPatternLightVertical        =12         # from enum XlPattern
	xlPatternLinearGradient       =4000       # from enum XlPattern
	xlPatternNone                 =-4142      # from enum XlPattern
	xlPatternRectangularGradient  =4001       # from enum XlPattern
	xlPatternSemiGray75           =10         # from enum XlPattern
	xlPatternSolid                =1          # from enum XlPattern
	xlPatternUp                   =-4162      # from enum XlPattern
	xlPatternVertical             =-4166      # from enum XlPattern
	xlPhoneticAlignCenter         =2          # from enum XlPhoneticAlignment
	xlPhoneticAlignDistributed    =3          # from enum XlPhoneticAlignment
	xlPhoneticAlignLeft           =1          # from enum XlPhoneticAlignment
	xlPhoneticAlignNoControl      =0          # from enum XlPhoneticAlignment
	xlHiragana                    =2          # from enum XlPhoneticCharacterType
	xlKatakana                    =1          # from enum XlPhoneticCharacterType
	xlKatakanaHalf                =0          # from enum XlPhoneticCharacterType
	xlNoConversion                =3          # from enum XlPhoneticCharacterType
	xlPrinter                     =2          # from enum XlPictureAppearance
	xlScreen                      =1          # from enum XlPictureAppearance
	xlBMP                         =1          # from enum XlPictureConvertorType
	xlCGM                         =7          # from enum XlPictureConvertorType
	xlDRW                         =4          # from enum XlPictureConvertorType
	xlDXF                         =5          # from enum XlPictureConvertorType
	xlEPS                         =8          # from enum XlPictureConvertorType
	xlHGL                         =6          # from enum XlPictureConvertorType
	xlPCT                         =13         # from enum XlPictureConvertorType
	xlPCX                         =10         # from enum XlPictureConvertorType
	xlPIC                         =11         # from enum XlPictureConvertorType
	xlPLT                         =12         # from enum XlPictureConvertorType
	xlTIF                         =9          # from enum XlPictureConvertorType
	xlWMF                         =2          # from enum XlPictureConvertorType
	xlWPG                         =3          # from enum XlPictureConvertorType
	xlCenterPoint                 =5          # from enum XlPieSliceIndex
	xlInnerCenterPoint            =8          # from enum XlPieSliceIndex
	xlInnerClockwisePoint         =7          # from enum XlPieSliceIndex
	xlInnerCounterClockwisePoint  =9          # from enum XlPieSliceIndex
	xlMidClockwiseRadiusPoint     =4          # from enum XlPieSliceIndex
	xlMidCounterClockwiseRadiusPoint=6          # from enum XlPieSliceIndex
	xlOuterCenterPoint            =2          # from enum XlPieSliceIndex
	xlOuterClockwisePoint         =3          # from enum XlPieSliceIndex
	xlOuterCounterClockwisePoint  =1          # from enum XlPieSliceIndex
	xlHorizontalCoordinate        =1          # from enum XlPieSliceLocation
	xlVerticalCoordinate          =2          # from enum XlPieSliceLocation
	xlPivotCellBlankCell          =9          # from enum XlPivotCellType
	xlPivotCellCustomSubtotal     =7          # from enum XlPivotCellType
	xlPivotCellDataField          =4          # from enum XlPivotCellType
	xlPivotCellDataPivotField     =8          # from enum XlPivotCellType
	xlPivotCellGrandTotal         =3          # from enum XlPivotCellType
	xlPivotCellPageFieldItem      =6          # from enum XlPivotCellType
	xlPivotCellPivotField         =5          # from enum XlPivotCellType
	xlPivotCellPivotItem          =1          # from enum XlPivotCellType
	xlPivotCellSubtotal           =2          # from enum XlPivotCellType
	xlPivotCellValue              =0          # from enum XlPivotCellType
	xlDataFieldScope              =2          # from enum XlPivotConditionScope
	xlFieldsScope                 =1          # from enum XlPivotConditionScope
	xlSelectionScope              =0          # from enum XlPivotConditionScope
	xlDifferenceFrom              =2          # from enum XlPivotFieldCalculation
	xlIndex                       =9          # from enum XlPivotFieldCalculation
	xlNoAdditionalCalculation     =-4143      # from enum XlPivotFieldCalculation
	xlPercentDifferenceFrom       =4          # from enum XlPivotFieldCalculation
	xlPercentOf                   =3          # from enum XlPivotFieldCalculation
	xlPercentOfColumn             =7          # from enum XlPivotFieldCalculation
	xlPercentOfParent             =12         # from enum XlPivotFieldCalculation
	xlPercentOfParentColumn       =11         # from enum XlPivotFieldCalculation
	xlPercentOfParentRow          =10         # from enum XlPivotFieldCalculation
	xlPercentOfRow                =6          # from enum XlPivotFieldCalculation
	xlPercentOfTotal              =8          # from enum XlPivotFieldCalculation
	xlPercentRunningTotal         =13         # from enum XlPivotFieldCalculation
	xlRankAscending               =14         # from enum XlPivotFieldCalculation
	xlRankDecending               =15         # from enum XlPivotFieldCalculation
	xlRunningTotal                =5          # from enum XlPivotFieldCalculation
	xlDate                        =2          # from enum XlPivotFieldDataType
	xlNumber                      =-4145      # from enum XlPivotFieldDataType
	xlText                        =-4158      # from enum XlPivotFieldDataType
	xlColumnField                 =2          # from enum XlPivotFieldOrientation
	xlDataField                   =4          # from enum XlPivotFieldOrientation
	xlHidden                      =0          # from enum XlPivotFieldOrientation
	xlPageField                   =3          # from enum XlPivotFieldOrientation
	xlRowField                    =1          # from enum XlPivotFieldOrientation
	xlDoNotRepeatLabels           =1          # from enum XlPivotFieldRepeatLabels
	xlRepeatLabels                =2          # from enum XlPivotFieldRepeatLabels
	xlAfter                       =33         # from enum XlPivotFilterType
	xlAfterOrEqualTo              =34         # from enum XlPivotFilterType
	xlAllDatesInPeriodApril       =60         # from enum XlPivotFilterType
	xlAllDatesInPeriodAugust      =64         # from enum XlPivotFilterType
	xlAllDatesInPeriodDecember    =68         # from enum XlPivotFilterType
	xlAllDatesInPeriodFebruary    =58         # from enum XlPivotFilterType
	xlAllDatesInPeriodJanuary     =57         # from enum XlPivotFilterType
	xlAllDatesInPeriodJuly        =63         # from enum XlPivotFilterType
	xlAllDatesInPeriodJune        =62         # from enum XlPivotFilterType
	xlAllDatesInPeriodMarch       =59         # from enum XlPivotFilterType
	xlAllDatesInPeriodMay         =61         # from enum XlPivotFilterType
	xlAllDatesInPeriodNovember    =67         # from enum XlPivotFilterType
	xlAllDatesInPeriodOctober     =66         # from enum XlPivotFilterType
	xlAllDatesInPeriodQuarter1    =53         # from enum XlPivotFilterType
	xlAllDatesInPeriodQuarter2    =54         # from enum XlPivotFilterType
	xlAllDatesInPeriodQuarter3    =55         # from enum XlPivotFilterType
	xlAllDatesInPeriodQuarter4    =56         # from enum XlPivotFilterType
	xlAllDatesInPeriodSeptember   =65         # from enum XlPivotFilterType
	xlBefore                      =31         # from enum XlPivotFilterType
	xlBeforeOrEqualTo             =32         # from enum XlPivotFilterType
	xlBottomCount                 =2          # from enum XlPivotFilterType
	xlBottomPercent               =4          # from enum XlPivotFilterType
	xlBottomSum                   =6          # from enum XlPivotFilterType
	xlCaptionBeginsWith           =17         # from enum XlPivotFilterType
	xlCaptionContains             =21         # from enum XlPivotFilterType
	xlCaptionDoesNotBeginWith     =18         # from enum XlPivotFilterType
	xlCaptionDoesNotContain       =22         # from enum XlPivotFilterType
	xlCaptionDoesNotEndWith       =20         # from enum XlPivotFilterType
	xlCaptionDoesNotEqual         =16         # from enum XlPivotFilterType
	xlCaptionEndsWith             =19         # from enum XlPivotFilterType
	xlCaptionEquals               =15         # from enum XlPivotFilterType
	xlCaptionIsBetween            =27         # from enum XlPivotFilterType
	xlCaptionIsGreaterThan        =23         # from enum XlPivotFilterType
	xlCaptionIsGreaterThanOrEqualTo=24         # from enum XlPivotFilterType
	xlCaptionIsLessThan           =25         # from enum XlPivotFilterType
	xlCaptionIsLessThanOrEqualTo  =26         # from enum XlPivotFilterType
	xlCaptionIsNotBetween         =28         # from enum XlPivotFilterType
	xlDateBetween                 =35         # from enum XlPivotFilterType
	xlDateLastMonth               =45         # from enum XlPivotFilterType
	xlDateLastQuarter             =48         # from enum XlPivotFilterType
	xlDateLastWeek                =42         # from enum XlPivotFilterType
	xlDateLastYear                =51         # from enum XlPivotFilterType
	xlDateNextMonth               =43         # from enum XlPivotFilterType
	xlDateNextQuarter             =46         # from enum XlPivotFilterType
	xlDateNextWeek                =40         # from enum XlPivotFilterType
	xlDateNextYear                =49         # from enum XlPivotFilterType
	xlDateNotBetween              =36         # from enum XlPivotFilterType
	xlDateThisMonth               =44         # from enum XlPivotFilterType
	xlDateThisQuarter             =47         # from enum XlPivotFilterType
	xlDateThisWeek                =41         # from enum XlPivotFilterType
	xlDateThisYear                =50         # from enum XlPivotFilterType
	xlDateToday                   =38         # from enum XlPivotFilterType
	xlDateTomorrow                =37         # from enum XlPivotFilterType
	xlDateYesterday               =39         # from enum XlPivotFilterType
	xlNotSpecificDate             =30         # from enum XlPivotFilterType
	xlSpecificDate                =29         # from enum XlPivotFilterType
	xlTopCount                    =1          # from enum XlPivotFilterType
	xlTopPercent                  =3          # from enum XlPivotFilterType
	xlTopSum                      =5          # from enum XlPivotFilterType
	xlValueDoesNotEqual           =8          # from enum XlPivotFilterType
	xlValueEquals                 =7          # from enum XlPivotFilterType
	xlValueIsBetween              =13         # from enum XlPivotFilterType
	xlValueIsGreaterThan          =9          # from enum XlPivotFilterType
	xlValueIsGreaterThanOrEqualTo =10         # from enum XlPivotFilterType
	xlValueIsLessThan             =11         # from enum XlPivotFilterType
	xlValueIsLessThanOrEqualTo    =12         # from enum XlPivotFilterType
	xlValueIsNotBetween           =14         # from enum XlPivotFilterType
	xlYearToDate                  =52         # from enum XlPivotFilterType
	xlPTClassic                   =20         # from enum XlPivotFormatType
	xlPTNone                      =21         # from enum XlPivotFormatType
	xlReport1                     =0          # from enum XlPivotFormatType
	xlReport10                    =9          # from enum XlPivotFormatType
	xlReport2                     =1          # from enum XlPivotFormatType
	xlReport3                     =2          # from enum XlPivotFormatType
	xlReport4                     =3          # from enum XlPivotFormatType
	xlReport5                     =4          # from enum XlPivotFormatType
	xlReport6                     =5          # from enum XlPivotFormatType
	xlReport7                     =6          # from enum XlPivotFormatType
	xlReport8                     =7          # from enum XlPivotFormatType
	xlReport9                     =8          # from enum XlPivotFormatType
	xlTable1                      =10         # from enum XlPivotFormatType
	xlTable10                     =19         # from enum XlPivotFormatType
	xlTable2                      =11         # from enum XlPivotFormatType
	xlTable3                      =12         # from enum XlPivotFormatType
	xlTable4                      =13         # from enum XlPivotFormatType
	xlTable5                      =14         # from enum XlPivotFormatType
	xlTable6                      =15         # from enum XlPivotFormatType
	xlTable7                      =16         # from enum XlPivotFormatType
	xlTable8                      =17         # from enum XlPivotFormatType
	xlTable9                      =18         # from enum XlPivotFormatType
	xlPivotLineBlank              =3          # from enum XlPivotLineType
	xlPivotLineGrandTotal         =2          # from enum XlPivotLineType
	xlPivotLineRegular            =0          # from enum XlPivotLineType
	xlPivotLineSubtotal           =1          # from enum XlPivotLineType
	xlMissingItemsDefault         =-1         # from enum XlPivotTableMissingItems
	xlMissingItemsMax             =32500      # from enum XlPivotTableMissingItems
	xlMissingItemsMax2            =1048576    # from enum XlPivotTableMissingItems
	xlMissingItemsNone            =0          # from enum XlPivotTableMissingItems
	xlConsolidation               =3          # from enum XlPivotTableSourceType
	xlDatabase                    =1          # from enum XlPivotTableSourceType
	xlExternal                    =2          # from enum XlPivotTableSourceType
	xlPivotTable                  =-4148      # from enum XlPivotTableSourceType
	xlScenario                    =4          # from enum XlPivotTableSourceType
	xlPivotTableVersion10         =1          # from enum XlPivotTableVersionList
	xlPivotTableVersion11         =2          # from enum XlPivotTableVersionList
	xlPivotTableVersion12         =3          # from enum XlPivotTableVersionList
	xlPivotTableVersion14         =4          # from enum XlPivotTableVersionList
	xlPivotTableVersion15         =5          # from enum XlPivotTableVersionList
	xlPivotTableVersion2000       =0          # from enum XlPivotTableVersionList
	xlPivotTableVersionCurrent    =-1         # from enum XlPivotTableVersionList
	xlFreeFloating                =3          # from enum XlPlacement
	xlMove                        =2          # from enum XlPlacement
	xlMoveAndSize                 =1          # from enum XlPlacement
	xlMSDOS                       =3          # from enum XlPlatform
	xlMacintosh                   =1          # from enum XlPlatform
	xlWindows                     =2          # from enum XlPlatform
	xlPortugueseBoth              =3          # from enum XlPortugueseReform
	xlPortuguesePostReform        =2          # from enum XlPortugueseReform
	xlPortuguesePreReform         =1          # from enum XlPortugueseReform
	xlPrintErrorsBlank            =1          # from enum XlPrintErrors
	xlPrintErrorsDash             =2          # from enum XlPrintErrors
	xlPrintErrorsDisplayed        =0          # from enum XlPrintErrors
	xlPrintErrorsNA               =3          # from enum XlPrintErrors
	xlPrintInPlace                =16         # from enum XlPrintLocation
	xlPrintNoComments             =-4142      # from enum XlPrintLocation
	xlPrintSheetEnd               =1          # from enum XlPrintLocation
	xlPriorityHigh                =-4127      # from enum XlPriority
	xlPriorityLow                 =-4134      # from enum XlPriority
	xlPriorityNormal              =-4143      # from enum XlPriority
	xlDisplayPropertyInPivotTable =1          # from enum XlPropertyDisplayedIn
	xlDisplayPropertyInPivotTableAndTooltip=3          # from enum XlPropertyDisplayedIn
	xlDisplayPropertyInTooltip    =2          # from enum XlPropertyDisplayedIn
	xlProtectedViewCloseEdit      =1          # from enum XlProtectedViewCloseReason
	xlProtectedViewCloseForced    =2          # from enum XlProtectedViewCloseReason
	xlProtectedViewCloseNormal    =0          # from enum XlProtectedViewCloseReason
	xlProtectedViewWindowMaximized=2          # from enum XlProtectedViewWindowState
	xlProtectedViewWindowMinimized=1          # from enum XlProtectedViewWindowState
	xlProtectedViewWindowNormal   =0          # from enum XlProtectedViewWindowState
	msoLimited                    =1          # from enum XlPublishToDocsDisclosureScope
	msoNoOverwrite                =3          # from enum XlPublishToDocsDisclosureScope
	msoOrganization               =2          # from enum XlPublishToDocsDisclosureScope
	msoPublic                     =0          # from enum XlPublishToDocsDisclosureScope
	msoPBIAbort                   =1          # from enum XlPublishToPBINameConflictAction
	msoPBIIgnore                  =0          # from enum XlPublishToPBINameConflictAction
	msoPBIOverwrite               =2          # from enum XlPublishToPBINameConflictAction
	msoPBIExport                  =0          # from enum XlPublishToPBIPublishType
	msoPBIUpload                  =1          # from enum XlPublishToPBIPublishType
	xlADORecordset                =7          # from enum XlQueryType
	xlDAORecordset                =2          # from enum XlQueryType
	xlODBCQuery                   =1          # from enum XlQueryType
	xlOLEDBQuery                  =5          # from enum XlQueryType
	xlTextImport                  =6          # from enum XlQueryType
	xlWebQuery                    =4          # from enum XlQueryType
	xlFormatConditions            =1          # from enum XlQuickAnalysisMode
	xlLensOnly                    =0          # from enum XlQuickAnalysisMode
	xlRecommendedCharts           =2          # from enum XlQuickAnalysisMode
	xlSparklines                  =5          # from enum XlQuickAnalysisMode
	xlTables                      =4          # from enum XlQuickAnalysisMode
	xlTotals                      =3          # from enum XlQuickAnalysisMode
	xlRangeAutoFormat3DEffects1   =13         # from enum XlRangeAutoFormat
	xlRangeAutoFormat3DEffects2   =14         # from enum XlRangeAutoFormat
	xlRangeAutoFormatAccounting1  =4          # from enum XlRangeAutoFormat
	xlRangeAutoFormatAccounting2  =5          # from enum XlRangeAutoFormat
	xlRangeAutoFormatAccounting3  =6          # from enum XlRangeAutoFormat
	xlRangeAutoFormatAccounting4  =17         # from enum XlRangeAutoFormat
	xlRangeAutoFormatClassic1     =1          # from enum XlRangeAutoFormat
	xlRangeAutoFormatClassic2     =2          # from enum XlRangeAutoFormat
	xlRangeAutoFormatClassic3     =3          # from enum XlRangeAutoFormat
	xlRangeAutoFormatClassicPivotTable=31         # from enum XlRangeAutoFormat
	xlRangeAutoFormatColor1       =7          # from enum XlRangeAutoFormat
	xlRangeAutoFormatColor2       =8          # from enum XlRangeAutoFormat
	xlRangeAutoFormatColor3       =9          # from enum XlRangeAutoFormat
	xlRangeAutoFormatList1        =10         # from enum XlRangeAutoFormat
	xlRangeAutoFormatList2        =11         # from enum XlRangeAutoFormat
	xlRangeAutoFormatList3        =12         # from enum XlRangeAutoFormat
	xlRangeAutoFormatLocalFormat1 =15         # from enum XlRangeAutoFormat
	xlRangeAutoFormatLocalFormat2 =16         # from enum XlRangeAutoFormat
	xlRangeAutoFormatLocalFormat3 =19         # from enum XlRangeAutoFormat
	xlRangeAutoFormatLocalFormat4 =20         # from enum XlRangeAutoFormat
	xlRangeAutoFormatNone         =-4142      # from enum XlRangeAutoFormat
	xlRangeAutoFormatPTNone       =42         # from enum XlRangeAutoFormat
	xlRangeAutoFormatReport1      =21         # from enum XlRangeAutoFormat
	xlRangeAutoFormatReport10     =30         # from enum XlRangeAutoFormat
	xlRangeAutoFormatReport2      =22         # from enum XlRangeAutoFormat
	xlRangeAutoFormatReport3      =23         # from enum XlRangeAutoFormat
	xlRangeAutoFormatReport4      =24         # from enum XlRangeAutoFormat
	xlRangeAutoFormatReport5      =25         # from enum XlRangeAutoFormat
	xlRangeAutoFormatReport6      =26         # from enum XlRangeAutoFormat
	xlRangeAutoFormatReport7      =27         # from enum XlRangeAutoFormat
	xlRangeAutoFormatReport8      =28         # from enum XlRangeAutoFormat
	xlRangeAutoFormatReport9      =29         # from enum XlRangeAutoFormat
	xlRangeAutoFormatSimple       =-4154      # from enum XlRangeAutoFormat
	xlRangeAutoFormatTable1       =32         # from enum XlRangeAutoFormat
	xlRangeAutoFormatTable10      =41         # from enum XlRangeAutoFormat
	xlRangeAutoFormatTable2       =33         # from enum XlRangeAutoFormat
	xlRangeAutoFormatTable3       =34         # from enum XlRangeAutoFormat
	xlRangeAutoFormatTable4       =35         # from enum XlRangeAutoFormat
	xlRangeAutoFormatTable5       =36         # from enum XlRangeAutoFormat
	xlRangeAutoFormatTable6       =37         # from enum XlRangeAutoFormat
	xlRangeAutoFormatTable7       =38         # from enum XlRangeAutoFormat
	xlRangeAutoFormatTable8       =39         # from enum XlRangeAutoFormat
	xlRangeAutoFormatTable9       =40         # from enum XlRangeAutoFormat
	xlRangeValueDefault           =10         # from enum XlRangeValueDataType
	xlRangeValueMSPersistXML      =12         # from enum XlRangeValueDataType
	xlRangeValueXMLSpreadsheet    =11         # from enum XlRangeValueDataType
	xlA1                          =1          # from enum XlReferenceStyle
	xlR1C1                        =-4150      # from enum XlReferenceStyle
	xlAbsRowRelColumn             =2          # from enum XlReferenceType
	xlAbsolute                    =1          # from enum XlReferenceType
	xlRelRowAbsColumn             =3          # from enum XlReferenceType
	xlRelative                    =4          # from enum XlReferenceType
	xlRegionLabelOptionsBestFitOnly=1          # from enum XlRegionLabelOptions
	xlRegionLabelOptionsNone      =0          # from enum XlRegionLabelOptions
	xlRegionLabelOptionsShowAll   =2          # from enum XlRegionLabelOptions
	xlRDIAll                      =99         # from enum XlRemoveDocInfoType
	xlRDIComments                 =1          # from enum XlRemoveDocInfoType
	xlRDIContentType              =16         # from enum XlRemoveDocInfoType
	xlRDIDefinedNameComments      =18         # from enum XlRemoveDocInfoType
	xlRDIDocumentManagementPolicy =15         # from enum XlRemoveDocInfoType
	xlRDIDocumentProperties       =8          # from enum XlRemoveDocInfoType
	xlRDIDocumentServerProperties =14         # from enum XlRemoveDocInfoType
	xlRDIDocumentWorkspace        =10         # from enum XlRemoveDocInfoType
	xlRDIEmailHeader              =5          # from enum XlRemoveDocInfoType
	xlRDIExcelDataModel           =23         # from enum XlRemoveDocInfoType
	xlRDIInactiveDataConnections  =19         # from enum XlRemoveDocInfoType
	xlRDIInkAnnotations           =11         # from enum XlRemoveDocInfoType
	xlRDIInlineWebExtensions      =21         # from enum XlRemoveDocInfoType
	xlRDIPrinterPath              =20         # from enum XlRemoveDocInfoType
	xlRDIPublishInfo              =13         # from enum XlRemoveDocInfoType
	xlRDIRemovePersonalInformation=4          # from enum XlRemoveDocInfoType
	xlRDIRoutingSlip              =6          # from enum XlRemoveDocInfoType
	xlRDIScenarioComments         =12         # from enum XlRemoveDocInfoType
	xlRDISendForReview            =7          # from enum XlRemoveDocInfoType
	xlRDITaskpaneWebExtensions    =22         # from enum XlRemoveDocInfoType
	rgbAliceBlue                  =16775408   # from enum XlRgbColor
	rgbAntiqueWhite               =14150650   # from enum XlRgbColor
	rgbAqua                       =16776960   # from enum XlRgbColor
	rgbAquamarine                 =13959039   # from enum XlRgbColor
	rgbAzure                      =16777200   # from enum XlRgbColor
	rgbBeige                      =14480885   # from enum XlRgbColor
	rgbBisque                     =12903679   # from enum XlRgbColor
	rgbBlack                      =0          # from enum XlRgbColor
	rgbBlanchedAlmond             =13495295   # from enum XlRgbColor
	rgbBlue                       =16711680   # from enum XlRgbColor
	rgbBlueViolet                 =14822282   # from enum XlRgbColor
	rgbBrown                      =2763429    # from enum XlRgbColor
	rgbBurlyWood                  =8894686    # from enum XlRgbColor
	rgbCadetBlue                  =10526303   # from enum XlRgbColor
	rgbChartreuse                 =65407      # from enum XlRgbColor
	rgbCoral                      =5275647    # from enum XlRgbColor
	rgbCornflowerBlue             =15570276   # from enum XlRgbColor
	rgbCornsilk                   =14481663   # from enum XlRgbColor
	rgbCrimson                    =3937500    # from enum XlRgbColor
	rgbDarkBlue                   =9109504    # from enum XlRgbColor
	rgbDarkCyan                   =9145088    # from enum XlRgbColor
	rgbDarkGoldenrod              =755384     # from enum XlRgbColor
	rgbDarkGray                   =11119017   # from enum XlRgbColor
	rgbDarkGreen                  =25600      # from enum XlRgbColor
	rgbDarkGrey                   =11119017   # from enum XlRgbColor
	rgbDarkKhaki                  =7059389    # from enum XlRgbColor
	rgbDarkMagenta                =9109643    # from enum XlRgbColor
	rgbDarkOliveGreen             =3107669    # from enum XlRgbColor
	rgbDarkOrange                 =36095      # from enum XlRgbColor
	rgbDarkOrchid                 =13382297   # from enum XlRgbColor
	rgbDarkRed                    =139        # from enum XlRgbColor
	rgbDarkSalmon                 =8034025    # from enum XlRgbColor
	rgbDarkSeaGreen               =9419919    # from enum XlRgbColor
	rgbDarkSlateBlue              =9125192    # from enum XlRgbColor
	rgbDarkSlateGray              =5197615    # from enum XlRgbColor
	rgbDarkSlateGrey              =5197615    # from enum XlRgbColor
	rgbDarkTurquoise              =13749760   # from enum XlRgbColor
	rgbDarkViolet                 =13828244   # from enum XlRgbColor
	rgbDeepPink                   =9639167    # from enum XlRgbColor
	rgbDeepSkyBlue                =16760576   # from enum XlRgbColor
	rgbDimGray                    =6908265    # from enum XlRgbColor
	rgbDimGrey                    =6908265    # from enum XlRgbColor
	rgbDodgerBlue                 =16748574   # from enum XlRgbColor
	rgbFireBrick                  =2237106    # from enum XlRgbColor
	rgbFloralWhite                =15792895   # from enum XlRgbColor
	rgbForestGreen                =2263842    # from enum XlRgbColor
	rgbFuchsia                    =16711935   # from enum XlRgbColor
	rgbGainsboro                  =14474460   # from enum XlRgbColor
	rgbGhostWhite                 =16775416   # from enum XlRgbColor
	rgbGold                       =55295      # from enum XlRgbColor
	rgbGoldenrod                  =2139610    # from enum XlRgbColor
	rgbGray                       =8421504    # from enum XlRgbColor
	rgbGreen                      =32768      # from enum XlRgbColor
	rgbGreenYellow                =3145645    # from enum XlRgbColor
	rgbGrey                       =8421504    # from enum XlRgbColor
	rgbHoneydew                   =15794160   # from enum XlRgbColor
	rgbHotPink                    =11823615   # from enum XlRgbColor
	rgbIndianRed                  =6053069    # from enum XlRgbColor
	rgbIndigo                     =8519755    # from enum XlRgbColor
	rgbIvory                      =15794175   # from enum XlRgbColor
	rgbKhaki                      =9234160    # from enum XlRgbColor
	rgbLavender                   =16443110   # from enum XlRgbColor
	rgbLavenderBlush              =16118015   # from enum XlRgbColor
	rgbLawnGreen                  =64636      # from enum XlRgbColor
	rgbLemonChiffon               =13499135   # from enum XlRgbColor
	rgbLightBlue                  =15128749   # from enum XlRgbColor
	rgbLightCoral                 =8421616    # from enum XlRgbColor
	rgbLightCyan                  =9145088    # from enum XlRgbColor
	rgbLightGoldenrodYellow       =13826810   # from enum XlRgbColor
	rgbLightGray                  =13882323   # from enum XlRgbColor
	rgbLightGreen                 =9498256    # from enum XlRgbColor
	rgbLightGrey                  =13882323   # from enum XlRgbColor
	rgbLightPink                  =12695295   # from enum XlRgbColor
	rgbLightSalmon                =8036607    # from enum XlRgbColor
	rgbLightSeaGreen              =11186720   # from enum XlRgbColor
	rgbLightSkyBlue               =16436871   # from enum XlRgbColor
	rgbLightSlateGray             =10061943   # from enum XlRgbColor
	rgbLightSlateGrey             =10061943   # from enum XlRgbColor
	rgbLightSteelBlue             =14599344   # from enum XlRgbColor
	rgbLightYellow                =14745599   # from enum XlRgbColor
	rgbLime                       =65280      # from enum XlRgbColor
	rgbLimeGreen                  =3329330    # from enum XlRgbColor
	rgbLinen                      =15134970   # from enum XlRgbColor
	rgbMaroon                     =128        # from enum XlRgbColor
	rgbMediumAquamarine           =11206502   # from enum XlRgbColor
	rgbMediumBlue                 =13434880   # from enum XlRgbColor
	rgbMediumOrchid               =13850042   # from enum XlRgbColor
	rgbMediumPurple               =14381203   # from enum XlRgbColor
	rgbMediumSeaGreen             =7451452    # from enum XlRgbColor
	rgbMediumSlateBlue            =15624315   # from enum XlRgbColor
	rgbMediumSpringGreen          =10156544   # from enum XlRgbColor
	rgbMediumTurquoise            =13422920   # from enum XlRgbColor
	rgbMediumVioletRed            =8721863    # from enum XlRgbColor
	rgbMidnightBlue               =7346457    # from enum XlRgbColor
	rgbMintCream                  =16449525   # from enum XlRgbColor
	rgbMistyRose                  =14804223   # from enum XlRgbColor
	rgbMoccasin                   =11920639   # from enum XlRgbColor
	rgbNavajoWhite                =11394815   # from enum XlRgbColor
	rgbNavy                       =8388608    # from enum XlRgbColor
	rgbNavyBlue                   =8388608    # from enum XlRgbColor
	rgbOldLace                    =15136253   # from enum XlRgbColor
	rgbOlive                      =32896      # from enum XlRgbColor
	rgbOliveDrab                  =2330219    # from enum XlRgbColor
	rgbOrange                     =42495      # from enum XlRgbColor
	rgbOrangeRed                  =17919      # from enum XlRgbColor
	rgbOrchid                     =14053594   # from enum XlRgbColor
	rgbPaleGoldenrod              =7071982    # from enum XlRgbColor
	rgbPaleGreen                  =10025880   # from enum XlRgbColor
	rgbPaleTurquoise              =15658671   # from enum XlRgbColor
	rgbPaleVioletRed              =9662683    # from enum XlRgbColor
	rgbPapayaWhip                 =14020607   # from enum XlRgbColor
	rgbPeachPuff                  =12180223   # from enum XlRgbColor
	rgbPeru                       =4163021    # from enum XlRgbColor
	rgbPink                       =13353215   # from enum XlRgbColor
	rgbPlum                       =14524637   # from enum XlRgbColor
	rgbPowderBlue                 =15130800   # from enum XlRgbColor
	rgbPurple                     =8388736    # from enum XlRgbColor
	rgbRed                        =255        # from enum XlRgbColor
	rgbRosyBrown                  =9408444    # from enum XlRgbColor
	rgbRoyalBlue                  =14772545   # from enum XlRgbColor
	rgbSalmon                     =7504122    # from enum XlRgbColor
	rgbSandyBrown                 =6333684    # from enum XlRgbColor
	rgbSeaGreen                   =5737262    # from enum XlRgbColor
	rgbSeashell                   =15660543   # from enum XlRgbColor
	rgbSienna                     =2970272    # from enum XlRgbColor
	rgbSilver                     =12632256   # from enum XlRgbColor
	rgbSkyBlue                    =15453831   # from enum XlRgbColor
	rgbSlateBlue                  =13458026   # from enum XlRgbColor
	rgbSlateGray                  =9470064    # from enum XlRgbColor
	rgbSlateGrey                  =9470064    # from enum XlRgbColor
	rgbSnow                       =16448255   # from enum XlRgbColor
	rgbSpringGreen                =8388352    # from enum XlRgbColor
	rgbSteelBlue                  =11829830   # from enum XlRgbColor
	rgbTan                        =9221330    # from enum XlRgbColor
	rgbTeal                       =8421376    # from enum XlRgbColor
	rgbThistle                    =14204888   # from enum XlRgbColor
	rgbTomato                     =4678655    # from enum XlRgbColor
	rgbTurquoise                  =13688896   # from enum XlRgbColor
	rgbViolet                     =15631086   # from enum XlRgbColor
	rgbWheat                      =11788021   # from enum XlRgbColor
	rgbWhite                      =16777215   # from enum XlRgbColor
	rgbWhiteSmoke                 =16119285   # from enum XlRgbColor
	rgbYellow                     =65535      # from enum XlRgbColor
	rgbYellowGreen                =3329434    # from enum XlRgbColor
	xlAlways                      =1          # from enum XlRobustConnect
	xlAsRequired                  =0          # from enum XlRobustConnect
	xlNever                       =2          # from enum XlRobustConnect
	xlAllAtOnce                   =2          # from enum XlRoutingSlipDelivery
	xlOneAfterAnother             =1          # from enum XlRoutingSlipDelivery
	xlNotYetRouted                =0          # from enum XlRoutingSlipStatus
	xlRoutingComplete             =2          # from enum XlRoutingSlipStatus
	xlRoutingInProgress           =1          # from enum XlRoutingSlipStatus
	xlColumns                     =2          # from enum XlRowCol
	xlRows                        =1          # from enum XlRowCol
	xlAutoActivate                =3          # from enum XlRunAutoMacro
	xlAutoClose                   =2          # from enum XlRunAutoMacro
	xlAutoDeactivate              =4          # from enum XlRunAutoMacro
	xlAutoOpen                    =1          # from enum XlRunAutoMacro
	xlDoNotSaveChanges            =2          # from enum XlSaveAction
	xlSaveChanges                 =1          # from enum XlSaveAction
	xlExclusive                   =3          # from enum XlSaveAsAccessMode
	xlNoChange                    =1          # from enum XlSaveAsAccessMode
	xlShared                      =2          # from enum XlSaveAsAccessMode
	xlLocalSessionChanges         =2          # from enum XlSaveConflictResolution
	xlOtherSessionChanges         =3          # from enum XlSaveConflictResolution
	xlUserResolution              =1          # from enum XlSaveConflictResolution
	xlScaleLinear                 =-4132      # from enum XlScaleType
	xlScaleLogarithmic            =-4133      # from enum XlScaleType
	xlNext                        =1          # from enum XlSearchDirection
	xlPrevious                    =2          # from enum XlSearchDirection
	xlByColumns                   =2          # from enum XlSearchOrder
	xlByRows                      =1          # from enum XlSearchOrder
	xlWithinSheet                 =1          # from enum XlSearchWithin
	xlWithinWorkbook              =2          # from enum XlSearchWithin
	xlSeriesColorGradientStyleDiverging=1          # from enum XlSeriesColorGradientStyle
	xlSeriesColorGradientStyleSequential=0          # from enum XlSeriesColorGradientStyle
	xlSeriesNameLevelAll          =-1         # from enum XlSeriesNameLevel
	xlSeriesNameLevelCustom       =-2         # from enum XlSeriesNameLevel
	xlSeriesNameLevelNone         =-3         # from enum XlSeriesNameLevel
	xlChart                       =-4109      # from enum XlSheetType
	xlDialogSheet                 =-4116      # from enum XlSheetType
	xlExcel4IntlMacroSheet        =4          # from enum XlSheetType
	xlExcel4MacroSheet            =3          # from enum XlSheetType
	xlWorksheet                   =-4167      # from enum XlSheetType
	xlSheetHidden                 =0          # from enum XlSheetVisibility
	xlSheetVeryHidden             =2          # from enum XlSheetVisibility
	xlSheetVisible                =-1         # from enum XlSheetVisibility
	xlSizeIsArea                  =1          # from enum XlSizeRepresents
	xlSizeIsWidth                 =2          # from enum XlSizeRepresents
	xlSlicer                      =1          # from enum XlSlicerCacheType
	xlTimeline                    =2          # from enum XlSlicerCacheType
	xlSlicerCrossFilterHideButtonsWithNoData=4          # from enum XlSlicerCrossFilterType
	xlSlicerCrossFilterShowItemsWithDataAtTop=2          # from enum XlSlicerCrossFilterType
	xlSlicerCrossFilterShowItemsWithNoData=3          # from enum XlSlicerCrossFilterType
	xlSlicerNoCrossFilter         =1          # from enum XlSlicerCrossFilterType
	xlSlicerSortAscending         =2          # from enum XlSlicerSort
	xlSlicerSortDataSourceOrder   =1          # from enum XlSlicerSort
	xlSlicerSortDescending        =3          # from enum XlSlicerSort
	xlSmartTagControlActiveX      =13         # from enum XlSmartTagControlType
	xlSmartTagControlButton       =6          # from enum XlSmartTagControlType
	xlSmartTagControlCheckbox     =9          # from enum XlSmartTagControlType
	xlSmartTagControlCombo        =12         # from enum XlSmartTagControlType
	xlSmartTagControlHelp         =3          # from enum XlSmartTagControlType
	xlSmartTagControlHelpURL      =4          # from enum XlSmartTagControlType
	xlSmartTagControlImage        =8          # from enum XlSmartTagControlType
	xlSmartTagControlLabel        =7          # from enum XlSmartTagControlType
	xlSmartTagControlLink         =2          # from enum XlSmartTagControlType
	xlSmartTagControlListbox      =11         # from enum XlSmartTagControlType
	xlSmartTagControlRadioGroup   =14         # from enum XlSmartTagControlType
	xlSmartTagControlSeparator    =5          # from enum XlSmartTagControlType
	xlSmartTagControlSmartTag     =1          # from enum XlSmartTagControlType
	xlSmartTagControlTextbox      =10         # from enum XlSmartTagControlType
	xlButtonOnly                  =2          # from enum XlSmartTagDisplayMode
	xlDisplayNone                 =1          # from enum XlSmartTagDisplayMode
	xlIndicatorAndButton          =0          # from enum XlSmartTagDisplayMode
	xlSortNormal                  =0          # from enum XlSortDataOption
	xlSortTextAsNumbers           =1          # from enum XlSortDataOption
	xlPinYin                      =1          # from enum XlSortMethod
	xlStroke                      =2          # from enum XlSortMethod
	xlCodePage                    =2          # from enum XlSortMethodOld
	xlSyllabary                   =1          # from enum XlSortMethodOld
	xlSortOnCellColor             =1          # from enum XlSortOn
	xlSortOnFontColor             =2          # from enum XlSortOn
	xlSortOnIcon                  =3          # from enum XlSortOn
	xlSortOnValues                =0          # from enum XlSortOn
	xlAscending                   =1          # from enum XlSortOrder
	xlDescending                  =2          # from enum XlSortOrder
	xlSortColumns                 =1          # from enum XlSortOrientation
	xlSortRows                    =2          # from enum XlSortOrientation
	xlSortLabels                  =2          # from enum XlSortType
	xlSortValues                  =1          # from enum XlSortType
	xlSourceAutoFilter            =3          # from enum XlSourceType
	xlSourceChart                 =5          # from enum XlSourceType
	xlSourcePivotTable            =6          # from enum XlSourceType
	xlSourcePrintArea             =2          # from enum XlSourceType
	xlSourceQuery                 =7          # from enum XlSourceType
	xlSourceRange                 =4          # from enum XlSourceType
	xlSourceSheet                 =1          # from enum XlSourceType
	xlSourceWorkbook              =0          # from enum XlSourceType
	xlSpanishTuteoAndVoseo        =1          # from enum XlSpanishModes
	xlSpanishTuteoOnly            =0          # from enum XlSpanishModes
	xlSpanishVoseoOnly            =2          # from enum XlSpanishModes
	xlSparkScaleCustom            =3          # from enum XlSparkScale
	xlSparkScaleGroup             =1          # from enum XlSparkScale
	xlSparkScaleSingle            =2          # from enum XlSparkScale
	xlSparkColumn                 =2          # from enum XlSparkType
	xlSparkColumnStacked100       =3          # from enum XlSparkType
	xlSparkLine                   =1          # from enum XlSparkType
	xlSparklineColumnsSquare      =2          # from enum XlSparklineRowCol
	xlSparklineNonSquare          =0          # from enum XlSparklineRowCol
	xlSparklineRowsSquare         =1          # from enum XlSparklineRowCol
	xlSpeakByColumns              =1          # from enum XlSpeakDirection
	xlSpeakByRows                 =0          # from enum XlSpeakDirection
	xlErrors                      =16         # from enum XlSpecialCellsValue
	xlLogical                     =4          # from enum XlSpecialCellsValue
	xlNumbers                     =1          # from enum XlSpecialCellsValue
	xlTextValues                  =2          # from enum XlSpecialCellsValue
	xlColorScaleBlackWhite        =3          # from enum XlStdColorScale
	xlColorScaleGYR               =2          # from enum XlStdColorScale
	xlColorScaleRYG               =1          # from enum XlStdColorScale
	xlColorScaleWhiteBlack        =4          # from enum XlStdColorScale
	xlSubscribeToPicture          =-4147      # from enum XlSubscribeToFormat
	xlSubscribeToText             =-4158      # from enum XlSubscribeToFormat
	xlAtBottom                    =2          # from enum XlSubtototalLocationType
	xlAtTop                       =1          # from enum XlSubtototalLocationType
	xlSummaryOnLeft               =-4131      # from enum XlSummaryColumn
	xlSummaryOnRight              =-4152      # from enum XlSummaryColumn
	xlStandardSummary             =1          # from enum XlSummaryReportType
	xlSummaryPivotTable           =-4148      # from enum XlSummaryReportType
	xlSummaryAbove                =0          # from enum XlSummaryRow
	xlSummaryBelow                =1          # from enum XlSummaryRow
	xlTabPositionFirst            =0          # from enum XlTabPosition
	xlTabPositionLast             =1          # from enum XlTabPosition
	xlBlankRow                    =19         # from enum XlTableStyleElementType
	xlColumnStripe1               =7          # from enum XlTableStyleElementType
	xlColumnStripe2               =8          # from enum XlTableStyleElementType
	xlColumnSubheading1           =20         # from enum XlTableStyleElementType
	xlColumnSubheading2           =21         # from enum XlTableStyleElementType
	xlColumnSubheading3           =22         # from enum XlTableStyleElementType
	xlFirstColumn                 =3          # from enum XlTableStyleElementType
	xlFirstHeaderCell             =9          # from enum XlTableStyleElementType
	xlFirstTotalCell              =11         # from enum XlTableStyleElementType
	xlGrandTotalColumn            =4          # from enum XlTableStyleElementType
	xlGrandTotalRow               =2          # from enum XlTableStyleElementType
	xlHeaderRow                   =1          # from enum XlTableStyleElementType
	xlLastColumn                  =4          # from enum XlTableStyleElementType
	xlLastHeaderCell              =10         # from enum XlTableStyleElementType
	xlLastTotalCell               =12         # from enum XlTableStyleElementType
	xlPageFieldLabels             =26         # from enum XlTableStyleElementType
	xlPageFieldValues             =27         # from enum XlTableStyleElementType
	xlRowStripe1                  =5          # from enum XlTableStyleElementType
	xlRowStripe2                  =6          # from enum XlTableStyleElementType
	xlRowSubheading1              =23         # from enum XlTableStyleElementType
	xlRowSubheading2              =24         # from enum XlTableStyleElementType
	xlRowSubheading3              =25         # from enum XlTableStyleElementType
	xlSlicerHoveredSelectedItemWithData=33         # from enum XlTableStyleElementType
	xlSlicerHoveredSelectedItemWithNoData=35         # from enum XlTableStyleElementType
	xlSlicerHoveredUnselectedItemWithData=32         # from enum XlTableStyleElementType
	xlSlicerHoveredUnselectedItemWithNoData=34         # from enum XlTableStyleElementType
	xlSlicerSelectedItemWithData  =30         # from enum XlTableStyleElementType
	xlSlicerSelectedItemWithNoData=31         # from enum XlTableStyleElementType
	xlSlicerUnselectedItemWithData=28         # from enum XlTableStyleElementType
	xlSlicerUnselectedItemWithNoData=29         # from enum XlTableStyleElementType
	xlSubtotalColumn1             =13         # from enum XlTableStyleElementType
	xlSubtotalColumn2             =14         # from enum XlTableStyleElementType
	xlSubtotalColumn3             =15         # from enum XlTableStyleElementType
	xlSubtotalRow1                =16         # from enum XlTableStyleElementType
	xlSubtotalRow2                =17         # from enum XlTableStyleElementType
	xlSubtotalRow3                =18         # from enum XlTableStyleElementType
	xlTimelinePeriodLabels1       =38         # from enum XlTableStyleElementType
	xlTimelinePeriodLabels2       =39         # from enum XlTableStyleElementType
	xlTimelineSelectedTimeBlock   =40         # from enum XlTableStyleElementType
	xlTimelineSelectedTimeBlockSpace=42         # from enum XlTableStyleElementType
	xlTimelineSelectionLabel      =36         # from enum XlTableStyleElementType
	xlTimelineTimeLevel           =37         # from enum XlTableStyleElementType
	xlTimelineUnselectedTimeBlock =41         # from enum XlTableStyleElementType
	xlTotalRow                    =2          # from enum XlTableStyleElementType
	xlWholeTable                  =0          # from enum XlTableStyleElementType
	xlDelimited                   =1          # from enum XlTextParsingType
	xlFixedWidth                  =2          # from enum XlTextParsingType
	xlTextQualifierDoubleQuote    =1          # from enum XlTextQualifier
	xlTextQualifierNone           =-4142      # from enum XlTextQualifier
	xlTextQualifierSingleQuote    =2          # from enum XlTextQualifier
	xlTextVisualLTR               =1          # from enum XlTextVisualLayoutType
	xlTextVisualRTL               =2          # from enum XlTextVisualLayoutType
	xlThemeColorAccent1           =5          # from enum XlThemeColor
	xlThemeColorAccent2           =6          # from enum XlThemeColor
	xlThemeColorAccent3           =7          # from enum XlThemeColor
	xlThemeColorAccent4           =8          # from enum XlThemeColor
	xlThemeColorAccent5           =9          # from enum XlThemeColor
	xlThemeColorAccent6           =10         # from enum XlThemeColor
	xlThemeColorDark1             =1          # from enum XlThemeColor
	xlThemeColorDark2             =3          # from enum XlThemeColor
	xlThemeColorFollowedHyperlink =12         # from enum XlThemeColor
	xlThemeColorHyperlink         =11         # from enum XlThemeColor
	xlThemeColorLight1            =2          # from enum XlThemeColor
	xlThemeColorLight2            =4          # from enum XlThemeColor
	xlThemeFontMajor              =1          # from enum XlThemeFont
	xlThemeFontMinor              =2          # from enum XlThemeFont
	xlThemeFontNone               =0          # from enum XlThemeFont
	xlThreadModeAutomatic         =0          # from enum XlThreadMode
	xlThreadModeManual            =1          # from enum XlThreadMode
	xlTickLabelOrientationAutomatic=-4105      # from enum XlTickLabelOrientation
	xlTickLabelOrientationDownward=-4170      # from enum XlTickLabelOrientation
	xlTickLabelOrientationHorizontal=-4128      # from enum XlTickLabelOrientation
	xlTickLabelOrientationUpward  =-4171      # from enum XlTickLabelOrientation
	xlTickLabelOrientationVertical=-4166      # from enum XlTickLabelOrientation
	xlTickLabelPositionHigh       =-4127      # from enum XlTickLabelPosition
	xlTickLabelPositionLow        =-4134      # from enum XlTickLabelPosition
	xlTickLabelPositionNextToAxis =4          # from enum XlTickLabelPosition
	xlTickLabelPositionNone       =-4142      # from enum XlTickLabelPosition
	xlTickMarkCross               =4          # from enum XlTickMark
	xlTickMarkInside              =2          # from enum XlTickMark
	xlTickMarkNone                =-4142      # from enum XlTickMark
	xlTickMarkOutside             =3          # from enum XlTickMark
	xlLast7Days                   =2          # from enum XlTimePeriods
	xlLastMonth                   =5          # from enum XlTimePeriods
	xlLastWeek                    =4          # from enum XlTimePeriods
	xlNextMonth                   =8          # from enum XlTimePeriods
	xlNextWeek                    =7          # from enum XlTimePeriods
	xlThisMonth                   =9          # from enum XlTimePeriods
	xlThisWeek                    =3          # from enum XlTimePeriods
	xlToday                       =0          # from enum XlTimePeriods
	xlTomorrow                    =6          # from enum XlTimePeriods
	xlYesterday                   =1          # from enum XlTimePeriods
	xlDays                        =0          # from enum XlTimeUnit
	xlMonths                      =1          # from enum XlTimeUnit
	xlYears                       =2          # from enum XlTimeUnit
	xlTimelineLevelDays           =3          # from enum XlTimelineLevel
	xlTimelineLevelMonths         =2          # from enum XlTimelineLevel
	xlTimelineLevelQuarters       =1          # from enum XlTimelineLevel
	xlTimelineLevelYears          =0          # from enum XlTimelineLevel
	xlNoButtonChanges             =1          # from enum XlToolbarProtection
	xlNoChanges                   =4          # from enum XlToolbarProtection
	xlNoDockingChanges            =3          # from enum XlToolbarProtection
	xlNoShapeChanges              =2          # from enum XlToolbarProtection
	xlToolbarProtectionNone       =-4143      # from enum XlToolbarProtection
	xlTop10Bottom                 =0          # from enum XlTopBottom
	xlTop10Top                    =1          # from enum XlTopBottom
	xlTotalsCalculationAverage    =2          # from enum XlTotalsCalculation
	xlTotalsCalculationCount      =3          # from enum XlTotalsCalculation
	xlTotalsCalculationCountNums  =4          # from enum XlTotalsCalculation
	xlTotalsCalculationCustom     =9          # from enum XlTotalsCalculation
	xlTotalsCalculationMax        =6          # from enum XlTotalsCalculation
	xlTotalsCalculationMin        =5          # from enum XlTotalsCalculation
	xlTotalsCalculationNone       =0          # from enum XlTotalsCalculation
	xlTotalsCalculationStdDev     =7          # from enum XlTotalsCalculation
	xlTotalsCalculationSum        =1          # from enum XlTotalsCalculation
	xlTotalsCalculationVar        =8          # from enum XlTotalsCalculation
	xlExponential                 =5          # from enum XlTrendlineType
	xlLinear                      =-4132      # from enum XlTrendlineType
	xlLogarithmic                 =-4133      # from enum XlTrendlineType
	xlMovingAvg                   =6          # from enum XlTrendlineType
	xlPolynomial                  =3          # from enum XlTrendlineType
	xlPower                       =4          # from enum XlTrendlineType
	xlUnderlineStyleDouble        =-4119      # from enum XlUnderlineStyle
	xlUnderlineStyleDoubleAccounting=5          # from enum XlUnderlineStyle
	xlUnderlineStyleNone          =-4142      # from enum XlUnderlineStyle
	xlUnderlineStyleSingle        =2          # from enum XlUnderlineStyle
	xlUnderlineStyleSingleAccounting=4          # from enum XlUnderlineStyle
	xlUpdateLinksAlways           =3          # from enum XlUpdateLinks
	xlUpdateLinksNever            =2          # from enum XlUpdateLinks
	xlUpdateLinksUserSetting      =1          # from enum XlUpdateLinks
	xlVAlignBottom                =-4107      # from enum XlVAlign
	xlVAlignCenter                =-4108      # from enum XlVAlign
	xlVAlignDistributed           =-4117      # from enum XlVAlign
	xlVAlignJustify               =-4130      # from enum XlVAlign
	xlVAlignTop                   =-4160      # from enum XlVAlign
	xlValueAscending              =1          # from enum XlValueSortOrder
	xlValueDescending             =2          # from enum XlValueSortOrder
	xlValueNone                   =0          # from enum XlValueSortOrder
	xlWBATChart                   =-4109      # from enum XlWBATemplate
	xlWBATExcel4IntlMacroSheet    =4          # from enum XlWBATemplate
	xlWBATExcel4MacroSheet        =3          # from enum XlWBATemplate
	xlWBATWorksheet               =-4167      # from enum XlWBATemplate
	xlWebFormattingAll            =1          # from enum XlWebFormatting
	xlWebFormattingNone           =3          # from enum XlWebFormatting
	xlWebFormattingRTF            =2          # from enum XlWebFormatting
	xlAllTables                   =2          # from enum XlWebSelectionType
	xlEntirePage                  =1          # from enum XlWebSelectionType
	xlSpecifiedTables             =3          # from enum XlWebSelectionType
	xlMaximized                   =-4137      # from enum XlWindowState
	xlMinimized                   =-4140      # from enum XlWindowState
	xlNormal                      =-4143      # from enum XlWindowState
	xlChartAsWindow               =5          # from enum XlWindowType
	xlChartInPlace                =4          # from enum XlWindowType
	xlClipboard                   =3          # from enum XlWindowType
	xlInfo                        =-4129      # from enum XlWindowType
	xlWorkbook                    =1          # from enum XlWindowType
	xlNormalView                  =1          # from enum XlWindowView
	xlPageBreakPreview            =2          # from enum XlWindowView
	xlPageLayoutView              =3          # from enum XlWindowView
	xlCommand                     =2          # from enum XlXLMMacroType
	xlFunction                    =1          # from enum XlXLMMacroType
	xlNotXLM                      =3          # from enum XlXLMMacroType
	xlXmlExportSuccess            =0          # from enum XlXmlExportResult
	xlXmlExportValidationFailed   =1          # from enum XlXmlExportResult
	xlXmlImportElementsTruncated  =1          # from enum XlXmlImportResult
	xlXmlImportSuccess            =0          # from enum XlXmlImportResult
	xlXmlImportValidationFailed   =2          # from enum XlXmlImportResult
	xlXmlLoadImportToList         =2          # from enum XlXmlLoadOption
	xlXmlLoadMapXml               =3          # from enum XlXmlLoadOption
	xlXmlLoadOpenXml              =1          # from enum XlXmlLoadOption
	xlXmlLoadPromptUser           =0          # from enum XlXmlLoadOption
	xlGuess                       =0          # from enum XlYesNoGuess
	xlNo                          =2          # from enum XlYesNoGuess
	xlYes                         =1          # from enum XlYesNoGuess

from win32com.client import DispatchBaseClass
class AboveAverage(DispatchBaseClass):
	CLSID = IID('{0002449E-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def ModifyAppliesToRange(self, Range=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2627, LCID, 1, (24, 0), ((9, 1),),Range
			)

	def SetFirstPriority(self):
		return self._oleobj_.InvokeTypes(2629, LCID, 1, (24, 0), (),)

	def SetLastPriority(self):
		return self._oleobj_.InvokeTypes(2630, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AboveBelow": (2731, 2, (3, 0), (), "AboveBelow", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'AppliesTo' returns object of type 'Range'
		"AppliesTo": (2626, 2, (9, 0), (), "AppliesTo", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'Borders' returns object of type 'Borders'
		"Borders": (435, 2, (9, 0), (), "Borders", '{00020855-0000-0000-C000-000000000046}'),
		"CalcFor": (2730, 2, (3, 0), (), "CalcFor", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"NumStdDev": (2732, 2, (3, 0), (), "NumStdDev", None),
		"NumberFormat": (193, 2, (12, 0), (), "NumberFormat", None),
		"PTCondition": (2631, 2, (11, 0), (), "PTCondition", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Priority": (985, 2, (3, 0), (), "Priority", None),
		"ScopeType": (2615, 2, (3, 0), (), "ScopeType", None),
		"StopIfTrue": (2625, 2, (11, 0), (), "StopIfTrue", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"AboveBelow": ((2731, LCID, 4, 0),()),
		"CalcFor": ((2730, LCID, 4, 0),()),
		"NumStdDev": ((2732, LCID, 4, 0),()),
		"NumberFormat": ((193, LCID, 4, 0),()),
		"Priority": ((985, LCID, 4, 0),()),
		"ScopeType": ((2615, LCID, 4, 0),()),
		"StopIfTrue": ((2625, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Action(DispatchBaseClass):
	CLSID = IID('{0002448F-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Execute(self):
		return self._oleobj_.InvokeTypes(2211, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		"Content": (2713, 2, (8, 0), (), "Content", None),
		"Coordinate": (2712, 2, (8, 0), (), "Coordinate", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Actions(DispatchBaseClass):
	CLSID = IID('{00024490-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Action
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0002448F-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Action
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{0002448F-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0002448F-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0002448F-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{0002448F-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class AddIn(DispatchBaseClass):
	CLSID = IID('{00020857-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Author": (574, 2, (8, 0), (), "Author", None),
		"CLSID": (2043, 2, (8, 0), (), "CLSID", None),
		"Comments": (575, 2, (8, 0), (), "Comments", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"FullName": (289, 2, (8, 0), (), "FullName", None),
		"Installed": (550, 2, (11, 0), (), "Installed", None),
		"IsOpen": (2865, 2, (11, 0), (), "IsOpen", None),
		"Keywords": (577, 2, (8, 0), (), "Keywords", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Path": (291, 2, (8, 0), (), "Path", None),
		"Subject": (953, 2, (8, 0), (), "Subject", None),
		"Title": (199, 2, (8, 0), (), "Title", None),
		"progID": (1523, 2, (8, 0), (), "progID", None),
	}
	_prop_map_put_ = {
		"Installed": ((550, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class AddIns(DispatchBaseClass):
	CLSID = IID('{00020858-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type AddIn
	def Add(self, Filename=defaultNamedNotOptArg, CopyFile=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1), (12, 17)),Filename
			, CopyFile)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00020857-0000-0000-C000-000000000046}')
		return ret

	# Result is of type AddIn
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00020857-0000-0000-C000-000000000046}')
		return ret

	# Result is of type AddIn
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00020857-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00020857-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00020857-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00020857-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class AddIns2(DispatchBaseClass):
	CLSID = IID('{000244B5-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type AddIn
	def Add(self, Filename=defaultNamedNotOptArg, CopyFile=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1), (12, 17)),Filename
			, CopyFile)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00020857-0000-0000-C000-000000000046}')
		return ret

	# Result is of type AddIn
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00020857-0000-0000-C000-000000000046}')
		return ret

	# Result is of type AddIn
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00020857-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00020857-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00020857-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00020857-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Adjustments(DispatchBaseClass):
	CLSID = IID('{000C0310-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(0, LCID, 2, (4, 0), ((3, 1),),Index
			)

	# The method SetItem is actually a property, but must be used as a method to correctly pass the arguments
	def SetItem(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(0, LCID, 4, (24, 0), ((3, 1), (4, 1)),Index
			, arg1)

	_prop_map_get_ = {
		"Application": (1610743808, 2, (9, 0), (), "Application", None),
		"Count": (2, 2, (3, 0), (), "Count", None),
		"Creator": (1610743809, 2, (3, 0), (), "Creator", None),
		"Parent": (1, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(0, LCID, 2, (4, 0), ((3, 1),),Index
			)

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class AllowEditRange(DispatchBaseClass):
	CLSID = IID('{0002446B-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def ChangePassword(self, Password=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2237, LCID, 1, (24, 0), ((8, 1),),Password
			)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def Unprotect(self, Password=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(285, LCID, 1, (24, 0), ((12, 17),),Password
			)

	_prop_map_get_ = {
		# Method 'Range' returns object of type 'Range'
		"Range": (197, 2, (9, 0), (), "Range", '{00020846-0000-0000-C000-000000000046}'),
		"Title": (199, 2, (8, 0), (), "Title", None),
		# Method 'Users' returns object of type 'UserAccessList'
		"Users": (2238, 2, (9, 0), (), "Users", '{0002446C-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
		"Range": ((197, LCID, 8, 0),()),
		"Title": ((199, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class AllowEditRanges(DispatchBaseClass):
	CLSID = IID('{0002446A-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type AllowEditRange
	def Add(self, Title=defaultNamedNotOptArg, Range=defaultNamedNotOptArg, Password=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1), (9, 1), (12, 17)),Title
			, Range, Password)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0002446B-0000-0000-C000-000000000046}')
		return ret

	# Result is of type AllowEditRange
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0002446B-0000-0000-C000-000000000046}')
		return ret

	# Result is of type AllowEditRange
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{0002446B-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		"Count": (118, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0002446B-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0002446B-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{0002446B-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class AppEvents:
	CLSID = CLSID_Sink = IID('{00024413-0000-0000-C000-000000000046}')
	coclass_clsid = IID('{00024500-0000-0000-C000-000000000046}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		1610612736 : "OnQueryInterface",
		1610612737 : "OnAddRef",
		1610612738 : "OnRelease",
		1610678272 : "OnGetTypeInfoCount",
		1610678273 : "OnGetTypeInfo",
		1610678274 : "OnGetIDsOfNames",
		1610678275 : "OnInvoke",
		     1565 : "OnNewWorkbook",
		     1558 : "OnSheetSelectionChange",
		     1559 : "OnSheetBeforeDoubleClick",
		     1560 : "OnSheetBeforeRightClick",
		     1561 : "OnSheetActivate",
		     1562 : "OnSheetDeactivate",
		     1563 : "OnSheetCalculate",
		     1564 : "OnSheetChange",
		     1567 : "OnWorkbookOpen",
		     1568 : "OnWorkbookActivate",
		     1569 : "OnWorkbookDeactivate",
		     1570 : "OnWorkbookBeforeClose",
		     1571 : "OnWorkbookBeforeSave",
		     1572 : "OnWorkbookBeforePrint",
		     1573 : "OnWorkbookNewSheet",
		     1574 : "OnWorkbookAddinInstall",
		     1575 : "OnWorkbookAddinUninstall",
		     1554 : "OnWindowResize",
		     1556 : "OnWindowActivate",
		     1557 : "OnWindowDeactivate",
		     1854 : "OnSheetFollowHyperlink",
		     2157 : "OnSheetPivotTableUpdate",
		     2160 : "OnWorkbookPivotTableCloseConnection",
		     2161 : "OnWorkbookPivotTableOpenConnection",
		     2289 : "OnWorkbookSync",
		     2290 : "OnWorkbookBeforeXmlImport",
		     2291 : "OnWorkbookAfterXmlImport",
		     2292 : "OnWorkbookBeforeXmlExport",
		     2293 : "OnWorkbookAfterXmlExport",
		     2611 : "OnWorkbookRowsetComplete",
		     2612 : "OnAfterCalculate",
		     2895 : "OnSheetPivotTableAfterValueChange",
		     2896 : "OnSheetPivotTableBeforeAllocateChanges",
		     2897 : "OnSheetPivotTableBeforeCommitChanges",
		     2898 : "OnSheetPivotTableBeforeDiscardChanges",
		     2903 : "OnProtectedViewWindowOpen",
		     2905 : "OnProtectedViewWindowBeforeEdit",
		     2906 : "OnProtectedViewWindowBeforeClose",
		     2908 : "OnProtectedViewWindowResize",
		     2909 : "OnProtectedViewWindowActivate",
		     2910 : "OnProtectedViewWindowDeactivate",
		     2911 : "OnWorkbookAfterSave",
		     2912 : "OnWorkbookNewChart",
		     3075 : "OnSheetLensGalleryRenderComplete",
		     3076 : "OnSheetTableUpdate",
		     3080 : "OnWorkbookModelChange",
		     3079 : "OnSheetBeforeDelete",
		     3350 : "OnWorkbookBeforeRemoteChange",
		     3351 : "OnWorkbookAfterRemoteChange",
		     3344 : "OnRemoteSheetChange",
		     3352 : "OnRemoteWorkbookNewSheet",
		     3353 : "OnRemoteWorkbookNewChart",
		     3347 : "OnRemoteSheetBeforeDelete",
		     3348 : "OnRemoteSheetPivotTableUpdate",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnQueryInterface(self, riid=defaultNamedNotOptArg, ppvObj=pythoncom.Missing):
#	def OnAddRef(self):
#	def OnRelease(self):
#	def OnGetTypeInfoCount(self, pctinfo=pythoncom.Missing):
#	def OnGetTypeInfo(self, itinfo=defaultNamedNotOptArg, lcid=defaultNamedNotOptArg, pptinfo=pythoncom.Missing):
#	def OnGetIDsOfNames(self, riid=defaultNamedNotOptArg, rgszNames=defaultNamedNotOptArg, cNames=defaultNamedNotOptArg, lcid=defaultNamedNotOptArg
#			, rgdispid=pythoncom.Missing):
#	def OnInvoke(self, dispidMember=defaultNamedNotOptArg, riid=defaultNamedNotOptArg, lcid=defaultNamedNotOptArg, wFlags=defaultNamedNotOptArg
#			, pdispparams=defaultNamedNotOptArg, pvarResult=pythoncom.Missing, pexcepinfo=pythoncom.Missing, puArgErr=pythoncom.Missing):
#	def OnNewWorkbook(self, Wb=defaultNamedNotOptArg):
#	def OnSheetSelectionChange(self, Sh=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
#	def OnSheetBeforeDoubleClick(self, Sh=defaultNamedNotOptArg, Target=defaultNamedNotOptArg, Cancel=defaultNamedNotOptArg):
#	def OnSheetBeforeRightClick(self, Sh=defaultNamedNotOptArg, Target=defaultNamedNotOptArg, Cancel=defaultNamedNotOptArg):
#	def OnSheetActivate(self, Sh=defaultNamedNotOptArg):
#	def OnSheetDeactivate(self, Sh=defaultNamedNotOptArg):
#	def OnSheetCalculate(self, Sh=defaultNamedNotOptArg):
#	def OnSheetChange(self, Sh=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
#	def OnWorkbookOpen(self, Wb=defaultNamedNotOptArg):
#	def OnWorkbookActivate(self, Wb=defaultNamedNotOptArg):
#	def OnWorkbookDeactivate(self, Wb=defaultNamedNotOptArg):
#	def OnWorkbookBeforeClose(self, Wb=defaultNamedNotOptArg, Cancel=defaultNamedNotOptArg):
#	def OnWorkbookBeforeSave(self, Wb=defaultNamedNotOptArg, SaveAsUI=defaultNamedNotOptArg, Cancel=defaultNamedNotOptArg):
#	def OnWorkbookBeforePrint(self, Wb=defaultNamedNotOptArg, Cancel=defaultNamedNotOptArg):
#	def OnWorkbookNewSheet(self, Wb=defaultNamedNotOptArg, Sh=defaultNamedNotOptArg):
#	def OnWorkbookAddinInstall(self, Wb=defaultNamedNotOptArg):
#	def OnWorkbookAddinUninstall(self, Wb=defaultNamedNotOptArg):
#	def OnWindowResize(self, Wb=defaultNamedNotOptArg, Wn=defaultNamedNotOptArg):
#	def OnWindowActivate(self, Wb=defaultNamedNotOptArg, Wn=defaultNamedNotOptArg):
#	def OnWindowDeactivate(self, Wb=defaultNamedNotOptArg, Wn=defaultNamedNotOptArg):
#	def OnSheetFollowHyperlink(self, Sh=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
#	def OnSheetPivotTableUpdate(self, Sh=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
#	def OnWorkbookPivotTableCloseConnection(self, Wb=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
#	def OnWorkbookPivotTableOpenConnection(self, Wb=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
#	def OnWorkbookSync(self, Wb=defaultNamedNotOptArg, SyncEventType=defaultNamedNotOptArg):
#	def OnWorkbookBeforeXmlImport(self, Wb=defaultNamedNotOptArg, Map=defaultNamedNotOptArg, Url=defaultNamedNotOptArg, IsRefresh=defaultNamedNotOptArg
#			, Cancel=defaultNamedNotOptArg):
#	def OnWorkbookAfterXmlImport(self, Wb=defaultNamedNotOptArg, Map=defaultNamedNotOptArg, IsRefresh=defaultNamedNotOptArg, Result=defaultNamedNotOptArg):
#	def OnWorkbookBeforeXmlExport(self, Wb=defaultNamedNotOptArg, Map=defaultNamedNotOptArg, Url=defaultNamedNotOptArg, Cancel=defaultNamedNotOptArg):
#	def OnWorkbookAfterXmlExport(self, Wb=defaultNamedNotOptArg, Map=defaultNamedNotOptArg, Url=defaultNamedNotOptArg, Result=defaultNamedNotOptArg):
#	def OnWorkbookRowsetComplete(self, Wb=defaultNamedNotOptArg, Description=defaultNamedNotOptArg, Sheet=defaultNamedNotOptArg, Success=defaultNamedNotOptArg):
#	def OnAfterCalculate(self):
#	def OnSheetPivotTableAfterValueChange(self, Sh=defaultNamedNotOptArg, TargetPivotTable=defaultNamedNotOptArg, TargetRange=defaultNamedNotOptArg):
#	def OnSheetPivotTableBeforeAllocateChanges(self, Sh=defaultNamedNotOptArg, TargetPivotTable=defaultNamedNotOptArg, ValueChangeStart=defaultNamedNotOptArg, ValueChangeEnd=defaultNamedNotOptArg
#			, Cancel=defaultNamedNotOptArg):
#	def OnSheetPivotTableBeforeCommitChanges(self, Sh=defaultNamedNotOptArg, TargetPivotTable=defaultNamedNotOptArg, ValueChangeStart=defaultNamedNotOptArg, ValueChangeEnd=defaultNamedNotOptArg
#			, Cancel=defaultNamedNotOptArg):
#	def OnSheetPivotTableBeforeDiscardChanges(self, Sh=defaultNamedNotOptArg, TargetPivotTable=defaultNamedNotOptArg, ValueChangeStart=defaultNamedNotOptArg, ValueChangeEnd=defaultNamedNotOptArg):
#	def OnProtectedViewWindowOpen(self, Pvw=defaultNamedNotOptArg):
#	def OnProtectedViewWindowBeforeEdit(self, Pvw=defaultNamedNotOptArg, Cancel=defaultNamedNotOptArg):
#	def OnProtectedViewWindowBeforeClose(self, Pvw=defaultNamedNotOptArg, Reason=defaultNamedNotOptArg, Cancel=defaultNamedNotOptArg):
#	def OnProtectedViewWindowResize(self, Pvw=defaultNamedNotOptArg):
#	def OnProtectedViewWindowActivate(self, Pvw=defaultNamedNotOptArg):
#	def OnProtectedViewWindowDeactivate(self, Pvw=defaultNamedNotOptArg):
#	def OnWorkbookAfterSave(self, Wb=defaultNamedNotOptArg, Success=defaultNamedNotOptArg):
#	def OnWorkbookNewChart(self, Wb=defaultNamedNotOptArg, Ch=defaultNamedNotOptArg):
#	def OnSheetLensGalleryRenderComplete(self, Sh=defaultNamedNotOptArg):
#	def OnSheetTableUpdate(self, Sh=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
#	def OnWorkbookModelChange(self, Wb=defaultNamedNotOptArg, Changes=defaultNamedNotOptArg):
#	def OnSheetBeforeDelete(self, Sh=defaultNamedNotOptArg):
#	def OnWorkbookBeforeRemoteChange(self, Wb=defaultNamedNotOptArg):
#	def OnWorkbookAfterRemoteChange(self, Wb=defaultNamedNotOptArg):
#	def OnRemoteSheetChange(self, Sh=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
#	def OnRemoteWorkbookNewSheet(self, Wb=defaultNamedNotOptArg, Sh=defaultNamedNotOptArg):
#	def OnRemoteWorkbookNewChart(self, Wb=defaultNamedNotOptArg, Ch=defaultNamedNotOptArg):
#	def OnRemoteSheetBeforeDelete(self, Sh=defaultNamedNotOptArg):
#	def OnRemoteSheetPivotTableUpdate(self, Sh=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):


class Arc(DispatchBaseClass):
	CLSID = IID('{000208A0-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (11, 0), (), "AddIndent", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		"AutoSize": (614, 2, (11, 0), (), "AutoSize", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		# Method 'BottomRightCell' returns object of type 'Range'
		"BottomRightCell": (615, 2, (9, 0), (), "BottomRightCell", '{00020846-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		# Method 'TopLeftCell' returns object of type 'Range'
		"TopLeftCell": (620, 2, (9, 0), (), "TopLeftCell", '{00020846-0000-0000-C000-000000000046}'),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Arcs(DispatchBaseClass):
	CLSID = IID('{000208A1-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Arc
	def Add(self, X1=defaultNamedNotOptArg, Y1=defaultNamedNotOptArg, X2=defaultNamedNotOptArg, Y2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),X1
			, Y1, X2, Y2)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{000208A0-0000-0000-C000-000000000046}')
		return ret

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	# Result is of type GroupObject
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00020898-0000-0000-C000-000000000046}')
		return ret

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (11, 0), (), "AddIndent", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		"AutoSize": (614, 2, (11, 0), (), "AutoSize", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Areas(DispatchBaseClass):
	CLSID = IID('{00020860-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Range
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00020846-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Range
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00020846-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00020846-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00020846-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00020846-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Author(DispatchBaseClass):
	CLSID = IID('{000244FE-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"ProviderID": (3286, 2, (8, 0), (), "ProviderID", None),
		"UserID": (3287, 2, (8, 0), (), "UserID", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class AutoCorrect(DispatchBaseClass):
	CLSID = IID('{000208D4-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def AddReplacement(self, What=defaultNamedNotOptArg, Replacement=defaultNamedNotOptArg):
		return self._ApplyTypes_(1146, 1, (12, 0), ((8, 1), (8, 1)), 'AddReplacement', None,What
			, Replacement)

	def DeleteReplacement(self, What=defaultNamedNotOptArg):
		return self._ApplyTypes_(1147, 1, (12, 0), ((8, 1),), 'DeleteReplacement', None,What
			)

	# The method GetReplacementList is actually a property, but must be used as a method to correctly pass the arguments
	def GetReplacementList(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(1151, 2, (12, 0), ((12, 17),), 'GetReplacementList', None,Index
			)

	# The method SetReplacementList is actually a property, but must be used as a method to correctly pass the arguments
	def SetReplacementList(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(1151, LCID, 4, (24, 0), ((12, 17), (12, 1)),Index
			, arg1)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoExpandListRange": (2294, 2, (11, 0), (), "AutoExpandListRange", None),
		"AutoFillFormulasInLists": (2642, 2, (11, 0), (), "AutoFillFormulasInLists", None),
		"CapitalizeNamesOfDays": (1150, 2, (11, 0), (), "CapitalizeNamesOfDays", None),
		"ConvertNumbersWithECharacter": (3314, 2, (11, 0), (), "ConvertNumbersWithECharacter", None),
		"CorrectCapsLock": (1620, 2, (11, 0), (), "CorrectCapsLock", None),
		"CorrectSentenceCap": (1619, 2, (11, 0), (), "CorrectSentenceCap", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DisplayAutoCorrectOptions": (1926, 2, (11, 0), (), "DisplayAutoCorrectOptions", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"ReplaceText": (1148, 2, (11, 0), (), "ReplaceText", None),
		"ReplacementList": (1151, 2, (12, 0), ((12, 17),), "ReplacementList", None),
		"TruncateLargeNumbers": (3313, 2, (11, 0), (), "TruncateLargeNumbers", None),
		"TruncateLeadingZeros": (3312, 2, (11, 0), (), "TruncateLeadingZeros", None),
		"TwoInitialCapitals": (1149, 2, (11, 0), (), "TwoInitialCapitals", None),
	}
	_prop_map_put_ = {
		"AutoExpandListRange": ((2294, LCID, 4, 0),()),
		"AutoFillFormulasInLists": ((2642, LCID, 4, 0),()),
		"CapitalizeNamesOfDays": ((1150, LCID, 4, 0),()),
		"ConvertNumbersWithECharacter": ((3314, LCID, 4, 0),()),
		"CorrectCapsLock": ((1620, LCID, 4, 0),()),
		"CorrectSentenceCap": ((1619, LCID, 4, 0),()),
		"DisplayAutoCorrectOptions": ((1926, LCID, 4, 0),()),
		"ReplaceText": ((1148, LCID, 4, 0),()),
		"ReplacementList": ((1151, LCID, 4, 0),()),
		"TruncateLargeNumbers": ((3313, LCID, 4, 0),()),
		"TruncateLeadingZeros": ((3312, LCID, 4, 0),()),
		"TwoInitialCapitals": ((1149, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class AutoFilter(DispatchBaseClass):
	CLSID = IID('{00024432-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def ApplyFilter(self):
		return self._oleobj_.InvokeTypes(2640, LCID, 1, (24, 0), (),)

	def ShowAllData(self):
		return self._oleobj_.InvokeTypes(794, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"FilterMode": (800, 2, (11, 0), (), "FilterMode", None),
		# Method 'Filters' returns object of type 'Filters'
		"Filters": (1617, 2, (9, 0), (), "Filters", '{00024433-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'Range' returns object of type 'Range'
		"Range": (197, 2, (9, 0), (), "Range", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'Sort' returns object of type 'Sort'
		"Sort": (3288, 2, (9, 0), (), "Sort", '{000244AB-0000-0000-C000-000000000046}'),
		# Method '_Sort' returns object of type 'Sort'
		"_Sort": (880, 2, (9, 0), (), "_Sort", '{000244AB-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class AutoRecover(DispatchBaseClass):
	CLSID = IID('{0002445A-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Path": (291, 2, (8, 0), (), "Path", None),
		"Time": (394, 2, (3, 0), (), "Time", None),
	}
	_prop_map_put_ = {
		"Enabled": ((600, LCID, 4, 0),()),
		"Path": ((291, LCID, 4, 0),()),
		"Time": ((394, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Axes(DispatchBaseClass):
	CLSID = IID('{0002085B-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Axis
	def Item(self, Type=defaultNamedNotOptArg, AxisGroup=1):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((3, 1), (3, 49)),Type
			, AxisGroup)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00020848-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Axis
	def _Default(self, Type=defaultNamedNotOptArg, AxisGroup=1):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((3, 1), (3, 49)),Type
			, AxisGroup)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00020848-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Type=defaultNamedNotOptArg, AxisGroup=1):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((3, 1), (3, 49)),Type
			, AxisGroup)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00020848-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00020848-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{00020848-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Axis(DispatchBaseClass):
	CLSID = IID('{00020848-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def GetProperty(self, ID=defaultNamedNotOptArg):
		return self._ApplyTypes_(3256, 1, (12, 0), ((8, 1),), 'GetProperty', None,ID
			)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	def SetProperty(self, ID=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3253, LCID, 1, (24, 0), ((8, 1), (12, 1)),ID
			, Value)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AxisBetweenCategories": (45, 2, (11, 0), (), "AxisBetweenCategories", None),
		"AxisGroup": (47, 2, (3, 0), (), "AxisGroup", None),
		# Method 'AxisTitle' returns object of type 'AxisTitle'
		"AxisTitle": (82, 2, (9, 0), (), "AxisTitle", '{0002084A-0000-0000-C000-000000000046}'),
		"BaseUnit": (1647, 2, (3, 0), (), "BaseUnit", None),
		"BaseUnitIsAuto": (1648, 2, (11, 0), (), "BaseUnitIsAuto", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"CategoryNames": (156, 2, (12, 0), (), "CategoryNames", None),
		"CategorySortOrder": (3228, 2, (3, 0), (), "CategorySortOrder", None),
		"CategoryType": (1651, 2, (3, 0), (), "CategoryType", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Crosses": (42, 2, (3, 0), (), "Crosses", None),
		"CrossesAt": (43, 2, (5, 0), (), "CrossesAt", None),
		"DisplayUnit": (1886, 2, (3, 0), (), "DisplayUnit", None),
		"DisplayUnitCustom": (1887, 2, (5, 0), (), "DisplayUnitCustom", None),
		# Method 'DisplayUnitLabel' returns object of type 'DisplayUnitLabel'
		"DisplayUnitLabel": (1889, 2, (9, 0), (), "DisplayUnitLabel", '{0002084C-0000-0000-C000-000000000046}'),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"HasDisplayUnitLabel": (1888, 2, (11, 0), (), "HasDisplayUnitLabel", None),
		"HasMajorGridlines": (24, 2, (11, 0), (), "HasMajorGridlines", None),
		"HasMinorGridlines": (25, 2, (11, 0), (), "HasMinorGridlines", None),
		"HasTitle": (54, 2, (11, 0), (), "HasTitle", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"LogBase": (2646, 2, (5, 0), (), "LogBase", None),
		# Method 'MajorGridlines' returns object of type 'Gridlines'
		"MajorGridlines": (89, 2, (9, 0), (), "MajorGridlines", '{000208C3-0000-0000-C000-000000000046}'),
		"MajorTickMark": (26, 2, (3, 0), (), "MajorTickMark", None),
		"MajorUnit": (37, 2, (5, 0), (), "MajorUnit", None),
		"MajorUnitIsAuto": (38, 2, (11, 0), (), "MajorUnitIsAuto", None),
		"MajorUnitScale": (1649, 2, (3, 0), (), "MajorUnitScale", None),
		"MaximumScale": (35, 2, (5, 0), (), "MaximumScale", None),
		"MaximumScaleIsAuto": (36, 2, (11, 0), (), "MaximumScaleIsAuto", None),
		"MinimumScale": (33, 2, (5, 0), (), "MinimumScale", None),
		"MinimumScaleIsAuto": (34, 2, (11, 0), (), "MinimumScaleIsAuto", None),
		# Method 'MinorGridlines' returns object of type 'Gridlines'
		"MinorGridlines": (90, 2, (9, 0), (), "MinorGridlines", '{000208C3-0000-0000-C000-000000000046}'),
		"MinorTickMark": (27, 2, (3, 0), (), "MinorTickMark", None),
		"MinorUnit": (39, 2, (5, 0), (), "MinorUnit", None),
		"MinorUnitIsAuto": (40, 2, (11, 0), (), "MinorUnitIsAuto", None),
		"MinorUnitScale": (1650, 2, (3, 0), (), "MinorUnitScale", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"ReversePlotOrder": (44, 2, (11, 0), (), "ReversePlotOrder", None),
		"ScaleType": (41, 2, (3, 0), (), "ScaleType", None),
		"TickLabelPosition": (28, 2, (3, 0), (), "TickLabelPosition", None),
		"TickLabelSpacing": (29, 2, (3, 0), (), "TickLabelSpacing", None),
		"TickLabelSpacingIsAuto": (2647, 2, (11, 0), (), "TickLabelSpacingIsAuto", None),
		# Method 'TickLabels' returns object of type 'TickLabels'
		"TickLabels": (91, 2, (9, 0), (), "TickLabels", '{000208C9-0000-0000-C000-000000000046}'),
		"TickMarkSpacing": (31, 2, (3, 0), (), "TickMarkSpacing", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"AxisBetweenCategories": ((45, LCID, 4, 0),()),
		"BaseUnit": ((1647, LCID, 4, 0),()),
		"BaseUnitIsAuto": ((1648, LCID, 4, 0),()),
		"CategoryNames": ((156, LCID, 4, 0),()),
		"CategorySortOrder": ((3228, LCID, 4, 0),()),
		"CategoryType": ((1651, LCID, 4, 0),()),
		"Crosses": ((42, LCID, 4, 0),()),
		"CrossesAt": ((43, LCID, 4, 0),()),
		"DisplayUnit": ((1886, LCID, 4, 0),()),
		"DisplayUnitCustom": ((1887, LCID, 4, 0),()),
		"HasDisplayUnitLabel": ((1888, LCID, 4, 0),()),
		"HasMajorGridlines": ((24, LCID, 4, 0),()),
		"HasMinorGridlines": ((25, LCID, 4, 0),()),
		"HasTitle": ((54, LCID, 4, 0),()),
		"LogBase": ((2646, LCID, 4, 0),()),
		"MajorTickMark": ((26, LCID, 4, 0),()),
		"MajorUnit": ((37, LCID, 4, 0),()),
		"MajorUnitIsAuto": ((38, LCID, 4, 0),()),
		"MajorUnitScale": ((1649, LCID, 4, 0),()),
		"MaximumScale": ((35, LCID, 4, 0),()),
		"MaximumScaleIsAuto": ((36, LCID, 4, 0),()),
		"MinimumScale": ((33, LCID, 4, 0),()),
		"MinimumScaleIsAuto": ((34, LCID, 4, 0),()),
		"MinorTickMark": ((27, LCID, 4, 0),()),
		"MinorUnit": ((39, LCID, 4, 0),()),
		"MinorUnitIsAuto": ((40, LCID, 4, 0),()),
		"MinorUnitScale": ((1650, LCID, 4, 0),()),
		"ReversePlotOrder": ((44, LCID, 4, 0),()),
		"ScaleType": ((41, LCID, 4, 0),()),
		"TickLabelPosition": ((28, LCID, 4, 0),()),
		"TickLabelSpacing": ((29, LCID, 4, 0),()),
		"TickLabelSpacingIsAuto": ((2647, LCID, 4, 0),()),
		"TickMarkSpacing": ((31, LCID, 4, 0),()),
		"Type": ((108, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class AxisTitle(DispatchBaseClass):
	CLSID = IID('{0002084A-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	def GetProperty(self, ID=defaultNamedNotOptArg):
		return self._ApplyTypes_(3256, 1, (12, 0), ((8, 1),), 'GetProperty', None,ID
			)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	def SetProperty(self, ID=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3253, LCID, 1, (24, 0), ((8, 1), (12, 1)),ID
			, Value)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Fill' returns object of type 'ChartFillFormat'
		"Fill": (1663, 2, (9, 0), (), "Fill", '{00024435-0000-0000-C000-000000000046}'),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"FormulaLocal": (263, 2, (8, 0), (), "FormulaLocal", None),
		"FormulaR1C1": (264, 2, (8, 0), (), "FormulaR1C1", None),
		"FormulaR1C1Local": (265, 2, (8, 0), (), "FormulaR1C1Local", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		"IncludeInLayout": (2648, 2, (11, 0), (), "IncludeInLayout", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Position": (133, 2, (3, 0), (), "Position", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"FormulaLocal": ((263, LCID, 4, 0),()),
		"FormulaR1C1": ((264, LCID, 4, 0),()),
		"FormulaR1C1Local": ((265, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"IncludeInLayout": ((2648, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Border(DispatchBaseClass):
	CLSID = IID('{00020854-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Color": (99, 2, (12, 0), (), "Color", None),
		"ColorIndex": (97, 2, (12, 0), (), "ColorIndex", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"LineStyle": (119, 2, (12, 0), (), "LineStyle", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"ThemeColor": (2365, 2, (12, 0), (), "ThemeColor", None),
		"TintAndShade": (2366, 2, (12, 0), (), "TintAndShade", None),
		"Weight": (120, 2, (12, 0), (), "Weight", None),
	}
	_prop_map_put_ = {
		"Color": ((99, LCID, 4, 0),()),
		"ColorIndex": ((97, LCID, 4, 0),()),
		"LineStyle": ((119, LCID, 4, 0),()),
		"ThemeColor": ((2365, LCID, 4, 0),()),
		"TintAndShade": ((2366, LCID, 4, 0),()),
		"Weight": ((120, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Borders(DispatchBaseClass):
	CLSID = IID('{00020855-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Border
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00020854-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Border
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00020854-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Color": (99, 2, (12, 0), (), "Color", None),
		"ColorIndex": (97, 2, (12, 0), (), "ColorIndex", None),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"LineStyle": (119, 2, (12, 0), (), "LineStyle", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"ThemeColor": (2365, 2, (12, 0), (), "ThemeColor", None),
		"TintAndShade": (2366, 2, (12, 0), (), "TintAndShade", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Weight": (120, 2, (12, 0), (), "Weight", None),
	}
	_prop_map_put_ = {
		"Color": ((99, LCID, 4, 0),()),
		"ColorIndex": ((97, LCID, 4, 0),()),
		"LineStyle": ((119, LCID, 4, 0),()),
		"ThemeColor": ((2365, LCID, 4, 0),()),
		"TintAndShade": ((2366, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Weight": ((120, LCID, 4, 0),()),
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00020854-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00020854-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00020854-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Button(DispatchBaseClass):
	CLSID = IID('{0002087D-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		"Accelerator": (846, 2, (12, 0), (), "Accelerator", None),
		"AddIndent": (1063, 2, (11, 0), (), "AddIndent", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		"AutoSize": (614, 2, (11, 0), (), "AutoSize", None),
		# Method 'BottomRightCell' returns object of type 'Range'
		"BottomRightCell": (615, 2, (9, 0), (), "BottomRightCell", '{00020846-0000-0000-C000-000000000046}'),
		"CancelButton": (858, 2, (11, 0), (), "CancelButton", None),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DefaultButton": (857, 2, (11, 0), (), "DefaultButton", None),
		"DismissButton": (859, 2, (11, 0), (), "DismissButton", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"HelpButton": (860, 2, (11, 0), (), "HelpButton", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (12, 0), (), "PhoneticAccelerator", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		# Method 'TopLeftCell' returns object of type 'Range'
		"TopLeftCell": (620, 2, (9, 0), (), "TopLeftCell", '{00020846-0000-0000-C000-000000000046}'),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"CancelButton": ((858, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"DefaultButton": ((857, LCID, 4, 0),()),
		"DismissButton": ((859, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HelpButton": ((860, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Buttons(DispatchBaseClass):
	CLSID = IID('{0002087E-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Button
	def Add(self, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),Left
			, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0002087D-0000-0000-C000-000000000046}')
		return ret

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	# Result is of type GroupObject
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00020898-0000-0000-C000-000000000046}')
		return ret

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		"Accelerator": (846, 2, (12, 0), (), "Accelerator", None),
		"AddIndent": (1063, 2, (11, 0), (), "AddIndent", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		"AutoSize": (614, 2, (11, 0), (), "AutoSize", None),
		"CancelButton": (858, 2, (11, 0), (), "CancelButton", None),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DefaultButton": (857, 2, (11, 0), (), "DefaultButton", None),
		"DismissButton": (859, 2, (11, 0), (), "DismissButton", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"HelpButton": (860, 2, (11, 0), (), "HelpButton", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (12, 0), (), "PhoneticAccelerator", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"CancelButton": ((858, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"DefaultButton": ((857, LCID, 4, 0),()),
		"DismissButton": ((859, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HelpButton": ((860, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class CalculatedFields(DispatchBaseClass):
	CLSID = IID('{00024420-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type PivotField
	def Add(self, Name=defaultNamedNotOptArg, Formula=defaultNamedNotOptArg, UseStandardFormula=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 17)),Name
			, Formula, UseStandardFormula)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00020874-0000-0000-C000-000000000046}')
		return ret

	# Result is of type PivotField
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00020874-0000-0000-C000-000000000046}')
		return ret

	# Result is of type PivotField
	def _Add(self, Name=defaultNamedNotOptArg, Formula=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2085, LCID, 1, (9, 0), ((8, 1), (8, 1)),Name
			, Formula)
		if ret is not None:
			ret = Dispatch(ret, '_Add', '{00020874-0000-0000-C000-000000000046}')
		return ret

	# Result is of type PivotField
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Field=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Field
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00020874-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Field=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Field
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00020874-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00020874-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{00020874-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class CalculatedItems(DispatchBaseClass):
	CLSID = IID('{00024421-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type PivotItem
	def Add(self, Name=defaultNamedNotOptArg, Formula=defaultNamedNotOptArg, UseStandardFormula=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 17)),Name
			, Formula, UseStandardFormula)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00020876-0000-0000-C000-000000000046}')
		return ret

	# Result is of type PivotItem
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00020876-0000-0000-C000-000000000046}')
		return ret

	# Result is of type PivotItem
	def _Add(self, Name=defaultNamedNotOptArg, Formula=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2085, LCID, 1, (9, 0), ((8, 1), (8, 1)),Name
			, Formula)
		if ret is not None:
			ret = Dispatch(ret, '_Add', '{00020876-0000-0000-C000-000000000046}')
		return ret

	# Result is of type PivotItem
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Field=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Field
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00020876-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Field=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Field
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00020876-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00020876-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{00020876-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class CalculatedMember(DispatchBaseClass):
	CLSID = IID('{00024455-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DisplayFolder": (2927, 2, (8, 0), (), "DisplayFolder", None),
		"Dynamic": (2926, 2, (11, 0), (), "Dynamic", None),
		"FlattenHierarchies": (2924, 2, (11, 0), (), "FlattenHierarchies", None),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"HierarchizeDistinct": (2925, 2, (11, 0), (), "HierarchizeDistinct", None),
		"IsValid": (2188, 2, (11, 0), (), "IsValid", None),
		"MeasureGroup": (3092, 2, (8, 0), (), "MeasureGroup", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"NumberFormat": (193, 2, (3, 0), (), "NumberFormat", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"ParentHierarchy": (3093, 2, (8, 0), (), "ParentHierarchy", None),
		"ParentMember": (3094, 2, (8, 0), (), "ParentMember", None),
		"SolveOrder": (2187, 2, (3, 0), (), "SolveOrder", None),
		"SourceName": (721, 2, (8, 0), (), "SourceName", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
		"_Default": (0, 2, (8, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"FlattenHierarchies": ((2924, LCID, 4, 0),()),
		"HierarchizeDistinct": ((2925, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class CalculatedMembers(DispatchBaseClass):
	CLSID = IID('{00024454-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type CalculatedMember
	def Add(self, Name=defaultNamedNotOptArg, Formula=defaultNamedNotOptArg, SolveOrder=defaultNamedOptArg, Type=defaultNamedOptArg
			, Dynamic=defaultNamedOptArg, DisplayFolder=defaultNamedOptArg, HierarchizeDistinct=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1), (12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Name
			, Formula, SolveOrder, Type, Dynamic, DisplayFolder
			, HierarchizeDistinct)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00024455-0000-0000-C000-000000000046}')
		return ret

	# Result is of type CalculatedMember
	def AddCalculatedMember(self, Name=defaultNamedNotOptArg, Formula=defaultNamedNotOptArg, SolveOrder=defaultNamedOptArg, Type=defaultNamedOptArg
			, DisplayFolder=defaultNamedOptArg, MeasureGroup=defaultNamedOptArg, ParentHierarchy=defaultNamedOptArg, ParentMember=defaultNamedOptArg, NumberFormat=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3091, LCID, 1, (9, 0), ((8, 1), (12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Name
			, Formula, SolveOrder, Type, DisplayFolder, MeasureGroup
			, ParentHierarchy, ParentMember, NumberFormat)
		if ret is not None:
			ret = Dispatch(ret, 'AddCalculatedMember', '{00024455-0000-0000-C000-000000000046}')
		return ret

	# Result is of type CalculatedMember
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024455-0000-0000-C000-000000000046}')
		return ret

	# Result is of type CalculatedMember
	def _Add(self, Name=defaultNamedNotOptArg, Formula=defaultNamedNotOptArg, SolveOrder=defaultNamedOptArg, Type=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(2085, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 17), (12, 17)),Name
			, Formula, SolveOrder, Type)
		if ret is not None:
			ret = Dispatch(ret, '_Add', '{00024455-0000-0000-C000-000000000046}')
		return ret

	# Result is of type CalculatedMember
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024455-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024455-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024455-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00024455-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class CalloutFormat(DispatchBaseClass):
	CLSID = IID('{000C0311-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def AutomaticLength(self):
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), (),)

	def CustomDrop(self, Drop=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((4, 1),),Drop
			)

	def CustomLength(self, Length=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((4, 1),),Length
			)

	def PresetDrop(self, DropType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((3, 1),),DropType
			)

	_prop_map_get_ = {
		"Accent": (100, 2, (3, 0), (), "Accent", None),
		"Angle": (101, 2, (3, 0), (), "Angle", None),
		"Application": (1610743808, 2, (9, 0), (), "Application", None),
		"AutoAttach": (102, 2, (3, 0), (), "AutoAttach", None),
		"AutoLength": (103, 2, (3, 0), (), "AutoLength", None),
		"Border": (104, 2, (3, 0), (), "Border", None),
		"Creator": (1610743809, 2, (3, 0), (), "Creator", None),
		"Drop": (105, 2, (4, 0), (), "Drop", None),
		"DropType": (106, 2, (3, 0), (), "DropType", None),
		"Gap": (107, 2, (4, 0), (), "Gap", None),
		"Length": (108, 2, (4, 0), (), "Length", None),
		"Parent": (1, 2, (9, 0), (), "Parent", None),
		"Type": (109, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Accent": ((100, LCID, 4, 0),()),
		"Angle": ((101, LCID, 4, 0),()),
		"AutoAttach": ((102, LCID, 4, 0),()),
		"Border": ((104, LCID, 4, 0),()),
		"Gap": ((107, LCID, 4, 0),()),
		"Type": ((109, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class CategoryCollection(DispatchBaseClass):
	CLSID = IID('{000244DE-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ChartCategory
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244DD-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ChartCategory
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244DD-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244DD-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244DD-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{000244DD-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class CellControl(DispatchBaseClass):
	CLSID = IID('{00024503-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def SetCheckbox(self):
		return self._oleobj_.InvokeTypes(3412, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Type": (108, 2, (12, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class CellFormat(DispatchBaseClass):
	CLSID = IID('{00024450-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Clear(self):
		return self._oleobj_.InvokeTypes(111, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (12, 0), (), "AddIndent", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Borders' returns object of type 'Borders'
		"Borders": (435, 2, (9, 0), (), "Borders", '{00020855-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"FormulaHidden": (262, 2, (12, 0), (), "FormulaHidden", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		"IndentLevel": (201, 2, (12, 0), (), "IndentLevel", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Locked": (269, 2, (12, 0), (), "Locked", None),
		"MergeCells": (208, 2, (12, 0), (), "MergeCells", None),
		"NumberFormat": (193, 2, (12, 0), (), "NumberFormat", None),
		"NumberFormatLocal": (1097, 2, (12, 0), (), "NumberFormatLocal", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"ShrinkToFit": (209, 2, (12, 0), (), "ShrinkToFit", None),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"WrapText": (276, 2, (12, 0), (), "WrapText", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"Borders": ((435, LCID, 8, 0),()),
		"Font": ((146, LCID, 8, 0),()),
		"FormulaHidden": ((262, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"IndentLevel": ((201, LCID, 4, 0),()),
		"Interior": ((129, LCID, 8, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"MergeCells": ((208, LCID, 4, 0),()),
		"NumberFormat": ((193, LCID, 4, 0),()),
		"NumberFormatLocal": ((1097, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"ShrinkToFit": ((209, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"WrapText": ((276, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Characters(DispatchBaseClass):
	CLSID = IID('{00020878-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Insert(self, String=defaultNamedNotOptArg):
		return self._ApplyTypes_(252, 1, (12, 0), ((8, 1),), 'Insert', None,String
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PhoneticCharacters": (1522, 2, (8, 0), (), "PhoneticCharacters", None),
		"Text": (138, 2, (8, 0), (), "Text", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"PhoneticCharacters": ((1522, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ChartArea(DispatchBaseClass):
	CLSID = IID('{000208CC-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Clear(self):
		return self._ApplyTypes_(111, 1, (12, 0), (), 'Clear', None,)

	def ClearContents(self):
		return self._ApplyTypes_(3413, 1, (12, 0), (), 'ClearContents', None,)

	def ClearFormats(self):
		return self._ApplyTypes_(112, 1, (12, 0), (), 'ClearFormats', None,)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	def _ClearContents(self):
		return self._ApplyTypes_(113, 1, (12, 0), (), '_ClearContents', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Fill' returns object of type 'ChartFillFormat'
		"Fill": (1663, 2, (9, 0), (), "Fill", '{00024435-0000-0000-C000-000000000046}'),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"Height": (123, 2, (5, 0), (), "Height", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"RoundedCorners": (619, 2, (11, 0), (), "RoundedCorners", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"RoundedCorners": ((619, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ChartCategory(DispatchBaseClass):
	CLSID = IID('{000244DD-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"IsFiltered": (3083, 2, (11, 0), (), "IsFiltered", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"IsFiltered": ((3083, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ChartColorFormat(DispatchBaseClass):
	CLSID = IID('{00024436-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"RGB": (1055, 2, (3, 0), (), "RGB", None),
		"SchemeColor": (1646, 2, (3, 0), (), "SchemeColor", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
		"_Default": (0, 2, (3, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"SchemeColor": ((1646, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), (), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ChartEvents:
	CLSID = CLSID_Sink = IID('{0002440F-0000-0000-C000-000000000046}')
	coclass_clsid = IID('{00020821-0000-0000-C000-000000000046}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		1610612736 : "OnQueryInterface",
		1610612737 : "OnAddRef",
		1610612738 : "OnRelease",
		1610678272 : "OnGetTypeInfoCount",
		1610678273 : "OnGetTypeInfo",
		1610678274 : "OnGetIDsOfNames",
		1610678275 : "OnInvoke",
		      304 : "OnActivate",
		     1530 : "OnDeactivate",
		      256 : "OnResize",
		     1531 : "OnMouseDown",
		     1532 : "OnMouseUp",
		     1533 : "OnMouseMove",
		     1534 : "OnBeforeRightClick",
		     1535 : "OnDragPlot",
		     1536 : "OnDragOver",
		     1537 : "OnBeforeDoubleClick",
		      235 : "OnSelect",
		     1538 : "OnSeriesChange",
		      279 : "OnCalculate",
		     3336 : "OnRemoteResize",
		     3337 : "OnRemoteSeriesChange",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnQueryInterface(self, riid=defaultNamedNotOptArg, ppvObj=pythoncom.Missing):
#	def OnAddRef(self):
#	def OnRelease(self):
#	def OnGetTypeInfoCount(self, pctinfo=pythoncom.Missing):
#	def OnGetTypeInfo(self, itinfo=defaultNamedNotOptArg, lcid=defaultNamedNotOptArg, pptinfo=pythoncom.Missing):
#	def OnGetIDsOfNames(self, riid=defaultNamedNotOptArg, rgszNames=defaultNamedNotOptArg, cNames=defaultNamedNotOptArg, lcid=defaultNamedNotOptArg
#			, rgdispid=pythoncom.Missing):
#	def OnInvoke(self, dispidMember=defaultNamedNotOptArg, riid=defaultNamedNotOptArg, lcid=defaultNamedNotOptArg, wFlags=defaultNamedNotOptArg
#			, pdispparams=defaultNamedNotOptArg, pvarResult=pythoncom.Missing, pexcepinfo=pythoncom.Missing, puArgErr=pythoncom.Missing):
#	def OnActivate(self):
#	def OnDeactivate(self):
#	def OnResize(self):
#	def OnMouseDown(self, Button=defaultNamedNotOptArg, Shift=defaultNamedNotOptArg, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg):
#	def OnMouseUp(self, Button=defaultNamedNotOptArg, Shift=defaultNamedNotOptArg, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg):
#	def OnMouseMove(self, Button=defaultNamedNotOptArg, Shift=defaultNamedNotOptArg, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg):
#	def OnBeforeRightClick(self, Cancel=defaultNamedNotOptArg):
#	def OnDragPlot(self):
#	def OnDragOver(self):
#	def OnBeforeDoubleClick(self, ElementID=defaultNamedNotOptArg, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Cancel=defaultNamedNotOptArg):
#	def OnSelect(self, ElementID=defaultNamedNotOptArg, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
#	def OnSeriesChange(self, SeriesIndex=defaultNamedNotOptArg, PointIndex=defaultNamedNotOptArg):
#	def OnCalculate(self):
#	def OnRemoteResize(self):
#	def OnRemoteSeriesChange(self, SeriesIndex=defaultNamedNotOptArg, PointIndex=defaultNamedNotOptArg):


class ChartFillFormat(DispatchBaseClass):
	CLSID = IID('{00024435-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def OneColorGradient(self, Style=defaultNamedNotOptArg, Variant=defaultNamedNotOptArg, Degree=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1621, LCID, 1, (24, 0), ((3, 1), (3, 1), (4, 1)),Style
			, Variant, Degree)

	def Patterned(self, Pattern=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1628, LCID, 1, (24, 0), ((3, 1),),Pattern
			)

	def PresetGradient(self, Style=defaultNamedNotOptArg, Variant=defaultNamedNotOptArg, PresetGradientType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1636, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),Style
			, Variant, PresetGradientType)

	def PresetTextured(self, PresetTexture=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1625, LCID, 1, (24, 0), ((3, 1),),PresetTexture
			)

	def Solid(self):
		return self._oleobj_.InvokeTypes(1627, LCID, 1, (24, 0), (),)

	def TwoColorGradient(self, Style=defaultNamedNotOptArg, Variant=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1624, LCID, 1, (24, 0), ((3, 1), (3, 1)),Style
			, Variant)

	def UserPicture(self, PictureFile=defaultNamedOptArg, PictureFormat=defaultNamedOptArg, PictureStackUnit=defaultNamedOptArg, PicturePlacement=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1629, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17)),PictureFile
			, PictureFormat, PictureStackUnit, PicturePlacement)

	def UserTextured(self, TextureFile=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1634, LCID, 1, (24, 0), ((8, 1),),TextureFile
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'BackColor' returns object of type 'ChartColorFormat'
		"BackColor": (1638, 2, (9, 0), (), "BackColor", '{00024436-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'ForeColor' returns object of type 'ChartColorFormat'
		"ForeColor": (1639, 2, (9, 0), (), "ForeColor", '{00024436-0000-0000-C000-000000000046}'),
		"GradientColorType": (1640, 2, (3, 0), (), "GradientColorType", None),
		"GradientDegree": (1641, 2, (4, 0), (), "GradientDegree", None),
		"GradientStyle": (1642, 2, (3, 0), (), "GradientStyle", None),
		"GradientVariant": (1643, 2, (3, 0), (), "GradientVariant", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Pattern": (95, 2, (3, 0), (), "Pattern", None),
		"PresetGradientType": (1637, 2, (3, 0), (), "PresetGradientType", None),
		"PresetTexture": (1626, 2, (3, 0), (), "PresetTexture", None),
		"TextureName": (1644, 2, (8, 0), (), "TextureName", None),
		"TextureType": (1645, 2, (3, 0), (), "TextureType", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
		"Visible": (558, 2, (3, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Visible": ((558, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ChartFormat(DispatchBaseClass):
	CLSID = IID('{000244B2-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Adjustments' returns object of type 'Adjustments'
		"Adjustments": (1691, 2, (9, 0), (), "Adjustments", '{000C0310-0000-0000-C000-000000000046}'),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoShapeType": (1693, 2, (3, 0), (), "AutoShapeType", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Fill' returns object of type 'FillFormat'
		"Fill": (1663, 2, (9, 0), (), "Fill", '{000C0314-0000-0000-C000-000000000046}'),
		# Method 'Glow' returns object of type 'GlowFormat'
		"Glow": (2663, 2, (9, 0), (), "Glow", '{000C03BD-0000-0000-C000-000000000046}'),
		# Method 'Line' returns object of type 'LineFormat'
		"Line": (817, 2, (9, 0), (), "Line", '{000C0317-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'PictureFormat' returns object of type 'PictureFormat'
		"PictureFormat": (1631, 2, (9, 0), (), "PictureFormat", '{000C031A-0000-0000-C000-000000000046}'),
		# Method 'Shadow' returns object of type 'ShadowFormat'
		"Shadow": (103, 2, (9, 0), (), "Shadow", '{000C031B-0000-0000-C000-000000000046}'),
		# Method 'SoftEdge' returns object of type 'SoftEdgeFormat'
		"SoftEdge": (2662, 2, (9, 0), (), "SoftEdge", '{000C03BC-0000-0000-C000-000000000046}'),
		# Method 'TextFrame2' returns object of type 'TextFrame2'
		"TextFrame2": (2659, 2, (9, 0), (), "TextFrame2", '{000C0398-0000-0000-C000-000000000046}'),
		# Method 'ThreeD' returns object of type 'ThreeDFormat'
		"ThreeD": (1703, 2, (9, 0), (), "ThreeD", '{000C0321-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
		"AutoShapeType": ((1693, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ChartGroup(DispatchBaseClass):
	CLSID = IID('{00020859-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def CategoryCollection(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3082, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'CategoryCollection', None)
		return ret

	def FullCategoryCollection(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3081, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'FullCategoryCollection', None)
		return ret

	def SeriesCollection(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(68, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'SeriesCollection', None)
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AxisGroup": (47, 2, (3, 0), (), "AxisGroup", None),
		"BinWidthValue": (3197, 2, (5, 0), (), "BinWidthValue", None),
		"BinsCountValue": (3198, 2, (3, 0), (), "BinsCountValue", None),
		"BinsOverflowEnabled": (3199, 2, (11, 0), (), "BinsOverflowEnabled", None),
		"BinsOverflowValue": (3200, 2, (5, 0), (), "BinsOverflowValue", None),
		"BinsType": (3196, 2, (3, 0), (), "BinsType", None),
		"BinsUnderflowEnabled": (3201, 2, (11, 0), (), "BinsUnderflowEnabled", None),
		"BinsUnderflowValue": (3202, 2, (5, 0), (), "BinsUnderflowValue", None),
		"BubbleScale": (1653, 2, (3, 0), (), "BubbleScale", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DoughnutHoleSize": (1126, 2, (3, 0), (), "DoughnutHoleSize", None),
		# Method 'DownBars' returns object of type 'DownBars'
		"DownBars": (141, 2, (9, 0), (), "DownBars", '{000208C6-0000-0000-C000-000000000046}'),
		# Method 'DropLines' returns object of type 'DropLines'
		"DropLines": (142, 2, (9, 0), (), "DropLines", '{000208C4-0000-0000-C000-000000000046}'),
		"FirstSliceAngle": (63, 2, (3, 0), (), "FirstSliceAngle", None),
		"GapWidth": (51, 2, (3, 0), (), "GapWidth", None),
		"Has3DShading": (1658, 2, (11, 0), (), "Has3DShading", None),
		"HasDropLines": (61, 2, (11, 0), (), "HasDropLines", None),
		"HasHiLoLines": (62, 2, (11, 0), (), "HasHiLoLines", None),
		"HasRadarAxisLabels": (64, 2, (11, 0), (), "HasRadarAxisLabels", None),
		"HasSeriesLines": (65, 2, (11, 0), (), "HasSeriesLines", None),
		"HasUpDownBars": (66, 2, (11, 0), (), "HasUpDownBars", None),
		# Method 'HiLoLines' returns object of type 'HiLoLines'
		"HiLoLines": (143, 2, (9, 0), (), "HiLoLines", '{000208C2-0000-0000-C000-000000000046}'),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"Overlap": (56, 2, (3, 0), (), "Overlap", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'RadarAxisLabels' returns object of type 'TickLabels'
		"RadarAxisLabels": (144, 2, (9, 0), (), "RadarAxisLabels", '{000208C9-0000-0000-C000-000000000046}'),
		"SecondPlotSize": (1657, 2, (3, 0), (), "SecondPlotSize", None),
		# Method 'SeriesLines' returns object of type 'SeriesLines'
		"SeriesLines": (145, 2, (9, 0), (), "SeriesLines", '{000208C1-0000-0000-C000-000000000046}'),
		"ShowNegativeBubbles": (1654, 2, (11, 0), (), "ShowNegativeBubbles", None),
		"SizeRepresents": (1652, 2, (3, 0), (), "SizeRepresents", None),
		"SplitType": (1655, 2, (3, 0), (), "SplitType", None),
		"SplitValue": (1656, 2, (12, 0), (), "SplitValue", None),
		"SubType": (109, 2, (3, 0), (), "SubType", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
		# Method 'UpBars' returns object of type 'UpBars'
		"UpBars": (140, 2, (9, 0), (), "UpBars", '{000208C5-0000-0000-C000-000000000046}'),
		"VaryByCategories": (60, 2, (11, 0), (), "VaryByCategories", None),
	}
	_prop_map_put_ = {
		"AxisGroup": ((47, LCID, 4, 0),()),
		"BinWidthValue": ((3197, LCID, 4, 0),()),
		"BinsCountValue": ((3198, LCID, 4, 0),()),
		"BinsOverflowEnabled": ((3199, LCID, 4, 0),()),
		"BinsOverflowValue": ((3200, LCID, 4, 0),()),
		"BinsType": ((3196, LCID, 4, 0),()),
		"BinsUnderflowEnabled": ((3201, LCID, 4, 0),()),
		"BinsUnderflowValue": ((3202, LCID, 4, 0),()),
		"BubbleScale": ((1653, LCID, 4, 0),()),
		"DoughnutHoleSize": ((1126, LCID, 4, 0),()),
		"FirstSliceAngle": ((63, LCID, 4, 0),()),
		"GapWidth": ((51, LCID, 4, 0),()),
		"Has3DShading": ((1658, LCID, 4, 0),()),
		"HasDropLines": ((61, LCID, 4, 0),()),
		"HasHiLoLines": ((62, LCID, 4, 0),()),
		"HasRadarAxisLabels": ((64, LCID, 4, 0),()),
		"HasSeriesLines": ((65, LCID, 4, 0),()),
		"HasUpDownBars": ((66, LCID, 4, 0),()),
		"Overlap": ((56, LCID, 4, 0),()),
		"SecondPlotSize": ((1657, LCID, 4, 0),()),
		"ShowNegativeBubbles": ((1654, LCID, 4, 0),()),
		"SizeRepresents": ((1652, LCID, 4, 0),()),
		"SplitType": ((1655, LCID, 4, 0),()),
		"SplitValue": ((1656, LCID, 4, 0),()),
		"SubType": ((109, LCID, 4, 0),()),
		"Type": ((108, LCID, 4, 0),()),
		"VaryByCategories": ((60, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ChartGroups(DispatchBaseClass):
	CLSID = IID('{0002085A-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ChartGroup
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00020859-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00020859-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{00020859-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ChartObject(DispatchBaseClass):
	CLSID = IID('{000208CF-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Activate(self):
		return self._ApplyTypes_(304, 1, (12, 0), (), 'Activate', None,)

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	def _Copy(self):
		return self._ApplyTypes_(2609, 1, (12, 0), (), '_Copy', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		# Method 'BottomRightCell' returns object of type 'Range'
		"BottomRightCell": (615, 2, (9, 0), (), "BottomRightCell", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'Chart' returns object of type 'Chart'
		"Chart": (7, 2, (13, 0), (), "Chart", '{00020821-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"ProtectChartObject": (1529, 2, (11, 0), (), "ProtectChartObject", None),
		"RoundedCorners": (619, 2, (11, 0), (), "RoundedCorners", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Top": (126, 2, (5, 0), (), "Top", None),
		# Method 'TopLeftCell' returns object of type 'Range'
		"TopLeftCell": (620, 2, (9, 0), (), "TopLeftCell", '{00020846-0000-0000-C000-000000000046}'),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ProtectChartObject": ((1529, LCID, 4, 0),()),
		"RoundedCorners": ((619, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ChartObjects(DispatchBaseClass):
	CLSID = IID('{000208D0-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ChartObject
	def Add(self, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),Left
			, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{000208CF-0000-0000-C000-000000000046}')
		return ret

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type GroupObject
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00020898-0000-0000-C000-000000000046}')
		return ret

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	def _Copy(self):
		return self._ApplyTypes_(2609, 1, (12, 0), (), '_Copy', None,)

	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', None)
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"ProtectChartObject": (1529, 2, (11, 0), (), "ProtectChartObject", None),
		"RoundedCorners": (619, 2, (11, 0), (), "RoundedCorners", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ProtectChartObject": ((1529, LCID, 4, 0),()),
		"RoundedCorners": ((619, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', None)
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ChartSeriesGradientStopData(DispatchBaseClass):
	CLSID = IID('{000244FA-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'StopColor' returns object of type 'SeriesGradientStopColorFormat'
		"StopColor": (3267, 2, (9, 0), (), "StopColor", '{000244F9-0000-0000-C000-000000000046}'),
		"StopPositionType": (3268, 2, (3, 0), (), "StopPositionType", None),
		"StopValue": (3269, 2, (8, 0), (), "StopValue", None),
	}
	_prop_map_put_ = {
		"StopPositionType": ((3268, LCID, 4, 0),()),
		"StopValue": ((3269, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ChartTitle(DispatchBaseClass):
	CLSID = IID('{00020849-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	def GetProperty(self, ID=defaultNamedNotOptArg):
		return self._ApplyTypes_(3256, 1, (12, 0), ((8, 1),), 'GetProperty', None,ID
			)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	def SetProperty(self, ID=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3253, LCID, 1, (24, 0), ((8, 1), (12, 1)),ID
			, Value)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Fill' returns object of type 'ChartFillFormat'
		"Fill": (1663, 2, (9, 0), (), "Fill", '{00024435-0000-0000-C000-000000000046}'),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"FormulaLocal": (263, 2, (8, 0), (), "FormulaLocal", None),
		"FormulaR1C1": (264, 2, (8, 0), (), "FormulaR1C1", None),
		"FormulaR1C1Local": (265, 2, (8, 0), (), "FormulaR1C1Local", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		"IncludeInLayout": (2648, 2, (11, 0), (), "IncludeInLayout", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Position": (133, 2, (3, 0), (), "Position", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"FormulaLocal": ((263, LCID, 4, 0),()),
		"FormulaR1C1": ((264, LCID, 4, 0),()),
		"FormulaR1C1Local": ((265, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"IncludeInLayout": ((2648, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ChartView(DispatchBaseClass):
	CLSID = IID('{00024488-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Sheet": (751, 2, (9, 0), (), "Sheet", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Charts(DispatchBaseClass):
	CLSID = IID('{0002086D-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Chart
	def Add(self, Before=defaultNamedOptArg, After=defaultNamedOptArg, Count=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (13, 0), ((12, 17), (12, 17), (12, 17)),Before
			, After, Count)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, 'Add', '{00020821-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Chart
	def Add2(self, Before=defaultNamedOptArg, After=defaultNamedOptArg, Count=defaultNamedOptArg, NewLayout=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3054, LCID, 1, (13, 0), ((12, 17), (12, 17), (12, 17), (12, 17)),Before
			, After, Count, NewLayout)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, 'Add2', '{00020821-0000-0000-C000-000000000046}')
		return ret

	def Copy(self, Before=defaultNamedOptArg, After=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(551, LCID, 1, (24, 0), ((12, 17), (12, 17)),Before
			, After)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Move(self, Before=defaultNamedOptArg, After=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(637, LCID, 1, (24, 0), ((12, 17), (12, 17)),Before
			, After)

	def PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2361, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName)

	def PrintPreview(self, EnableChanges=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(281, LCID, 1, (24, 0), ((12, 17),),EnableChanges
			)

	def Select(self, Replace=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(235, LCID, 1, (24, 0), ((12, 17),),Replace
			)

	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', None)
		return ret

	def _PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1772, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName)

	def _PrintOut_(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(905, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'HPageBreaks' returns object of type 'HPageBreaks'
		"HPageBreaks": (1418, 2, (9, 0), (), "HPageBreaks", '{00024404-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'VPageBreaks' returns object of type 'VPageBreaks'
		"VPageBreaks": (1419, 2, (9, 0), (), "VPageBreaks", '{00024405-0000-0000-C000-000000000046}'),
		"Visible": (558, 2, (12, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Visible": ((558, LCID, 4, 0),()),
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', None)
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class CheckBox(DispatchBaseClass):
	CLSID = IID('{0002087F-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		"Accelerator": (846, 2, (12, 0), (), "Accelerator", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		# Method 'BottomRightCell' returns object of type 'Range'
		"BottomRightCell": (615, 2, (9, 0), (), "BottomRightCell", '{00020846-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Display3DShading": (1122, 2, (11, 0), (), "Display3DShading", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"LinkedCell": (1058, 2, (8, 0), (), "LinkedCell", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (12, 0), (), "PhoneticAccelerator", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		# Method 'TopLeftCell' returns object of type 'Range'
		"TopLeftCell": (620, 2, (9, 0), (), "TopLeftCell", '{00020846-0000-0000-C000-000000000046}'),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
		"_Default": (0, 2, (3, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class CheckBoxes(DispatchBaseClass):
	CLSID = IID('{00020880-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type CheckBox
	def Add(self, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),Left
			, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0002087F-0000-0000-C000-000000000046}')
		return ret

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	# Result is of type GroupObject
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00020898-0000-0000-C000-000000000046}')
		return ret

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		"Accelerator": (846, 2, (12, 0), (), "Accelerator", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Display3DShading": (1122, 2, (11, 0), (), "Display3DShading", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"LinkedCell": (1058, 2, (8, 0), (), "LinkedCell", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (12, 0), (), "PhoneticAccelerator", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
		"_Default": (0, 2, (3, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ColorFormat(DispatchBaseClass):
	CLSID = IID('{000C0312-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1610743808, 2, (9, 0), (), "Application", None),
		"Brightness": (105, 2, (4, 0), (), "Brightness", None),
		"Creator": (1610743809, 2, (3, 0), (), "Creator", None),
		"ObjectThemeColor": (104, 2, (3, 0), (), "ObjectThemeColor", None),
		"Parent": (1, 2, (9, 0), (), "Parent", None),
		"RGB": (0, 2, (3, 0), (), "RGB", None),
		"SchemeColor": (100, 2, (3, 0), (), "SchemeColor", None),
		"TintAndShade": (102, 2, (4, 0), (), "TintAndShade", None),
		"Type": (101, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Brightness": ((105, LCID, 4, 0),()),
		"ObjectThemeColor": ((104, LCID, 4, 0),()),
		"RGB": ((0, LCID, 4, 0),()),
		"SchemeColor": ((100, LCID, 4, 0),()),
		"TintAndShade": ((102, LCID, 4, 0),()),
	}
	# Default property for this class is 'RGB'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), (), "RGB", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ColorScale(DispatchBaseClass):
	CLSID = IID('{00024493-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def ModifyAppliesToRange(self, Range=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2627, LCID, 1, (24, 0), ((9, 1),),Range
			)

	def SetFirstPriority(self):
		return self._oleobj_.InvokeTypes(2629, LCID, 1, (24, 0), (),)

	def SetLastPriority(self):
		return self._oleobj_.InvokeTypes(2630, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'AppliesTo' returns object of type 'Range'
		"AppliesTo": (2626, 2, (9, 0), (), "AppliesTo", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'ColorScaleCriteria' returns object of type 'ColorScaleCriteria'
		"ColorScaleCriteria": (2716, 2, (9, 0), (), "ColorScaleCriteria", '{00024494-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"PTCondition": (2631, 2, (11, 0), (), "PTCondition", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Priority": (985, 2, (3, 0), (), "Priority", None),
		"ScopeType": (2615, 2, (3, 0), (), "ScopeType", None),
		"StopIfTrue": (2625, 2, (11, 0), (), "StopIfTrue", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Formula": ((261, LCID, 4, 0),()),
		"Priority": ((985, LCID, 4, 0),()),
		"ScopeType": ((2615, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ColorScaleCriteria(DispatchBaseClass):
	CLSID = IID('{00024494-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ColorScaleCriterion
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024495-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ColorScaleCriterion
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024495-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		"Count": (118, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024495-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024495-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00024495-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ColorScaleCriterion(DispatchBaseClass):
	CLSID = IID('{00024495-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'FormatColor' returns object of type 'FormatColor'
		"FormatColor": (2717, 2, (9, 0), (), "FormatColor", '{00024491-0000-0000-C000-000000000046}'),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
	}
	_prop_map_put_ = {
		"Type": ((108, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ColorStop(DispatchBaseClass):
	CLSID = IID('{000244AD-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Color": (99, 2, (12, 0), (), "Color", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Position": (133, 2, (5, 0), (), "Position", None),
		"ThemeColor": (2365, 2, (3, 0), (), "ThemeColor", None),
		"TintAndShade": (2366, 2, (12, 0), (), "TintAndShade", None),
	}
	_prop_map_put_ = {
		"Color": ((99, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"ThemeColor": ((2365, LCID, 4, 0),()),
		"TintAndShade": ((2366, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ColorStops(DispatchBaseClass):
	CLSID = IID('{000244AE-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ColorStop
	def Add(self, Position=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((5, 1),),Position
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{000244AD-0000-0000-C000-000000000046}')
		return ret

	def Clear(self):
		return self._oleobj_.InvokeTypes(111, LCID, 1, (24, 0), (),)

	# Result is of type ColorStop
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244AD-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ColorStop
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244AD-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244AD-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244AD-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{000244AD-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Comment(DispatchBaseClass):
	CLSID = IID('{00024427-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	# Result is of type Comment
	def Next(self):
		ret = self._oleobj_.InvokeTypes(502, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Next', '{00024427-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Comment
	def Previous(self):
		ret = self._oleobj_.InvokeTypes(503, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Previous', '{00024427-0000-0000-C000-000000000046}')
		return ret

	def Text(self, Text=defaultNamedOptArg, Start=defaultNamedOptArg, Overwrite=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(138, LCID, 1, (8, 0), ((12, 17), (12, 17), (12, 17)),Text
			, Start, Overwrite)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Author": (574, 2, (8, 0), (), "Author", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'Shape' returns object of type 'Shape'
		"Shape": (1582, 2, (9, 0), (), "Shape", '{00024439-0000-0000-C000-000000000046}'),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Visible": ((558, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class CommentThreaded(DispatchBaseClass):
	CLSID = IID('{000244FD-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type CommentThreaded
	def AddReply(self, Text=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3283, LCID, 1, (9, 0), ((12, 17),),Text
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddReply', '{000244FD-0000-0000-C000-000000000046}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	# Result is of type CommentThreaded
	def Next(self):
		ret = self._oleobj_.InvokeTypes(502, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Next', '{000244FD-0000-0000-C000-000000000046}')
		return ret

	# Result is of type CommentThreaded
	def Previous(self):
		ret = self._oleobj_.InvokeTypes(503, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Previous', '{000244FD-0000-0000-C000-000000000046}')
		return ret

	def Text(self, Text=defaultNamedOptArg, Start=defaultNamedOptArg, Overwrite=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(138, LCID, 1, (8, 0), ((12, 17), (12, 17), (12, 17)),Text
			, Start, Overwrite)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Author' returns object of type 'Author'
		"Author": (574, 2, (9, 0), (), "Author", '{000244FE-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Date": (465, 2, (12, 0), (), "Date", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'Replies' returns object of type 'CommentsThreaded'
		"Replies": (3285, 2, (9, 0), (), "Replies", '{000244FC-0000-0000-C000-000000000046}'),
		"Resolved": (3304, 2, (11, 0), (), "Resolved", None),
	}
	_prop_map_put_ = {
		"Resolved": ((3304, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Comments(DispatchBaseClass):
	CLSID = IID('{00024426-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Comment
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024427-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Comment
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024427-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024427-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024427-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{00024427-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class CommentsThreaded(DispatchBaseClass):
	CLSID = IID('{000244FC-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type CommentThreaded
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244FD-0000-0000-C000-000000000046}')
		return ret

	# Result is of type CommentThreaded
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244FD-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244FD-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244FD-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{000244FD-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ConditionValue(DispatchBaseClass):
	CLSID = IID('{00024492-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Modify(self, newtype=defaultNamedNotOptArg, newvalue=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1581, LCID, 1, (24, 0), ((3, 1), (12, 17)),newtype
			, newvalue)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Connections(DispatchBaseClass):
	CLSID = IID('{00024486-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type WorkbookConnection
	def Add(self, Name=defaultNamedNotOptArg, Description=defaultNamedNotOptArg, ConnectionString=defaultNamedNotOptArg, CommandText=defaultNamedNotOptArg
			, lCmdtype=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 1), (12, 1), (12, 17)),Name
			, Description, ConnectionString, CommandText, lCmdtype)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00024485-0000-0000-C000-000000000046}')
		return ret

	# Result is of type WorkbookConnection
	def Add2(self, Name=defaultNamedNotOptArg, Description=defaultNamedNotOptArg, ConnectionString=defaultNamedNotOptArg, CommandText=defaultNamedNotOptArg
			, lCmdtype=defaultNamedOptArg, CreateModelConnection=defaultNamedOptArg, ImportRelationships=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3054, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 1), (12, 1), (12, 17), (12, 17), (12, 17)),Name
			, Description, ConnectionString, CommandText, lCmdtype, CreateModelConnection
			, ImportRelationships)
		if ret is not None:
			ret = Dispatch(ret, 'Add2', '{00024485-0000-0000-C000-000000000046}')
		return ret

	# Result is of type WorkbookConnection
	def AddFromFile(self, Filename=defaultNamedNotOptArg, CreateModelConnection=defaultNamedOptArg, ImportRelationships=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3107, LCID, 1, (9, 0), ((8, 1), (12, 17), (12, 17)),Filename
			, CreateModelConnection, ImportRelationships)
		if ret is not None:
			ret = Dispatch(ret, 'AddFromFile', '{00024485-0000-0000-C000-000000000046}')
		return ret

	# Result is of type WorkbookConnection
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024485-0000-0000-C000-000000000046}')
		return ret

	# Result is of type WorkbookConnection
	def _AddFromFile(self, Filename=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2700, LCID, 1, (9, 0), ((8, 1),),Filename
			)
		if ret is not None:
			ret = Dispatch(ret, '_AddFromFile', '{00024485-0000-0000-C000-000000000046}')
		return ret

	# Result is of type WorkbookConnection
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024485-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024485-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024485-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{00024485-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ConnectorFormat(DispatchBaseClass):
	CLSID = IID('{0002443E-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def BeginConnect(self, ConnectedShape=defaultNamedNotOptArg, ConnectionSite=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1750, LCID, 1, (24, 0), ((9, 1), (3, 1)),ConnectedShape
			, ConnectionSite)

	def BeginDisconnect(self):
		return self._oleobj_.InvokeTypes(1753, LCID, 1, (24, 0), (),)

	def EndConnect(self, ConnectedShape=defaultNamedNotOptArg, ConnectionSite=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1754, LCID, 1, (24, 0), ((9, 1), (3, 1)),ConnectedShape
			, ConnectionSite)

	def EndDisconnect(self):
		return self._oleobj_.InvokeTypes(1755, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"BeginConnected": (1756, 2, (3, 0), (), "BeginConnected", None),
		# Method 'BeginConnectedShape' returns object of type 'Shape'
		"BeginConnectedShape": (1757, 2, (9, 0), (), "BeginConnectedShape", '{00024439-0000-0000-C000-000000000046}'),
		"BeginConnectionSite": (1758, 2, (3, 0), (), "BeginConnectionSite", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"EndConnected": (1759, 2, (3, 0), (), "EndConnected", None),
		# Method 'EndConnectedShape' returns object of type 'Shape'
		"EndConnectedShape": (1760, 2, (9, 0), (), "EndConnectedShape", '{00024439-0000-0000-C000-000000000046}'),
		"EndConnectionSite": (1761, 2, (3, 0), (), "EndConnectionSite", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Type": ((108, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ControlFormat(DispatchBaseClass):
	CLSID = IID('{00024440-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def AddItem(self, Text=defaultNamedNotOptArg, Index=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(851, LCID, 1, (24, 0), ((8, 1), (12, 17)),Text
			, Index)

	def List(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(861, 1, (12, 0), ((12, 17),), 'List', None,Index
			)

	def RemoveAllItems(self):
		return self._oleobj_.InvokeTypes(853, LCID, 1, (24, 0), (),)

	def RemoveItem(self, Index=defaultNamedNotOptArg, Count=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(852, LCID, 1, (24, 0), ((3, 1), (12, 17)),Index
			, Count)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DropDownLines": (848, 2, (3, 0), (), "DropDownLines", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"LargeChange": (845, 2, (3, 0), (), "LargeChange", None),
		"LinkedCell": (1058, 2, (8, 0), (), "LinkedCell", None),
		"ListCount": (849, 2, (3, 0), (), "ListCount", None),
		"ListFillRange": (847, 2, (8, 0), (), "ListFillRange", None),
		"ListIndex": (850, 2, (3, 0), (), "ListIndex", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"Max": (842, 2, (3, 0), (), "Max", None),
		"Min": (843, 2, (3, 0), (), "Min", None),
		"MultiSelect": (32, 2, (3, 0), (), "MultiSelect", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"SmallChange": (844, 2, (3, 0), (), "SmallChange", None),
		"Value": (6, 2, (3, 0), (), "Value", None),
		"_Default": (0, 2, (3, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"DropDownLines": ((848, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"LargeChange": ((845, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"ListCount": ((849, LCID, 4, 0),()),
		"ListFillRange": ((847, LCID, 4, 0),()),
		"ListIndex": ((850, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Max": ((842, LCID, 4, 0),()),
		"Min": ((843, LCID, 4, 0),()),
		"MultiSelect": ((32, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"SmallChange": ((844, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Corners(DispatchBaseClass):
	CLSID = IID('{000208C0-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class CubeField(DispatchBaseClass):
	CLSID = IID('{0002444C-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def AddMemberPropertyField(self, Property=defaultNamedNotOptArg, PropertyOrder=defaultNamedOptArg, PropertyDisplayedIn=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2668, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17)),Property
			, PropertyOrder, PropertyDisplayedIn)

	def AutoGroup(self, Orientation=defaultNamedOptArg, Position=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(3165, LCID, 1, (24, 0), ((12, 17), (12, 17)),Orientation
			, Position)

	def ClearManualFilter(self):
		return self._oleobj_.InvokeTypes(2594, LCID, 1, (24, 0), (),)

	def CreatePivotFields(self):
		return self._oleobj_.InvokeTypes(2671, LCID, 1, (24, 0), (),)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def _AddMemberPropertyField(self, Property=defaultNamedNotOptArg, PropertyOrder=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2182, LCID, 1, (24, 0), ((8, 1), (12, 17)),Property
			, PropertyOrder)

	_prop_map_get_ = {
		"AllItemsVisible": (2593, 2, (11, 0), (), "AllItemsVisible", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"CubeFieldSubType": (2670, 2, (3, 0), (), "CubeFieldSubType", None),
		"CubeFieldType": (1918, 2, (3, 0), (), "CubeFieldType", None),
		"CurrentPageName": (1852, 2, (8, 0), (), "CurrentPageName", None),
		"DragToColumn": (1508, 2, (11, 0), (), "DragToColumn", None),
		"DragToData": (1844, 2, (11, 0), (), "DragToData", None),
		"DragToHide": (1509, 2, (11, 0), (), "DragToHide", None),
		"DragToPage": (1510, 2, (11, 0), (), "DragToPage", None),
		"DragToRow": (1511, 2, (11, 0), (), "DragToRow", None),
		"EnableMultiplePageItems": (2184, 2, (11, 0), (), "EnableMultiplePageItems", None),
		"FlattenHierarchies": (2924, 2, (11, 0), (), "FlattenHierarchies", None),
		"HasMemberProperties": (2181, 2, (11, 0), (), "HasMemberProperties", None),
		"HiddenLevels": (1920, 2, (3, 0), (), "HiddenLevels", None),
		"HierarchizeDistinct": (2925, 2, (11, 0), (), "HierarchizeDistinct", None),
		"IncludeNewItemsInFilter": (2587, 2, (11, 0), (), "IncludeNewItemsInFilter", None),
		"IsDate": (2672, 2, (11, 0), (), "IsDate", None),
		"LayoutForm": (1848, 2, (3, 0), (), "LayoutForm", None),
		"LayoutSubtotalLocation": (1846, 2, (3, 0), (), "LayoutSubtotalLocation", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Orientation": (134, 2, (3, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'PivotFields' returns object of type 'PivotFields'
		"PivotFields": (718, 2, (9, 0), (), "PivotFields", '{00020875-0000-0000-C000-000000000046}'),
		"Position": (133, 2, (3, 0), (), "Position", None),
		"ShowInFieldList": (2185, 2, (11, 0), (), "ShowInFieldList", None),
		# Method 'TreeviewControl' returns object of type 'TreeviewControl'
		"TreeviewControl": (1919, 2, (9, 0), (), "TreeviewControl", '{0002444B-0000-0000-C000-000000000046}'),
		"Value": (6, 2, (8, 0), (), "Value", None),
		"_Caption": (2667, 2, (8, 0), (), "_Caption", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"CurrentPageName": ((1852, LCID, 4, 0),()),
		"DragToColumn": ((1508, LCID, 4, 0),()),
		"DragToData": ((1844, LCID, 4, 0),()),
		"DragToHide": ((1509, LCID, 4, 0),()),
		"DragToPage": ((1510, LCID, 4, 0),()),
		"DragToRow": ((1511, LCID, 4, 0),()),
		"EnableMultiplePageItems": ((2184, LCID, 4, 0),()),
		"FlattenHierarchies": ((2924, LCID, 4, 0),()),
		"HiddenLevels": ((1920, LCID, 4, 0),()),
		"HierarchizeDistinct": ((2925, LCID, 4, 0),()),
		"IncludeNewItemsInFilter": ((2587, LCID, 4, 0),()),
		"LayoutForm": ((1848, LCID, 4, 0),()),
		"LayoutSubtotalLocation": ((1846, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"ShowInFieldList": ((2185, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (8, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class CubeFields(DispatchBaseClass):
	CLSID = IID('{0002444D-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type CubeField
	def AddSet(self, Name=defaultNamedNotOptArg, Caption=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2186, LCID, 1, (9, 0), ((8, 1), (8, 1)),Name
			, Caption)
		if ret is not None:
			ret = Dispatch(ret, 'AddSet', '{0002444C-0000-0000-C000-000000000046}')
		return ret

	# Result is of type CubeField
	def GetMeasure(self, AttributeHierarchy=defaultNamedNotOptArg, Function=defaultNamedNotOptArg, Caption=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3089, LCID, 1, (9, 0), ((12, 1), (3, 1), (12, 17)),AttributeHierarchy
			, Function, Caption)
		if ret is not None:
			ret = Dispatch(ret, 'GetMeasure', '{0002444C-0000-0000-C000-000000000046}')
		return ret

	# Result is of type CubeField
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0002444C-0000-0000-C000-000000000046}')
		return ret

	# Result is of type CubeField
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{0002444C-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0002444C-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0002444C-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{0002444C-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class CustomProperties(DispatchBaseClass):
	CLSID = IID('{00024452-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type CustomProperty
	def Add(self, Name=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1), (12, 1)),Name
			, Value)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00024453-0000-0000-C000-000000000046}')
		return ret

	# Result is of type CustomProperty
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024453-0000-0000-C000-000000000046}')
		return ret

	# Result is of type CustomProperty
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024453-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024453-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024453-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00024453-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class CustomProperty(DispatchBaseClass):
	CLSID = IID('{00024453-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"_Default": (0, 2, (12, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Name": ((110, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class CustomView(DispatchBaseClass):
	CLSID = IID('{00024423-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def Show(self):
		return self._oleobj_.InvokeTypes(496, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PrintSettings": (1577, 2, (11, 0), (), "PrintSettings", None),
		"RowColSettings": (1578, 2, (11, 0), (), "RowColSettings", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class CustomViews(DispatchBaseClass):
	CLSID = IID('{00024422-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type CustomView
	def Add(self, ViewName=defaultNamedNotOptArg, PrintSettings=defaultNamedOptArg, RowColSettings=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1), (12, 17), (12, 17)),ViewName
			, PrintSettings, RowColSettings)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00024423-0000-0000-C000-000000000046}')
		return ret

	# Result is of type CustomView
	def Item(self, ViewName=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),ViewName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024423-0000-0000-C000-000000000046}')
		return ret

	# Result is of type CustomView
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, ViewName=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),ViewName
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024423-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, ViewName=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),ViewName
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024423-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024423-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{00024423-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class DataBarBorder(DispatchBaseClass):
	CLSID = IID('{000244BE-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Color": (99, 2, (9, 0), (), "Color", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Type": ((108, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class DataFeedConnection(DispatchBaseClass):
	CLSID = IID('{000244D4-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def CancelRefresh(self):
		return self._oleobj_.InvokeTypes(1589, LCID, 1, (24, 0), (),)

	def Refresh(self):
		return self._oleobj_.InvokeTypes(1417, LCID, 1, (24, 0), (),)

	def SaveAsODC(self, ODCFileName=defaultNamedNotOptArg, Description=defaultNamedOptArg, Keywords=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2082, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17)),ODCFileName
			, Description, Keywords)

	_prop_map_get_ = {
		"AlwaysUseConnectionFile": (2706, 2, (11, 0), (), "AlwaysUseConnectionFile", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"CommandText": (1829, 2, (12, 0), (), "CommandText", None),
		"CommandType": (1830, 2, (3, 0), (), "CommandType", None),
		"Connection": (1432, 2, (12, 0), (), "Connection", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"EnableRefresh": (1477, 2, (11, 0), (), "EnableRefresh", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"RefreshDate": (696, 2, (7, 0), (), "RefreshDate", None),
		"RefreshOnFileOpen": (1479, 2, (11, 0), (), "RefreshOnFileOpen", None),
		"RefreshPeriod": (1833, 2, (3, 0), (), "RefreshPeriod", None),
		"Refreshing": (1587, 2, (11, 0), (), "Refreshing", None),
		"SavePassword": (1481, 2, (11, 0), (), "SavePassword", None),
		"ServerCredentialsMethod": (2704, 2, (3, 0), (), "ServerCredentialsMethod", None),
		"SourceConnectionFile": (2079, 2, (8, 0), (), "SourceConnectionFile", None),
		"SourceDataFile": (2080, 2, (8, 0), (), "SourceDataFile", None),
	}
	_prop_map_put_ = {
		"AlwaysUseConnectionFile": ((2706, LCID, 4, 0),()),
		"CommandText": ((1829, LCID, 4, 0),()),
		"CommandType": ((1830, LCID, 4, 0),()),
		"Connection": ((1432, LCID, 4, 0),()),
		"EnableRefresh": ((1477, LCID, 4, 0),()),
		"RefreshOnFileOpen": ((1479, LCID, 4, 0),()),
		"RefreshPeriod": ((1833, LCID, 4, 0),()),
		"SavePassword": ((1481, LCID, 4, 0),()),
		"ServerCredentialsMethod": ((2704, LCID, 4, 0),()),
		"SourceConnectionFile": ((2079, LCID, 4, 0),()),
		"SourceDataFile": ((2080, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class DataLabel(DispatchBaseClass):
	CLSID = IID('{000208B2-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	def GetProperty(self, ID=defaultNamedNotOptArg):
		return self._ApplyTypes_(3256, 1, (12, 0), ((8, 1),), 'GetProperty', None,ID
			)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	def SetProperty(self, ID=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3253, LCID, 1, (24, 0), ((8, 1), (12, 1)),ID
			, Value)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		"AutoText": (135, 2, (11, 0), (), "AutoText", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Fill' returns object of type 'ChartFillFormat'
		"Fill": (1663, 2, (9, 0), (), "Fill", '{00024435-0000-0000-C000-000000000046}'),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"FormulaLocal": (263, 2, (8, 0), (), "FormulaLocal", None),
		"FormulaR1C1": (264, 2, (8, 0), (), "FormulaR1C1", None),
		"FormulaR1C1Local": (265, 2, (8, 0), (), "FormulaR1C1Local", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"NumberFormat": (193, 2, (8, 0), (), "NumberFormat", None),
		"NumberFormatLinked": (194, 2, (11, 0), (), "NumberFormatLinked", None),
		"NumberFormatLocal": (1097, 2, (12, 0), (), "NumberFormatLocal", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Position": (133, 2, (3, 0), (), "Position", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		"Separator": (2027, 2, (12, 0), (), "Separator", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		"ShowBubbleSize": (2026, 2, (11, 0), (), "ShowBubbleSize", None),
		"ShowCategoryName": (2023, 2, (11, 0), (), "ShowCategoryName", None),
		"ShowLegendKey": (171, 2, (11, 0), (), "ShowLegendKey", None),
		"ShowPercentage": (2025, 2, (11, 0), (), "ShowPercentage", None),
		"ShowRange": (3086, 2, (11, 0), (), "ShowRange", None),
		"ShowSeriesName": (2022, 2, (11, 0), (), "ShowSeriesName", None),
		"ShowValue": (2024, 2, (11, 0), (), "ShowValue", None),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Type": (108, 2, (12, 0), (), "Type", None),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"_Height": (3084, 2, (5, 0), (), "_Height", None),
		"_Width": (3085, 2, (5, 0), (), "_Width", None),
	}
	_prop_map_put_ = {
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoText": ((135, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"FormulaLocal": ((263, LCID, 4, 0),()),
		"FormulaR1C1": ((264, LCID, 4, 0),()),
		"FormulaR1C1Local": ((265, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"NumberFormat": ((193, LCID, 4, 0),()),
		"NumberFormatLinked": ((194, LCID, 4, 0),()),
		"NumberFormatLocal": ((1097, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Separator": ((2027, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"ShowBubbleSize": ((2026, LCID, 4, 0),()),
		"ShowCategoryName": ((2023, LCID, 4, 0),()),
		"ShowLegendKey": ((171, LCID, 4, 0),()),
		"ShowPercentage": ((2025, LCID, 4, 0),()),
		"ShowRange": ((3086, LCID, 4, 0),()),
		"ShowSeriesName": ((2022, LCID, 4, 0),()),
		"ShowValue": ((2024, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Type": ((108, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class DataLabels(DispatchBaseClass):
	CLSID = IID('{000208B3-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def GetProperty(self, ID=defaultNamedNotOptArg):
		return self._ApplyTypes_(3256, 1, (12, 0), ((8, 1),), 'GetProperty', None,ID
			)

	# Result is of type DataLabel
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000208B2-0000-0000-C000-000000000046}')
		return ret

	def Propagate(self, Index=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3087, LCID, 1, (24, 0), ((12, 1),),Index
			)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	def SetProperty(self, ID=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3253, LCID, 1, (24, 0), ((8, 1), (12, 1)),ID
			, Value)

	# Result is of type DataLabel
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000208B2-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		"AutoText": (135, 2, (11, 0), (), "AutoText", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Fill' returns object of type 'ChartFillFormat'
		"Fill": (1663, 2, (9, 0), (), "Fill", '{00024435-0000-0000-C000-000000000046}'),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"NumberFormat": (193, 2, (8, 0), (), "NumberFormat", None),
		"NumberFormatLinked": (194, 2, (11, 0), (), "NumberFormatLinked", None),
		"NumberFormatLocal": (1097, 2, (12, 0), (), "NumberFormatLocal", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Position": (133, 2, (3, 0), (), "Position", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		"Separator": (2027, 2, (12, 0), (), "Separator", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		"ShowBubbleSize": (2026, 2, (11, 0), (), "ShowBubbleSize", None),
		"ShowCategoryName": (2023, 2, (11, 0), (), "ShowCategoryName", None),
		"ShowLegendKey": (171, 2, (11, 0), (), "ShowLegendKey", None),
		"ShowPercentage": (2025, 2, (11, 0), (), "ShowPercentage", None),
		"ShowRange": (3086, 2, (11, 0), (), "ShowRange", None),
		"ShowSeriesName": (2022, 2, (11, 0), (), "ShowSeriesName", None),
		"ShowValue": (2024, 2, (11, 0), (), "ShowValue", None),
		"Type": (108, 2, (12, 0), (), "Type", None),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
	}
	_prop_map_put_ = {
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoText": ((135, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"NumberFormat": ((193, LCID, 4, 0),()),
		"NumberFormatLinked": ((194, LCID, 4, 0),()),
		"NumberFormatLocal": ((1097, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Separator": ((2027, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"ShowBubbleSize": ((2026, LCID, 4, 0),()),
		"ShowCategoryName": ((2023, LCID, 4, 0),()),
		"ShowLegendKey": ((171, LCID, 4, 0),()),
		"ShowPercentage": ((2025, LCID, 4, 0),()),
		"ShowRange": ((3086, LCID, 4, 0),()),
		"ShowSeriesName": ((2022, LCID, 4, 0),()),
		"ShowValue": ((2024, LCID, 4, 0),()),
		"Type": ((108, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000208B2-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000208B2-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{000208B2-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class DataTable(DispatchBaseClass):
	CLSID = IID('{00020843-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def Select(self):
		return self._oleobj_.InvokeTypes(235, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"HasBorderHorizontal": (1671, 2, (11, 0), (), "HasBorderHorizontal", None),
		"HasBorderOutline": (1673, 2, (11, 0), (), "HasBorderOutline", None),
		"HasBorderVertical": (1672, 2, (11, 0), (), "HasBorderVertical", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"ShowLegendKey": (171, 2, (11, 0), (), "ShowLegendKey", None),
	}
	_prop_map_put_ = {
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"HasBorderHorizontal": ((1671, LCID, 4, 0),()),
		"HasBorderOutline": ((1673, LCID, 4, 0),()),
		"HasBorderVertical": ((1672, LCID, 4, 0),()),
		"ShowLegendKey": ((171, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Databar(DispatchBaseClass):
	CLSID = IID('{00024496-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def ModifyAppliesToRange(self, Range=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2627, LCID, 1, (24, 0), ((9, 1),),Range
			)

	def SetFirstPriority(self):
		return self._oleobj_.InvokeTypes(2629, LCID, 1, (24, 0), (),)

	def SetLastPriority(self):
		return self._oleobj_.InvokeTypes(2630, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'AppliesTo' returns object of type 'Range'
		"AppliesTo": (2626, 2, (9, 0), (), "AppliesTo", '{00020846-0000-0000-C000-000000000046}'),
		"AxisColor": (2943, 2, (9, 0), (), "AxisColor", None),
		"AxisPosition": (2942, 2, (3, 0), (), "AxisPosition", None),
		# Method 'BarBorder' returns object of type 'DataBarBorder'
		"BarBorder": (2944, 2, (9, 0), (), "BarBorder", '{000244BE-0000-0000-C000-000000000046}'),
		"BarColor": (2722, 2, (9, 0), (), "BarColor", None),
		"BarFillType": (2941, 2, (3, 0), (), "BarFillType", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Direction": (168, 2, (3, 0), (), "Direction", None),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		# Method 'MaxPoint' returns object of type 'ConditionValue'
		"MaxPoint": (2719, 2, (9, 0), (), "MaxPoint", '{00024492-0000-0000-C000-000000000046}'),
		# Method 'MinPoint' returns object of type 'ConditionValue'
		"MinPoint": (2718, 2, (9, 0), (), "MinPoint", '{00024492-0000-0000-C000-000000000046}'),
		# Method 'NegativeBarFormat' returns object of type 'NegativeBarFormat'
		"NegativeBarFormat": (2945, 2, (9, 0), (), "NegativeBarFormat", '{000244BF-0000-0000-C000-000000000046}'),
		"PTCondition": (2631, 2, (11, 0), (), "PTCondition", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PercentMax": (2721, 2, (3, 0), (), "PercentMax", None),
		"PercentMin": (2720, 2, (3, 0), (), "PercentMin", None),
		"Priority": (985, 2, (3, 0), (), "Priority", None),
		"ScopeType": (2615, 2, (3, 0), (), "ScopeType", None),
		"ShowValue": (2024, 2, (11, 0), (), "ShowValue", None),
		"StopIfTrue": (2625, 2, (11, 0), (), "StopIfTrue", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"AxisPosition": ((2942, LCID, 4, 0),()),
		"BarFillType": ((2941, LCID, 4, 0),()),
		"Direction": ((168, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"PercentMax": ((2721, LCID, 4, 0),()),
		"PercentMin": ((2720, LCID, 4, 0),()),
		"Priority": ((985, LCID, 4, 0),()),
		"ScopeType": ((2615, LCID, 4, 0),()),
		"ShowValue": ((2024, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class DefaultPivotTableLayoutOptions(DispatchBaseClass):
	CLSID = IID('{000244FB-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AllowMultipleFilters": (2570, 2, (11, 0), (), "AllowMultipleFilters", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"CalculatedMembersInFilters": (2884, 2, (11, 0), (), "CalculatedMembersInFilters", None),
		"ColumnGrand": (694, 2, (11, 0), (), "ColumnGrand", None),
		"CompactRowIndent": (2553, 2, (3, 0), (), "CompactRowIndent", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DisplayContextTooltips": (2551, 2, (11, 0), (), "DisplayContextTooltips", None),
		"DisplayEmptyColumn": (2137, 2, (11, 0), (), "DisplayEmptyColumn", None),
		"DisplayEmptyRow": (2136, 2, (11, 0), (), "DisplayEmptyRow", None),
		"DisplayErrorString": (1485, 2, (11, 0), (), "DisplayErrorString", None),
		"DisplayFieldCaptions": (2555, 2, (11, 0), (), "DisplayFieldCaptions", None),
		"DisplayImmediateItems": (2126, 2, (11, 0), (), "DisplayImmediateItems", None),
		"DisplayMemberPropertyTooltips": (2550, 2, (11, 0), (), "DisplayMemberPropertyTooltips", None),
		"DisplayNullString": (1486, 2, (11, 0), (), "DisplayNullString", None),
		"EnableDrilldown": (1487, 2, (11, 0), (), "EnableDrilldown", None),
		"EnableWriteback": (2872, 2, (11, 0), (), "EnableWriteback", None),
		"ErrorString": (1490, 2, (8, 0), (), "ErrorString", None),
		"FieldListSortAscending": (2573, 2, (11, 0), (), "FieldListSortAscending", None),
		"HasAutoFormat": (695, 2, (11, 0), (), "HasAutoFormat", None),
		"InGridDropZones": (2560, 2, (11, 0), (), "InGridDropZones", None),
		"LayoutBlankLine": (1845, 2, (11, 0), (), "LayoutBlankLine", None),
		"MergeLabels": (1494, 2, (11, 0), (), "MergeLabels", None),
		"NullString": (1495, 2, (8, 0), (), "NullString", None),
		"PageFieldOrder": (1429, 2, (11, 0), (), "PageFieldOrder", None),
		"PageFieldWrapCount": (1430, 2, (3, 0), (), "PageFieldWrapCount", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PreserveFormatting": (1500, 2, (11, 0), (), "PreserveFormatting", None),
		"PrintDrillIndicators": (2549, 2, (11, 0), (), "PrintDrillIndicators", None),
		"PrintTitles": (1838, 2, (11, 0), (), "PrintTitles", None),
		"RefreshOnFileOpen": (1479, 2, (11, 0), (), "RefreshOnFileOpen", None),
		"RepeatAllLabels": (2879, 2, (3, 0), (), "RepeatAllLabels", None),
		"RepeatItemsOnEachPrintedPage": (1842, 2, (11, 0), (), "RepeatItemsOnEachPrintedPage", None),
		"RowAxisLayout": (2556, 2, (3, 0), (), "RowAxisLayout", None),
		"RowGrand": (693, 2, (11, 0), (), "RowGrand", None),
		"SaveData": (692, 2, (11, 0), (), "SaveData", None),
		"ShowDrillIndicators": (2548, 2, (11, 0), (), "ShowDrillIndicators", None),
		"ShowValuesRow": (2883, 2, (11, 0), (), "ShowValuesRow", None),
		"SortUsingCustomLists": (2574, 2, (11, 0), (), "SortUsingCustomLists", None),
		"SubtotalHiddenPageItems": (1498, 2, (11, 0), (), "SubtotalHiddenPageItems", None),
		"SubtotalLocation": (2558, 2, (11, 0), (), "SubtotalLocation", None),
		"Subtotals": (733, 2, (11, 0), (), "Subtotals", None),
		"TotalsAnnotation": (1843, 2, (11, 0), (), "TotalsAnnotation", None),
		"ViewCalculatedMembers": (2124, 2, (11, 0), (), "ViewCalculatedMembers", None),
		"VisualTotals": (2129, 2, (11, 0), (), "VisualTotals", None),
		"VisualTotalsForSets": (2882, 2, (11, 0), (), "VisualTotalsForSets", None),
		"xlMissingItemsNone": (3270, 2, (3, 0), (), "xlMissingItemsNone", None),
	}
	_prop_map_put_ = {
		"AllowMultipleFilters": ((2570, LCID, 4, 0),()),
		"CalculatedMembersInFilters": ((2884, LCID, 4, 0),()),
		"ColumnGrand": ((694, LCID, 4, 0),()),
		"CompactRowIndent": ((2553, LCID, 4, 0),()),
		"DisplayContextTooltips": ((2551, LCID, 4, 0),()),
		"DisplayEmptyColumn": ((2137, LCID, 4, 0),()),
		"DisplayEmptyRow": ((2136, LCID, 4, 0),()),
		"DisplayErrorString": ((1485, LCID, 4, 0),()),
		"DisplayFieldCaptions": ((2555, LCID, 4, 0),()),
		"DisplayImmediateItems": ((2126, LCID, 4, 0),()),
		"DisplayMemberPropertyTooltips": ((2550, LCID, 4, 0),()),
		"DisplayNullString": ((1486, LCID, 4, 0),()),
		"EnableDrilldown": ((1487, LCID, 4, 0),()),
		"EnableWriteback": ((2872, LCID, 4, 0),()),
		"ErrorString": ((1490, LCID, 4, 0),()),
		"FieldListSortAscending": ((2573, LCID, 4, 0),()),
		"HasAutoFormat": ((695, LCID, 4, 0),()),
		"InGridDropZones": ((2560, LCID, 4, 0),()),
		"LayoutBlankLine": ((1845, LCID, 4, 0),()),
		"MergeLabels": ((1494, LCID, 4, 0),()),
		"NullString": ((1495, LCID, 4, 0),()),
		"PageFieldOrder": ((1429, LCID, 4, 0),()),
		"PageFieldWrapCount": ((1430, LCID, 4, 0),()),
		"PreserveFormatting": ((1500, LCID, 4, 0),()),
		"PrintDrillIndicators": ((2549, LCID, 4, 0),()),
		"PrintTitles": ((1838, LCID, 4, 0),()),
		"RefreshOnFileOpen": ((1479, LCID, 4, 0),()),
		"RepeatAllLabels": ((2879, LCID, 4, 0),()),
		"RepeatItemsOnEachPrintedPage": ((1842, LCID, 4, 0),()),
		"RowAxisLayout": ((2556, LCID, 4, 0),()),
		"RowGrand": ((693, LCID, 4, 0),()),
		"SaveData": ((692, LCID, 4, 0),()),
		"ShowDrillIndicators": ((2548, LCID, 4, 0),()),
		"ShowValuesRow": ((2883, LCID, 4, 0),()),
		"SortUsingCustomLists": ((2574, LCID, 4, 0),()),
		"SubtotalHiddenPageItems": ((1498, LCID, 4, 0),()),
		"SubtotalLocation": ((2558, LCID, 4, 0),()),
		"Subtotals": ((733, LCID, 4, 0),()),
		"TotalsAnnotation": ((1843, LCID, 4, 0),()),
		"ViewCalculatedMembers": ((2124, LCID, 4, 0),()),
		"VisualTotals": ((2129, LCID, 4, 0),()),
		"VisualTotalsForSets": ((2882, LCID, 4, 0),()),
		"xlMissingItemsNone": ((3270, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class DefaultWebOptions(DispatchBaseClass):
	CLSID = IID('{00024448-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AllowPNG": (1908, 2, (11, 0), (), "AllowPNG", None),
		"AlwaysSaveInDefaultEncoding": (1912, 2, (11, 0), (), "AlwaysSaveInDefaultEncoding", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"CheckIfOfficeIsHTMLEditor": (1905, 2, (11, 0), (), "CheckIfOfficeIsHTMLEditor", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DownloadComponents": (1906, 2, (11, 0), (), "DownloadComponents", None),
		"Encoding": (1822, 2, (3, 0), (), "Encoding", None),
		"FolderSuffix": (1914, 2, (8, 0), (), "FolderSuffix", None),
		# Method 'Fonts' returns object of type 'WebPageFonts'
		"Fonts": (1913, 2, (9, 0), (), "Fonts", '{000C0914-0000-0000-C000-000000000046}'),
		"LoadPictures": (1901, 2, (11, 0), (), "LoadPictures", None),
		"LocationOfComponents": (1911, 2, (8, 0), (), "LocationOfComponents", None),
		"OrganizeInFolder": (1902, 2, (11, 0), (), "OrganizeInFolder", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PixelsPerInch": (1910, 2, (3, 0), (), "PixelsPerInch", None),
		"RelyOnCSS": (1899, 2, (11, 0), (), "RelyOnCSS", None),
		"RelyOnVML": (1907, 2, (11, 0), (), "RelyOnVML", None),
		"SaveHiddenData": (1900, 2, (11, 0), (), "SaveHiddenData", None),
		"SaveNewWebPagesAsWebArchives": (2180, 2, (11, 0), (), "SaveNewWebPagesAsWebArchives", None),
		"ScreenSize": (1909, 2, (3, 0), (), "ScreenSize", None),
		"TargetBrowser": (2179, 2, (3, 0), (), "TargetBrowser", None),
		"UpdateLinksOnSave": (1903, 2, (11, 0), (), "UpdateLinksOnSave", None),
		"UseLongFileNames": (1904, 2, (11, 0), (), "UseLongFileNames", None),
	}
	_prop_map_put_ = {
		"AllowPNG": ((1908, LCID, 4, 0),()),
		"AlwaysSaveInDefaultEncoding": ((1912, LCID, 4, 0),()),
		"CheckIfOfficeIsHTMLEditor": ((1905, LCID, 4, 0),()),
		"DownloadComponents": ((1906, LCID, 4, 0),()),
		"Encoding": ((1822, LCID, 4, 0),()),
		"LoadPictures": ((1901, LCID, 4, 0),()),
		"LocationOfComponents": ((1911, LCID, 4, 0),()),
		"OrganizeInFolder": ((1902, LCID, 4, 0),()),
		"PixelsPerInch": ((1910, LCID, 4, 0),()),
		"RelyOnCSS": ((1899, LCID, 4, 0),()),
		"RelyOnVML": ((1907, LCID, 4, 0),()),
		"SaveHiddenData": ((1900, LCID, 4, 0),()),
		"SaveNewWebPagesAsWebArchives": ((2180, LCID, 4, 0),()),
		"ScreenSize": ((1909, LCID, 4, 0),()),
		"TargetBrowser": ((2179, LCID, 4, 0),()),
		"UpdateLinksOnSave": ((1903, LCID, 4, 0),()),
		"UseLongFileNames": ((1904, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Diagram(DispatchBaseClass):
	CLSID = IID('{0002446F-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Convert(self, Type=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1046, LCID, 1, (24, 0), ((3, 1),),Type
			)

	def FitText(self):
		return self._oleobj_.InvokeTypes(2304, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoFormat": (114, 2, (3, 0), (), "AutoFormat", None),
		"AutoLayout": (2243, 2, (3, 0), (), "AutoLayout", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Nodes' returns object of type 'DiagramNodes'
		"Nodes": (1701, 2, (9, 0), (), "Nodes", '{000C036E-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Reverse": (2244, 2, (3, 0), (), "Reverse", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"AutoFormat": ((114, LCID, 4, 0),()),
		"AutoLayout": ((2243, LCID, 4, 0),()),
		"Reverse": ((2244, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class DiagramNode(DispatchBaseClass):
	CLSID = IID('{000C0370-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type DiagramNode
	def AddNode(self, pos=2, nodeType=1):
		ret = self._oleobj_.InvokeTypes(10, LCID, 1, (9, 0), ((3, 49), (3, 49)),pos
			, nodeType)
		if ret is not None:
			ret = Dispatch(ret, 'AddNode', '{000C0370-0000-0000-C000-000000000046}')
		return ret

	# Result is of type DiagramNode
	def CloneNode(self, copyChildren=defaultNamedNotOptArg, pTargetNode=defaultNamedNotOptArg, pos=2):
		ret = self._oleobj_.InvokeTypes(15, LCID, 1, (9, 0), ((11, 1), (9, 1), (3, 49)),copyChildren
			, pTargetNode, pos)
		if ret is not None:
			ret = Dispatch(ret, 'CloneNode', '{000C0370-0000-0000-C000-000000000046}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), (),)

	def MoveNode(self, pTargetNode=defaultNamedNotOptArg, pos=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((9, 1), (3, 1)),pTargetNode
			, pos)

	# Result is of type DiagramNode
	def NextNode(self):
		ret = self._oleobj_.InvokeTypes(17, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'NextNode', '{000C0370-0000-0000-C000-000000000046}')
		return ret

	# Result is of type DiagramNode
	def PrevNode(self):
		ret = self._oleobj_.InvokeTypes(18, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'PrevNode', '{000C0370-0000-0000-C000-000000000046}')
		return ret

	def ReplaceNode(self, pTargetNode=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((9, 1),),pTargetNode
			)

	def SwapNode(self, pTargetNode=defaultNamedNotOptArg, swapChildren=True):
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((9, 1), (11, 49)),pTargetNode
			, swapChildren)

	def TransferChildren(self, pReceivingNode=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((9, 1),),pReceivingNode
			)

	_prop_map_get_ = {
		"Application": (1610743808, 2, (9, 0), (), "Application", None),
		# Method 'Children' returns object of type 'DiagramNodeChildren'
		"Children": (101, 2, (9, 0), (), "Children", '{000C036F-0000-0000-C000-000000000046}'),
		"Creator": (1610743809, 2, (3, 0), (), "Creator", None),
		# Method 'Diagram' returns object of type 'IMsoDiagram'
		"Diagram": (104, 2, (9, 0), (), "Diagram", '{000C036D-0000-0000-C000-000000000046}'),
		"Layout": (105, 2, (3, 0), (), "Layout", None),
		"Parent": (100, 2, (9, 0), (), "Parent", None),
		# Method 'Root' returns object of type 'DiagramNode'
		"Root": (103, 2, (9, 0), (), "Root", '{000C0370-0000-0000-C000-000000000046}'),
		# Method 'Shape' returns object of type 'Shape'
		"Shape": (102, 2, (9, 0), (), "Shape", '{00024439-0000-0000-C000-000000000046}'),
		# Method 'TextShape' returns object of type 'Shape'
		"TextShape": (106, 2, (9, 0), (), "TextShape", '{00024439-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
		"Layout": ((105, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class DiagramNodeChildren(DispatchBaseClass):
	CLSID = IID('{000C036F-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type DiagramNode
	def AddNode(self, Index=-1, nodeType=1):
		ret = self._oleobj_.InvokeTypes(10, LCID, 1, (9, 0), ((12, 49), (3, 49)),Index
			, nodeType)
		if ret is not None:
			ret = Dispatch(ret, 'AddNode', '{000C0370-0000-0000-C000-000000000046}')
		return ret

	# Result is of type DiagramNode
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000C0370-0000-0000-C000-000000000046}')
		return ret

	def SelectAll(self):
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1610743808, 2, (9, 0), (), "Application", None),
		"Count": (101, 2, (3, 0), (), "Count", None),
		"Creator": (1610743809, 2, (3, 0), (), "Creator", None),
		# Method 'FirstChild' returns object of type 'DiagramNode'
		"FirstChild": (103, 2, (9, 0), (), "FirstChild", '{000C0370-0000-0000-C000-000000000046}'),
		# Method 'LastChild' returns object of type 'DiagramNode'
		"LastChild": (104, 2, (9, 0), (), "LastChild", '{000C0370-0000-0000-C000-000000000046}'),
		"Parent": (100, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000C0370-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000C0370-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(101, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class DiagramNodes(DispatchBaseClass):
	CLSID = IID('{000C036E-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type DiagramNode
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000C0370-0000-0000-C000-000000000046}')
		return ret

	def SelectAll(self):
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1610743808, 2, (9, 0), (), "Application", None),
		"Count": (101, 2, (3, 0), (), "Count", None),
		"Creator": (1610743809, 2, (3, 0), (), "Creator", None),
		"Parent": (100, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000C0370-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000C0370-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(101, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Dialog(DispatchBaseClass):
	CLSID = IID('{0002087A-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Show(self, Arg1=defaultNamedOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(496, LCID, 1, (11, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class DialogFrame(DispatchBaseClass):
	CLSID = IID('{0002088F-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class DialogSheet(DispatchBaseClass):
	CLSID = IID('{000208AF-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Activate(self):
		return self._oleobj_.InvokeTypes(304, LCID, 1, (24, 0), (),)

	def Arcs(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(760, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Arcs', None)
		return ret

	def Buttons(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(557, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Buttons', None)
		return ret

	def ChartObjects(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1060, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ChartObjects', None)
		return ret

	def CheckBoxes(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(824, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'CheckBoxes', None)
		return ret

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(505, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17)),CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def CircleInvalid(self):
		return self._oleobj_.InvokeTypes(1437, LCID, 1, (24, 0), (),)

	def ClearCircles(self):
		return self._oleobj_.InvokeTypes(1436, LCID, 1, (24, 0), (),)

	def Copy(self, Before=defaultNamedOptArg, After=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(551, LCID, 1, (24, 0), ((12, 17), (12, 17)),Before
			, After)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def DrawingObjects(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(88, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'DrawingObjects', None)
		return ret

	def Drawings(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(772, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Drawings', None)
		return ret

	def DropDowns(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(836, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'DropDowns', None)
		return ret

	def EditBoxes(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(828, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'EditBoxes', None)
		return ret

	def Evaluate(self, Name=defaultNamedNotOptArg):
		return self._ApplyTypes_(1, 1, (12, 0), ((12, 1),), 'Evaluate', None,Name
			)

	def ExportAsFixedFormat(self, Type=defaultNamedNotOptArg, Filename=defaultNamedOptArg, Quality=defaultNamedOptArg, IncludeDocProperties=defaultNamedOptArg
			, IgnorePrintAreas=defaultNamedOptArg, From=defaultNamedOptArg, To=defaultNamedOptArg, OpenAfterPublish=defaultNamedOptArg, FixedFormatExtClassPtr=defaultNamedOptArg
			, WorkIdentity=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(3175, LCID, 1, (24, 0), ((3, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Type
			, Filename, Quality, IncludeDocProperties, IgnorePrintAreas, From
			, To, OpenAfterPublish, FixedFormatExtClassPtr, WorkIdentity)

	def GroupBoxes(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(834, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'GroupBoxes', None)
		return ret

	def GroupObjects(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1113, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'GroupObjects', None)
		return ret

	def Hide(self, Cancel=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(813, LCID, 1, (11, 0), ((12, 17),),Cancel
			)

	def Labels(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(841, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Labels', None)
		return ret

	def Lines(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(767, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Lines', None)
		return ret

	def ListBoxes(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(832, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ListBoxes', None)
		return ret

	def Move(self, Before=defaultNamedOptArg, After=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(637, LCID, 1, (24, 0), ((12, 17), (12, 17)),Before
			, After)

	def OLEObjects(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(799, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'OLEObjects', None)
		return ret

	def OptionButtons(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(826, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'OptionButtons', None)
		return ret

	def Ovals(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(801, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Ovals', None)
		return ret

	def Paste(self, Destination=defaultNamedOptArg, Link=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(211, LCID, 1, (24, 0), ((12, 17), (12, 17)),Destination
			, Link)

	def PasteSpecial(self, Format=defaultNamedOptArg, Link=defaultNamedOptArg, DisplayAsIcon=defaultNamedOptArg, IconFileName=defaultNamedOptArg
			, IconIndex=defaultNamedOptArg, IconLabel=defaultNamedOptArg, NoHTMLFormatting=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1928, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Format
			, Link, DisplayAsIcon, IconFileName, IconIndex, IconLabel
			, NoHTMLFormatting)

	def Pictures(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(771, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Pictures', None)
		return ret

	def PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2361, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName)

	def PrintPreview(self, EnableChanges=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(281, LCID, 1, (24, 0), ((12, 17),),EnableChanges
			)

	def Protect(self, Password=defaultNamedOptArg, DrawingObjects=defaultNamedOptArg, Contents=defaultNamedOptArg, Scenarios=defaultNamedOptArg
			, UserInterfaceOnly=defaultNamedOptArg, AllowFormattingCells=defaultNamedOptArg, AllowFormattingColumns=defaultNamedOptArg, AllowFormattingRows=defaultNamedOptArg, AllowInsertingColumns=defaultNamedOptArg
			, AllowInsertingRows=defaultNamedOptArg, AllowInsertingHyperlinks=defaultNamedOptArg, AllowDeletingColumns=defaultNamedOptArg, AllowDeletingRows=defaultNamedOptArg, AllowSorting=defaultNamedOptArg
			, AllowFiltering=defaultNamedOptArg, AllowUsingPivotTables=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2029, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Password
			, DrawingObjects, Contents, Scenarios, UserInterfaceOnly, AllowFormattingCells
			, AllowFormattingColumns, AllowFormattingRows, AllowInsertingColumns, AllowInsertingRows, AllowInsertingHyperlinks
			, AllowDeletingColumns, AllowDeletingRows, AllowSorting, AllowFiltering, AllowUsingPivotTables
			)

	def Rectangles(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(774, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Rectangles', None)
		return ret

	def ResetAllPageBreaks(self):
		return self._oleobj_.InvokeTypes(1426, LCID, 1, (24, 0), (),)

	def SaveAs(self, Filename=defaultNamedNotOptArg, FileFormat=defaultNamedOptArg, Password=defaultNamedOptArg, WriteResPassword=defaultNamedOptArg
			, ReadOnlyRecommended=defaultNamedOptArg, CreateBackup=defaultNamedOptArg, AddToMru=defaultNamedOptArg, TextCodepage=defaultNamedOptArg, TextVisualLayout=defaultNamedOptArg
			, Local=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(3174, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup
			, AddToMru, TextCodepage, TextVisualLayout, Local)

	def ScrollBars(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(830, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ScrollBars', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(235, LCID, 1, (24, 0), ((12, 17),),Replace
			)

	def Show(self):
		return self._oleobj_.InvokeTypes(496, LCID, 1, (11, 0), (),)

	def Spinners(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(838, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Spinners', None)
		return ret

	def TextBoxes(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(777, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'TextBoxes', None)
		return ret

	def Unprotect(self, Password=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(285, LCID, 1, (24, 0), ((12, 17),),Password
			)

	def _CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg
			, IgnoreFinalYaa=defaultNamedOptArg, SpellScript=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1817, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang, IgnoreFinalYaa, SpellScript
			)

	def _Evaluate(self, Name=defaultNamedNotOptArg):
		return self._ApplyTypes_(-5, 1, (12, 0), ((12, 1),), '_Evaluate', None,Name
			)

	def _ExportAsFixedFormat(self, Type=defaultNamedNotOptArg, Filename=defaultNamedOptArg, Quality=defaultNamedOptArg, IncludeDocProperties=defaultNamedOptArg
			, IgnorePrintAreas=defaultNamedOptArg, From=defaultNamedOptArg, To=defaultNamedOptArg, OpenAfterPublish=defaultNamedOptArg, FixedFormatExtClassPtr=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2493, LCID, 1, (24, 0), ((3, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Type
			, Filename, Quality, IncludeDocProperties, IgnorePrintAreas, From
			, To, OpenAfterPublish, FixedFormatExtClassPtr)

	def _PasteSpecial(self, Format=defaultNamedOptArg, Link=defaultNamedOptArg, DisplayAsIcon=defaultNamedOptArg, IconFileName=defaultNamedOptArg
			, IconIndex=defaultNamedOptArg, IconLabel=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Format
			, Link, DisplayAsIcon, IconFileName, IconIndex, IconLabel
			)

	def _PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1772, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName)

	def _Protect(self, Password=defaultNamedOptArg, DrawingObjects=defaultNamedOptArg, Contents=defaultNamedOptArg, Scenarios=defaultNamedOptArg
			, UserInterfaceOnly=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(282, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Password
			, DrawingObjects, Contents, Scenarios, UserInterfaceOnly)

	def _SaveAs(self, Filename=defaultNamedNotOptArg, FileFormat=defaultNamedOptArg, Password=defaultNamedOptArg, WriteResPassword=defaultNamedOptArg
			, ReadOnlyRecommended=defaultNamedOptArg, CreateBackup=defaultNamedOptArg, AddToMru=defaultNamedOptArg, TextCodepage=defaultNamedOptArg, TextVisualLayout=defaultNamedOptArg
			, Local=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1925, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup
			, AddToMru, TextCodepage, TextVisualLayout, Local)

	def _PrintOut_(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(905, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate)

	def _SaveAs_(self, Filename=defaultNamedNotOptArg, FileFormat=defaultNamedOptArg, Password=defaultNamedOptArg, WriteResPassword=defaultNamedOptArg
			, ReadOnlyRecommended=defaultNamedOptArg, CreateBackup=defaultNamedOptArg, AddToMru=defaultNamedOptArg, TextCodepage=defaultNamedOptArg, TextVisualLayout=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(284, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup
			, AddToMru, TextCodepage, TextVisualLayout)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'AutoFilter' returns object of type 'AutoFilter'
		"AutoFilter": (3289, 2, (9, 0), (), "AutoFilter", '{00024432-0000-0000-C000-000000000046}'),
		"CodeName": (1373, 2, (8, 0), (), "CodeName", None),
		# Method 'Comments' returns object of type 'Comments'
		"Comments": (575, 2, (9, 0), (), "Comments", '{00024426-0000-0000-C000-000000000046}'),
		# Method 'CommentsThreaded' returns object of type 'CommentsThreaded'
		"CommentsThreaded": (3282, 2, (9, 0), (), "CommentsThreaded", '{000244FC-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'CustomProperties' returns object of type 'CustomProperties'
		"CustomProperties": (2030, 2, (9, 0), (), "CustomProperties", '{00024452-0000-0000-C000-000000000046}'),
		"DefaultButton": (857, 2, (12, 0), (), "DefaultButton", None),
		# Method 'DialogFrame' returns object of type 'DialogFrame'
		"DialogFrame": (839, 2, (9, 0), (), "DialogFrame", '{0002088F-0000-0000-C000-000000000046}'),
		"DisplayAutomaticPageBreaks": (643, 2, (11, 0), (), "DisplayAutomaticPageBreaks", None),
		"DisplayPageBreaks": (1435, 2, (11, 0), (), "DisplayPageBreaks", None),
		"DisplayRightToLeft": (1774, 2, (11, 0), (), "DisplayRightToLeft", None),
		"EnableAutoFilter": (1156, 2, (11, 0), (), "EnableAutoFilter", None),
		"EnableCalculation": (1424, 2, (11, 0), (), "EnableCalculation", None),
		"EnableFormatConditionsCalculation": (2511, 2, (11, 0), (), "EnableFormatConditionsCalculation", None),
		"EnableOutlining": (1157, 2, (11, 0), (), "EnableOutlining", None),
		"EnablePivotTable": (1158, 2, (11, 0), (), "EnablePivotTable", None),
		"EnableSelection": (1425, 2, (3, 0), (), "EnableSelection", None),
		"Focus": (814, 2, (12, 0), (), "Focus", None),
		# Method 'HPageBreaks' returns object of type 'HPageBreaks'
		"HPageBreaks": (1418, 2, (9, 0), (), "HPageBreaks", '{00024404-0000-0000-C000-000000000046}'),
		# Method 'Hyperlinks' returns object of type 'Hyperlinks'
		"Hyperlinks": (1393, 2, (9, 0), (), "Hyperlinks", '{00024430-0000-0000-C000-000000000046}'),
		"Index": (486, 2, (3, 0), (), "Index", None),
		# Method 'MailEnvelope' returns object of type 'MsoEnvelope'
		"MailEnvelope": (2021, 2, (13, 0), (), "MailEnvelope", '{0006F01A-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		# Method 'NamedSheetViews' returns object of type 'NamedSheetViewCollection'
		"NamedSheetViews": (3309, 2, (9, 0), (), "NamedSheetViews", '{00024501-0000-0000-C000-000000000046}'),
		# Method 'Names' returns object of type 'Names'
		"Names": (442, 2, (9, 0), (), "Names", '{000208B8-0000-0000-C000-000000000046}'),
		"Next": (502, 2, (9, 0), (), "Next", None),
		"OnDoubleClick": (628, 2, (8, 0), (), "OnDoubleClick", None),
		"OnSheetActivate": (1031, 2, (8, 0), (), "OnSheetActivate", None),
		"OnSheetDeactivate": (1081, 2, (8, 0), (), "OnSheetDeactivate", None),
		# Method 'PageSetup' returns object of type 'PageSetup'
		"PageSetup": (998, 2, (9, 0), (), "PageSetup", '{000208B4-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Previous": (503, 2, (9, 0), (), "Previous", None),
		"PrintedCommentPages": (2857, 2, (3, 0), (), "PrintedCommentPages", None),
		"ProtectContents": (292, 2, (11, 0), (), "ProtectContents", None),
		"ProtectDrawingObjects": (293, 2, (11, 0), (), "ProtectDrawingObjects", None),
		"ProtectScenarios": (294, 2, (11, 0), (), "ProtectScenarios", None),
		# Method 'Protection' returns object of type 'Protection'
		"Protection": (176, 2, (9, 0), (), "Protection", '{00024467-0000-0000-C000-000000000046}'),
		"ProtectionMode": (1159, 2, (11, 0), (), "ProtectionMode", None),
		# Method 'QueryTables' returns object of type 'QueryTables'
		"QueryTables": (1434, 2, (9, 0), (), "QueryTables", '{00024429-0000-0000-C000-000000000046}'),
		# Method 'Scripts' returns object of type 'Scripts'
		"Scripts": (1816, 2, (9, 0), (), "Scripts", '{000C0340-0000-0000-C000-000000000046}'),
		"ScrollArea": (1433, 2, (8, 0), (), "ScrollArea", None),
		# Method 'Shapes' returns object of type 'Shapes'
		"Shapes": (1377, 2, (9, 0), (), "Shapes", '{0002443A-0000-0000-C000-000000000046}'),
		# Method 'SmartTags' returns object of type 'SmartTags'
		"SmartTags": (2016, 2, (9, 0), (), "SmartTags", '{00024461-0000-0000-C000-000000000046}'),
		# Method 'Sort' returns object of type 'Sort'
		"Sort": (3288, 2, (9, 0), (), "Sort", '{000244AB-0000-0000-C000-000000000046}'),
		# Method 'Tab' returns object of type 'Tab'
		"Tab": (1041, 2, (9, 0), (), "Tab", '{00024469-0000-0000-C000-000000000046}'),
		# Method 'VPageBreaks' returns object of type 'VPageBreaks'
		"VPageBreaks": (1419, 2, (9, 0), (), "VPageBreaks", '{00024405-0000-0000-C000-000000000046}'),
		"Visible": (558, 2, (3, 0), (), "Visible", None),
		# Method '_AutoFilter' returns object of type 'AutoFilter'
		"_AutoFilter": (793, 2, (9, 0), (), "_AutoFilter", '{00024432-0000-0000-C000-000000000046}'),
		"_CodeName": (-2147418112, 2, (8, 0), (), "_CodeName", None),
		"_DisplayRightToLeft": (648, 2, (3, 0), (), "_DisplayRightToLeft", None),
		# Method '_Sort' returns object of type 'Sort'
		"_Sort": (880, 2, (9, 0), (), "_Sort", '{000244AB-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
		"DefaultButton": ((857, LCID, 4, 0),()),
		"DisplayAutomaticPageBreaks": ((643, LCID, 4, 0),()),
		"DisplayPageBreaks": ((1435, LCID, 4, 0),()),
		"DisplayRightToLeft": ((1774, LCID, 4, 0),()),
		"EnableAutoFilter": ((1156, LCID, 4, 0),()),
		"EnableCalculation": ((1424, LCID, 4, 0),()),
		"EnableFormatConditionsCalculation": ((2511, LCID, 4, 0),()),
		"EnableOutlining": ((1157, LCID, 4, 0),()),
		"EnablePivotTable": ((1158, LCID, 4, 0),()),
		"EnableSelection": ((1425, LCID, 4, 0),()),
		"Focus": ((814, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnDoubleClick": ((628, LCID, 4, 0),()),
		"OnSheetActivate": ((1031, LCID, 4, 0),()),
		"OnSheetDeactivate": ((1081, LCID, 4, 0),()),
		"ScrollArea": ((1433, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"_CodeName": ((-2147418112, LCID, 4, 0),()),
		"_DisplayRightToLeft": ((648, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class DialogSheetView(DispatchBaseClass):
	CLSID = IID('{0002448A-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Sheet": (751, 2, (9, 0), (), "Sheet", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class DialogSheets(DispatchBaseClass):
	CLSID = IID('{000208B0-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type DialogSheet
	def Add(self, Before=defaultNamedOptArg, After=defaultNamedOptArg, Count=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17)),Before
			, After, Count)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{000208AF-0000-0000-C000-000000000046}')
		return ret

	def Add2(self, Before=defaultNamedOptArg, After=defaultNamedOptArg, Count=defaultNamedOptArg, NewLayout=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3054, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17), (12, 17)),Before
			, After, Count, NewLayout)
		if ret is not None:
			ret = Dispatch(ret, 'Add2', None)
		return ret

	def Copy(self, Before=defaultNamedOptArg, After=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(551, LCID, 1, (24, 0), ((12, 17), (12, 17)),Before
			, After)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Move(self, Before=defaultNamedOptArg, After=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(637, LCID, 1, (24, 0), ((12, 17), (12, 17)),Before
			, After)

	def PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2361, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName)

	def PrintPreview(self, EnableChanges=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(281, LCID, 1, (24, 0), ((12, 17),),EnableChanges
			)

	def Select(self, Replace=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(235, LCID, 1, (24, 0), ((12, 17),),Replace
			)

	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', None)
		return ret

	def _PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1772, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName)

	def _PrintOut_(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(905, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'HPageBreaks' returns object of type 'HPageBreaks'
		"HPageBreaks": (1418, 2, (9, 0), (), "HPageBreaks", '{00024404-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'VPageBreaks' returns object of type 'VPageBreaks'
		"VPageBreaks": (1419, 2, (9, 0), (), "VPageBreaks", '{00024405-0000-0000-C000-000000000046}'),
		"Visible": (558, 2, (12, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Visible": ((558, LCID, 4, 0),()),
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', None)
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Dialogs(DispatchBaseClass):
	CLSID = IID('{00020879-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Dialog
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0002087A-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Dialog
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{0002087A-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0002087A-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0002087A-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{0002087A-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class DisplayFormat(DispatchBaseClass):
	CLSID = IID('{000244C2-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (12, 0), (), "AddIndent", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Borders' returns object of type 'Borders'
		"Borders": (435, 2, (9, 0), (), "Borders", '{00020855-0000-0000-C000-000000000046}'),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"FormulaHidden": (262, 2, (12, 0), (), "FormulaHidden", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		"IndentLevel": (201, 2, (12, 0), (), "IndentLevel", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Locked": (269, 2, (12, 0), (), "Locked", None),
		"MergeCells": (208, 2, (12, 0), (), "MergeCells", None),
		"NumberFormat": (193, 2, (12, 0), (), "NumberFormat", None),
		"NumberFormatLocal": (1097, 2, (12, 0), (), "NumberFormatLocal", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		"ShrinkToFit": (209, 2, (12, 0), (), "ShrinkToFit", None),
		"Style": (260, 2, (12, 0), (), "Style", None),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"WrapText": (276, 2, (12, 0), (), "WrapText", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class DisplayUnitLabel(DispatchBaseClass):
	CLSID = IID('{0002084C-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	def GetProperty(self, ID=defaultNamedNotOptArg):
		return self._ApplyTypes_(3256, 1, (12, 0), ((8, 1),), 'GetProperty', None,ID
			)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	def SetProperty(self, ID=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3253, LCID, 1, (24, 0), ((8, 1), (12, 1)),ID
			, Value)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Fill' returns object of type 'ChartFillFormat'
		"Fill": (1663, 2, (9, 0), (), "Fill", '{00024435-0000-0000-C000-000000000046}'),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"FormulaLocal": (263, 2, (8, 0), (), "FormulaLocal", None),
		"FormulaR1C1": (264, 2, (8, 0), (), "FormulaR1C1", None),
		"FormulaR1C1Local": (265, 2, (8, 0), (), "FormulaR1C1Local", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Position": (133, 2, (3, 0), (), "Position", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"FormulaLocal": ((263, LCID, 4, 0),()),
		"FormulaR1C1": ((264, LCID, 4, 0),()),
		"FormulaR1C1Local": ((265, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class DocEvents:
	CLSID = CLSID_Sink = IID('{00024411-0000-0000-C000-000000000046}')
	coclass_clsid = IID('{00020820-0000-0000-C000-000000000046}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		1610612736 : "OnQueryInterface",
		1610612737 : "OnAddRef",
		1610612738 : "OnRelease",
		1610678272 : "OnGetTypeInfoCount",
		1610678273 : "OnGetTypeInfo",
		1610678274 : "OnGetIDsOfNames",
		1610678275 : "OnInvoke",
		     1543 : "OnSelectionChange",
		     1537 : "OnBeforeDoubleClick",
		     1534 : "OnBeforeRightClick",
		      304 : "OnActivate",
		     1530 : "OnDeactivate",
		      279 : "OnCalculate",
		     1545 : "OnChange",
		     1470 : "OnFollowHyperlink",
		     2156 : "OnPivotTableUpdate",
		     2886 : "OnPivotTableAfterValueChange",
		     2889 : "OnPivotTableBeforeAllocateChanges",
		     2892 : "OnPivotTableBeforeCommitChanges",
		     2893 : "OnPivotTableBeforeDiscardChanges",
		     2894 : "OnPivotTableChangeSync",
		     3072 : "OnLensGalleryRenderComplete",
		     3073 : "OnTableUpdate",
		     3074 : "OnBeforeDelete",
		     3338 : "OnRemoteChange",
		     3339 : "OnRemoteBeforeDelete",
		     3340 : "OnRemotePivotTableUpdate",
		     3341 : "OnRemotePivotTableChangeSync",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnQueryInterface(self, riid=defaultNamedNotOptArg, ppvObj=pythoncom.Missing):
#	def OnAddRef(self):
#	def OnRelease(self):
#	def OnGetTypeInfoCount(self, pctinfo=pythoncom.Missing):
#	def OnGetTypeInfo(self, itinfo=defaultNamedNotOptArg, lcid=defaultNamedNotOptArg, pptinfo=pythoncom.Missing):
#	def OnGetIDsOfNames(self, riid=defaultNamedNotOptArg, rgszNames=defaultNamedNotOptArg, cNames=defaultNamedNotOptArg, lcid=defaultNamedNotOptArg
#			, rgdispid=pythoncom.Missing):
#	def OnInvoke(self, dispidMember=defaultNamedNotOptArg, riid=defaultNamedNotOptArg, lcid=defaultNamedNotOptArg, wFlags=defaultNamedNotOptArg
#			, pdispparams=defaultNamedNotOptArg, pvarResult=pythoncom.Missing, pexcepinfo=pythoncom.Missing, puArgErr=pythoncom.Missing):
#	def OnSelectionChange(self, Target=defaultNamedNotOptArg):
#	def OnBeforeDoubleClick(self, Target=defaultNamedNotOptArg, Cancel=defaultNamedNotOptArg):
#	def OnBeforeRightClick(self, Target=defaultNamedNotOptArg, Cancel=defaultNamedNotOptArg):
#	def OnActivate(self):
#	def OnDeactivate(self):
#	def OnCalculate(self):
#	def OnChange(self, Target=defaultNamedNotOptArg):
#	def OnFollowHyperlink(self, Target=defaultNamedNotOptArg):
#	def OnPivotTableUpdate(self, Target=defaultNamedNotOptArg):
#	def OnPivotTableAfterValueChange(self, TargetPivotTable=defaultNamedNotOptArg, TargetRange=defaultNamedNotOptArg):
#	def OnPivotTableBeforeAllocateChanges(self, TargetPivotTable=defaultNamedNotOptArg, ValueChangeStart=defaultNamedNotOptArg, ValueChangeEnd=defaultNamedNotOptArg, Cancel=defaultNamedNotOptArg):
#	def OnPivotTableBeforeCommitChanges(self, TargetPivotTable=defaultNamedNotOptArg, ValueChangeStart=defaultNamedNotOptArg, ValueChangeEnd=defaultNamedNotOptArg, Cancel=defaultNamedNotOptArg):
#	def OnPivotTableBeforeDiscardChanges(self, TargetPivotTable=defaultNamedNotOptArg, ValueChangeStart=defaultNamedNotOptArg, ValueChangeEnd=defaultNamedNotOptArg):
#	def OnPivotTableChangeSync(self, Target=defaultNamedNotOptArg):
#	def OnLensGalleryRenderComplete(self):
#	def OnTableUpdate(self, Target=defaultNamedNotOptArg):
#	def OnBeforeDelete(self):
#	def OnRemoteChange(self, Target=defaultNamedNotOptArg):
#	def OnRemoteBeforeDelete(self):
#	def OnRemotePivotTableUpdate(self, Target=defaultNamedNotOptArg):
#	def OnRemotePivotTableChangeSync(self, Target=defaultNamedNotOptArg):


class DownBars(DispatchBaseClass):
	CLSID = IID('{000208C6-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def GetProperty(self, ID=defaultNamedNotOptArg):
		return self._ApplyTypes_(3256, 1, (12, 0), ((8, 1),), 'GetProperty', None,ID
			)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	def SetProperty(self, ID=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3253, LCID, 1, (24, 0), ((8, 1), (12, 1)),ID
			, Value)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Fill' returns object of type 'ChartFillFormat'
		"Fill": (1663, 2, (9, 0), (), "Fill", '{00024435-0000-0000-C000-000000000046}'),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Drawing(DispatchBaseClass):
	CLSID = IID('{000208A8-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def AddVertex(self, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg):
		return self._ApplyTypes_(601, 1, (12, 0), ((5, 1), (5, 1)), 'AddVertex', None,Left
			, Top)

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	# The method GetVertices is actually a property, but must be used as a method to correctly pass the arguments
	def GetVertices(self, Index1=defaultNamedOptArg, Index2=defaultNamedOptArg):
		return self._ApplyTypes_(621, 2, (12, 0), ((12, 17), (12, 17)), 'GetVertices', None,Index1
			, Index2)

	def Reshape(self, Vertex=defaultNamedNotOptArg, Insert=defaultNamedNotOptArg, Left=defaultNamedOptArg, Top=defaultNamedOptArg):
		return self._ApplyTypes_(604, 1, (12, 0), ((3, 1), (11, 1), (12, 17), (12, 17)), 'Reshape', None,Vertex
			, Insert, Left, Top)

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (11, 0), (), "AddIndent", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		"AutoSize": (614, 2, (11, 0), (), "AutoSize", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		# Method 'BottomRightCell' returns object of type 'Range'
		"BottomRightCell": (615, 2, (9, 0), (), "BottomRightCell", '{00020846-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		# Method 'TopLeftCell' returns object of type 'Range'
		"TopLeftCell": (620, 2, (9, 0), (), "TopLeftCell", '{00020846-0000-0000-C000-000000000046}'),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"Vertices": (621, 2, (12, 0), ((12, 17), (12, 17)), "Vertices", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class DrawingObjects(DispatchBaseClass):
	CLSID = IID('{0002086F-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def AddItem(self, Text=defaultNamedNotOptArg, Index=defaultNamedOptArg):
		return self._ApplyTypes_(851, 1, (12, 0), ((12, 1), (12, 17)), 'AddItem', None,Text
			, Index)

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	# Result is of type GroupObject
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00020898-0000-0000-C000-000000000046}')
		return ret

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def LinkCombo(self, Link=defaultNamedOptArg):
		return self._ApplyTypes_(856, 1, (12, 0), ((12, 17),), 'LinkCombo', None,Link
			)

	def List(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(861, 1, (12, 0), ((12, 17),), 'List', None,Index
			)

	def RemoveAllItems(self):
		return self._ApplyTypes_(853, 1, (12, 0), (), 'RemoveAllItems', None,)

	def RemoveItem(self, Index=defaultNamedNotOptArg, Count=defaultNamedOptArg):
		return self._ApplyTypes_(852, 1, (12, 0), ((3, 1), (12, 17)), 'RemoveItem', None,Index
			, Count)

	def Reshape(self, Vertex=defaultNamedNotOptArg, Insert=defaultNamedNotOptArg, Left=defaultNamedOptArg, Top=defaultNamedOptArg):
		return self._ApplyTypes_(604, 1, (12, 0), ((3, 1), (12, 1), (12, 17), (12, 17)), 'Reshape', None,Vertex
			, Insert, Left, Top)

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def Selected(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(1123, 1, (12, 0), ((12, 17),), 'Selected', None,Index
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	def Ungroup(self):
		ret = self._oleobj_.InvokeTypes(244, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Ungroup', None)
		return ret

	def Vertices(self, Index1=defaultNamedOptArg, Index2=defaultNamedOptArg):
		return self._ApplyTypes_(621, 1, (12, 0), ((12, 17), (12, 17)), 'Vertices', None,Index1
			, Index2)

	_prop_map_get_ = {
		"Accelerator": (846, 2, (12, 0), (), "Accelerator", None),
		"AddIndent": (1063, 2, (11, 0), (), "AddIndent", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"ArrowHeadLength": (611, 2, (12, 0), (), "ArrowHeadLength", None),
		"ArrowHeadStyle": (612, 2, (12, 0), (), "ArrowHeadStyle", None),
		"ArrowHeadWidth": (613, 2, (12, 0), (), "ArrowHeadWidth", None),
		"AutoSize": (614, 2, (11, 0), (), "AutoSize", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"CancelButton": (858, 2, (11, 0), (), "CancelButton", None),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DefaultButton": (857, 2, (11, 0), (), "DefaultButton", None),
		"DismissButton": (859, 2, (11, 0), (), "DismissButton", None),
		"Display3DShading": (1122, 2, (11, 0), (), "Display3DShading", None),
		"DisplayVerticalScrollBar": (922, 2, (11, 0), (), "DisplayVerticalScrollBar", None),
		"DropDownLines": (848, 2, (3, 0), (), "DropDownLines", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"HelpButton": (860, 2, (11, 0), (), "HelpButton", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		"InputType": (854, 2, (3, 0), (), "InputType", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"LargeChange": (845, 2, (3, 0), (), "LargeChange", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"LinkedCell": (1058, 2, (8, 0), (), "LinkedCell", None),
		"ListFillRange": (847, 2, (8, 0), (), "ListFillRange", None),
		"ListIndex": (850, 2, (3, 0), (), "ListIndex", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"Max": (842, 2, (3, 0), (), "Max", None),
		"Min": (843, 2, (3, 0), (), "Min", None),
		"MultiLine": (855, 2, (11, 0), (), "MultiLine", None),
		"MultiSelect": (32, 2, (11, 0), (), "MultiSelect", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (12, 0), (), "PhoneticAccelerator", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		"RoundedCorners": (619, 2, (11, 0), (), "RoundedCorners", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"SmallChange": (844, 2, (3, 0), (), "SmallChange", None),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Value": (6, 2, (3, 0), (), "Value", None),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
		"_Default": (0, 2, (3, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"AddIndent": ((1063, LCID, 4, 0),()),
		"ArrowHeadLength": ((611, LCID, 4, 0),()),
		"ArrowHeadStyle": ((612, LCID, 4, 0),()),
		"ArrowHeadWidth": ((613, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"CancelButton": ((858, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"DefaultButton": ((857, LCID, 4, 0),()),
		"DismissButton": ((859, LCID, 4, 0),()),
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"DisplayVerticalScrollBar": ((922, LCID, 4, 0),()),
		"DropDownLines": ((848, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HelpButton": ((860, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"InputType": ((854, LCID, 4, 0),()),
		"LargeChange": ((845, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"ListFillRange": ((847, LCID, 4, 0),()),
		"ListIndex": ((850, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Max": ((842, LCID, 4, 0),()),
		"Min": ((843, LCID, 4, 0),()),
		"MultiLine": ((855, LCID, 4, 0),()),
		"MultiSelect": ((32, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"RoundedCorners": ((619, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"SmallChange": ((844, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Drawings(DispatchBaseClass):
	CLSID = IID('{000208A9-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Drawing
	def Add(self, X1=defaultNamedNotOptArg, Y1=defaultNamedNotOptArg, X2=defaultNamedNotOptArg, Y2=defaultNamedNotOptArg
			, Closed=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (11, 1)),X1
			, Y1, X2, Y2, Closed)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{000208A8-0000-0000-C000-000000000046}')
		return ret

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	# Result is of type GroupObject
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00020898-0000-0000-C000-000000000046}')
		return ret

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Reshape(self, Vertex=defaultNamedNotOptArg, Insert=defaultNamedNotOptArg, Left=defaultNamedOptArg, Top=defaultNamedOptArg):
		return self._ApplyTypes_(604, 1, (12, 0), ((3, 1), (11, 1), (12, 17), (12, 17)), 'Reshape', None,Vertex
			, Insert, Left, Top)

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (11, 0), (), "AddIndent", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		"AutoSize": (614, 2, (11, 0), (), "AutoSize", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class DropDown(DispatchBaseClass):
	CLSID = IID('{0002088B-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def AddItem(self, Text=defaultNamedNotOptArg, Index=defaultNamedOptArg):
		return self._ApplyTypes_(851, 1, (12, 0), ((12, 1), (12, 17)), 'AddItem', None,Text
			, Index)

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	# The method GetList is actually a property, but must be used as a method to correctly pass the arguments
	def GetList(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(861, 2, (12, 0), ((12, 17),), 'GetList', None,Index
			)

	# The method GetSelected is actually a property, but must be used as a method to correctly pass the arguments
	def GetSelected(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(1123, 2, (12, 0), ((12, 17),), 'GetSelected', None,Index
			)

	def RemoveAllItems(self):
		return self._ApplyTypes_(853, 1, (12, 0), (), 'RemoveAllItems', None,)

	def RemoveItem(self, Index=defaultNamedNotOptArg, Count=defaultNamedOptArg):
		return self._ApplyTypes_(852, 1, (12, 0), ((3, 1), (12, 17)), 'RemoveItem', None,Index
			, Count)

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	# The method SetList is actually a property, but must be used as a method to correctly pass the arguments
	def SetList(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(861, LCID, 4, (24, 0), ((12, 17), (12, 1)),Index
			, arg1)

	# The method SetSelected is actually a property, but must be used as a method to correctly pass the arguments
	def SetSelected(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(1123, LCID, 4, (24, 0), ((12, 17), (12, 1)),Index
			, arg1)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'BottomRightCell' returns object of type 'Range'
		"BottomRightCell": (615, 2, (9, 0), (), "BottomRightCell", '{00020846-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Display3DShading": (1122, 2, (11, 0), (), "Display3DShading", None),
		"DropDownLines": (848, 2, (3, 0), (), "DropDownLines", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"LinkedCell": (1058, 2, (8, 0), (), "LinkedCell", None),
		"LinkedObject": (862, 2, (12, 0), (), "LinkedObject", None),
		"List": (861, 2, (12, 0), ((12, 17),), "List", None),
		"ListCount": (849, 2, (3, 0), (), "ListCount", None),
		"ListFillRange": (847, 2, (8, 0), (), "ListFillRange", None),
		"ListIndex": (850, 2, (3, 0), (), "ListIndex", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"Selected": (1123, 2, (12, 0), ((12, 17),), "Selected", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		# Method 'TopLeftCell' returns object of type 'Range'
		"TopLeftCell": (620, 2, (9, 0), (), "TopLeftCell", '{00020846-0000-0000-C000-000000000046}'),
		"Value": (6, 2, (3, 0), (), "Value", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
		"_Default": (0, 2, (3, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"DropDownLines": ((848, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"List": ((861, LCID, 4, 0),()),
		"ListFillRange": ((847, LCID, 4, 0),()),
		"ListIndex": ((850, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Selected": ((1123, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class DropDowns(DispatchBaseClass):
	CLSID = IID('{0002088C-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type DropDown
	def Add(self, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg
			, Editable=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (12, 17)),Left
			, Top, Width, Height, Editable)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0002088B-0000-0000-C000-000000000046}')
		return ret

	def AddItem(self, Text=defaultNamedNotOptArg, Index=defaultNamedOptArg):
		return self._ApplyTypes_(851, 1, (12, 0), ((12, 1), (12, 17)), 'AddItem', None,Text
			, Index)

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	# The method GetList is actually a property, but must be used as a method to correctly pass the arguments
	def GetList(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(861, 2, (12, 0), ((12, 17),), 'GetList', None,Index
			)

	# The method GetSelected is actually a property, but must be used as a method to correctly pass the arguments
	def GetSelected(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(1123, 2, (12, 0), ((12, 17),), 'GetSelected', None,Index
			)

	# Result is of type GroupObject
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00020898-0000-0000-C000-000000000046}')
		return ret

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def RemoveAllItems(self):
		return self._ApplyTypes_(853, 1, (12, 0), (), 'RemoveAllItems', None,)

	def RemoveItem(self, Index=defaultNamedNotOptArg, Count=defaultNamedOptArg):
		return self._ApplyTypes_(852, 1, (12, 0), ((3, 1), (12, 17)), 'RemoveItem', None,Index
			, Count)

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	# The method SetList is actually a property, but must be used as a method to correctly pass the arguments
	def SetList(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(861, LCID, 4, (24, 0), ((12, 17), (12, 1)),Index
			, arg1)

	# The method SetSelected is actually a property, but must be used as a method to correctly pass the arguments
	def SetSelected(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(1123, LCID, 4, (24, 0), ((12, 17), (12, 1)),Index
			, arg1)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Display3DShading": (1122, 2, (11, 0), (), "Display3DShading", None),
		"DropDownLines": (848, 2, (3, 0), (), "DropDownLines", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"LinkedCell": (1058, 2, (8, 0), (), "LinkedCell", None),
		"List": (861, 2, (12, 0), ((12, 17),), "List", None),
		"ListFillRange": (847, 2, (8, 0), (), "ListFillRange", None),
		"ListIndex": (850, 2, (3, 0), (), "ListIndex", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"Selected": (1123, 2, (12, 0), ((12, 17),), "Selected", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Value": (6, 2, (3, 0), (), "Value", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
		"_Default": (0, 2, (3, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"DropDownLines": ((848, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"List": ((861, LCID, 4, 0),()),
		"ListFillRange": ((847, LCID, 4, 0),()),
		"ListIndex": ((850, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Selected": ((1123, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class DropLines(DispatchBaseClass):
	CLSID = IID('{000208C4-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class EditBox(DispatchBaseClass):
	CLSID = IID('{00020883-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'BottomRightCell' returns object of type 'Range'
		"BottomRightCell": (615, 2, (9, 0), (), "BottomRightCell", '{00020846-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DisplayVerticalScrollBar": (922, 2, (11, 0), (), "DisplayVerticalScrollBar", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"InputType": (854, 2, (3, 0), (), "InputType", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"LinkedObject": (862, 2, (8, 0), (), "LinkedObject", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"MultiLine": (855, 2, (11, 0), (), "MultiLine", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PasswordEdit": (1162, 2, (11, 0), (), "PasswordEdit", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		# Method 'TopLeftCell' returns object of type 'Range'
		"TopLeftCell": (620, 2, (9, 0), (), "TopLeftCell", '{00020846-0000-0000-C000-000000000046}'),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"DisplayVerticalScrollBar": ((922, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"InputType": ((854, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"MultiLine": ((855, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"PasswordEdit": ((1162, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class EditBoxes(DispatchBaseClass):
	CLSID = IID('{00020884-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type EditBox
	def Add(self, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),Left
			, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00020883-0000-0000-C000-000000000046}')
		return ret

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	# Result is of type GroupObject
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00020898-0000-0000-C000-000000000046}')
		return ret

	def Item(self, Index=defaultNamedNotOptArg):
		return self._ApplyTypes_(170, 1, (12, 0), ((12, 1),), 'Item', None,Index
			)

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DisplayVerticalScrollBar": (922, 2, (11, 0), (), "DisplayVerticalScrollBar", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"InputType": (854, 2, (3, 0), (), "InputType", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"MultiLine": (855, 2, (11, 0), (), "MultiLine", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PasswordEdit": (1162, 2, (11, 0), (), "PasswordEdit", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"DisplayVerticalScrollBar": ((922, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"InputType": ((854, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"MultiLine": ((855, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"PasswordEdit": ((1162, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Error(DispatchBaseClass):
	CLSID = IID('{0002445D-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Ignore": (2210, 2, (11, 0), (), "Ignore", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Value": (6, 2, (11, 0), (), "Value", None),
	}
	_prop_map_put_ = {
		"Ignore": ((2210, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (11, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ErrorBars(DispatchBaseClass):
	CLSID = IID('{000208CE-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def ClearFormats(self):
		return self._ApplyTypes_(112, 1, (12, 0), (), 'ClearFormats', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def GetProperty(self, ID=defaultNamedNotOptArg):
		return self._ApplyTypes_(3256, 1, (12, 0), ((8, 1),), 'GetProperty', None,ID
			)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	def SetProperty(self, ID=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3253, LCID, 1, (24, 0), ((8, 1), (12, 1)),ID
			, Value)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"EndStyle": (1124, 2, (3, 0), (), "EndStyle", None),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"EndStyle": ((1124, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ErrorCheckingOptions(DispatchBaseClass):
	CLSID = IID('{0002445B-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"BackgroundChecking": (2201, 2, (11, 0), (), "BackgroundChecking", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"EmptyCellReferences": (2209, 2, (11, 0), (), "EmptyCellReferences", None),
		"EvaluateToError": (2203, 2, (11, 0), (), "EvaluateToError", None),
		"InconsistentFormula": (2206, 2, (11, 0), (), "InconsistentFormula", None),
		"InconsistentTableFormula": (2675, 2, (11, 0), (), "InconsistentTableFormula", None),
		"IndicatorColorIndex": (2202, 2, (3, 0), (), "IndicatorColorIndex", None),
		"ListDataValidation": (2296, 2, (11, 0), (), "ListDataValidation", None),
		"MisleadingNumberFormats": (3298, 2, (11, 0), (), "MisleadingNumberFormats", None),
		"NumberAsText": (2205, 2, (11, 0), (), "NumberAsText", None),
		"OmittedCells": (2207, 2, (11, 0), (), "OmittedCells", None),
		"OutdatedLinkedDataType": (3380, 2, (11, 0), (), "OutdatedLinkedDataType", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"TextDate": (2204, 2, (11, 0), (), "TextDate", None),
		"UnlockedFormulaCells": (2208, 2, (11, 0), (), "UnlockedFormulaCells", None),
	}
	_prop_map_put_ = {
		"BackgroundChecking": ((2201, LCID, 4, 0),()),
		"EmptyCellReferences": ((2209, LCID, 4, 0),()),
		"EvaluateToError": ((2203, LCID, 4, 0),()),
		"InconsistentFormula": ((2206, LCID, 4, 0),()),
		"InconsistentTableFormula": ((2675, LCID, 4, 0),()),
		"IndicatorColorIndex": ((2202, LCID, 4, 0),()),
		"ListDataValidation": ((2296, LCID, 4, 0),()),
		"MisleadingNumberFormats": ((3298, LCID, 4, 0),()),
		"NumberAsText": ((2205, LCID, 4, 0),()),
		"OmittedCells": ((2207, LCID, 4, 0),()),
		"OutdatedLinkedDataType": ((3380, LCID, 4, 0),()),
		"TextDate": ((2204, LCID, 4, 0),()),
		"UnlockedFormulaCells": ((2208, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Errors(DispatchBaseClass):
	CLSID = IID('{0002445C-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Error
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0002445D-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Error
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{0002445D-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0002445D-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0002445D-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{0002445D-0000-0000-C000-000000000046}')

class FileExportConverter(DispatchBaseClass):
	CLSID = IID('{000244B3-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Description": (218, 2, (8, 0), (), "Description", None),
		"Extensions": (2769, 2, (8, 0), (), "Extensions", None),
		"FileFormat": (288, 2, (3, 0), (), "FileFormat", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class FileExportConverters(DispatchBaseClass):
	CLSID = IID('{000244B4-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type FileExportConverter
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244B3-0000-0000-C000-000000000046}')
		return ret

	# Result is of type FileExportConverter
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244B3-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244B3-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244B3-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{000244B3-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class FillFormat(DispatchBaseClass):
	CLSID = IID('{000C0314-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Background(self):
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), (),)

	def OneColorGradient(self, Style=defaultNamedNotOptArg, Variant=defaultNamedNotOptArg, Degree=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((3, 1), (3, 1), (4, 1)),Style
			, Variant, Degree)

	def Patterned(self, Pattern=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((3, 1),),Pattern
			)

	def PresetGradient(self, Style=defaultNamedNotOptArg, Variant=defaultNamedNotOptArg, PresetGradientType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),Style
			, Variant, PresetGradientType)

	def PresetTextured(self, PresetTexture=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((3, 1),),PresetTexture
			)

	def Solid(self):
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), (),)

	def TwoColorGradient(self, Style=defaultNamedNotOptArg, Variant=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((3, 1), (3, 1)),Style
			, Variant)

	def UserPicture(self, PictureFile=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), ((8, 1),),PictureFile
			)

	def UserTextured(self, TextureFile=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((8, 1),),TextureFile
			)

	_prop_map_get_ = {
		"Application": (1610743808, 2, (9, 0), (), "Application", None),
		# Method 'BackColor' returns object of type 'ColorFormat'
		"BackColor": (100, 2, (9, 0), (), "BackColor", '{000C0312-0000-0000-C000-000000000046}'),
		"Creator": (1610743809, 2, (3, 0), (), "Creator", None),
		# Method 'ForeColor' returns object of type 'ColorFormat'
		"ForeColor": (101, 2, (9, 0), (), "ForeColor", '{000C0312-0000-0000-C000-000000000046}'),
		"GradientAngle": (123, 2, (4, 0), (), "GradientAngle", None),
		"GradientColorType": (102, 2, (3, 0), (), "GradientColorType", None),
		"GradientDegree": (103, 2, (4, 0), (), "GradientDegree", None),
		# Method 'GradientStops' returns object of type 'GradientStops'
		"GradientStops": (114, 2, (9, 0), (), "GradientStops", '{000C03C0-0000-0000-C000-000000000046}'),
		"GradientStyle": (104, 2, (3, 0), (), "GradientStyle", None),
		"GradientVariant": (105, 2, (3, 0), (), "GradientVariant", None),
		"Parent": (1, 2, (9, 0), (), "Parent", None),
		"Pattern": (106, 2, (3, 0), (), "Pattern", None),
		# Method 'PictureEffects' returns object of type 'PictureEffects'
		"PictureEffects": (122, 2, (9, 0), (), "PictureEffects", '{000C03D2-0000-0000-C000-000000000046}'),
		"PresetGradientType": (107, 2, (3, 0), (), "PresetGradientType", None),
		"PresetTexture": (108, 2, (3, 0), (), "PresetTexture", None),
		"RotateWithObject": (121, 2, (3, 0), (), "RotateWithObject", None),
		"TextureAlignment": (117, 2, (3, 0), (), "TextureAlignment", None),
		"TextureHorizontalScale": (118, 2, (4, 0), (), "TextureHorizontalScale", None),
		"TextureName": (109, 2, (8, 0), (), "TextureName", None),
		"TextureOffsetX": (115, 2, (4, 0), (), "TextureOffsetX", None),
		"TextureOffsetY": (116, 2, (4, 0), (), "TextureOffsetY", None),
		"TextureTile": (120, 2, (3, 0), (), "TextureTile", None),
		"TextureType": (110, 2, (3, 0), (), "TextureType", None),
		"TextureVerticalScale": (119, 2, (4, 0), (), "TextureVerticalScale", None),
		"Transparency": (111, 2, (4, 0), (), "Transparency", None),
		"Type": (112, 2, (3, 0), (), "Type", None),
		"Visible": (113, 2, (3, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"BackColor": ((100, LCID, 4, 0),()),
		"ForeColor": ((101, LCID, 4, 0),()),
		"GradientAngle": ((123, LCID, 4, 0),()),
		"RotateWithObject": ((121, LCID, 4, 0),()),
		"TextureAlignment": ((117, LCID, 4, 0),()),
		"TextureHorizontalScale": ((118, LCID, 4, 0),()),
		"TextureOffsetX": ((115, LCID, 4, 0),()),
		"TextureOffsetY": ((116, LCID, 4, 0),()),
		"TextureTile": ((120, LCID, 4, 0),()),
		"TextureVerticalScale": ((119, LCID, 4, 0),()),
		"Transparency": ((111, LCID, 4, 0),()),
		"Visible": ((113, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Filter(DispatchBaseClass):
	CLSID = IID('{00024434-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Criteria1": (796, 2, (12, 0), (), "Criteria1", None),
		"Criteria2": (798, 2, (12, 0), (), "Criteria2", None),
		"On": (1618, 2, (11, 0), (), "On", None),
		"Operator": (797, 2, (3, 0), (), "Operator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"_Operator": (2641, 2, (3, 0), (), "_Operator", None),
	}
	_prop_map_put_ = {
		"Operator": ((797, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Filters(DispatchBaseClass):
	CLSID = IID('{00024433-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Filter
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024434-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Filter
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024434-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024434-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024434-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00024434-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Floor(DispatchBaseClass):
	CLSID = IID('{000208C7-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def ClearFormats(self):
		return self._ApplyTypes_(112, 1, (12, 0), (), 'ClearFormats', None,)

	def Paste(self):
		return self._oleobj_.InvokeTypes(211, LCID, 1, (24, 0), (),)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Fill' returns object of type 'ChartFillFormat'
		"Fill": (1663, 2, (9, 0), (), "Fill", '{00024435-0000-0000-C000-000000000046}'),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PictureType": (161, 2, (12, 0), (), "PictureType", None),
		"Thickness": (2652, 2, (3, 0), (), "Thickness", None),
	}
	_prop_map_put_ = {
		"PictureType": ((161, LCID, 4, 0),()),
		"Thickness": ((2652, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Font(DispatchBaseClass):
	CLSID = IID('{0002084D-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Background": (180, 2, (12, 0), (), "Background", None),
		"Bold": (96, 2, (12, 0), (), "Bold", None),
		"Color": (99, 2, (12, 0), (), "Color", None),
		"ColorIndex": (97, 2, (12, 0), (), "ColorIndex", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"FontStyle": (177, 2, (12, 0), (), "FontStyle", None),
		"Italic": (101, 2, (12, 0), (), "Italic", None),
		"Name": (110, 2, (12, 0), (), "Name", None),
		"OutlineFont": (221, 2, (12, 0), (), "OutlineFont", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Shadow": (103, 2, (12, 0), (), "Shadow", None),
		"Size": (104, 2, (12, 0), (), "Size", None),
		"Strikethrough": (105, 2, (12, 0), (), "Strikethrough", None),
		"Subscript": (179, 2, (12, 0), (), "Subscript", None),
		"Superscript": (178, 2, (12, 0), (), "Superscript", None),
		"ThemeColor": (2365, 2, (12, 0), (), "ThemeColor", None),
		"ThemeFont": (2367, 2, (3, 0), (), "ThemeFont", None),
		"TintAndShade": (2366, 2, (12, 0), (), "TintAndShade", None),
		"Underline": (106, 2, (12, 0), (), "Underline", None),
	}
	_prop_map_put_ = {
		"Background": ((180, LCID, 4, 0),()),
		"Bold": ((96, LCID, 4, 0),()),
		"Color": ((99, LCID, 4, 0),()),
		"ColorIndex": ((97, LCID, 4, 0),()),
		"FontStyle": ((177, LCID, 4, 0),()),
		"Italic": ((101, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OutlineFont": ((221, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Size": ((104, LCID, 4, 0),()),
		"Strikethrough": ((105, LCID, 4, 0),()),
		"Subscript": ((179, LCID, 4, 0),()),
		"Superscript": ((178, LCID, 4, 0),()),
		"ThemeColor": ((2365, LCID, 4, 0),()),
		"ThemeFont": ((2367, LCID, 4, 0),()),
		"TintAndShade": ((2366, LCID, 4, 0),()),
		"Underline": ((106, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class FormatColor(DispatchBaseClass):
	CLSID = IID('{00024491-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Color": (99, 2, (12, 0), (), "Color", None),
		"ColorIndex": (97, 2, (3, 0), (), "ColorIndex", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"ThemeColor": (2365, 2, (12, 0), (), "ThemeColor", None),
		"TintAndShade": (2366, 2, (12, 0), (), "TintAndShade", None),
	}
	_prop_map_put_ = {
		"Color": ((99, LCID, 4, 0),()),
		"ColorIndex": ((97, LCID, 4, 0),()),
		"ThemeColor": ((2365, LCID, 4, 0),()),
		"TintAndShade": ((2366, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class FormatCondition(DispatchBaseClass):
	CLSID = IID('{00024425-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def Modify(self, Type=defaultNamedNotOptArg, Operator=defaultNamedOptArg, Formula1=defaultNamedOptArg, Formula2=defaultNamedOptArg
			, String=defaultNamedOptArg, Operator2=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1581, LCID, 1, (24, 0), ((3, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Type
			, Operator, Formula1, Formula2, String, Operator2
			)

	def ModifyAppliesToRange(self, Range=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2627, LCID, 1, (24, 0), ((9, 1),),Range
			)

	def SetFirstPriority(self):
		return self._oleobj_.InvokeTypes(2629, LCID, 1, (24, 0), (),)

	def SetLastPriority(self):
		return self._oleobj_.InvokeTypes(2630, LCID, 1, (24, 0), (),)

	def _Modify(self, Type=defaultNamedNotOptArg, Operator=defaultNamedOptArg, Formula1=defaultNamedOptArg, Formula2=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2623, LCID, 1, (24, 0), ((3, 1), (12, 17), (12, 17), (12, 17)),Type
			, Operator, Formula1, Formula2)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'AppliesTo' returns object of type 'Range'
		"AppliesTo": (2626, 2, (9, 0), (), "AppliesTo", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'Borders' returns object of type 'Borders'
		"Borders": (435, 2, (9, 0), (), "Borders", '{00020855-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DateOperator": (2614, 2, (3, 0), (), "DateOperator", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"Formula1": (1579, 2, (8, 0), (), "Formula1", None),
		"Formula2": (1580, 2, (8, 0), (), "Formula2", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"NumberFormat": (193, 2, (12, 0), (), "NumberFormat", None),
		"Operator": (797, 2, (3, 0), (), "Operator", None),
		"PTCondition": (2631, 2, (11, 0), (), "PTCondition", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Priority": (985, 2, (3, 0), (), "Priority", None),
		"ScopeType": (2615, 2, (3, 0), (), "ScopeType", None),
		"StopIfTrue": (2625, 2, (11, 0), (), "StopIfTrue", None),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"TextOperator": (2613, 2, (3, 0), (), "TextOperator", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"DateOperator": ((2614, LCID, 4, 0),()),
		"NumberFormat": ((193, LCID, 4, 0),()),
		"Priority": ((985, LCID, 4, 0),()),
		"ScopeType": ((2615, LCID, 4, 0),()),
		"StopIfTrue": ((2625, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"TextOperator": ((2613, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class FormatConditions(DispatchBaseClass):
	CLSID = IID('{00024424-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Add(self, Type=defaultNamedNotOptArg, Operator=defaultNamedOptArg, Formula1=defaultNamedOptArg, Formula2=defaultNamedOptArg
			, String=defaultNamedOptArg, TextOperator=defaultNamedOptArg, DateOperator=defaultNamedOptArg, ScopeType=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((3, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Type
			, Operator, Formula1, Formula2, String, TextOperator
			, DateOperator, ScopeType)
		if ret is not None:
			ret = Dispatch(ret, 'Add', None)
		return ret

	def AddAboveAverage(self):
		ret = self._oleobj_.InvokeTypes(2621, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'AddAboveAverage', None)
		return ret

	def AddColorScale(self, ColorScaleType=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2616, LCID, 1, (9, 0), ((3, 1),),ColorScaleType
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddColorScale', None)
		return ret

	def AddDatabar(self):
		ret = self._oleobj_.InvokeTypes(2618, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'AddDatabar', None)
		return ret

	def AddIconSetCondition(self):
		ret = self._oleobj_.InvokeTypes(2619, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'AddIconSetCondition', None)
		return ret

	def AddTop10(self):
		ret = self._oleobj_.InvokeTypes(2620, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'AddTop10', None)
		return ret

	def AddUniqueValues(self):
		ret = self._oleobj_.InvokeTypes(2622, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'AddUniqueValues', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', None)
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', None)
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class FreeformBuilder(DispatchBaseClass):
	CLSID = IID('{0002443F-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def AddNodes(self, SegmentType=defaultNamedNotOptArg, EditingType=defaultNamedNotOptArg, X1=defaultNamedNotOptArg, Y1=defaultNamedNotOptArg
			, X2=defaultNamedOptArg, Y2=defaultNamedOptArg, X3=defaultNamedOptArg, Y3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1762, LCID, 1, (24, 0), ((3, 1), (3, 1), (4, 1), (4, 1), (12, 17), (12, 17), (12, 17), (12, 17)),SegmentType
			, EditingType, X1, Y1, X2, Y2
			, X3, Y3)

	# Result is of type Shape
	def ConvertToShape(self):
		ret = self._oleobj_.InvokeTypes(1766, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'ConvertToShape', '{00024439-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class FullSeriesCollection(DispatchBaseClass):
	CLSID = IID('{000244DC-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Series
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0002086B-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Series
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{0002086B-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0002086B-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0002086B-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{0002086B-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Graphic(DispatchBaseClass):
	CLSID = IID('{00024459-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Brightness": (2194, 2, (4, 0), (), "Brightness", None),
		"ColorType": (2195, 2, (3, 0), (), "ColorType", None),
		"Contrast": (2196, 2, (4, 0), (), "Contrast", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"CropBottom": (2197, 2, (4, 0), (), "CropBottom", None),
		"CropLeft": (2198, 2, (4, 0), (), "CropLeft", None),
		"CropRight": (2199, 2, (4, 0), (), "CropRight", None),
		"CropTop": (2200, 2, (4, 0), (), "CropTop", None),
		"Filename": (1415, 2, (8, 0), (), "Filename", None),
		"Height": (123, 2, (4, 0), (), "Height", None),
		"LockAspectRatio": (1700, 2, (3, 0), (), "LockAspectRatio", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Width": (122, 2, (4, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"Brightness": ((2194, LCID, 4, 0),()),
		"ColorType": ((2195, LCID, 4, 0),()),
		"Contrast": ((2196, LCID, 4, 0),()),
		"CropBottom": ((2197, LCID, 4, 0),()),
		"CropLeft": ((2198, LCID, 4, 0),()),
		"CropRight": ((2199, LCID, 4, 0),()),
		"CropTop": ((2200, LCID, 4, 0),()),
		"Filename": ((1415, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"LockAspectRatio": ((1700, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Gridlines(DispatchBaseClass):
	CLSID = IID('{000208C3-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def GetProperty(self, ID=defaultNamedNotOptArg):
		return self._ApplyTypes_(3256, 1, (12, 0), ((8, 1),), 'GetProperty', None,ID
			)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	def SetProperty(self, ID=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3253, LCID, 1, (24, 0), ((8, 1), (12, 1)),ID
			, Value)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class GroupBox(DispatchBaseClass):
	CLSID = IID('{00020889-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		"Accelerator": (846, 2, (12, 0), (), "Accelerator", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'BottomRightCell' returns object of type 'Range'
		"BottomRightCell": (615, 2, (9, 0), (), "BottomRightCell", '{00020846-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Display3DShading": (1122, 2, (11, 0), (), "Display3DShading", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (12, 0), (), "PhoneticAccelerator", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		# Method 'TopLeftCell' returns object of type 'Range'
		"TopLeftCell": (620, 2, (9, 0), (), "TopLeftCell", '{00020846-0000-0000-C000-000000000046}'),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class GroupBoxes(DispatchBaseClass):
	CLSID = IID('{0002088A-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type GroupBox
	def Add(self, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),Left
			, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00020889-0000-0000-C000-000000000046}')
		return ret

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	# Result is of type GroupObject
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00020898-0000-0000-C000-000000000046}')
		return ret

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		"Accelerator": (846, 2, (12, 0), (), "Accelerator", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Display3DShading": (1122, 2, (11, 0), (), "Display3DShading", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (12, 0), (), "PhoneticAccelerator", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class GroupObject(DispatchBaseClass):
	CLSID = IID('{00020898-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	def Ungroup(self):
		ret = self._oleobj_.InvokeTypes(244, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Ungroup', None)
		return ret

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (11, 0), (), "AddIndent", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"ArrowHeadLength": (611, 2, (12, 0), (), "ArrowHeadLength", None),
		"ArrowHeadStyle": (612, 2, (12, 0), (), "ArrowHeadStyle", None),
		"ArrowHeadWidth": (613, 2, (12, 0), (), "ArrowHeadWidth", None),
		"AutoSize": (614, 2, (11, 0), (), "AutoSize", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		# Method 'BottomRightCell' returns object of type 'Range'
		"BottomRightCell": (615, 2, (9, 0), (), "BottomRightCell", '{00020846-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		"RoundedCorners": (619, 2, (11, 0), (), "RoundedCorners", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Top": (126, 2, (5, 0), (), "Top", None),
		# Method 'TopLeftCell' returns object of type 'Range'
		"TopLeftCell": (620, 2, (9, 0), (), "TopLeftCell", '{00020846-0000-0000-C000-000000000046}'),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
		"_Default": (0, 2, (3, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"ArrowHeadLength": ((611, LCID, 4, 0),()),
		"ArrowHeadStyle": ((612, LCID, 4, 0),()),
		"ArrowHeadWidth": ((613, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"RoundedCorners": ((619, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), (), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class GroupObjects(DispatchBaseClass):
	CLSID = IID('{00020899-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type GroupObject
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00020898-0000-0000-C000-000000000046}')
		return ret

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	def Ungroup(self):
		ret = self._oleobj_.InvokeTypes(244, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Ungroup', None)
		return ret

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (11, 0), (), "AddIndent", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"ArrowHeadLength": (611, 2, (12, 0), (), "ArrowHeadLength", None),
		"ArrowHeadStyle": (612, 2, (12, 0), (), "ArrowHeadStyle", None),
		"ArrowHeadWidth": (613, 2, (12, 0), (), "ArrowHeadWidth", None),
		"AutoSize": (614, 2, (11, 0), (), "AutoSize", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		"RoundedCorners": (619, 2, (11, 0), (), "RoundedCorners", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
		"_Default": (0, 2, (3, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"ArrowHeadLength": ((611, LCID, 4, 0),()),
		"ArrowHeadStyle": ((612, LCID, 4, 0),()),
		"ArrowHeadWidth": ((613, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"RoundedCorners": ((619, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), (), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class GroupShapes(DispatchBaseClass):
	CLSID = IID('{0002443C-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Shape
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ShapeRange
	# The method Range is actually a property, but must be used as a method to correctly pass the arguments
	def Range(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(197, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Range', '{0002443B-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Shape
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024439-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024439-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024439-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{00024439-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class HPageBreak(DispatchBaseClass):
	CLSID = IID('{00024401-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def DragOff(self, Direction=defaultNamedNotOptArg, RegionIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1420, LCID, 1, (24, 0), ((3, 1), (3, 1)),Direction
			, RegionIndex)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Extent": (1422, 2, (3, 0), (), "Extent", None),
		# Method 'Location' returns object of type 'Range'
		"Location": (1397, 2, (9, 0), (), "Location", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'Parent' returns object of type 'Worksheet'
		"Parent": (150, 2, (13, 0), (), "Parent", '{00020820-0000-0000-C000-000000000046}'),
		"Type": (108, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Location": ((1397, LCID, 8, 0),()),
		"Type": ((108, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class HPageBreaks(DispatchBaseClass):
	CLSID = IID('{00024404-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type HPageBreak
	def Add(self, Before=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((9, 1),),Before
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00024401-0000-0000-C000-000000000046}')
		return ret

	# Result is of type HPageBreak
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024401-0000-0000-C000-000000000046}')
		return ret

	# Result is of type HPageBreak
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024401-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024401-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024401-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00024401-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class HeaderFooter(DispatchBaseClass):
	CLSID = IID('{000244A1-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Picture' returns object of type 'Graphic'
		"Picture": (479, 2, (9, 0), (), "Picture", '{00024459-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
	}
	_prop_map_put_ = {
		"Text": ((138, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class HiLoLines(DispatchBaseClass):
	CLSID = IID('{000208C2-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Hyperlink(DispatchBaseClass):
	CLSID = IID('{00024431-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def AddToFavorites(self):
		return self._oleobj_.InvokeTypes(1476, LCID, 1, (24, 0), (),)

	def CreateNewDocument(self, Filename=defaultNamedNotOptArg, EditNow=defaultNamedNotOptArg, Overwrite=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1884, LCID, 1, (24, 0), ((8, 1), (11, 1), (11, 1)),Filename
			, EditNow, Overwrite)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def Follow(self, NewWindow=defaultNamedOptArg, AddHistory=defaultNamedOptArg, ExtraInfo=defaultNamedOptArg, Method=defaultNamedOptArg
			, HeaderInfo=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1616, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),NewWindow
			, AddHistory, ExtraInfo, Method, HeaderInfo)

	_prop_map_get_ = {
		"Address": (236, 2, (8, 0), (), "Address", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"EmailSubject": (1883, 2, (8, 0), (), "EmailSubject", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'Range' returns object of type 'Range'
		"Range": (197, 2, (9, 0), (), "Range", '{00020846-0000-0000-C000-000000000046}'),
		"ScreenTip": (1881, 2, (8, 0), (), "ScreenTip", None),
		# Method 'Shape' returns object of type 'Shape'
		"Shape": (1582, 2, (9, 0), (), "Shape", '{00024439-0000-0000-C000-000000000046}'),
		"SubAddress": (1471, 2, (8, 0), (), "SubAddress", None),
		"TextToDisplay": (1882, 2, (8, 0), (), "TextToDisplay", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Address": ((236, LCID, 4, 0),()),
		"EmailSubject": ((1883, LCID, 4, 0),()),
		"ScreenTip": ((1881, LCID, 4, 0),()),
		"SubAddress": ((1471, LCID, 4, 0),()),
		"TextToDisplay": ((1882, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Hyperlinks(DispatchBaseClass):
	CLSID = IID('{00024430-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Add(self, Anchor=defaultNamedNotOptArg, Address=defaultNamedNotOptArg, SubAddress=defaultNamedOptArg, ScreenTip=defaultNamedOptArg
			, TextToDisplay=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((9, 1), (8, 1), (12, 17), (12, 17), (12, 17)),Anchor
			, Address, SubAddress, ScreenTip, TextToDisplay)
		if ret is not None:
			ret = Dispatch(ret, 'Add', None)
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	# Result is of type Hyperlink
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024431-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Hyperlink
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024431-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024431-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024431-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00024431-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IAboveAverage(DispatchBaseClass):
	CLSID = IID('{0002449E-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AboveBelow": (2731, 2, (3, 0), ((16387, 10),), "AboveBelow", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AppliesTo": (2626, 2, (3, 0), ((16393, 10),), "AppliesTo", None),
		"Borders": (435, 2, (3, 0), ((16393, 10),), "Borders", None),
		"CalcFor": (2730, 2, (3, 0), ((16387, 10),), "CalcFor", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"NumStdDev": (2732, 2, (3, 0), ((16387, 10),), "NumStdDev", None),
		"NumberFormat": (193, 2, (3, 0), ((16396, 10),), "NumberFormat", None),
		"PTCondition": (2631, 2, (3, 0), ((16395, 10),), "PTCondition", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Priority": (985, 2, (3, 0), ((16387, 10),), "Priority", None),
		"ScopeType": (2615, 2, (3, 0), ((16387, 10),), "ScopeType", None),
		"StopIfTrue": (2625, 2, (3, 0), ((16395, 10),), "StopIfTrue", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
	}
	_prop_map_put_ = {
		"AboveBelow": ((2731, LCID, 4, 0),()),
		"CalcFor": ((2730, LCID, 4, 0),()),
		"NumStdDev": ((2732, LCID, 4, 0),()),
		"NumberFormat": ((193, LCID, 4, 0),()),
		"Priority": ((985, LCID, 4, 0),()),
		"ScopeType": ((2615, LCID, 4, 0),()),
		"StopIfTrue": ((2625, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAction(DispatchBaseClass):
	CLSID = IID('{0002448F-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Content": (2713, 2, (3, 0), ((16392, 10),), "Content", None),
		"Coordinate": (2712, 2, (3, 0), ((16392, 10),), "Coordinate", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IActions(DispatchBaseClass):
	CLSID = IID('{00024490-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IAddIn(DispatchBaseClass):
	CLSID = IID('{00020857-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Author": (574, 2, (3, 0), ((16392, 10),), "Author", None),
		"CLSID": (2043, 2, (3, 0), ((16392, 10),), "CLSID", None),
		"Comments": (575, 2, (3, 0), ((16392, 10),), "Comments", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"FullName": (289, 2, (3, 0), ((16392, 10),), "FullName", None),
		"Installed": (550, 2, (3, 0), ((16395, 10),), "Installed", None),
		"IsOpen": (2865, 2, (3, 0), ((16395, 10),), "IsOpen", None),
		"Keywords": (577, 2, (3, 0), ((16392, 10),), "Keywords", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Path": (291, 2, (3, 0), ((16392, 10),), "Path", None),
		"Subject": (953, 2, (3, 0), ((16392, 10),), "Subject", None),
		"Title": (199, 2, (3, 0), ((16392, 10),), "Title", None),
		"progID": (1523, 2, (3, 0), ((16392, 10),), "progID", None),
	}
	_prop_map_put_ = {
		"Installed": ((550, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAddIns(DispatchBaseClass):
	CLSID = IID('{00020858-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IAddIns2(DispatchBaseClass):
	CLSID = IID('{000244B5-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IAllowEditRange(DispatchBaseClass):
	CLSID = IID('{0002446B-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Range": (197, 2, (3, 0), ((16393, 10),), "Range", None),
		"Title": (199, 2, (3, 0), ((16392, 10),), "Title", None),
		"Users": (2238, 2, (3, 0), ((16393, 10),), "Users", None),
	}
	_prop_map_put_ = {
		"Range": ((197, LCID, 8, 0),()),
		"Title": ((199, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAllowEditRanges(DispatchBaseClass):
	CLSID = IID('{0002446A-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IAppEvents(DispatchBaseClass):
	CLSID = IID('{00024413-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IArc(DispatchBaseClass):
	CLSID = IID('{000208A0-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (3, 0), ((16395, 10),), "AddIndent", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"AutoSize": (614, 2, (3, 0), ((16395, 10),), "AutoSize", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"BottomRightCell": (615, 2, (3, 0), ((16393, 10),), "BottomRightCell", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"TopLeftCell": (620, 2, (3, 0), ((16393, 10),), "TopLeftCell", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IArcs(DispatchBaseClass):
	CLSID = IID('{000208A1-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (3, 0), ((16395, 10),), "AddIndent", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"AutoSize": (614, 2, (3, 0), ((16395, 10),), "AutoSize", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IAreas(DispatchBaseClass):
	CLSID = IID('{00020860-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IAuthor(DispatchBaseClass):
	CLSID = IID('{000244FE-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ProviderID": (3286, 2, (3, 0), ((16392, 10),), "ProviderID", None),
		"UserID": (3287, 2, (3, 0), ((16392, 10),), "UserID", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAutoCorrect(DispatchBaseClass):
	CLSID = IID('{000208D4-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoExpandListRange": (2294, 2, (3, 0), ((16395, 10),), "AutoExpandListRange", None),
		"AutoFillFormulasInLists": (2642, 2, (3, 0), ((16395, 10),), "AutoFillFormulasInLists", None),
		"CapitalizeNamesOfDays": (1150, 2, (3, 0), ((16395, 10),), "CapitalizeNamesOfDays", None),
		"ConvertNumbersWithECharacter": (3314, 2, (3, 0), ((16395, 10),), "ConvertNumbersWithECharacter", None),
		"CorrectCapsLock": (1620, 2, (3, 0), ((16395, 10),), "CorrectCapsLock", None),
		"CorrectSentenceCap": (1619, 2, (3, 0), ((16395, 10),), "CorrectSentenceCap", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DisplayAutoCorrectOptions": (1926, 2, (3, 0), ((16395, 10),), "DisplayAutoCorrectOptions", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ReplaceText": (1148, 2, (3, 0), ((16395, 10),), "ReplaceText", None),
		"ReplacementList": (1151, 2, (3, 0), ((12, 17), (16396, 10)), "ReplacementList", None),
		"TruncateLargeNumbers": (3313, 2, (3, 0), ((16395, 10),), "TruncateLargeNumbers", None),
		"TruncateLeadingZeros": (3312, 2, (3, 0), ((16395, 10),), "TruncateLeadingZeros", None),
		"TwoInitialCapitals": (1149, 2, (3, 0), ((16395, 10),), "TwoInitialCapitals", None),
	}
	_prop_map_put_ = {
		"AutoExpandListRange": ((2294, LCID, 4, 0),()),
		"AutoFillFormulasInLists": ((2642, LCID, 4, 0),()),
		"CapitalizeNamesOfDays": ((1150, LCID, 4, 0),()),
		"ConvertNumbersWithECharacter": ((3314, LCID, 4, 0),()),
		"CorrectCapsLock": ((1620, LCID, 4, 0),()),
		"CorrectSentenceCap": ((1619, LCID, 4, 0),()),
		"DisplayAutoCorrectOptions": ((1926, LCID, 4, 0),()),
		"ReplaceText": ((1148, LCID, 4, 0),()),
		"ReplacementList": ((1151, LCID, 4, 0),()),
		"TruncateLargeNumbers": ((3313, LCID, 4, 0),()),
		"TruncateLeadingZeros": ((3312, LCID, 4, 0),()),
		"TwoInitialCapitals": ((1149, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAutoFilter(DispatchBaseClass):
	CLSID = IID('{00024432-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"FilterMode": (800, 2, (3, 0), ((16395, 10),), "FilterMode", None),
		"Filters": (1617, 2, (3, 0), ((16393, 10),), "Filters", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Range": (197, 2, (3, 0), ((16393, 10),), "Range", None),
		"Sort": (3288, 2, (3, 0), ((16393, 10),), "Sort", None),
		"_Sort": (880, 2, (3, 0), ((16393, 10),), "_Sort", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAutoRecover(DispatchBaseClass):
	CLSID = IID('{0002445A-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Path": (291, 2, (3, 0), ((16392, 10),), "Path", None),
		"Time": (394, 2, (3, 0), ((16387, 10),), "Time", None),
	}
	_prop_map_put_ = {
		"Enabled": ((600, LCID, 4, 0),()),
		"Path": ((291, LCID, 4, 0),()),
		"Time": ((394, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAxes(DispatchBaseClass):
	CLSID = IID('{0002085B-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IAxis(DispatchBaseClass):
	CLSID = IID('{00020848-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AxisBetweenCategories": (45, 2, (3, 0), ((16395, 10),), "AxisBetweenCategories", None),
		"AxisGroup": (47, 2, (3, 0), ((16387, 10),), "AxisGroup", None),
		"AxisTitle": (82, 2, (3, 0), ((16393, 10),), "AxisTitle", None),
		"BaseUnit": (1647, 2, (3, 0), ((16387, 10),), "BaseUnit", None),
		"BaseUnitIsAuto": (1648, 2, (3, 0), ((16395, 10),), "BaseUnitIsAuto", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"CategoryNames": (156, 2, (3, 0), ((16396, 10),), "CategoryNames", None),
		"CategorySortOrder": (3228, 2, (3, 0), ((16387, 10),), "CategorySortOrder", None),
		"CategoryType": (1651, 2, (3, 0), ((16387, 10),), "CategoryType", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Crosses": (42, 2, (3, 0), ((16387, 10),), "Crosses", None),
		"CrossesAt": (43, 2, (3, 0), ((16389, 10),), "CrossesAt", None),
		"DisplayUnit": (1886, 2, (3, 0), ((16387, 10),), "DisplayUnit", None),
		"DisplayUnitCustom": (1887, 2, (3, 0), ((16389, 10),), "DisplayUnitCustom", None),
		"DisplayUnitLabel": (1889, 2, (3, 0), ((16393, 10),), "DisplayUnitLabel", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"HasDisplayUnitLabel": (1888, 2, (3, 0), ((16395, 10),), "HasDisplayUnitLabel", None),
		"HasMajorGridlines": (24, 2, (3, 0), ((16395, 10),), "HasMajorGridlines", None),
		"HasMinorGridlines": (25, 2, (3, 0), ((16395, 10),), "HasMinorGridlines", None),
		"HasTitle": (54, 2, (3, 0), ((16395, 10),), "HasTitle", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"LogBase": (2646, 2, (3, 0), ((16389, 10),), "LogBase", None),
		"MajorGridlines": (89, 2, (3, 0), ((16393, 10),), "MajorGridlines", None),
		"MajorTickMark": (26, 2, (3, 0), ((16387, 10),), "MajorTickMark", None),
		"MajorUnit": (37, 2, (3, 0), ((16389, 10),), "MajorUnit", None),
		"MajorUnitIsAuto": (38, 2, (3, 0), ((16395, 10),), "MajorUnitIsAuto", None),
		"MajorUnitScale": (1649, 2, (3, 0), ((16387, 10),), "MajorUnitScale", None),
		"MaximumScale": (35, 2, (3, 0), ((16389, 10),), "MaximumScale", None),
		"MaximumScaleIsAuto": (36, 2, (3, 0), ((16395, 10),), "MaximumScaleIsAuto", None),
		"MinimumScale": (33, 2, (3, 0), ((16389, 10),), "MinimumScale", None),
		"MinimumScaleIsAuto": (34, 2, (3, 0), ((16395, 10),), "MinimumScaleIsAuto", None),
		"MinorGridlines": (90, 2, (3, 0), ((16393, 10),), "MinorGridlines", None),
		"MinorTickMark": (27, 2, (3, 0), ((16387, 10),), "MinorTickMark", None),
		"MinorUnit": (39, 2, (3, 0), ((16389, 10),), "MinorUnit", None),
		"MinorUnitIsAuto": (40, 2, (3, 0), ((16395, 10),), "MinorUnitIsAuto", None),
		"MinorUnitScale": (1650, 2, (3, 0), ((16387, 10),), "MinorUnitScale", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ReversePlotOrder": (44, 2, (3, 0), ((16395, 10),), "ReversePlotOrder", None),
		"ScaleType": (41, 2, (3, 0), ((16387, 10),), "ScaleType", None),
		"TickLabelPosition": (28, 2, (3, 0), ((16387, 10),), "TickLabelPosition", None),
		"TickLabelSpacing": (29, 2, (3, 0), ((16387, 10),), "TickLabelSpacing", None),
		"TickLabelSpacingIsAuto": (2647, 2, (3, 0), ((16395, 10),), "TickLabelSpacingIsAuto", None),
		"TickLabels": (91, 2, (3, 0), ((16393, 10),), "TickLabels", None),
		"TickMarkSpacing": (31, 2, (3, 0), ((16387, 10),), "TickMarkSpacing", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
	}
	_prop_map_put_ = {
		"AxisBetweenCategories": ((45, LCID, 4, 0),()),
		"BaseUnit": ((1647, LCID, 4, 0),()),
		"BaseUnitIsAuto": ((1648, LCID, 4, 0),()),
		"CategoryNames": ((156, LCID, 4, 0),()),
		"CategorySortOrder": ((3228, LCID, 4, 0),()),
		"CategoryType": ((1651, LCID, 4, 0),()),
		"Crosses": ((42, LCID, 4, 0),()),
		"CrossesAt": ((43, LCID, 4, 0),()),
		"DisplayUnit": ((1886, LCID, 4, 0),()),
		"DisplayUnitCustom": ((1887, LCID, 4, 0),()),
		"HasDisplayUnitLabel": ((1888, LCID, 4, 0),()),
		"HasMajorGridlines": ((24, LCID, 4, 0),()),
		"HasMinorGridlines": ((25, LCID, 4, 0),()),
		"HasTitle": ((54, LCID, 4, 0),()),
		"LogBase": ((2646, LCID, 4, 0),()),
		"MajorTickMark": ((26, LCID, 4, 0),()),
		"MajorUnit": ((37, LCID, 4, 0),()),
		"MajorUnitIsAuto": ((38, LCID, 4, 0),()),
		"MajorUnitScale": ((1649, LCID, 4, 0),()),
		"MaximumScale": ((35, LCID, 4, 0),()),
		"MaximumScaleIsAuto": ((36, LCID, 4, 0),()),
		"MinimumScale": ((33, LCID, 4, 0),()),
		"MinimumScaleIsAuto": ((34, LCID, 4, 0),()),
		"MinorTickMark": ((27, LCID, 4, 0),()),
		"MinorUnit": ((39, LCID, 4, 0),()),
		"MinorUnitIsAuto": ((40, LCID, 4, 0),()),
		"MinorUnitScale": ((1650, LCID, 4, 0),()),
		"ReversePlotOrder": ((44, LCID, 4, 0),()),
		"ScaleType": ((41, LCID, 4, 0),()),
		"TickLabelPosition": ((28, LCID, 4, 0),()),
		"TickLabelSpacing": ((29, LCID, 4, 0),()),
		"TickLabelSpacingIsAuto": ((2647, LCID, 4, 0),()),
		"TickMarkSpacing": ((31, LCID, 4, 0),()),
		"Type": ((108, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAxisTitle(DispatchBaseClass):
	CLSID = IID('{0002084A-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Fill": (1663, 2, (3, 0), ((16393, 10),), "Fill", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"FormulaLocal": (263, 2, (3, 0), ((16392, 10),), "FormulaLocal", None),
		"FormulaR1C1": (264, 2, (3, 0), ((16392, 10),), "FormulaR1C1", None),
		"FormulaR1C1Local": (265, 2, (3, 0), ((16392, 10),), "FormulaR1C1Local", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"IncludeInLayout": (2648, 2, (3, 0), ((16395, 10),), "IncludeInLayout", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Position": (133, 2, (3, 0), ((16387, 10),), "Position", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
	}
	_prop_map_put_ = {
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"FormulaLocal": ((263, LCID, 4, 0),()),
		"FormulaR1C1": ((264, LCID, 4, 0),()),
		"FormulaR1C1Local": ((265, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"IncludeInLayout": ((2648, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBorder(DispatchBaseClass):
	CLSID = IID('{00020854-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Color": (99, 2, (3, 0), ((16396, 10),), "Color", None),
		"ColorIndex": (97, 2, (3, 0), ((16396, 10),), "ColorIndex", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"LineStyle": (119, 2, (3, 0), ((16396, 10),), "LineStyle", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ThemeColor": (2365, 2, (3, 0), ((16396, 10),), "ThemeColor", None),
		"TintAndShade": (2366, 2, (3, 0), ((16396, 10),), "TintAndShade", None),
		"Weight": (120, 2, (3, 0), ((16396, 10),), "Weight", None),
	}
	_prop_map_put_ = {
		"Color": ((99, LCID, 4, 0),()),
		"ColorIndex": ((97, LCID, 4, 0),()),
		"LineStyle": ((119, LCID, 4, 0),()),
		"ThemeColor": ((2365, LCID, 4, 0),()),
		"TintAndShade": ((2366, LCID, 4, 0),()),
		"Weight": ((120, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBorders(DispatchBaseClass):
	CLSID = IID('{00020855-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Color": (99, 2, (3, 0), ((16396, 10),), "Color", None),
		"ColorIndex": (97, 2, (3, 0), ((16396, 10),), "ColorIndex", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"LineStyle": (119, 2, (3, 0), ((16396, 10),), "LineStyle", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ThemeColor": (2365, 2, (3, 0), ((16396, 10),), "ThemeColor", None),
		"TintAndShade": (2366, 2, (3, 0), ((16396, 10),), "TintAndShade", None),
		"Value": (6, 2, (3, 0), ((16396, 10),), "Value", None),
		"Weight": (120, 2, (3, 0), ((16396, 10),), "Weight", None),
	}
	_prop_map_put_ = {
		"Color": ((99, LCID, 4, 0),()),
		"ColorIndex": ((97, LCID, 4, 0),()),
		"LineStyle": ((119, LCID, 4, 0),()),
		"ThemeColor": ((2365, LCID, 4, 0),()),
		"TintAndShade": ((2366, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Weight": ((120, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16396, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IButton(DispatchBaseClass):
	CLSID = IID('{0002087D-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Accelerator": (846, 2, (3, 0), ((16396, 10),), "Accelerator", None),
		"AddIndent": (1063, 2, (3, 0), ((16395, 10),), "AddIndent", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"AutoSize": (614, 2, (3, 0), ((16395, 10),), "AutoSize", None),
		"BottomRightCell": (615, 2, (3, 0), ((16393, 10),), "BottomRightCell", None),
		"CancelButton": (858, 2, (3, 0), ((16395, 10),), "CancelButton", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DefaultButton": (857, 2, (3, 0), ((16395, 10),), "DefaultButton", None),
		"DismissButton": (859, 2, (3, 0), ((16395, 10),), "DismissButton", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"HelpButton": (860, 2, (3, 0), ((16395, 10),), "HelpButton", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (3, 0), ((16396, 10),), "PhoneticAccelerator", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"TopLeftCell": (620, 2, (3, 0), ((16393, 10),), "TopLeftCell", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"CancelButton": ((858, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"DefaultButton": ((857, LCID, 4, 0),()),
		"DismissButton": ((859, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HelpButton": ((860, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IButtons(DispatchBaseClass):
	CLSID = IID('{0002087E-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Accelerator": (846, 2, (3, 0), ((16396, 10),), "Accelerator", None),
		"AddIndent": (1063, 2, (3, 0), ((16395, 10),), "AddIndent", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"AutoSize": (614, 2, (3, 0), ((16395, 10),), "AutoSize", None),
		"CancelButton": (858, 2, (3, 0), ((16395, 10),), "CancelButton", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DefaultButton": (857, 2, (3, 0), ((16395, 10),), "DefaultButton", None),
		"DismissButton": (859, 2, (3, 0), ((16395, 10),), "DismissButton", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"HelpButton": (860, 2, (3, 0), ((16395, 10),), "HelpButton", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (3, 0), ((16396, 10),), "PhoneticAccelerator", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"CancelButton": ((858, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"DefaultButton": ((857, LCID, 4, 0),()),
		"DismissButton": ((859, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HelpButton": ((860, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ICalculatedFields(DispatchBaseClass):
	CLSID = IID('{00024420-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ICalculatedItems(DispatchBaseClass):
	CLSID = IID('{00024421-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ICalculatedMember(DispatchBaseClass):
	CLSID = IID('{00024455-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DisplayFolder": (2927, 2, (3, 0), ((16392, 10),), "DisplayFolder", None),
		"Dynamic": (2926, 2, (3, 0), ((16395, 10),), "Dynamic", None),
		"FlattenHierarchies": (2924, 2, (3, 0), ((16395, 10),), "FlattenHierarchies", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"HierarchizeDistinct": (2925, 2, (3, 0), ((16395, 10),), "HierarchizeDistinct", None),
		"IsValid": (2188, 2, (3, 0), ((16395, 10),), "IsValid", None),
		"MeasureGroup": (3092, 2, (3, 0), ((16392, 10),), "MeasureGroup", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"NumberFormat": (193, 2, (3, 0), ((16387, 10),), "NumberFormat", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ParentHierarchy": (3093, 2, (3, 0), ((16392, 10),), "ParentHierarchy", None),
		"ParentMember": (3094, 2, (3, 0), ((16392, 10),), "ParentMember", None),
		"SolveOrder": (2187, 2, (3, 0), ((16387, 10),), "SolveOrder", None),
		"SourceName": (721, 2, (3, 0), ((16392, 10),), "SourceName", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
		"_Default": (0, 2, (3, 0), ((16392, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"FlattenHierarchies": ((2924, LCID, 4, 0),()),
		"HierarchizeDistinct": ((2925, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), ((16392, 10),), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICalculatedMembers(DispatchBaseClass):
	CLSID = IID('{00024454-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ICanvasShapes(DispatchBaseClass):
	CLSID = IID('{0002444F-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICategoryCollection(DispatchBaseClass):
	CLSID = IID('{000244DE-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ICellControl(DispatchBaseClass):
	CLSID = IID('{00024503-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Type": (108, 2, (3, 0), ((16396, 10),), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICellFormat(DispatchBaseClass):
	CLSID = IID('{00024450-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (3, 0), ((16396, 10),), "AddIndent", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Borders": (435, 2, (3, 0), ((16393, 10),), "Borders", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"FormulaHidden": (262, 2, (3, 0), ((16396, 10),), "FormulaHidden", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"IndentLevel": (201, 2, (3, 0), ((16396, 10),), "IndentLevel", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Locked": (269, 2, (3, 0), ((16396, 10),), "Locked", None),
		"MergeCells": (208, 2, (3, 0), ((16396, 10),), "MergeCells", None),
		"NumberFormatLocal": (1097, 2, (3, 0), ((16396, 10),), "NumberFormatLocal", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ShrinkToFit": (209, 2, (3, 0), ((16396, 10),), "ShrinkToFit", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"WrapText": (276, 2, (3, 0), ((16396, 10),), "WrapText", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"Borders": ((435, LCID, 8, 0),()),
		"Font": ((146, LCID, 8, 0),()),
		"FormulaHidden": ((262, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"IndentLevel": ((201, LCID, 4, 0),()),
		"Interior": ((129, LCID, 8, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"MergeCells": ((208, LCID, 4, 0),()),
		"NumberFormatLocal": ((1097, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"ShrinkToFit": ((209, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"WrapText": ((276, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICharacters(DispatchBaseClass):
	CLSID = IID('{00020878-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PhoneticCharacters": (1522, 2, (3, 0), ((16392, 10),), "PhoneticCharacters", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"PhoneticCharacters": ((1522, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IChartArea(DispatchBaseClass):
	CLSID = IID('{000208CC-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Fill": (1663, 2, (3, 0), ((16393, 10),), "Fill", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"RoundedCorners": (619, 2, (3, 0), ((16395, 10),), "RoundedCorners", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
	}
	_prop_map_put_ = {
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"RoundedCorners": ((619, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IChartCategory(DispatchBaseClass):
	CLSID = IID('{000244DD-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"IsFiltered": (3083, 2, (3, 0), ((16395, 10),), "IsFiltered", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
		"IsFiltered": ((3083, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IChartColorFormat(DispatchBaseClass):
	CLSID = IID('{00024436-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"RGB": (1055, 2, (3, 0), ((16387, 10),), "RGB", None),
		"SchemeColor": (1646, 2, (3, 0), ((16387, 10),), "SchemeColor", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
		"_Default": (0, 2, (3, 0), ((16387, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"SchemeColor": ((1646, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), ((16387, 10),), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IChartEvents(DispatchBaseClass):
	CLSID = IID('{0002440F-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IChartFillFormat(DispatchBaseClass):
	CLSID = IID('{00024435-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"BackColor": (1638, 2, (3, 0), ((16393, 10),), "BackColor", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"ForeColor": (1639, 2, (3, 0), ((16393, 10),), "ForeColor", None),
		"GradientColorType": (1640, 2, (3, 0), ((16387, 10),), "GradientColorType", None),
		"GradientDegree": (1641, 2, (3, 0), ((16388, 10),), "GradientDegree", None),
		"GradientStyle": (1642, 2, (3, 0), ((16387, 10),), "GradientStyle", None),
		"GradientVariant": (1643, 2, (3, 0), ((16387, 10),), "GradientVariant", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Pattern": (95, 2, (3, 0), ((16387, 10),), "Pattern", None),
		"PresetGradientType": (1637, 2, (3, 0), ((16387, 10),), "PresetGradientType", None),
		"PresetTexture": (1626, 2, (3, 0), ((16387, 10),), "PresetTexture", None),
		"TextureName": (1644, 2, (3, 0), ((16392, 10),), "TextureName", None),
		"TextureType": (1645, 2, (3, 0), ((16387, 10),), "TextureType", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
		"Visible": (558, 2, (3, 0), ((16387, 10),), "Visible", None),
	}
	_prop_map_put_ = {
		"Visible": ((558, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IChartFormat(DispatchBaseClass):
	CLSID = IID('{000244B2-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Adjustments": (1691, 2, (3, 0), ((16393, 10),), "Adjustments", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoShapeType": (1693, 2, (3, 0), ((16387, 10),), "AutoShapeType", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Fill": (1663, 2, (3, 0), ((16393, 10),), "Fill", None),
		"Glow": (2663, 2, (3, 0), ((16393, 10),), "Glow", None),
		"Line": (817, 2, (3, 0), ((16393, 10),), "Line", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PictureFormat": (1631, 2, (3, 0), ((16393, 10),), "PictureFormat", None),
		"Shadow": (103, 2, (3, 0), ((16393, 10),), "Shadow", None),
		"SoftEdge": (2662, 2, (3, 0), ((16393, 10),), "SoftEdge", None),
		"TextFrame2": (2659, 2, (3, 0), ((16393, 10),), "TextFrame2", None),
		"ThreeD": (1703, 2, (3, 0), ((16393, 10),), "ThreeD", None),
	}
	_prop_map_put_ = {
		"AutoShapeType": ((1693, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IChartGroup(DispatchBaseClass):
	CLSID = IID('{00020859-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AxisGroup": (47, 2, (3, 0), ((16387, 10),), "AxisGroup", None),
		"BinWidthValue": (3197, 2, (3, 0), ((16389, 10),), "BinWidthValue", None),
		"BinsCountValue": (3198, 2, (3, 0), ((16387, 10),), "BinsCountValue", None),
		"BinsOverflowEnabled": (3199, 2, (3, 0), ((16395, 10),), "BinsOverflowEnabled", None),
		"BinsOverflowValue": (3200, 2, (3, 0), ((16389, 10),), "BinsOverflowValue", None),
		"BinsType": (3196, 2, (3, 0), ((16387, 10),), "BinsType", None),
		"BinsUnderflowEnabled": (3201, 2, (3, 0), ((16395, 10),), "BinsUnderflowEnabled", None),
		"BinsUnderflowValue": (3202, 2, (3, 0), ((16389, 10),), "BinsUnderflowValue", None),
		"BubbleScale": (1653, 2, (3, 0), ((16387, 10),), "BubbleScale", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DoughnutHoleSize": (1126, 2, (3, 0), ((16387, 10),), "DoughnutHoleSize", None),
		"DownBars": (141, 2, (3, 0), ((16393, 10),), "DownBars", None),
		"DropLines": (142, 2, (3, 0), ((16393, 10),), "DropLines", None),
		"FirstSliceAngle": (63, 2, (3, 0), ((16387, 10),), "FirstSliceAngle", None),
		"GapWidth": (51, 2, (3, 0), ((16387, 10),), "GapWidth", None),
		"Has3DShading": (1658, 2, (3, 0), ((16395, 10),), "Has3DShading", None),
		"HasDropLines": (61, 2, (3, 0), ((16395, 10),), "HasDropLines", None),
		"HasHiLoLines": (62, 2, (3, 0), ((16395, 10),), "HasHiLoLines", None),
		"HasRadarAxisLabels": (64, 2, (3, 0), ((16395, 10),), "HasRadarAxisLabels", None),
		"HasSeriesLines": (65, 2, (3, 0), ((16395, 10),), "HasSeriesLines", None),
		"HasUpDownBars": (66, 2, (3, 0), ((16395, 10),), "HasUpDownBars", None),
		"HiLoLines": (143, 2, (3, 0), ((16393, 10),), "HiLoLines", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Overlap": (56, 2, (3, 0), ((16387, 10),), "Overlap", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"RadarAxisLabels": (144, 2, (3, 0), ((16393, 10),), "RadarAxisLabels", None),
		"SecondPlotSize": (1657, 2, (3, 0), ((16387, 10),), "SecondPlotSize", None),
		"SeriesLines": (145, 2, (3, 0), ((16393, 10),), "SeriesLines", None),
		"ShowNegativeBubbles": (1654, 2, (3, 0), ((16395, 10),), "ShowNegativeBubbles", None),
		"SizeRepresents": (1652, 2, (3, 0), ((16387, 10),), "SizeRepresents", None),
		"SplitType": (1655, 2, (3, 0), ((16387, 10),), "SplitType", None),
		"SplitValue": (1656, 2, (3, 0), ((16396, 10),), "SplitValue", None),
		"SubType": (109, 2, (3, 0), ((16387, 10),), "SubType", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
		"UpBars": (140, 2, (3, 0), ((16393, 10),), "UpBars", None),
		"VaryByCategories": (60, 2, (3, 0), ((16395, 10),), "VaryByCategories", None),
	}
	_prop_map_put_ = {
		"AxisGroup": ((47, LCID, 4, 0),()),
		"BinWidthValue": ((3197, LCID, 4, 0),()),
		"BinsCountValue": ((3198, LCID, 4, 0),()),
		"BinsOverflowEnabled": ((3199, LCID, 4, 0),()),
		"BinsOverflowValue": ((3200, LCID, 4, 0),()),
		"BinsType": ((3196, LCID, 4, 0),()),
		"BinsUnderflowEnabled": ((3201, LCID, 4, 0),()),
		"BinsUnderflowValue": ((3202, LCID, 4, 0),()),
		"BubbleScale": ((1653, LCID, 4, 0),()),
		"DoughnutHoleSize": ((1126, LCID, 4, 0),()),
		"FirstSliceAngle": ((63, LCID, 4, 0),()),
		"GapWidth": ((51, LCID, 4, 0),()),
		"Has3DShading": ((1658, LCID, 4, 0),()),
		"HasDropLines": ((61, LCID, 4, 0),()),
		"HasHiLoLines": ((62, LCID, 4, 0),()),
		"HasRadarAxisLabels": ((64, LCID, 4, 0),()),
		"HasSeriesLines": ((65, LCID, 4, 0),()),
		"HasUpDownBars": ((66, LCID, 4, 0),()),
		"Overlap": ((56, LCID, 4, 0),()),
		"SecondPlotSize": ((1657, LCID, 4, 0),()),
		"ShowNegativeBubbles": ((1654, LCID, 4, 0),()),
		"SizeRepresents": ((1652, LCID, 4, 0),()),
		"SplitType": ((1655, LCID, 4, 0),()),
		"SplitValue": ((1656, LCID, 4, 0),()),
		"SubType": ((109, LCID, 4, 0),()),
		"Type": ((108, LCID, 4, 0),()),
		"VaryByCategories": ((60, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IChartGroups(DispatchBaseClass):
	CLSID = IID('{0002085A-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IChartObject(DispatchBaseClass):
	CLSID = IID('{000208CF-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"BottomRightCell": (615, 2, (3, 0), ((16393, 10),), "BottomRightCell", None),
		"Chart": (7, 2, (3, 0), ((16397, 10),), "Chart", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ProtectChartObject": (1529, 2, (3, 0), ((16395, 10),), "ProtectChartObject", None),
		"RoundedCorners": (619, 2, (3, 0), ((16395, 10),), "RoundedCorners", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"TopLeftCell": (620, 2, (3, 0), ((16393, 10),), "TopLeftCell", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ProtectChartObject": ((1529, LCID, 4, 0),()),
		"RoundedCorners": ((619, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IChartObjects(DispatchBaseClass):
	CLSID = IID('{000208D0-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ProtectChartObject": (1529, 2, (3, 0), ((16395, 10),), "ProtectChartObject", None),
		"RoundedCorners": (619, 2, (3, 0), ((16395, 10),), "RoundedCorners", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
	}
	_prop_map_put_ = {
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ProtectChartObject": ((1529, LCID, 4, 0),()),
		"RoundedCorners": ((619, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IChartSeriesGradientStopData(DispatchBaseClass):
	CLSID = IID('{000244FA-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"StopColor": (3267, 2, (3, 0), ((16393, 10),), "StopColor", None),
		"StopPositionType": (3268, 2, (3, 0), ((16387, 10),), "StopPositionType", None),
		"StopValue": (3269, 2, (3, 0), ((16392, 10),), "StopValue", None),
	}
	_prop_map_put_ = {
		"StopPositionType": ((3268, LCID, 4, 0),()),
		"StopValue": ((3269, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IChartTitle(DispatchBaseClass):
	CLSID = IID('{00020849-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Fill": (1663, 2, (3, 0), ((16393, 10),), "Fill", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"FormulaLocal": (263, 2, (3, 0), ((16392, 10),), "FormulaLocal", None),
		"FormulaR1C1": (264, 2, (3, 0), ((16392, 10),), "FormulaR1C1", None),
		"FormulaR1C1Local": (265, 2, (3, 0), ((16392, 10),), "FormulaR1C1Local", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"IncludeInLayout": (2648, 2, (3, 0), ((16395, 10),), "IncludeInLayout", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Position": (133, 2, (3, 0), ((16387, 10),), "Position", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
	}
	_prop_map_put_ = {
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"FormulaLocal": ((263, LCID, 4, 0),()),
		"FormulaR1C1": ((264, LCID, 4, 0),()),
		"FormulaR1C1Local": ((265, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"IncludeInLayout": ((2648, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IChartView(DispatchBaseClass):
	CLSID = IID('{00024488-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Sheet": (751, 2, (3, 0), ((16393, 10),), "Sheet", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICharts(DispatchBaseClass):
	CLSID = IID('{0002086D-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"HPageBreaks": (1418, 2, (3, 0), ((16393, 10),), "HPageBreaks", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"VPageBreaks": (1419, 2, (3, 0), ((16393, 10),), "VPageBreaks", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ICheckBox(DispatchBaseClass):
	CLSID = IID('{0002087F-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Accelerator": (846, 2, (3, 0), ((16396, 10),), "Accelerator", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"BottomRightCell": (615, 2, (3, 0), ((16393, 10),), "BottomRightCell", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Display3DShading": (1122, 2, (3, 0), ((16395, 10),), "Display3DShading", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"LinkedCell": (1058, 2, (3, 0), ((16392, 10),), "LinkedCell", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (3, 0), ((16396, 10),), "PhoneticAccelerator", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"TopLeftCell": (620, 2, (3, 0), ((16393, 10),), "TopLeftCell", None),
		"Value": (6, 2, (3, 0), ((16396, 10),), "Value", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
		"_Default": (0, 2, (3, 0), ((16387, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16396, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICheckBoxes(DispatchBaseClass):
	CLSID = IID('{00020880-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Accelerator": (846, 2, (3, 0), ((16396, 10),), "Accelerator", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Display3DShading": (1122, 2, (3, 0), ((16395, 10),), "Display3DShading", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"LinkedCell": (1058, 2, (3, 0), ((16392, 10),), "LinkedCell", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (3, 0), ((16396, 10),), "PhoneticAccelerator", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Value": (6, 2, (3, 0), ((16396, 10),), "Value", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
		"_Default": (0, 2, (3, 0), ((16387, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16396, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IColorScale(DispatchBaseClass):
	CLSID = IID('{00024493-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AppliesTo": (2626, 2, (3, 0), ((16393, 10),), "AppliesTo", None),
		"ColorScaleCriteria": (2716, 2, (3, 0), ((16393, 10),), "ColorScaleCriteria", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"PTCondition": (2631, 2, (3, 0), ((16395, 10),), "PTCondition", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Priority": (985, 2, (3, 0), ((16387, 10),), "Priority", None),
		"ScopeType": (2615, 2, (3, 0), ((16387, 10),), "ScopeType", None),
		"StopIfTrue": (2625, 2, (3, 0), ((16395, 10),), "StopIfTrue", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
	}
	_prop_map_put_ = {
		"Formula": ((261, LCID, 4, 0),()),
		"Priority": ((985, LCID, 4, 0),()),
		"ScopeType": ((2615, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IColorScaleCriteria(DispatchBaseClass):
	CLSID = IID('{00024494-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IColorScaleCriterion(DispatchBaseClass):
	CLSID = IID('{00024495-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"FormatColor": (2717, 2, (3, 0), ((16393, 10),), "FormatColor", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
		"Value": (6, 2, (3, 0), ((16396, 10),), "Value", None),
	}
	_prop_map_put_ = {
		"Type": ((108, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16396, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IColorStop(DispatchBaseClass):
	CLSID = IID('{000244AD-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Color": (99, 2, (3, 0), ((16396, 10),), "Color", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Position": (133, 2, (3, 0), ((16389, 10),), "Position", None),
		"ThemeColor": (2365, 2, (3, 0), ((16387, 10),), "ThemeColor", None),
		"TintAndShade": (2366, 2, (3, 0), ((16396, 10),), "TintAndShade", None),
	}
	_prop_map_put_ = {
		"Color": ((99, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"ThemeColor": ((2365, LCID, 4, 0),()),
		"TintAndShade": ((2366, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IColorStops(DispatchBaseClass):
	CLSID = IID('{000244AE-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IComment(DispatchBaseClass):
	CLSID = IID('{00024427-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Author": (574, 2, (3, 0), ((16392, 10),), "Author", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Shape": (1582, 2, (3, 0), ((16393, 10),), "Shape", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
	}
	_prop_map_put_ = {
		"Visible": ((558, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICommentThreaded(DispatchBaseClass):
	CLSID = IID('{000244FD-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Author": (574, 2, (3, 0), ((16393, 10),), "Author", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Date": (465, 2, (3, 0), ((16396, 10),), "Date", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Replies": (3285, 2, (3, 0), ((16393, 10),), "Replies", None),
		"Resolved": (3304, 2, (3, 0), ((16395, 10),), "Resolved", None),
	}
	_prop_map_put_ = {
		"Resolved": ((3304, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IComments(DispatchBaseClass):
	CLSID = IID('{00024426-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ICommentsThreaded(DispatchBaseClass):
	CLSID = IID('{000244FC-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IConditionValue(DispatchBaseClass):
	CLSID = IID('{00024492-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
		"Value": (6, 2, (3, 0), ((16396, 10),), "Value", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16396, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConnections(DispatchBaseClass):
	CLSID = IID('{00024486-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IConnectorFormat(DispatchBaseClass):
	CLSID = IID('{0002443E-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"BeginConnected": (1756, 2, (3, 0), ((16387, 10),), "BeginConnected", None),
		"BeginConnectedShape": (1757, 2, (3, 0), ((16393, 10),), "BeginConnectedShape", None),
		"BeginConnectionSite": (1758, 2, (3, 0), ((16387, 10),), "BeginConnectionSite", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"EndConnected": (1759, 2, (3, 0), ((16387, 10),), "EndConnected", None),
		"EndConnectedShape": (1760, 2, (3, 0), ((16393, 10),), "EndConnectedShape", None),
		"EndConnectionSite": (1761, 2, (3, 0), ((16387, 10),), "EndConnectionSite", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
	}
	_prop_map_put_ = {
		"Type": ((108, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IControlFormat(DispatchBaseClass):
	CLSID = IID('{00024440-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DropDownLines": (848, 2, (3, 0), ((16387, 10),), "DropDownLines", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"LargeChange": (845, 2, (3, 0), ((16387, 10),), "LargeChange", None),
		"LinkedCell": (1058, 2, (3, 0), ((16392, 10),), "LinkedCell", None),
		"ListCount": (849, 2, (3, 0), ((16387, 10),), "ListCount", None),
		"ListFillRange": (847, 2, (3, 0), ((16392, 10),), "ListFillRange", None),
		"ListIndex": (850, 2, (3, 0), ((16387, 10),), "ListIndex", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"Max": (842, 2, (3, 0), ((16387, 10),), "Max", None),
		"Min": (843, 2, (3, 0), ((16387, 10),), "Min", None),
		"MultiSelect": (32, 2, (3, 0), ((16387, 10),), "MultiSelect", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"SmallChange": (844, 2, (3, 0), ((16387, 10),), "SmallChange", None),
		"Value": (6, 2, (3, 0), ((16387, 10),), "Value", None),
		"_Default": (0, 2, (3, 0), ((16387, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"DropDownLines": ((848, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"LargeChange": ((845, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"ListCount": ((849, LCID, 4, 0),()),
		"ListFillRange": ((847, LCID, 4, 0),()),
		"ListIndex": ((850, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Max": ((842, LCID, 4, 0),()),
		"Min": ((843, LCID, 4, 0),()),
		"MultiSelect": ((32, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"SmallChange": ((844, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16387, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICorners(DispatchBaseClass):
	CLSID = IID('{000208C0-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICustomProperties(DispatchBaseClass):
	CLSID = IID('{00024452-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ICustomProperty(DispatchBaseClass):
	CLSID = IID('{00024453-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Value": (6, 2, (3, 0), ((16396, 10),), "Value", None),
		"_Default": (0, 2, (3, 0), ((16396, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"Name": ((110, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16396, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICustomView(DispatchBaseClass):
	CLSID = IID('{00024423-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PrintSettings": (1577, 2, (3, 0), ((16395, 10),), "PrintSettings", None),
		"RowColSettings": (1578, 2, (3, 0), ((16395, 10),), "RowColSettings", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICustomViews(DispatchBaseClass):
	CLSID = IID('{00024422-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IDataBarBorder(DispatchBaseClass):
	CLSID = IID('{000244BE-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Color": (99, 2, (3, 0), ((16393, 10),), "Color", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
	}
	_prop_map_put_ = {
		"Type": ((108, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDataFeedConnection(DispatchBaseClass):
	CLSID = IID('{000244D4-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AlwaysUseConnectionFile": (2706, 2, (3, 0), ((16395, 10),), "AlwaysUseConnectionFile", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"CommandText": (1829, 2, (3, 0), ((16396, 10),), "CommandText", None),
		"CommandType": (1830, 2, (3, 0), ((16387, 10),), "CommandType", None),
		"Connection": (1432, 2, (3, 0), ((16396, 10),), "Connection", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"EnableRefresh": (1477, 2, (3, 0), ((16395, 10),), "EnableRefresh", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"RefreshDate": (696, 2, (3, 0), ((16391, 10),), "RefreshDate", None),
		"RefreshOnFileOpen": (1479, 2, (3, 0), ((16395, 10),), "RefreshOnFileOpen", None),
		"RefreshPeriod": (1833, 2, (3, 0), ((16387, 10),), "RefreshPeriod", None),
		"Refreshing": (1587, 2, (3, 0), ((16395, 10),), "Refreshing", None),
		"SavePassword": (1481, 2, (3, 0), ((16395, 10),), "SavePassword", None),
		"ServerCredentialsMethod": (2704, 2, (3, 0), ((16387, 10),), "ServerCredentialsMethod", None),
		"SourceConnectionFile": (2079, 2, (3, 0), ((16392, 10),), "SourceConnectionFile", None),
		"SourceDataFile": (2080, 2, (3, 0), ((16392, 10),), "SourceDataFile", None),
	}
	_prop_map_put_ = {
		"AlwaysUseConnectionFile": ((2706, LCID, 4, 0),()),
		"CommandText": ((1829, LCID, 4, 0),()),
		"CommandType": ((1830, LCID, 4, 0),()),
		"Connection": ((1432, LCID, 4, 0),()),
		"EnableRefresh": ((1477, LCID, 4, 0),()),
		"RefreshOnFileOpen": ((1479, LCID, 4, 0),()),
		"RefreshPeriod": ((1833, LCID, 4, 0),()),
		"SavePassword": ((1481, LCID, 4, 0),()),
		"ServerCredentialsMethod": ((2704, LCID, 4, 0),()),
		"SourceConnectionFile": ((2079, LCID, 4, 0),()),
		"SourceDataFile": ((2080, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDataLabel(DispatchBaseClass):
	CLSID = IID('{000208B2-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"AutoText": (135, 2, (3, 0), ((16395, 10),), "AutoText", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Fill": (1663, 2, (3, 0), ((16393, 10),), "Fill", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"FormulaLocal": (263, 2, (3, 0), ((16392, 10),), "FormulaLocal", None),
		"FormulaR1C1": (264, 2, (3, 0), ((16392, 10),), "FormulaR1C1", None),
		"FormulaR1C1Local": (265, 2, (3, 0), ((16392, 10),), "FormulaR1C1Local", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"NumberFormat": (193, 2, (3, 0), ((16392, 10),), "NumberFormat", None),
		"NumberFormatLinked": (194, 2, (3, 0), ((16395, 10),), "NumberFormatLinked", None),
		"NumberFormatLocal": (1097, 2, (3, 0), ((16396, 10),), "NumberFormatLocal", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Position": (133, 2, (3, 0), ((16387, 10),), "Position", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"Separator": (2027, 2, (3, 0), ((16396, 10),), "Separator", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"ShowBubbleSize": (2026, 2, (3, 0), ((16395, 10),), "ShowBubbleSize", None),
		"ShowCategoryName": (2023, 2, (3, 0), ((16395, 10),), "ShowCategoryName", None),
		"ShowLegendKey": (171, 2, (3, 0), ((16395, 10),), "ShowLegendKey", None),
		"ShowPercentage": (2025, 2, (3, 0), ((16395, 10),), "ShowPercentage", None),
		"ShowRange": (3086, 2, (3, 0), ((16395, 10),), "ShowRange", None),
		"ShowSeriesName": (2022, 2, (3, 0), ((16395, 10),), "ShowSeriesName", None),
		"ShowValue": (2024, 2, (3, 0), ((16395, 10),), "ShowValue", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Type": (108, 2, (3, 0), ((16396, 10),), "Type", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"_Height": (3084, 2, (3, 0), ((16389, 10),), "_Height", None),
		"_Width": (3085, 2, (3, 0), ((16389, 10),), "_Width", None),
	}
	_prop_map_put_ = {
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoText": ((135, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"FormulaLocal": ((263, LCID, 4, 0),()),
		"FormulaR1C1": ((264, LCID, 4, 0),()),
		"FormulaR1C1Local": ((265, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"NumberFormat": ((193, LCID, 4, 0),()),
		"NumberFormatLinked": ((194, LCID, 4, 0),()),
		"NumberFormatLocal": ((1097, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Separator": ((2027, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"ShowBubbleSize": ((2026, LCID, 4, 0),()),
		"ShowCategoryName": ((2023, LCID, 4, 0),()),
		"ShowLegendKey": ((171, LCID, 4, 0),()),
		"ShowPercentage": ((2025, LCID, 4, 0),()),
		"ShowRange": ((3086, LCID, 4, 0),()),
		"ShowSeriesName": ((2022, LCID, 4, 0),()),
		"ShowValue": ((2024, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Type": ((108, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDataLabels(DispatchBaseClass):
	CLSID = IID('{000208B3-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"AutoText": (135, 2, (3, 0), ((16395, 10),), "AutoText", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Fill": (1663, 2, (3, 0), ((16393, 10),), "Fill", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"NumberFormat": (193, 2, (3, 0), ((16392, 10),), "NumberFormat", None),
		"NumberFormatLinked": (194, 2, (3, 0), ((16395, 10),), "NumberFormatLinked", None),
		"NumberFormatLocal": (1097, 2, (3, 0), ((16396, 10),), "NumberFormatLocal", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Position": (133, 2, (3, 0), ((16387, 10),), "Position", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"Separator": (2027, 2, (3, 0), ((16396, 10),), "Separator", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"ShowBubbleSize": (2026, 2, (3, 0), ((16395, 10),), "ShowBubbleSize", None),
		"ShowCategoryName": (2023, 2, (3, 0), ((16395, 10),), "ShowCategoryName", None),
		"ShowLegendKey": (171, 2, (3, 0), ((16395, 10),), "ShowLegendKey", None),
		"ShowPercentage": (2025, 2, (3, 0), ((16395, 10),), "ShowPercentage", None),
		"ShowRange": (3086, 2, (3, 0), ((16395, 10),), "ShowRange", None),
		"ShowSeriesName": (2022, 2, (3, 0), ((16395, 10),), "ShowSeriesName", None),
		"ShowValue": (2024, 2, (3, 0), ((16395, 10),), "ShowValue", None),
		"Type": (108, 2, (3, 0), ((16396, 10),), "Type", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
	}
	_prop_map_put_ = {
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoText": ((135, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"NumberFormat": ((193, LCID, 4, 0),()),
		"NumberFormatLinked": ((194, LCID, 4, 0),()),
		"NumberFormatLocal": ((1097, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Separator": ((2027, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"ShowBubbleSize": ((2026, LCID, 4, 0),()),
		"ShowCategoryName": ((2023, LCID, 4, 0),()),
		"ShowLegendKey": ((171, LCID, 4, 0),()),
		"ShowPercentage": ((2025, LCID, 4, 0),()),
		"ShowRange": ((3086, LCID, 4, 0),()),
		"ShowSeriesName": ((2022, LCID, 4, 0),()),
		"ShowValue": ((2024, LCID, 4, 0),()),
		"Type": ((108, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IDataTable(DispatchBaseClass):
	CLSID = IID('{00020843-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"HasBorderHorizontal": (1671, 2, (3, 0), ((16395, 10),), "HasBorderHorizontal", None),
		"HasBorderOutline": (1673, 2, (3, 0), ((16395, 10),), "HasBorderOutline", None),
		"HasBorderVertical": (1672, 2, (3, 0), ((16395, 10),), "HasBorderVertical", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ShowLegendKey": (171, 2, (3, 0), ((16395, 10),), "ShowLegendKey", None),
	}
	_prop_map_put_ = {
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"HasBorderHorizontal": ((1671, LCID, 4, 0),()),
		"HasBorderOutline": ((1673, LCID, 4, 0),()),
		"HasBorderVertical": ((1672, LCID, 4, 0),()),
		"ShowLegendKey": ((171, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDatabar(DispatchBaseClass):
	CLSID = IID('{00024496-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AppliesTo": (2626, 2, (3, 0), ((16393, 10),), "AppliesTo", None),
		"AxisColor": (2943, 2, (3, 0), ((16393, 10),), "AxisColor", None),
		"AxisPosition": (2942, 2, (3, 0), ((16387, 10),), "AxisPosition", None),
		"BarBorder": (2944, 2, (3, 0), ((16393, 10),), "BarBorder", None),
		"BarColor": (2722, 2, (3, 0), ((16393, 10),), "BarColor", None),
		"BarFillType": (2941, 2, (3, 0), ((16387, 10),), "BarFillType", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Direction": (168, 2, (3, 0), ((16387, 10),), "Direction", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"MaxPoint": (2719, 2, (3, 0), ((16393, 10),), "MaxPoint", None),
		"MinPoint": (2718, 2, (3, 0), ((16393, 10),), "MinPoint", None),
		"NegativeBarFormat": (2945, 2, (3, 0), ((16393, 10),), "NegativeBarFormat", None),
		"PTCondition": (2631, 2, (3, 0), ((16395, 10),), "PTCondition", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PercentMax": (2721, 2, (3, 0), ((16387, 10),), "PercentMax", None),
		"PercentMin": (2720, 2, (3, 0), ((16387, 10),), "PercentMin", None),
		"Priority": (985, 2, (3, 0), ((16387, 10),), "Priority", None),
		"ScopeType": (2615, 2, (3, 0), ((16387, 10),), "ScopeType", None),
		"ShowValue": (2024, 2, (3, 0), ((16395, 10),), "ShowValue", None),
		"StopIfTrue": (2625, 2, (3, 0), ((16395, 10),), "StopIfTrue", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
	}
	_prop_map_put_ = {
		"AxisPosition": ((2942, LCID, 4, 0),()),
		"BarFillType": ((2941, LCID, 4, 0),()),
		"Direction": ((168, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"PercentMax": ((2721, LCID, 4, 0),()),
		"PercentMin": ((2720, LCID, 4, 0),()),
		"Priority": ((985, LCID, 4, 0),()),
		"ScopeType": ((2615, LCID, 4, 0),()),
		"ShowValue": ((2024, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDefaultPivotTableLayoutOptions(DispatchBaseClass):
	CLSID = IID('{000244FB-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AllowMultipleFilters": (2570, 2, (3, 0), ((16395, 10),), "AllowMultipleFilters", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"CalculatedMembersInFilters": (2884, 2, (3, 0), ((16395, 10),), "CalculatedMembersInFilters", None),
		"ColumnGrand": (694, 2, (3, 0), ((16395, 10),), "ColumnGrand", None),
		"CompactRowIndent": (2553, 2, (3, 0), ((16387, 10),), "CompactRowIndent", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DisplayContextTooltips": (2551, 2, (3, 0), ((16395, 10),), "DisplayContextTooltips", None),
		"DisplayEmptyColumn": (2137, 2, (3, 0), ((16395, 10),), "DisplayEmptyColumn", None),
		"DisplayEmptyRow": (2136, 2, (3, 0), ((16395, 10),), "DisplayEmptyRow", None),
		"DisplayErrorString": (1485, 2, (3, 0), ((16395, 10),), "DisplayErrorString", None),
		"DisplayFieldCaptions": (2555, 2, (3, 0), ((16395, 10),), "DisplayFieldCaptions", None),
		"DisplayImmediateItems": (2126, 2, (3, 0), ((16395, 10),), "DisplayImmediateItems", None),
		"DisplayMemberPropertyTooltips": (2550, 2, (3, 0), ((16395, 10),), "DisplayMemberPropertyTooltips", None),
		"DisplayNullString": (1486, 2, (3, 0), ((16395, 10),), "DisplayNullString", None),
		"EnableDrilldown": (1487, 2, (3, 0), ((16395, 10),), "EnableDrilldown", None),
		"EnableWriteback": (2872, 2, (3, 0), ((16395, 10),), "EnableWriteback", None),
		"ErrorString": (1490, 2, (3, 0), ((16392, 10),), "ErrorString", None),
		"FieldListSortAscending": (2573, 2, (3, 0), ((16395, 10),), "FieldListSortAscending", None),
		"HasAutoFormat": (695, 2, (3, 0), ((16395, 10),), "HasAutoFormat", None),
		"InGridDropZones": (2560, 2, (3, 0), ((16395, 10),), "InGridDropZones", None),
		"LayoutBlankLine": (1845, 2, (3, 0), ((16395, 10),), "LayoutBlankLine", None),
		"MergeLabels": (1494, 2, (3, 0), ((16395, 10),), "MergeLabels", None),
		"NullString": (1495, 2, (3, 0), ((16392, 10),), "NullString", None),
		"PageFieldOrder": (1429, 2, (3, 0), ((16395, 10),), "PageFieldOrder", None),
		"PageFieldWrapCount": (1430, 2, (3, 0), ((16387, 10),), "PageFieldWrapCount", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PreserveFormatting": (1500, 2, (3, 0), ((16395, 10),), "PreserveFormatting", None),
		"PrintDrillIndicators": (2549, 2, (3, 0), ((16395, 10),), "PrintDrillIndicators", None),
		"PrintTitles": (1838, 2, (3, 0), ((16395, 10),), "PrintTitles", None),
		"RefreshOnFileOpen": (1479, 2, (3, 0), ((16395, 10),), "RefreshOnFileOpen", None),
		"RepeatAllLabels": (2879, 2, (3, 0), ((16387, 10),), "RepeatAllLabels", None),
		"RepeatItemsOnEachPrintedPage": (1842, 2, (3, 0), ((16395, 10),), "RepeatItemsOnEachPrintedPage", None),
		"RowAxisLayout": (2556, 2, (3, 0), ((16387, 10),), "RowAxisLayout", None),
		"RowGrand": (693, 2, (3, 0), ((16395, 10),), "RowGrand", None),
		"SaveData": (692, 2, (3, 0), ((16395, 10),), "SaveData", None),
		"ShowDrillIndicators": (2548, 2, (3, 0), ((16395, 10),), "ShowDrillIndicators", None),
		"ShowValuesRow": (2883, 2, (3, 0), ((16395, 10),), "ShowValuesRow", None),
		"SortUsingCustomLists": (2574, 2, (3, 0), ((16395, 10),), "SortUsingCustomLists", None),
		"SubtotalHiddenPageItems": (1498, 2, (3, 0), ((16395, 10),), "SubtotalHiddenPageItems", None),
		"SubtotalLocation": (2558, 2, (3, 0), ((16395, 10),), "SubtotalLocation", None),
		"Subtotals": (733, 2, (3, 0), ((16395, 10),), "Subtotals", None),
		"TotalsAnnotation": (1843, 2, (3, 0), ((16395, 10),), "TotalsAnnotation", None),
		"ViewCalculatedMembers": (2124, 2, (3, 0), ((16395, 10),), "ViewCalculatedMembers", None),
		"VisualTotals": (2129, 2, (3, 0), ((16395, 10),), "VisualTotals", None),
		"VisualTotalsForSets": (2882, 2, (3, 0), ((16395, 10),), "VisualTotalsForSets", None),
		"xlMissingItemsNone": (3270, 2, (3, 0), ((16387, 10),), "xlMissingItemsNone", None),
	}
	_prop_map_put_ = {
		"AllowMultipleFilters": ((2570, LCID, 4, 0),()),
		"CalculatedMembersInFilters": ((2884, LCID, 4, 0),()),
		"ColumnGrand": ((694, LCID, 4, 0),()),
		"CompactRowIndent": ((2553, LCID, 4, 0),()),
		"DisplayContextTooltips": ((2551, LCID, 4, 0),()),
		"DisplayEmptyColumn": ((2137, LCID, 4, 0),()),
		"DisplayEmptyRow": ((2136, LCID, 4, 0),()),
		"DisplayErrorString": ((1485, LCID, 4, 0),()),
		"DisplayFieldCaptions": ((2555, LCID, 4, 0),()),
		"DisplayImmediateItems": ((2126, LCID, 4, 0),()),
		"DisplayMemberPropertyTooltips": ((2550, LCID, 4, 0),()),
		"DisplayNullString": ((1486, LCID, 4, 0),()),
		"EnableDrilldown": ((1487, LCID, 4, 0),()),
		"EnableWriteback": ((2872, LCID, 4, 0),()),
		"ErrorString": ((1490, LCID, 4, 0),()),
		"FieldListSortAscending": ((2573, LCID, 4, 0),()),
		"HasAutoFormat": ((695, LCID, 4, 0),()),
		"InGridDropZones": ((2560, LCID, 4, 0),()),
		"LayoutBlankLine": ((1845, LCID, 4, 0),()),
		"MergeLabels": ((1494, LCID, 4, 0),()),
		"NullString": ((1495, LCID, 4, 0),()),
		"PageFieldOrder": ((1429, LCID, 4, 0),()),
		"PageFieldWrapCount": ((1430, LCID, 4, 0),()),
		"PreserveFormatting": ((1500, LCID, 4, 0),()),
		"PrintDrillIndicators": ((2549, LCID, 4, 0),()),
		"PrintTitles": ((1838, LCID, 4, 0),()),
		"RefreshOnFileOpen": ((1479, LCID, 4, 0),()),
		"RepeatAllLabels": ((2879, LCID, 4, 0),()),
		"RepeatItemsOnEachPrintedPage": ((1842, LCID, 4, 0),()),
		"RowAxisLayout": ((2556, LCID, 4, 0),()),
		"RowGrand": ((693, LCID, 4, 0),()),
		"SaveData": ((692, LCID, 4, 0),()),
		"ShowDrillIndicators": ((2548, LCID, 4, 0),()),
		"ShowValuesRow": ((2883, LCID, 4, 0),()),
		"SortUsingCustomLists": ((2574, LCID, 4, 0),()),
		"SubtotalHiddenPageItems": ((1498, LCID, 4, 0),()),
		"SubtotalLocation": ((2558, LCID, 4, 0),()),
		"Subtotals": ((733, LCID, 4, 0),()),
		"TotalsAnnotation": ((1843, LCID, 4, 0),()),
		"ViewCalculatedMembers": ((2124, LCID, 4, 0),()),
		"VisualTotals": ((2129, LCID, 4, 0),()),
		"VisualTotalsForSets": ((2882, LCID, 4, 0),()),
		"xlMissingItemsNone": ((3270, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDiagram(DispatchBaseClass):
	CLSID = IID('{0002446F-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoFormat": (114, 2, (3, 0), ((16387, 10),), "AutoFormat", None),
		"AutoLayout": (2243, 2, (3, 0), ((16387, 10),), "AutoLayout", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Nodes": (1701, 2, (3, 0), ((16393, 10),), "Nodes", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Reverse": (2244, 2, (3, 0), ((16387, 10),), "Reverse", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
	}
	_prop_map_put_ = {
		"AutoFormat": ((114, LCID, 4, 0),()),
		"AutoLayout": ((2243, LCID, 4, 0),()),
		"Reverse": ((2244, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDialog(DispatchBaseClass):
	CLSID = IID('{0002087A-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDialogFrame(DispatchBaseClass):
	CLSID = IID('{0002088F-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDialogSheet(DispatchBaseClass):
	CLSID = IID('{000208AF-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoFilter": (3289, 2, (3, 0), ((16393, 10),), "AutoFilter", None),
		"CodeName": (1373, 2, (3, 0), ((16392, 10),), "CodeName", None),
		"Comments": (575, 2, (3, 0), ((16393, 10),), "Comments", None),
		"CommentsThreaded": (3282, 2, (3, 0), ((16393, 10),), "CommentsThreaded", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"CustomProperties": (2030, 2, (3, 0), ((16393, 10),), "CustomProperties", None),
		"DefaultButton": (857, 2, (3, 0), ((16396, 10),), "DefaultButton", None),
		"DialogFrame": (839, 2, (3, 0), ((16393, 10),), "DialogFrame", None),
		"DisplayPageBreaks": (1435, 2, (3, 0), ((16395, 10),), "DisplayPageBreaks", None),
		"EnableCalculation": (1424, 2, (3, 0), ((16395, 10),), "EnableCalculation", None),
		"EnableFormatConditionsCalculation": (2511, 2, (3, 0), ((16395, 10),), "EnableFormatConditionsCalculation", None),
		"EnableSelection": (1425, 2, (3, 0), ((16387, 10),), "EnableSelection", None),
		"Focus": (814, 2, (3, 0), ((16396, 10),), "Focus", None),
		"HPageBreaks": (1418, 2, (3, 0), ((16393, 10),), "HPageBreaks", None),
		"Hyperlinks": (1393, 2, (3, 0), ((16393, 10),), "Hyperlinks", None),
		"MailEnvelope": (2021, 2, (3, 0), ((16397, 10),), "MailEnvelope", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"NamedSheetViews": (3309, 2, (3, 0), ((16393, 10),), "NamedSheetViews", None),
		"Names": (442, 2, (3, 0), ((16393, 10),), "Names", None),
		"Next": (502, 2, (3, 0), ((16393, 10),), "Next", None),
		"PageSetup": (998, 2, (3, 0), ((16393, 10),), "PageSetup", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Previous": (503, 2, (3, 0), ((16393, 10),), "Previous", None),
		"PrintedCommentPages": (2857, 2, (3, 0), ((16387, 10),), "PrintedCommentPages", None),
		"Protection": (176, 2, (3, 0), ((16393, 10),), "Protection", None),
		"QueryTables": (1434, 2, (3, 0), ((16393, 10),), "QueryTables", None),
		"Scripts": (1816, 2, (3, 0), ((16393, 10),), "Scripts", None),
		"ScrollArea": (1433, 2, (3, 0), ((16392, 10),), "ScrollArea", None),
		"Shapes": (1377, 2, (3, 0), ((16393, 10),), "Shapes", None),
		"SmartTags": (2016, 2, (3, 0), ((16393, 10),), "SmartTags", None),
		"Sort": (3288, 2, (3, 0), ((16393, 10),), "Sort", None),
		"Tab": (1041, 2, (3, 0), ((16393, 10),), "Tab", None),
		"VPageBreaks": (1419, 2, (3, 0), ((16393, 10),), "VPageBreaks", None),
		"_AutoFilter": (793, 2, (3, 0), ((16393, 10),), "_AutoFilter", None),
		"_CodeName": (-2147418112, 2, (3, 0), ((16392, 10),), "_CodeName", None),
		"_Sort": (880, 2, (3, 0), ((16393, 10),), "_Sort", None),
	}
	_prop_map_put_ = {
		"DefaultButton": ((857, LCID, 4, 0),()),
		"DisplayPageBreaks": ((1435, LCID, 4, 0),()),
		"EnableCalculation": ((1424, LCID, 4, 0),()),
		"EnableFormatConditionsCalculation": ((2511, LCID, 4, 0),()),
		"EnableSelection": ((1425, LCID, 4, 0),()),
		"Focus": ((814, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"ScrollArea": ((1433, LCID, 4, 0),()),
		"_CodeName": ((-2147418112, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDialogSheetView(DispatchBaseClass):
	CLSID = IID('{0002448A-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Sheet": (751, 2, (3, 0), ((16393, 10),), "Sheet", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDialogSheets(DispatchBaseClass):
	CLSID = IID('{000208B0-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"HPageBreaks": (1418, 2, (3, 0), ((16393, 10),), "HPageBreaks", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"VPageBreaks": (1419, 2, (3, 0), ((16393, 10),), "VPageBreaks", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IDialogs(DispatchBaseClass):
	CLSID = IID('{00020879-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IDisplayFormat(DispatchBaseClass):
	CLSID = IID('{000244C2-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (3, 0), ((16396, 10),), "AddIndent", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Borders": (435, 2, (3, 0), ((16393, 10),), "Borders", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"FormulaHidden": (262, 2, (3, 0), ((16396, 10),), "FormulaHidden", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"IndentLevel": (201, 2, (3, 0), ((16396, 10),), "IndentLevel", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Locked": (269, 2, (3, 0), ((16396, 10),), "Locked", None),
		"MergeCells": (208, 2, (3, 0), ((16396, 10),), "MergeCells", None),
		"NumberFormatLocal": (1097, 2, (3, 0), ((16396, 10),), "NumberFormatLocal", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"ShrinkToFit": (209, 2, (3, 0), ((16396, 10),), "ShrinkToFit", None),
		"Style": (260, 2, (3, 0), ((16396, 10),), "Style", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"WrapText": (276, 2, (3, 0), ((16396, 10),), "WrapText", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDisplayUnitLabel(DispatchBaseClass):
	CLSID = IID('{0002084C-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Fill": (1663, 2, (3, 0), ((16393, 10),), "Fill", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"FormulaLocal": (263, 2, (3, 0), ((16392, 10),), "FormulaLocal", None),
		"FormulaR1C1": (264, 2, (3, 0), ((16392, 10),), "FormulaR1C1", None),
		"FormulaR1C1Local": (265, 2, (3, 0), ((16392, 10),), "FormulaR1C1Local", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Position": (133, 2, (3, 0), ((16387, 10),), "Position", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
	}
	_prop_map_put_ = {
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"FormulaLocal": ((263, LCID, 4, 0),()),
		"FormulaR1C1": ((264, LCID, 4, 0),()),
		"FormulaR1C1Local": ((265, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDocEvents(DispatchBaseClass):
	CLSID = IID('{00024411-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDownBars(DispatchBaseClass):
	CLSID = IID('{000208C6-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Fill": (1663, 2, (3, 0), ((16393, 10),), "Fill", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDrawing(DispatchBaseClass):
	CLSID = IID('{000208A8-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (3, 0), ((16395, 10),), "AddIndent", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"AutoSize": (614, 2, (3, 0), ((16395, 10),), "AutoSize", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"BottomRightCell": (615, 2, (3, 0), ((16393, 10),), "BottomRightCell", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"TopLeftCell": (620, 2, (3, 0), ((16393, 10),), "TopLeftCell", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"Vertices": (621, 2, (3, 0), ((12, 17), (12, 17), (16396, 10)), "Vertices", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDrawingObjects(DispatchBaseClass):
	CLSID = IID('{0002086F-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Accelerator": (846, 2, (3, 0), ((16396, 10),), "Accelerator", None),
		"AddIndent": (1063, 2, (3, 0), ((16395, 10),), "AddIndent", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"ArrowHeadLength": (611, 2, (3, 0), ((16396, 10),), "ArrowHeadLength", None),
		"ArrowHeadStyle": (612, 2, (3, 0), ((16396, 10),), "ArrowHeadStyle", None),
		"ArrowHeadWidth": (613, 2, (3, 0), ((16396, 10),), "ArrowHeadWidth", None),
		"AutoSize": (614, 2, (3, 0), ((16395, 10),), "AutoSize", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"CancelButton": (858, 2, (3, 0), ((16395, 10),), "CancelButton", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DefaultButton": (857, 2, (3, 0), ((16395, 10),), "DefaultButton", None),
		"DismissButton": (859, 2, (3, 0), ((16395, 10),), "DismissButton", None),
		"Display3DShading": (1122, 2, (3, 0), ((16395, 10),), "Display3DShading", None),
		"DisplayVerticalScrollBar": (922, 2, (3, 0), ((16395, 10),), "DisplayVerticalScrollBar", None),
		"DropDownLines": (848, 2, (3, 0), ((16387, 10),), "DropDownLines", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"HelpButton": (860, 2, (3, 0), ((16395, 10),), "HelpButton", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"InputType": (854, 2, (3, 0), ((16387, 10),), "InputType", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"LargeChange": (845, 2, (3, 0), ((16387, 10),), "LargeChange", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"LinkedCell": (1058, 2, (3, 0), ((16392, 10),), "LinkedCell", None),
		"ListFillRange": (847, 2, (3, 0), ((16392, 10),), "ListFillRange", None),
		"ListIndex": (850, 2, (3, 0), ((16387, 10),), "ListIndex", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"Max": (842, 2, (3, 0), ((16387, 10),), "Max", None),
		"Min": (843, 2, (3, 0), ((16387, 10),), "Min", None),
		"MultiLine": (855, 2, (3, 0), ((16395, 10),), "MultiLine", None),
		"MultiSelect": (32, 2, (3, 0), ((16395, 10),), "MultiSelect", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (3, 0), ((16396, 10),), "PhoneticAccelerator", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"RoundedCorners": (619, 2, (3, 0), ((16395, 10),), "RoundedCorners", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"SmallChange": (844, 2, (3, 0), ((16387, 10),), "SmallChange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Value": (6, 2, (3, 0), ((16387, 10),), "Value", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
		"_Default": (0, 2, (3, 0), ((16387, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"AddIndent": ((1063, LCID, 4, 0),()),
		"ArrowHeadLength": ((611, LCID, 4, 0),()),
		"ArrowHeadStyle": ((612, LCID, 4, 0),()),
		"ArrowHeadWidth": ((613, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"CancelButton": ((858, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"DefaultButton": ((857, LCID, 4, 0),()),
		"DismissButton": ((859, LCID, 4, 0),()),
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"DisplayVerticalScrollBar": ((922, LCID, 4, 0),()),
		"DropDownLines": ((848, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HelpButton": ((860, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"InputType": ((854, LCID, 4, 0),()),
		"LargeChange": ((845, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"ListFillRange": ((847, LCID, 4, 0),()),
		"ListIndex": ((850, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Max": ((842, LCID, 4, 0),()),
		"Min": ((843, LCID, 4, 0),()),
		"MultiLine": ((855, LCID, 4, 0),()),
		"MultiSelect": ((32, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"RoundedCorners": ((619, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"SmallChange": ((844, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16387, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IDrawings(DispatchBaseClass):
	CLSID = IID('{000208A9-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (3, 0), ((16395, 10),), "AddIndent", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"AutoSize": (614, 2, (3, 0), ((16395, 10),), "AutoSize", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IDropDown(DispatchBaseClass):
	CLSID = IID('{0002088B-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"BottomRightCell": (615, 2, (3, 0), ((16393, 10),), "BottomRightCell", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Display3DShading": (1122, 2, (3, 0), ((16395, 10),), "Display3DShading", None),
		"DropDownLines": (848, 2, (3, 0), ((16387, 10),), "DropDownLines", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"LinkedCell": (1058, 2, (3, 0), ((16392, 10),), "LinkedCell", None),
		"LinkedObject": (862, 2, (3, 0), ((16396, 10),), "LinkedObject", None),
		"List": (861, 2, (3, 0), ((12, 17), (16396, 10)), "List", None),
		"ListCount": (849, 2, (3, 0), ((16387, 10),), "ListCount", None),
		"ListFillRange": (847, 2, (3, 0), ((16392, 10),), "ListFillRange", None),
		"ListIndex": (850, 2, (3, 0), ((16387, 10),), "ListIndex", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"Selected": (1123, 2, (3, 0), ((12, 17), (16396, 10)), "Selected", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"TopLeftCell": (620, 2, (3, 0), ((16393, 10),), "TopLeftCell", None),
		"Value": (6, 2, (3, 0), ((16387, 10),), "Value", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
		"_Default": (0, 2, (3, 0), ((16387, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"DropDownLines": ((848, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"List": ((861, LCID, 4, 0),()),
		"ListFillRange": ((847, LCID, 4, 0),()),
		"ListIndex": ((850, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Selected": ((1123, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16387, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDropDowns(DispatchBaseClass):
	CLSID = IID('{0002088C-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Display3DShading": (1122, 2, (3, 0), ((16395, 10),), "Display3DShading", None),
		"DropDownLines": (848, 2, (3, 0), ((16387, 10),), "DropDownLines", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"LinkedCell": (1058, 2, (3, 0), ((16392, 10),), "LinkedCell", None),
		"List": (861, 2, (3, 0), ((12, 17), (16396, 10)), "List", None),
		"ListFillRange": (847, 2, (3, 0), ((16392, 10),), "ListFillRange", None),
		"ListIndex": (850, 2, (3, 0), ((16387, 10),), "ListIndex", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"Selected": (1123, 2, (3, 0), ((12, 17), (16396, 10)), "Selected", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Value": (6, 2, (3, 0), ((16387, 10),), "Value", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
		"_Default": (0, 2, (3, 0), ((16387, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"DropDownLines": ((848, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"List": ((861, LCID, 4, 0),()),
		"ListFillRange": ((847, LCID, 4, 0),()),
		"ListIndex": ((850, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Selected": ((1123, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16387, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IDropLines(DispatchBaseClass):
	CLSID = IID('{000208C4-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDummy(DispatchBaseClass):
	CLSID = IID('{0002442E-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"ShowSignaturesPane": (2635, 2, (3, 0), ((16395, 10),), "ShowSignaturesPane", None),
	}
	_prop_map_put_ = {
		"ShowSignaturesPane": ((2635, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEditBox(DispatchBaseClass):
	CLSID = IID('{00020883-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"BottomRightCell": (615, 2, (3, 0), ((16393, 10),), "BottomRightCell", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DisplayVerticalScrollBar": (922, 2, (3, 0), ((16395, 10),), "DisplayVerticalScrollBar", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"InputType": (854, 2, (3, 0), ((16387, 10),), "InputType", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"LinkedObject": (862, 2, (3, 0), ((16392, 10),), "LinkedObject", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"MultiLine": (855, 2, (3, 0), ((16395, 10),), "MultiLine", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PasswordEdit": (1162, 2, (3, 0), ((16395, 10),), "PasswordEdit", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"TopLeftCell": (620, 2, (3, 0), ((16393, 10),), "TopLeftCell", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"DisplayVerticalScrollBar": ((922, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"InputType": ((854, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"MultiLine": ((855, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"PasswordEdit": ((1162, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEditBoxes(DispatchBaseClass):
	CLSID = IID('{00020884-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DisplayVerticalScrollBar": (922, 2, (3, 0), ((16395, 10),), "DisplayVerticalScrollBar", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"InputType": (854, 2, (3, 0), ((16387, 10),), "InputType", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"MultiLine": (855, 2, (3, 0), ((16395, 10),), "MultiLine", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PasswordEdit": (1162, 2, (3, 0), ((16395, 10),), "PasswordEdit", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"DisplayVerticalScrollBar": ((922, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"InputType": ((854, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"MultiLine": ((855, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"PasswordEdit": ((1162, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IError(DispatchBaseClass):
	CLSID = IID('{0002445D-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Ignore": (2210, 2, (3, 0), ((16395, 10),), "Ignore", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Value": (6, 2, (3, 0), ((16395, 10),), "Value", None),
	}
	_prop_map_put_ = {
		"Ignore": ((2210, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16395, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IErrorBars(DispatchBaseClass):
	CLSID = IID('{000208CE-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"EndStyle": (1124, 2, (3, 0), ((16387, 10),), "EndStyle", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
		"EndStyle": ((1124, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IErrorCheckingOptions(DispatchBaseClass):
	CLSID = IID('{0002445B-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"BackgroundChecking": (2201, 2, (3, 0), ((16395, 10),), "BackgroundChecking", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"EmptyCellReferences": (2209, 2, (3, 0), ((16395, 10),), "EmptyCellReferences", None),
		"EvaluateToError": (2203, 2, (3, 0), ((16395, 10),), "EvaluateToError", None),
		"InconsistentFormula": (2206, 2, (3, 0), ((16395, 10),), "InconsistentFormula", None),
		"InconsistentTableFormula": (2675, 2, (3, 0), ((16395, 10),), "InconsistentTableFormula", None),
		"IndicatorColorIndex": (2202, 2, (3, 0), ((16387, 10),), "IndicatorColorIndex", None),
		"ListDataValidation": (2296, 2, (3, 0), ((16395, 10),), "ListDataValidation", None),
		"MisleadingNumberFormats": (3298, 2, (3, 0), ((16395, 10),), "MisleadingNumberFormats", None),
		"NumberAsText": (2205, 2, (3, 0), ((16395, 10),), "NumberAsText", None),
		"OmittedCells": (2207, 2, (3, 0), ((16395, 10),), "OmittedCells", None),
		"OutdatedLinkedDataType": (3380, 2, (3, 0), ((16395, 10),), "OutdatedLinkedDataType", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"TextDate": (2204, 2, (3, 0), ((16395, 10),), "TextDate", None),
		"UnlockedFormulaCells": (2208, 2, (3, 0), ((16395, 10),), "UnlockedFormulaCells", None),
	}
	_prop_map_put_ = {
		"BackgroundChecking": ((2201, LCID, 4, 0),()),
		"EmptyCellReferences": ((2209, LCID, 4, 0),()),
		"EvaluateToError": ((2203, LCID, 4, 0),()),
		"InconsistentFormula": ((2206, LCID, 4, 0),()),
		"InconsistentTableFormula": ((2675, LCID, 4, 0),()),
		"IndicatorColorIndex": ((2202, LCID, 4, 0),()),
		"ListDataValidation": ((2296, LCID, 4, 0),()),
		"MisleadingNumberFormats": ((3298, LCID, 4, 0),()),
		"NumberAsText": ((2205, LCID, 4, 0),()),
		"OmittedCells": ((2207, LCID, 4, 0),()),
		"OutdatedLinkedDataType": ((3380, LCID, 4, 0),()),
		"TextDate": ((2204, LCID, 4, 0),()),
		"UnlockedFormulaCells": ((2208, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IErrors(DispatchBaseClass):
	CLSID = IID('{0002445C-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFileExportConverter(DispatchBaseClass):
	CLSID = IID('{000244B3-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Description": (218, 2, (3, 0), ((16392, 10),), "Description", None),
		"Extensions": (2769, 2, (3, 0), ((16392, 10),), "Extensions", None),
		"FileFormat": (288, 2, (3, 0), ((16387, 10),), "FileFormat", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFileExportConverters(DispatchBaseClass):
	CLSID = IID('{000244B4-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IFilter(DispatchBaseClass):
	CLSID = IID('{00024434-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Criteria1": (796, 2, (3, 0), ((16396, 10),), "Criteria1", None),
		"Criteria2": (798, 2, (3, 0), ((16396, 10),), "Criteria2", None),
		"On": (1618, 2, (3, 0), ((16395, 10),), "On", None),
		"Operator": (797, 2, (3, 0), ((16387, 10),), "Operator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"_Operator": (2641, 2, (3, 0), ((16387, 10),), "_Operator", None),
	}
	_prop_map_put_ = {
		"Operator": ((797, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IFilters(DispatchBaseClass):
	CLSID = IID('{00024433-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IFloor(DispatchBaseClass):
	CLSID = IID('{000208C7-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Fill": (1663, 2, (3, 0), ((16393, 10),), "Fill", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PictureType": (161, 2, (3, 0), ((16396, 10),), "PictureType", None),
		"Thickness": (2652, 2, (3, 0), ((16387, 10),), "Thickness", None),
	}
	_prop_map_put_ = {
		"PictureType": ((161, LCID, 4, 0),()),
		"Thickness": ((2652, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFont(DispatchBaseClass):
	CLSID = IID('{0002084D-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Background": (180, 2, (3, 0), ((16396, 10),), "Background", None),
		"Bold": (96, 2, (3, 0), ((16396, 10),), "Bold", None),
		"Color": (99, 2, (3, 0), ((16396, 10),), "Color", None),
		"ColorIndex": (97, 2, (3, 0), ((16396, 10),), "ColorIndex", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"FontStyle": (177, 2, (3, 0), ((16396, 10),), "FontStyle", None),
		"Italic": (101, 2, (3, 0), ((16396, 10),), "Italic", None),
		"Name": (110, 2, (3, 0), ((16396, 10),), "Name", None),
		"OutlineFont": (221, 2, (3, 0), ((16396, 10),), "OutlineFont", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Shadow": (103, 2, (3, 0), ((16396, 10),), "Shadow", None),
		"Size": (104, 2, (3, 0), ((16396, 10),), "Size", None),
		"Strikethrough": (105, 2, (3, 0), ((16396, 10),), "Strikethrough", None),
		"Subscript": (179, 2, (3, 0), ((16396, 10),), "Subscript", None),
		"Superscript": (178, 2, (3, 0), ((16396, 10),), "Superscript", None),
		"ThemeColor": (2365, 2, (3, 0), ((16396, 10),), "ThemeColor", None),
		"ThemeFont": (2367, 2, (3, 0), ((16387, 10),), "ThemeFont", None),
		"TintAndShade": (2366, 2, (3, 0), ((16396, 10),), "TintAndShade", None),
		"Underline": (106, 2, (3, 0), ((16396, 10),), "Underline", None),
	}
	_prop_map_put_ = {
		"Background": ((180, LCID, 4, 0),()),
		"Bold": ((96, LCID, 4, 0),()),
		"Color": ((99, LCID, 4, 0),()),
		"ColorIndex": ((97, LCID, 4, 0),()),
		"FontStyle": ((177, LCID, 4, 0),()),
		"Italic": ((101, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OutlineFont": ((221, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Size": ((104, LCID, 4, 0),()),
		"Strikethrough": ((105, LCID, 4, 0),()),
		"Subscript": ((179, LCID, 4, 0),()),
		"Superscript": ((178, LCID, 4, 0),()),
		"ThemeColor": ((2365, LCID, 4, 0),()),
		"ThemeFont": ((2367, LCID, 4, 0),()),
		"TintAndShade": ((2366, LCID, 4, 0),()),
		"Underline": ((106, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFormatColor(DispatchBaseClass):
	CLSID = IID('{00024491-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Color": (99, 2, (3, 0), ((16396, 10),), "Color", None),
		"ColorIndex": (97, 2, (3, 0), ((16387, 10),), "ColorIndex", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ThemeColor": (2365, 2, (3, 0), ((16396, 10),), "ThemeColor", None),
		"TintAndShade": (2366, 2, (3, 0), ((16396, 10),), "TintAndShade", None),
	}
	_prop_map_put_ = {
		"Color": ((99, LCID, 4, 0),()),
		"ColorIndex": ((97, LCID, 4, 0),()),
		"ThemeColor": ((2365, LCID, 4, 0),()),
		"TintAndShade": ((2366, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFormatCondition(DispatchBaseClass):
	CLSID = IID('{00024425-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AppliesTo": (2626, 2, (3, 0), ((16393, 10),), "AppliesTo", None),
		"Borders": (435, 2, (3, 0), ((16393, 10),), "Borders", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DateOperator": (2614, 2, (3, 0), ((16387, 10),), "DateOperator", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Formula1": (1579, 2, (3, 0), ((16392, 10),), "Formula1", None),
		"Formula2": (1580, 2, (3, 0), ((16392, 10),), "Formula2", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"NumberFormat": (193, 2, (3, 0), ((16396, 10),), "NumberFormat", None),
		"Operator": (797, 2, (3, 0), ((16387, 10),), "Operator", None),
		"PTCondition": (2631, 2, (3, 0), ((16395, 10),), "PTCondition", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Priority": (985, 2, (3, 0), ((16387, 10),), "Priority", None),
		"ScopeType": (2615, 2, (3, 0), ((16387, 10),), "ScopeType", None),
		"StopIfTrue": (2625, 2, (3, 0), ((16395, 10),), "StopIfTrue", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"TextOperator": (2613, 2, (3, 0), ((16387, 10),), "TextOperator", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
	}
	_prop_map_put_ = {
		"DateOperator": ((2614, LCID, 4, 0),()),
		"NumberFormat": ((193, LCID, 4, 0),()),
		"Priority": ((985, LCID, 4, 0),()),
		"ScopeType": ((2615, LCID, 4, 0),()),
		"StopIfTrue": ((2625, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"TextOperator": ((2613, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFormatConditions(DispatchBaseClass):
	CLSID = IID('{00024424-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IFreeformBuilder(DispatchBaseClass):
	CLSID = IID('{0002443F-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFullSeriesCollection(DispatchBaseClass):
	CLSID = IID('{000244DC-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IGraphic(DispatchBaseClass):
	CLSID = IID('{00024459-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Brightness": (2194, 2, (3, 0), ((16388, 10),), "Brightness", None),
		"ColorType": (2195, 2, (3, 0), ((16387, 10),), "ColorType", None),
		"Contrast": (2196, 2, (3, 0), ((16388, 10),), "Contrast", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"CropBottom": (2197, 2, (3, 0), ((16388, 10),), "CropBottom", None),
		"CropLeft": (2198, 2, (3, 0), ((16388, 10),), "CropLeft", None),
		"CropRight": (2199, 2, (3, 0), ((16388, 10),), "CropRight", None),
		"CropTop": (2200, 2, (3, 0), ((16388, 10),), "CropTop", None),
		"Filename": (1415, 2, (3, 0), ((16392, 10),), "Filename", None),
		"Height": (123, 2, (3, 0), ((16388, 10),), "Height", None),
		"LockAspectRatio": (1700, 2, (3, 0), ((16387, 10),), "LockAspectRatio", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Width": (122, 2, (3, 0), ((16388, 10),), "Width", None),
	}
	_prop_map_put_ = {
		"Brightness": ((2194, LCID, 4, 0),()),
		"ColorType": ((2195, LCID, 4, 0),()),
		"Contrast": ((2196, LCID, 4, 0),()),
		"CropBottom": ((2197, LCID, 4, 0),()),
		"CropLeft": ((2198, LCID, 4, 0),()),
		"CropRight": ((2199, LCID, 4, 0),()),
		"CropTop": ((2200, LCID, 4, 0),()),
		"Filename": ((1415, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"LockAspectRatio": ((1700, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IGridlines(DispatchBaseClass):
	CLSID = IID('{000208C3-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IGroupBox(DispatchBaseClass):
	CLSID = IID('{00020889-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Accelerator": (846, 2, (3, 0), ((16396, 10),), "Accelerator", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"BottomRightCell": (615, 2, (3, 0), ((16393, 10),), "BottomRightCell", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Display3DShading": (1122, 2, (3, 0), ((16395, 10),), "Display3DShading", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (3, 0), ((16396, 10),), "PhoneticAccelerator", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"TopLeftCell": (620, 2, (3, 0), ((16393, 10),), "TopLeftCell", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IGroupBoxes(DispatchBaseClass):
	CLSID = IID('{0002088A-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Accelerator": (846, 2, (3, 0), ((16396, 10),), "Accelerator", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Display3DShading": (1122, 2, (3, 0), ((16395, 10),), "Display3DShading", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (3, 0), ((16396, 10),), "PhoneticAccelerator", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IGroupObject(DispatchBaseClass):
	CLSID = IID('{00020898-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (3, 0), ((16395, 10),), "AddIndent", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"ArrowHeadLength": (611, 2, (3, 0), ((16396, 10),), "ArrowHeadLength", None),
		"ArrowHeadStyle": (612, 2, (3, 0), ((16396, 10),), "ArrowHeadStyle", None),
		"ArrowHeadWidth": (613, 2, (3, 0), ((16396, 10),), "ArrowHeadWidth", None),
		"AutoSize": (614, 2, (3, 0), ((16395, 10),), "AutoSize", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"BottomRightCell": (615, 2, (3, 0), ((16393, 10),), "BottomRightCell", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"RoundedCorners": (619, 2, (3, 0), ((16395, 10),), "RoundedCorners", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"TopLeftCell": (620, 2, (3, 0), ((16393, 10),), "TopLeftCell", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
		"_Default": (0, 2, (3, 0), ((16387, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"ArrowHeadLength": ((611, LCID, 4, 0),()),
		"ArrowHeadStyle": ((612, LCID, 4, 0),()),
		"ArrowHeadWidth": ((613, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"RoundedCorners": ((619, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), ((16387, 10),), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IGroupObjects(DispatchBaseClass):
	CLSID = IID('{00020899-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (3, 0), ((16395, 10),), "AddIndent", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"ArrowHeadLength": (611, 2, (3, 0), ((16396, 10),), "ArrowHeadLength", None),
		"ArrowHeadStyle": (612, 2, (3, 0), ((16396, 10),), "ArrowHeadStyle", None),
		"ArrowHeadWidth": (613, 2, (3, 0), ((16396, 10),), "ArrowHeadWidth", None),
		"AutoSize": (614, 2, (3, 0), ((16395, 10),), "AutoSize", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"RoundedCorners": (619, 2, (3, 0), ((16395, 10),), "RoundedCorners", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
		"_Default": (0, 2, (3, 0), ((16387, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"ArrowHeadLength": ((611, LCID, 4, 0),()),
		"ArrowHeadStyle": ((612, LCID, 4, 0),()),
		"ArrowHeadWidth": ((613, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"RoundedCorners": ((619, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), ((16387, 10),), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IGroupShapes(DispatchBaseClass):
	CLSID = IID('{0002443C-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IHPageBreak(DispatchBaseClass):
	CLSID = IID('{00024401-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Extent": (1422, 2, (3, 0), ((16387, 10),), "Extent", None),
		"Location": (1397, 2, (3, 0), ((16393, 10),), "Location", None),
		"Parent": (150, 2, (3, 0), ((16397, 10),), "Parent", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
	}
	_prop_map_put_ = {
		"Location": ((1397, LCID, 8, 0),()),
		"Type": ((108, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IHPageBreaks(DispatchBaseClass):
	CLSID = IID('{00024404-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IHeaderFooter(DispatchBaseClass):
	CLSID = IID('{000244A1-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Picture": (479, 2, (3, 0), ((16393, 10),), "Picture", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
	}
	_prop_map_put_ = {
		"Text": ((138, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IHiLoLines(DispatchBaseClass):
	CLSID = IID('{000208C2-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IHyperlink(DispatchBaseClass):
	CLSID = IID('{00024431-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Address": (236, 2, (3, 0), ((16392, 10),), "Address", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"EmailSubject": (1883, 2, (3, 0), ((16392, 10),), "EmailSubject", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Range": (197, 2, (3, 0), ((16393, 10),), "Range", None),
		"ScreenTip": (1881, 2, (3, 0), ((16392, 10),), "ScreenTip", None),
		"Shape": (1582, 2, (3, 0), ((16393, 10),), "Shape", None),
		"SubAddress": (1471, 2, (3, 0), ((16392, 10),), "SubAddress", None),
		"TextToDisplay": (1882, 2, (3, 0), ((16392, 10),), "TextToDisplay", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
	}
	_prop_map_put_ = {
		"Address": ((236, LCID, 4, 0),()),
		"EmailSubject": ((1883, LCID, 4, 0),()),
		"ScreenTip": ((1881, LCID, 4, 0),()),
		"SubAddress": ((1471, LCID, 4, 0),()),
		"TextToDisplay": ((1882, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IHyperlinks(DispatchBaseClass):
	CLSID = IID('{00024430-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IIcon(DispatchBaseClass):
	CLSID = IID('{0002449A-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IIconCriteria(DispatchBaseClass):
	CLSID = IID('{00024498-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IIconCriterion(DispatchBaseClass):
	CLSID = IID('{00024499-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Icon": (2747, 2, (3, 0), ((16387, 10),), "Icon", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Operator": (797, 2, (3, 0), ((16387, 10),), "Operator", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
		"Value": (6, 2, (3, 0), ((16396, 10),), "Value", None),
	}
	_prop_map_put_ = {
		"Icon": ((2747, LCID, 4, 0),()),
		"Operator": ((797, LCID, 4, 0),()),
		"Type": ((108, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16396, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IIconSet(DispatchBaseClass):
	CLSID = IID('{0002449B-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"ID": (570, 2, (3, 0), ((16387, 10),), "ID", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IIconSetCondition(DispatchBaseClass):
	CLSID = IID('{00024497-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AppliesTo": (2626, 2, (3, 0), ((16393, 10),), "AppliesTo", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"IconCriteria": (2727, 2, (3, 0), ((16393, 10),), "IconCriteria", None),
		"IconSet": (2726, 2, (3, 0), ((16396, 10),), "IconSet", None),
		"PTCondition": (2631, 2, (3, 0), ((16395, 10),), "PTCondition", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PercentileValues": (2724, 2, (3, 0), ((16395, 10),), "PercentileValues", None),
		"Priority": (985, 2, (3, 0), ((16387, 10),), "Priority", None),
		"ReverseOrder": (2723, 2, (3, 0), ((16395, 10),), "ReverseOrder", None),
		"ScopeType": (2615, 2, (3, 0), ((16387, 10),), "ScopeType", None),
		"ShowIconOnly": (2725, 2, (3, 0), ((16395, 10),), "ShowIconOnly", None),
		"StopIfTrue": (2625, 2, (3, 0), ((16395, 10),), "StopIfTrue", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
	}
	_prop_map_put_ = {
		"Formula": ((261, LCID, 4, 0),()),
		"IconSet": ((2726, LCID, 4, 0),()),
		"PercentileValues": ((2724, LCID, 4, 0),()),
		"Priority": ((985, LCID, 4, 0),()),
		"ReverseOrder": ((2723, LCID, 4, 0),()),
		"ScopeType": ((2615, LCID, 4, 0),()),
		"ShowIconOnly": ((2725, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IIconSets(DispatchBaseClass):
	CLSID = IID('{0002449C-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IInterior(DispatchBaseClass):
	CLSID = IID('{00020870-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Color": (99, 2, (3, 0), ((16396, 10),), "Color", None),
		"ColorIndex": (97, 2, (3, 0), ((16396, 10),), "ColorIndex", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Gradient": (2645, 2, (3, 0), ((16393, 10),), "Gradient", None),
		"InvertIfNegative": (132, 2, (3, 0), ((16396, 10),), "InvertIfNegative", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Pattern": (95, 2, (3, 0), ((16396, 10),), "Pattern", None),
		"PatternColor": (100, 2, (3, 0), ((16396, 10),), "PatternColor", None),
		"PatternColorIndex": (98, 2, (3, 0), ((16396, 10),), "PatternColorIndex", None),
		"PatternThemeColor": (2643, 2, (3, 0), ((16396, 10),), "PatternThemeColor", None),
		"PatternTintAndShade": (2644, 2, (3, 0), ((16396, 10),), "PatternTintAndShade", None),
		"ThemeColor": (2365, 2, (3, 0), ((16396, 10),), "ThemeColor", None),
		"TintAndShade": (2366, 2, (3, 0), ((16396, 10),), "TintAndShade", None),
	}
	_prop_map_put_ = {
		"Color": ((99, LCID, 4, 0),()),
		"ColorIndex": ((97, LCID, 4, 0),()),
		"InvertIfNegative": ((132, LCID, 4, 0),()),
		"Pattern": ((95, LCID, 4, 0),()),
		"PatternColor": ((100, LCID, 4, 0),()),
		"PatternColorIndex": ((98, LCID, 4, 0),()),
		"PatternThemeColor": ((2643, LCID, 4, 0),()),
		"PatternTintAndShade": ((2644, LCID, 4, 0),()),
		"ThemeColor": ((2365, LCID, 4, 0),()),
		"TintAndShade": ((2366, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILabel(DispatchBaseClass):
	CLSID = IID('{00020890-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Accelerator": (846, 2, (3, 0), ((16396, 10),), "Accelerator", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"BottomRightCell": (615, 2, (3, 0), ((16393, 10),), "BottomRightCell", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (3, 0), ((16396, 10),), "PhoneticAccelerator", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"TopLeftCell": (620, 2, (3, 0), ((16393, 10),), "TopLeftCell", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILabels(DispatchBaseClass):
	CLSID = IID('{00020891-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Accelerator": (846, 2, (3, 0), ((16396, 10),), "Accelerator", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (3, 0), ((16396, 10),), "PhoneticAccelerator", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ILeaderLines(DispatchBaseClass):
	CLSID = IID('{00024437-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILegend(DispatchBaseClass):
	CLSID = IID('{000208CD-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Fill": (1663, 2, (3, 0), ((16393, 10),), "Fill", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"IncludeInLayout": (2648, 2, (3, 0), ((16395, 10),), "IncludeInLayout", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Position": (133, 2, (3, 0), ((16387, 10),), "Position", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
	}
	_prop_map_put_ = {
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"IncludeInLayout": ((2648, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILegendEntries(DispatchBaseClass):
	CLSID = IID('{000208BB-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ILegendEntry(DispatchBaseClass):
	CLSID = IID('{000208BA-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"LegendKey": (174, 2, (3, 0), ((16393, 10),), "LegendKey", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
	}
	_prop_map_put_ = {
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILegendKey(DispatchBaseClass):
	CLSID = IID('{000208BC-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Fill": (1663, 2, (3, 0), ((16393, 10),), "Fill", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"InvertIfNegative": (132, 2, (3, 0), ((16395, 10),), "InvertIfNegative", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"MarkerBackgroundColor": (73, 2, (3, 0), ((16387, 10),), "MarkerBackgroundColor", None),
		"MarkerBackgroundColorIndex": (74, 2, (3, 0), ((16387, 10),), "MarkerBackgroundColorIndex", None),
		"MarkerForegroundColor": (75, 2, (3, 0), ((16387, 10),), "MarkerForegroundColor", None),
		"MarkerForegroundColorIndex": (76, 2, (3, 0), ((16387, 10),), "MarkerForegroundColorIndex", None),
		"MarkerSize": (231, 2, (3, 0), ((16387, 10),), "MarkerSize", None),
		"MarkerStyle": (72, 2, (3, 0), ((16387, 10),), "MarkerStyle", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PictureType": (161, 2, (3, 0), ((16387, 10),), "PictureType", None),
		"PictureUnit": (162, 2, (3, 0), ((16387, 10),), "PictureUnit", None),
		"PictureUnit2": (2649, 2, (3, 0), ((16389, 10),), "PictureUnit2", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"Smooth": (163, 2, (3, 0), ((16395, 10),), "Smooth", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
	}
	_prop_map_put_ = {
		"InvertIfNegative": ((132, LCID, 4, 0),()),
		"MarkerBackgroundColor": ((73, LCID, 4, 0),()),
		"MarkerBackgroundColorIndex": ((74, LCID, 4, 0),()),
		"MarkerForegroundColor": ((75, LCID, 4, 0),()),
		"MarkerForegroundColorIndex": ((76, LCID, 4, 0),()),
		"MarkerSize": ((231, LCID, 4, 0),()),
		"MarkerStyle": ((72, LCID, 4, 0),()),
		"PictureType": ((161, LCID, 4, 0),()),
		"PictureUnit": ((162, LCID, 4, 0),()),
		"PictureUnit2": ((2649, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Smooth": ((163, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILine(DispatchBaseClass):
	CLSID = IID('{0002089A-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"ArrowHeadLength": (611, 2, (3, 0), ((16396, 10),), "ArrowHeadLength", None),
		"ArrowHeadStyle": (612, 2, (3, 0), ((16396, 10),), "ArrowHeadStyle", None),
		"ArrowHeadWidth": (613, 2, (3, 0), ((16396, 10),), "ArrowHeadWidth", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"BottomRightCell": (615, 2, (3, 0), ((16393, 10),), "BottomRightCell", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"TopLeftCell": (620, 2, (3, 0), ((16393, 10),), "TopLeftCell", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"ArrowHeadLength": ((611, LCID, 4, 0),()),
		"ArrowHeadStyle": ((612, LCID, 4, 0),()),
		"ArrowHeadWidth": ((613, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILinearGradient(DispatchBaseClass):
	CLSID = IID('{000244AF-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"ColorStops": (2761, 2, (3, 0), ((16393, 10),), "ColorStops", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Degree": (1623, 2, (3, 0), ((16389, 10),), "Degree", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
		"Degree": ((1623, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILines(DispatchBaseClass):
	CLSID = IID('{0002089B-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"ArrowHeadLength": (611, 2, (3, 0), ((16396, 10),), "ArrowHeadLength", None),
		"ArrowHeadStyle": (612, 2, (3, 0), ((16396, 10),), "ArrowHeadStyle", None),
		"ArrowHeadWidth": (613, 2, (3, 0), ((16396, 10),), "ArrowHeadWidth", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"ArrowHeadLength": ((611, LCID, 4, 0),()),
		"ArrowHeadStyle": ((612, LCID, 4, 0),()),
		"ArrowHeadWidth": ((613, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ILinkFormat(DispatchBaseClass):
	CLSID = IID('{00024442-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoUpdate": (1048, 2, (3, 0), ((16395, 10),), "AutoUpdate", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
		"AutoUpdate": ((1048, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IListBox(DispatchBaseClass):
	CLSID = IID('{00020887-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"BottomRightCell": (615, 2, (3, 0), ((16393, 10),), "BottomRightCell", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Display3DShading": (1122, 2, (3, 0), ((16395, 10),), "Display3DShading", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"LinkedCell": (1058, 2, (3, 0), ((16392, 10),), "LinkedCell", None),
		"LinkedObject": (862, 2, (3, 0), ((16396, 10),), "LinkedObject", None),
		"List": (861, 2, (3, 0), ((12, 17), (16396, 10)), "List", None),
		"ListCount": (849, 2, (3, 0), ((16387, 10),), "ListCount", None),
		"ListFillRange": (847, 2, (3, 0), ((16392, 10),), "ListFillRange", None),
		"ListIndex": (850, 2, (3, 0), ((16387, 10),), "ListIndex", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"MultiSelect": (32, 2, (3, 0), ((16387, 10),), "MultiSelect", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"Selected": (1123, 2, (3, 0), ((12, 17), (16396, 10)), "Selected", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"TopLeftCell": (620, 2, (3, 0), ((16393, 10),), "TopLeftCell", None),
		"Value": (6, 2, (3, 0), ((16387, 10),), "Value", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
		"_Default": (0, 2, (3, 0), ((16387, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"List": ((861, LCID, 4, 0),()),
		"ListFillRange": ((847, LCID, 4, 0),()),
		"ListIndex": ((850, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"MultiSelect": ((32, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Selected": ((1123, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16387, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IListBoxes(DispatchBaseClass):
	CLSID = IID('{00020888-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Display3DShading": (1122, 2, (3, 0), ((16395, 10),), "Display3DShading", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"LinkedCell": (1058, 2, (3, 0), ((16392, 10),), "LinkedCell", None),
		"List": (861, 2, (3, 0), ((12, 17), (16396, 10)), "List", None),
		"ListFillRange": (847, 2, (3, 0), ((16392, 10),), "ListFillRange", None),
		"ListIndex": (850, 2, (3, 0), ((16387, 10),), "ListIndex", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"MultiSelect": (32, 2, (3, 0), ((16387, 10),), "MultiSelect", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"Selected": (1123, 2, (3, 0), ((12, 17), (16396, 10)), "Selected", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Value": (6, 2, (3, 0), ((16387, 10),), "Value", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
		"_Default": (0, 2, (3, 0), ((16387, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"List": ((861, LCID, 4, 0),()),
		"ListFillRange": ((847, LCID, 4, 0),()),
		"ListIndex": ((850, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"MultiSelect": ((32, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Selected": ((1123, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16387, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IListColumn(DispatchBaseClass):
	CLSID = IID('{00024473-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DataBodyRange": (705, 2, (3, 0), ((16393, 10),), "DataBodyRange", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"ListDataFormat": (2321, 2, (3, 0), ((16393, 10),), "ListDataFormat", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Range": (197, 2, (3, 0), ((16393, 10),), "Range", None),
		"SharePointFormula": (2323, 2, (3, 0), ((16392, 10),), "SharePointFormula", None),
		"Total": (2681, 2, (3, 0), ((16393, 10),), "Total", None),
		"TotalsCalculation": (2322, 2, (3, 0), ((16387, 10),), "TotalsCalculation", None),
		"XPath": (2258, 2, (3, 0), ((16393, 10),), "XPath", None),
		"_Default": (0, 2, (3, 0), ((16392, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"Name": ((110, LCID, 4, 0),()),
		"TotalsCalculation": ((2322, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), ((16392, 10),), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IListColumns(DispatchBaseClass):
	CLSID = IID('{00024472-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IListDataFormat(DispatchBaseClass):
	CLSID = IID('{0002447D-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AllowFillIn": (2357, 2, (3, 0), ((16395, 10),), "AllowFillIn", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Choices": (2348, 2, (3, 0), ((16396, 10),), "Choices", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DecimalPlaces": (2349, 2, (3, 0), ((16387, 10),), "DecimalPlaces", None),
		"DefaultValue": (2350, 2, (3, 0), ((16396, 10),), "DefaultValue", None),
		"IsPercent": (2351, 2, (3, 0), ((16395, 10),), "IsPercent", None),
		"MaxCharacters": (2353, 2, (3, 0), ((16387, 10),), "MaxCharacters", None),
		"MaxNumber": (2354, 2, (3, 0), ((16396, 10),), "MaxNumber", None),
		"MinNumber": (2355, 2, (3, 0), ((16396, 10),), "MinNumber", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ReadOnly": (296, 2, (3, 0), ((16395, 10),), "ReadOnly", None),
		"Required": (2356, 2, (3, 0), ((16395, 10),), "Required", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
		"_Default": (0, 2, (3, 0), ((16387, 10),), "_Default", None),
		"lcid": (2352, 2, (3, 0), ((16387, 10),), "lcid", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), ((16387, 10),), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IListObject(DispatchBaseClass):
	CLSID = IID('{00024471-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Active": (2312, 2, (3, 0), ((16395, 10),), "Active", None),
		"AlternativeText": (1891, 2, (3, 0), ((16392, 10),), "AlternativeText", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoFilter": (3289, 2, (3, 0), ((16393, 10),), "AutoFilter", None),
		"Comment": (910, 2, (3, 0), ((16392, 10),), "Comment", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DataBodyRange": (705, 2, (3, 0), ((16393, 10),), "DataBodyRange", None),
		"DisplayName": (2677, 2, (3, 0), ((16392, 10),), "DisplayName", None),
		"DisplayRightToLeft": (1774, 2, (3, 0), ((16395, 10),), "DisplayRightToLeft", None),
		"HeaderRowRange": (2313, 2, (3, 0), ((16393, 10),), "HeaderRowRange", None),
		"InsertRowRange": (2314, 2, (3, 0), ((16393, 10),), "InsertRowRange", None),
		"ListColumns": (2315, 2, (3, 0), ((16393, 10),), "ListColumns", None),
		"ListRows": (2316, 2, (3, 0), ((16393, 10),), "ListRows", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"QueryTable": (1386, 2, (3, 0), ((16397, 10),), "QueryTable", None),
		"Range": (197, 2, (3, 0), ((16393, 10),), "Range", None),
		"SharePointURL": (2320, 2, (3, 0), ((16392, 10),), "SharePointURL", None),
		"ShowAutoFilter": (2317, 2, (3, 0), ((16395, 10),), "ShowAutoFilter", None),
		"ShowAutoFilterDropDown": (3096, 2, (3, 0), ((16395, 10),), "ShowAutoFilterDropDown", None),
		"ShowHeaders": (2678, 2, (3, 0), ((16395, 10),), "ShowHeaders", None),
		"ShowTableStyleColumnStripes": (2565, 2, (3, 0), ((16395, 10),), "ShowTableStyleColumnStripes", None),
		"ShowTableStyleFirstColumn": (2679, 2, (3, 0), ((16395, 10),), "ShowTableStyleFirstColumn", None),
		"ShowTableStyleLastColumn": (2563, 2, (3, 0), ((16395, 10),), "ShowTableStyleLastColumn", None),
		"ShowTableStyleRowStripes": (2564, 2, (3, 0), ((16395, 10),), "ShowTableStyleRowStripes", None),
		"ShowTotals": (2318, 2, (3, 0), ((16395, 10),), "ShowTotals", None),
		"Slicers": (2881, 2, (3, 0), ((16393, 10),), "Slicers", None),
		"Sort": (3288, 2, (3, 0), ((16393, 10),), "Sort", None),
		"SourceType": (685, 2, (3, 0), ((16387, 10),), "SourceType", None),
		"Summary": (273, 2, (3, 0), ((16392, 10),), "Summary", None),
		"TableObject": (3095, 2, (3, 0), ((16393, 10),), "TableObject", None),
		"TableStyle": (1504, 2, (3, 0), ((16396, 10),), "TableStyle", None),
		"TotalsRowRange": (2319, 2, (3, 0), ((16393, 10),), "TotalsRowRange", None),
		"XmlMap": (2253, 2, (3, 0), ((16393, 10),), "XmlMap", None),
		"_AutoFilter": (793, 2, (3, 0), ((16393, 10),), "_AutoFilter", None),
		"_Default": (0, 2, (3, 0), ((16392, 10),), "_Default", None),
		"_Sort": (880, 2, (3, 0), ((16393, 10),), "_Sort", None),
	}
	_prop_map_put_ = {
		"AlternativeText": ((1891, LCID, 4, 0),()),
		"Comment": ((910, LCID, 4, 0),()),
		"DisplayName": ((2677, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"ShowAutoFilter": ((2317, LCID, 4, 0),()),
		"ShowAutoFilterDropDown": ((3096, LCID, 4, 0),()),
		"ShowHeaders": ((2678, LCID, 4, 0),()),
		"ShowTableStyleColumnStripes": ((2565, LCID, 4, 0),()),
		"ShowTableStyleFirstColumn": ((2679, LCID, 4, 0),()),
		"ShowTableStyleLastColumn": ((2563, LCID, 4, 0),()),
		"ShowTableStyleRowStripes": ((2564, LCID, 4, 0),()),
		"ShowTotals": ((2318, LCID, 4, 0),()),
		"Summary": ((273, LCID, 4, 0),()),
		"TableStyle": ((1504, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), ((16392, 10),), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IListObjects(DispatchBaseClass):
	CLSID = IID('{00024470-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IListRow(DispatchBaseClass):
	CLSID = IID('{00024475-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"InvalidData": (2324, 2, (3, 0), ((16395, 10),), "InvalidData", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Range": (197, 2, (3, 0), ((16393, 10),), "Range", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IListRows(DispatchBaseClass):
	CLSID = IID('{00024474-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IMailer(DispatchBaseClass):
	CLSID = IID('{000208D1-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"BCCRecipients": (983, 2, (3, 0), ((16396, 10),), "BCCRecipients", None),
		"CCRecipients": (982, 2, (3, 0), ((16396, 10),), "CCRecipients", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enclosures": (984, 2, (3, 0), ((16396, 10),), "Enclosures", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Received": (986, 2, (3, 0), ((16395, 10),), "Received", None),
		"SendDateTime": (987, 2, (3, 0), ((16391, 10),), "SendDateTime", None),
		"Sender": (988, 2, (3, 0), ((16392, 10),), "Sender", None),
		"Subject": (953, 2, (3, 0), ((16392, 10),), "Subject", None),
		"ToRecipients": (981, 2, (3, 0), ((16396, 10),), "ToRecipients", None),
		"WhichAddress": (974, 2, (3, 0), ((16396, 10),), "WhichAddress", None),
	}
	_prop_map_put_ = {
		"BCCRecipients": ((983, LCID, 4, 0),()),
		"CCRecipients": ((982, LCID, 4, 0),()),
		"Enclosures": ((984, LCID, 4, 0),()),
		"Subject": ((953, LCID, 4, 0),()),
		"ToRecipients": ((981, LCID, 4, 0),()),
		"WhichAddress": ((974, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMenu(DispatchBaseClass):
	CLSID = IID('{00020866-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"MenuItems": (593, 2, (3, 0), ((16393, 10),), "MenuItems", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMenuBar(DispatchBaseClass):
	CLSID = IID('{00020864-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"BuiltIn": (553, 2, (3, 0), ((16395, 10),), "BuiltIn", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Menus": (591, 2, (3, 0), ((16393, 10),), "Menus", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMenuBars(DispatchBaseClass):
	CLSID = IID('{00020863-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IMenuItem(DispatchBaseClass):
	CLSID = IID('{00020868-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Checked": (599, 2, (3, 0), ((16395, 10),), "Checked", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"HelpContextID": (355, 2, (3, 0), ((16387, 10),), "HelpContextID", None),
		"HelpFile": (360, 2, (3, 0), ((16392, 10),), "HelpFile", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"StatusBar": (386, 2, (3, 0), ((16392, 10),), "StatusBar", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"Checked": ((599, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"HelpContextID": ((355, LCID, 4, 0),()),
		"HelpFile": ((360, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"StatusBar": ((386, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMenuItems(DispatchBaseClass):
	CLSID = IID('{00020867-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IMenus(DispatchBaseClass):
	CLSID = IID('{00020865-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IModel(DispatchBaseClass):
	CLSID = IID('{000244DB-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DataModelConnection": (3131, 2, (3, 0), ((16393, 10),), "DataModelConnection", None),
		"ModelFormatBoolean": (3221, 2, (3, 0), ((16393, 10),), "ModelFormatBoolean", None),
		"ModelFormatCurrency": (3219, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "ModelFormatCurrency", None),
		"ModelFormatDate": (3212, 2, (3, 0), ((12, 17), (16393, 10)), "ModelFormatDate", None),
		"ModelFormatDecimalNumber": (3214, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "ModelFormatDecimalNumber", None),
		"ModelFormatGeneral": (3211, 2, (3, 0), ((16393, 10),), "ModelFormatGeneral", None),
		"ModelFormatPercentageNumber": (3217, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "ModelFormatPercentageNumber", None),
		"ModelFormatScientificNumber": (3218, 2, (3, 0), ((12, 17), (16393, 10)), "ModelFormatScientificNumber", None),
		"ModelFormatWholeNumber": (3216, 2, (3, 0), ((12, 17), (16393, 10)), "ModelFormatWholeNumber", None),
		"ModelMeasures": (3210, 2, (3, 0), ((16393, 10),), "ModelMeasures", None),
		"ModelRelationships": (3126, 2, (3, 0), ((16393, 10),), "ModelRelationships", None),
		"ModelTables": (3106, 2, (3, 0), ((16393, 10),), "ModelTables", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelChanges(DispatchBaseClass):
	CLSID = IID('{000244E4-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"ColumnsAdded": (3150, 2, (3, 0), ((16393, 10),), "ColumnsAdded", None),
		"ColumnsChanged": (3152, 2, (3, 0), ((16393, 10),), "ColumnsChanged", None),
		"ColumnsDeleted": (3151, 2, (3, 0), ((16393, 10),), "ColumnsDeleted", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"MeasuresAdded": (3153, 2, (3, 0), ((16393, 10),), "MeasuresAdded", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"RelationshipChange": (3149, 2, (3, 0), ((16395, 10),), "RelationshipChange", None),
		"Source": (222, 2, (3, 0), ((16387, 10),), "Source", None),
		"TableNamesChanged": (3148, 2, (3, 0), ((16393, 10),), "TableNamesChanged", None),
		"TablesAdded": (3145, 2, (3, 0), ((16393, 10),), "TablesAdded", None),
		"TablesDeleted": (3146, 2, (3, 0), ((16393, 10),), "TablesDeleted", None),
		"TablesModified": (3147, 2, (3, 0), ((16393, 10),), "TablesModified", None),
		"UnknownChange": (3154, 2, (3, 0), ((16395, 10),), "UnknownChange", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelColumnChange(DispatchBaseClass):
	CLSID = IID('{000244E7-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"ColumnName": (3156, 2, (3, 0), ((16392, 10),), "ColumnName", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"TableName": (688, 2, (3, 0), ((16392, 10),), "TableName", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelColumnChanges(DispatchBaseClass):
	CLSID = IID('{000244E8-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IModelColumnName(DispatchBaseClass):
	CLSID = IID('{000244E5-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"ColumnName": (3156, 2, (3, 0), ((16392, 10),), "ColumnName", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"TableName": (688, 2, (3, 0), ((16392, 10),), "TableName", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelColumnNames(DispatchBaseClass):
	CLSID = IID('{000244E6-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IModelConnection(DispatchBaseClass):
	CLSID = IID('{000244D1-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"ADOConnection": (2074, 2, (3, 0), ((16393, 10),), "ADOConnection", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"CalculatedMembers": (2125, 2, (3, 0), ((16393, 10),), "CalculatedMembers", None),
		"CommandText": (1829, 2, (3, 0), ((16396, 10),), "CommandText", None),
		"CommandType": (1830, 2, (3, 0), ((16387, 10),), "CommandType", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
		"CommandText": ((1829, LCID, 4, 0),()),
		"CommandType": ((1830, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelFormatBoolean(DispatchBaseClass):
	CLSID = IID('{000244F6-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelFormatCurrency(DispatchBaseClass):
	CLSID = IID('{000244F5-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DecimalPlaces": (2349, 2, (3, 0), ((16387, 10),), "DecimalPlaces", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Symbol": (3220, 2, (3, 0), ((16392, 10),), "Symbol", None),
	}
	_prop_map_put_ = {
		"DecimalPlaces": ((2349, LCID, 4, 0),()),
		"Symbol": ((3220, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelFormatDate(DispatchBaseClass):
	CLSID = IID('{000244F0-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"FormatString": (3213, 2, (3, 0), ((16392, 10),), "FormatString", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
		"FormatString": ((3213, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelFormatDecimalNumber(DispatchBaseClass):
	CLSID = IID('{000244F1-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DecimalPlaces": (2349, 2, (3, 0), ((16387, 10),), "DecimalPlaces", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"UseThousandSeparator": (3215, 2, (3, 0), ((16395, 10),), "UseThousandSeparator", None),
	}
	_prop_map_put_ = {
		"DecimalPlaces": ((2349, LCID, 4, 0),()),
		"UseThousandSeparator": ((3215, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelFormatGeneral(DispatchBaseClass):
	CLSID = IID('{000244EF-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelFormatPercentageNumber(DispatchBaseClass):
	CLSID = IID('{000244F3-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DecimalPlaces": (2349, 2, (3, 0), ((16387, 10),), "DecimalPlaces", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"UseThousandSeparator": (3215, 2, (3, 0), ((16395, 10),), "UseThousandSeparator", None),
	}
	_prop_map_put_ = {
		"DecimalPlaces": ((2349, LCID, 4, 0),()),
		"UseThousandSeparator": ((3215, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelFormatScientificNumber(DispatchBaseClass):
	CLSID = IID('{000244F4-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DecimalPlaces": (2349, 2, (3, 0), ((16387, 10),), "DecimalPlaces", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
		"DecimalPlaces": ((2349, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelFormatWholeNumber(DispatchBaseClass):
	CLSID = IID('{000244F2-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"UseThousandSeparator": (3215, 2, (3, 0), ((16395, 10),), "UseThousandSeparator", None),
	}
	_prop_map_put_ = {
		"UseThousandSeparator": ((3215, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelMeasure(DispatchBaseClass):
	CLSID = IID('{000244ED-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AssociatedTable": (3224, 2, (3, 0), ((16393, 10),), "AssociatedTable", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Description": (218, 2, (3, 0), ((16392, 10),), "Description", None),
		"FormatInformation": (3225, 2, (3, 0), ((16396, 10),), "FormatInformation", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
		"AssociatedTable": ((3224, LCID, 8, 0),()),
		"Description": ((218, LCID, 4, 0),()),
		"FormatInformation": ((3225, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelMeasureName(DispatchBaseClass):
	CLSID = IID('{000244E9-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"MeasureName": (3157, 2, (3, 0), ((16392, 10),), "MeasureName", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"TableName": (688, 2, (3, 0), ((16392, 10),), "TableName", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelMeasureNames(DispatchBaseClass):
	CLSID = IID('{000244EA-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IModelMeasures(DispatchBaseClass):
	CLSID = IID('{000244EE-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IModelRelationship(DispatchBaseClass):
	CLSID = IID('{000244D9-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Active": (2312, 2, (3, 0), ((16395, 10),), "Active", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"ForeignKeyColumn": (3123, 2, (3, 0), ((16393, 10),), "ForeignKeyColumn", None),
		"ForeignKeyTable": (3122, 2, (3, 0), ((16393, 10),), "ForeignKeyTable", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PrimaryKeyColumn": (3125, 2, (3, 0), ((16393, 10),), "PrimaryKeyColumn", None),
		"PrimaryKeyTable": (3124, 2, (3, 0), ((16393, 10),), "PrimaryKeyTable", None),
	}
	_prop_map_put_ = {
		"Active": ((2312, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelRelationships(DispatchBaseClass):
	CLSID = IID('{000244DA-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IModelTable(DispatchBaseClass):
	CLSID = IID('{000244D7-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"ModelTableColumns": (3119, 2, (3, 0), ((16393, 10),), "ModelTableColumns", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"RecordCount": (1478, 2, (3, 0), ((16387, 10),), "RecordCount", None),
		"SourceName": (721, 2, (3, 0), ((16392, 10),), "SourceName", None),
		"SourceWorkbookConnection": (3120, 2, (3, 0), ((16393, 10),), "SourceWorkbookConnection", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelTableColumn(DispatchBaseClass):
	CLSID = IID('{000244D5-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DataType": (722, 2, (3, 0), ((16387, 10),), "DataType", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelTableColumns(DispatchBaseClass):
	CLSID = IID('{000244D6-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IModelTableNameChange(DispatchBaseClass):
	CLSID = IID('{000244E2-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"TableNameNew": (3144, 2, (3, 0), ((16392, 10),), "TableNameNew", None),
		"TableNameOld": (3143, 2, (3, 0), ((16392, 10),), "TableNameOld", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelTableNameChanges(DispatchBaseClass):
	CLSID = IID('{000244E3-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IModelTableNames(DispatchBaseClass):
	CLSID = IID('{000244E1-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IModelTables(DispatchBaseClass):
	CLSID = IID('{000244D8-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IModule(DispatchBaseClass):
	CLSID = IID('{000208AD-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"CodeName": (1373, 2, (3, 0), ((16392, 10),), "CodeName", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Next": (502, 2, (3, 0), ((16393, 10),), "Next", None),
		"PageSetup": (998, 2, (3, 0), ((16393, 10),), "PageSetup", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Previous": (503, 2, (3, 0), ((16393, 10),), "Previous", None),
		"Shapes": (1377, 2, (3, 0), ((16393, 10),), "Shapes", None),
		"_CodeName": (-2147418112, 2, (3, 0), ((16392, 10),), "_CodeName", None),
	}
	_prop_map_put_ = {
		"Name": ((110, LCID, 4, 0),()),
		"_CodeName": ((-2147418112, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModuleView(DispatchBaseClass):
	CLSID = IID('{00024489-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Sheet": (751, 2, (3, 0), ((16393, 10),), "Sheet", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModules(DispatchBaseClass):
	CLSID = IID('{000208AE-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"HPageBreaks": (1418, 2, (3, 0), ((16393, 10),), "HPageBreaks", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"VPageBreaks": (1419, 2, (3, 0), ((16393, 10),), "VPageBreaks", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IMultiThreadedCalculation(DispatchBaseClass):
	CLSID = IID('{000244B1-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ThreadCount": (2767, 2, (3, 0), ((16387, 10),), "ThreadCount", None),
		"ThreadMode": (2766, 2, (3, 0), ((16387, 10),), "ThreadMode", None),
	}
	_prop_map_put_ = {
		"Enabled": ((600, LCID, 4, 0),()),
		"ThreadCount": ((2767, LCID, 4, 0),()),
		"ThreadMode": ((2766, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IName(DispatchBaseClass):
	CLSID = IID('{000208B9-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"CategoryLocal": (935, 2, (3, 0), ((16392, 10),), "CategoryLocal", None),
		"Comment": (910, 2, (3, 0), ((16392, 10),), "Comment", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"MacroType": (936, 2, (3, 0), ((16387, 10),), "MacroType", None),
		"NameLocal": (937, 2, (3, 0), ((16392, 10),), "NameLocal", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"RefersToLocal": (939, 2, (3, 0), ((16396, 10),), "RefersToLocal", None),
		"RefersToR1C1Local": (941, 2, (3, 0), ((16396, 10),), "RefersToR1C1Local", None),
		"RefersToRange": (1160, 2, (3, 0), ((16393, 10),), "RefersToRange", None),
		"ShortcutKey": (597, 2, (3, 0), ((16392, 10),), "ShortcutKey", None),
		"ValidWorkbookParameter": (2608, 2, (3, 0), ((16395, 10),), "ValidWorkbookParameter", None),
		"Value": (6, 2, (3, 0), ((16392, 10),), "Value", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"WorkbookParameter": (2607, 2, (3, 0), ((16395, 10),), "WorkbookParameter", None),
		"_Default": (0, 2, (3, 0), ((16392, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"CategoryLocal": ((935, LCID, 4, 0),()),
		"Comment": ((910, LCID, 4, 0),()),
		"MacroType": ((936, LCID, 4, 0),()),
		"NameLocal": ((937, LCID, 4, 0),()),
		"RefersToLocal": ((939, LCID, 4, 0),()),
		"RefersToR1C1Local": ((941, LCID, 4, 0),()),
		"ShortcutKey": ((597, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"WorkbookParameter": ((2607, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16392, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INamedSheetView(DispatchBaseClass):
	CLSID = IID('{00024502-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
		"Name": ((110, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INamedSheetViewCollection(DispatchBaseClass):
	CLSID = IID('{00024501-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class INames(DispatchBaseClass):
	CLSID = IID('{000208B8-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class INegativeBarFormat(DispatchBaseClass):
	CLSID = IID('{000244BF-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"BorderColor": (2970, 2, (3, 0), ((16393, 10),), "BorderColor", None),
		"BorderColorType": (2969, 2, (3, 0), ((16387, 10),), "BorderColorType", None),
		"Color": (99, 2, (3, 0), ((16393, 10),), "Color", None),
		"ColorType": (2195, 2, (3, 0), ((16387, 10),), "ColorType", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
		"BorderColorType": ((2969, LCID, 4, 0),()),
		"ColorType": ((2195, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IODBCConnection(DispatchBaseClass):
	CLSID = IID('{0002448E-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AlwaysUseConnectionFile": (2706, 2, (3, 0), ((16395, 10),), "AlwaysUseConnectionFile", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"BackgroundQuery": (1427, 2, (3, 0), ((16395, 10),), "BackgroundQuery", None),
		"CommandText": (1829, 2, (3, 0), ((16396, 10),), "CommandText", None),
		"CommandType": (1830, 2, (3, 0), ((16387, 10),), "CommandType", None),
		"Connection": (1432, 2, (3, 0), ((16396, 10),), "Connection", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"EnableRefresh": (1477, 2, (3, 0), ((16395, 10),), "EnableRefresh", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"RefreshDate": (696, 2, (3, 0), ((16391, 10),), "RefreshDate", None),
		"RefreshOnFileOpen": (1479, 2, (3, 0), ((16395, 10),), "RefreshOnFileOpen", None),
		"RefreshPeriod": (1833, 2, (3, 0), ((16387, 10),), "RefreshPeriod", None),
		"Refreshing": (1587, 2, (3, 0), ((16395, 10),), "Refreshing", None),
		"RobustConnect": (2081, 2, (3, 0), ((16387, 10),), "RobustConnect", None),
		"SavePassword": (1481, 2, (3, 0), ((16395, 10),), "SavePassword", None),
		"ServerCredentialsMethod": (2704, 2, (3, 0), ((16387, 10),), "ServerCredentialsMethod", None),
		"ServerSSOApplicationID": (2705, 2, (3, 0), ((16392, 10),), "ServerSSOApplicationID", None),
		"SourceConnectionFile": (2079, 2, (3, 0), ((16392, 10),), "SourceConnectionFile", None),
		"SourceData": (686, 2, (3, 0), ((16396, 10),), "SourceData", None),
		"SourceDataFile": (2080, 2, (3, 0), ((16392, 10),), "SourceDataFile", None),
	}
	_prop_map_put_ = {
		"AlwaysUseConnectionFile": ((2706, LCID, 4, 0),()),
		"BackgroundQuery": ((1427, LCID, 4, 0),()),
		"CommandText": ((1829, LCID, 4, 0),()),
		"CommandType": ((1830, LCID, 4, 0),()),
		"Connection": ((1432, LCID, 4, 0),()),
		"EnableRefresh": ((1477, LCID, 4, 0),()),
		"RefreshOnFileOpen": ((1479, LCID, 4, 0),()),
		"RefreshPeriod": ((1833, LCID, 4, 0),()),
		"RobustConnect": ((2081, LCID, 4, 0),()),
		"SavePassword": ((1481, LCID, 4, 0),()),
		"ServerCredentialsMethod": ((2704, LCID, 4, 0),()),
		"ServerSSOApplicationID": ((2705, LCID, 4, 0),()),
		"SourceConnectionFile": ((2079, LCID, 4, 0),()),
		"SourceData": ((686, LCID, 4, 0),()),
		"SourceDataFile": ((2080, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IODBCError(DispatchBaseClass):
	CLSID = IID('{0002442C-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"ErrorString": (1490, 2, (3, 0), ((16392, 10),), "ErrorString", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"SqlState": (1603, 2, (3, 0), ((16392, 10),), "SqlState", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IODBCErrors(DispatchBaseClass):
	CLSID = IID('{0002442D-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IOLEDBConnection(DispatchBaseClass):
	CLSID = IID('{0002448D-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"ADOConnection": (2074, 2, (3, 0), ((16393, 10),), "ADOConnection", None),
		"AlwaysUseConnectionFile": (2706, 2, (3, 0), ((16395, 10),), "AlwaysUseConnectionFile", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"BackgroundQuery": (1427, 2, (3, 0), ((16395, 10),), "BackgroundQuery", None),
		"CalculatedMembers": (2125, 2, (3, 0), ((16393, 10),), "CalculatedMembers", None),
		"CommandText": (1829, 2, (3, 0), ((16396, 10),), "CommandText", None),
		"CommandType": (1830, 2, (3, 0), ((16387, 10),), "CommandType", None),
		"Connection": (1432, 2, (3, 0), ((16396, 10),), "Connection", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"EnableRefresh": (1477, 2, (3, 0), ((16395, 10),), "EnableRefresh", None),
		"IsConnected": (2075, 2, (3, 0), ((16395, 10),), "IsConnected", None),
		"LocalConnection": (1835, 2, (3, 0), ((16396, 10),), "LocalConnection", None),
		"LocaleID": (2940, 2, (3, 0), ((16387, 10),), "LocaleID", None),
		"MaintainConnection": (1832, 2, (3, 0), ((16395, 10),), "MaintainConnection", None),
		"MaxDrillthroughRecords": (2703, 2, (3, 0), ((16387, 10),), "MaxDrillthroughRecords", None),
		"OLAP": (2077, 2, (3, 0), ((16395, 10),), "OLAP", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"RefreshDate": (696, 2, (3, 0), ((16391, 10),), "RefreshDate", None),
		"RefreshOnFileOpen": (1479, 2, (3, 0), ((16395, 10),), "RefreshOnFileOpen", None),
		"RefreshPeriod": (1833, 2, (3, 0), ((16387, 10),), "RefreshPeriod", None),
		"Refreshing": (1587, 2, (3, 0), ((16395, 10),), "Refreshing", None),
		"RetrieveInOfficeUILang": (2711, 2, (3, 0), ((16395, 10),), "RetrieveInOfficeUILang", None),
		"RobustConnect": (2081, 2, (3, 0), ((16387, 10),), "RobustConnect", None),
		"SavePassword": (1481, 2, (3, 0), ((16395, 10),), "SavePassword", None),
		"ServerCredentialsMethod": (2704, 2, (3, 0), ((16387, 10),), "ServerCredentialsMethod", None),
		"ServerFillColor": (2707, 2, (3, 0), ((16395, 10),), "ServerFillColor", None),
		"ServerFontStyle": (2708, 2, (3, 0), ((16395, 10),), "ServerFontStyle", None),
		"ServerNumberFormat": (2709, 2, (3, 0), ((16395, 10),), "ServerNumberFormat", None),
		"ServerSSOApplicationID": (2705, 2, (3, 0), ((16392, 10),), "ServerSSOApplicationID", None),
		"ServerTextColor": (2710, 2, (3, 0), ((16395, 10),), "ServerTextColor", None),
		"SourceConnectionFile": (2079, 2, (3, 0), ((16392, 10),), "SourceConnectionFile", None),
		"SourceDataFile": (2080, 2, (3, 0), ((16392, 10),), "SourceDataFile", None),
		"UseLocalConnection": (1837, 2, (3, 0), ((16395, 10),), "UseLocalConnection", None),
	}
	_prop_map_put_ = {
		"AlwaysUseConnectionFile": ((2706, LCID, 4, 0),()),
		"BackgroundQuery": ((1427, LCID, 4, 0),()),
		"CommandText": ((1829, LCID, 4, 0),()),
		"CommandType": ((1830, LCID, 4, 0),()),
		"Connection": ((1432, LCID, 4, 0),()),
		"EnableRefresh": ((1477, LCID, 4, 0),()),
		"LocalConnection": ((1835, LCID, 4, 0),()),
		"LocaleID": ((2940, LCID, 4, 0),()),
		"MaintainConnection": ((1832, LCID, 4, 0),()),
		"MaxDrillthroughRecords": ((2703, LCID, 4, 0),()),
		"RefreshOnFileOpen": ((1479, LCID, 4, 0),()),
		"RefreshPeriod": ((1833, LCID, 4, 0),()),
		"RetrieveInOfficeUILang": ((2711, LCID, 4, 0),()),
		"RobustConnect": ((2081, LCID, 4, 0),()),
		"SavePassword": ((1481, LCID, 4, 0),()),
		"ServerCredentialsMethod": ((2704, LCID, 4, 0),()),
		"ServerFillColor": ((2707, LCID, 4, 0),()),
		"ServerFontStyle": ((2708, LCID, 4, 0),()),
		"ServerNumberFormat": ((2709, LCID, 4, 0),()),
		"ServerSSOApplicationID": ((2705, LCID, 4, 0),()),
		"ServerTextColor": ((2710, LCID, 4, 0),()),
		"SourceConnectionFile": ((2079, LCID, 4, 0),()),
		"SourceDataFile": ((2080, LCID, 4, 0),()),
		"UseLocalConnection": ((1837, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOLEDBError(DispatchBaseClass):
	CLSID = IID('{00024445-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"ErrorString": (1490, 2, (3, 0), ((16392, 10),), "ErrorString", None),
		"Native": (1897, 2, (3, 0), ((16387, 10),), "Native", None),
		"Number": (451, 2, (3, 0), ((16387, 10),), "Number", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"SqlState": (1603, 2, (3, 0), ((16392, 10),), "SqlState", None),
		"Stage": (1898, 2, (3, 0), ((16387, 10),), "Stage", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOLEDBErrors(DispatchBaseClass):
	CLSID = IID('{00024446-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IOLEFormat(DispatchBaseClass):
	CLSID = IID('{00024441-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Object": (1049, 2, (3, 0), ((16393, 10),), "Object", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"progID": (1523, 2, (3, 0), ((16392, 10),), "progID", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOLEObjectEvents(DispatchBaseClass):
	CLSID = IID('{00024410-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOLEObjects(DispatchBaseClass):
	CLSID = IID('{000208A3-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoLoad": (1186, 2, (3, 0), ((16395, 10),), "AutoLoad", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"SourceName": (721, 2, (3, 0), ((16392, 10),), "SourceName", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AutoLoad": ((1186, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"SourceName": ((721, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IOptionButton(DispatchBaseClass):
	CLSID = IID('{00020881-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Accelerator": (846, 2, (3, 0), ((16396, 10),), "Accelerator", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"BottomRightCell": (615, 2, (3, 0), ((16393, 10),), "BottomRightCell", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Display3DShading": (1122, 2, (3, 0), ((16395, 10),), "Display3DShading", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"GroupBox": (833, 2, (3, 0), ((16393, 10),), "GroupBox", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"LinkedCell": (1058, 2, (3, 0), ((16392, 10),), "LinkedCell", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (3, 0), ((16396, 10),), "PhoneticAccelerator", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"TopLeftCell": (620, 2, (3, 0), ((16393, 10),), "TopLeftCell", None),
		"Value": (6, 2, (3, 0), ((16396, 10),), "Value", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
		"_Default": (0, 2, (3, 0), ((16387, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16396, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOptionButtons(DispatchBaseClass):
	CLSID = IID('{00020882-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Accelerator": (846, 2, (3, 0), ((16396, 10),), "Accelerator", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Display3DShading": (1122, 2, (3, 0), ((16395, 10),), "Display3DShading", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"GroupBox": (833, 2, (3, 0), ((16393, 10),), "GroupBox", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"LinkedCell": (1058, 2, (3, 0), ((16392, 10),), "LinkedCell", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (3, 0), ((16396, 10),), "PhoneticAccelerator", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Value": (6, 2, (3, 0), ((16396, 10),), "Value", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
		"_Default": (0, 2, (3, 0), ((16387, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16396, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IOutline(DispatchBaseClass):
	CLSID = IID('{000208AB-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutomaticStyles": (959, 2, (3, 0), ((16395, 10),), "AutomaticStyles", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"SummaryColumn": (961, 2, (3, 0), ((16387, 10),), "SummaryColumn", None),
		"SummaryRow": (902, 2, (3, 0), ((16387, 10),), "SummaryRow", None),
	}
	_prop_map_put_ = {
		"AutomaticStyles": ((959, LCID, 4, 0),()),
		"SummaryColumn": ((961, LCID, 4, 0),()),
		"SummaryRow": ((902, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOval(DispatchBaseClass):
	CLSID = IID('{0002089E-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (3, 0), ((16395, 10),), "AddIndent", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"AutoSize": (614, 2, (3, 0), ((16395, 10),), "AutoSize", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"BottomRightCell": (615, 2, (3, 0), ((16393, 10),), "BottomRightCell", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"TopLeftCell": (620, 2, (3, 0), ((16393, 10),), "TopLeftCell", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOvals(DispatchBaseClass):
	CLSID = IID('{0002089F-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (3, 0), ((16395, 10),), "AddIndent", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"AutoSize": (614, 2, (3, 0), ((16395, 10),), "AutoSize", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IPage(DispatchBaseClass):
	CLSID = IID('{000244A2-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"CenterFooter": (1010, 2, (3, 0), ((16393, 10),), "CenterFooter", None),
		"CenterHeader": (1011, 2, (3, 0), ((16393, 10),), "CenterHeader", None),
		"LeftFooter": (1017, 2, (3, 0), ((16393, 10),), "LeftFooter", None),
		"LeftHeader": (1018, 2, (3, 0), ((16393, 10),), "LeftHeader", None),
		"RightFooter": (1025, 2, (3, 0), ((16393, 10),), "RightFooter", None),
		"RightHeader": (1026, 2, (3, 0), ((16393, 10),), "RightHeader", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPageSetup(DispatchBaseClass):
	CLSID = IID('{000208B4-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AlignMarginsHeaderFooter": (2603, 2, (3, 0), ((16395, 10),), "AlignMarginsHeaderFooter", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"BlackAndWhite": (1009, 2, (3, 0), ((16395, 10),), "BlackAndWhite", None),
		"BottomMargin": (1002, 2, (3, 0), ((16389, 10),), "BottomMargin", None),
		"CenterFooter": (1010, 2, (3, 0), ((16392, 10),), "CenterFooter", None),
		"CenterFooterPicture": (2151, 2, (3, 0), ((16393, 10),), "CenterFooterPicture", None),
		"CenterHeader": (1011, 2, (3, 0), ((16392, 10),), "CenterHeader", None),
		"CenterHeaderPicture": (2150, 2, (3, 0), ((16393, 10),), "CenterHeaderPicture", None),
		"CenterHorizontally": (1005, 2, (3, 0), ((16395, 10),), "CenterHorizontally", None),
		"CenterVertically": (1006, 2, (3, 0), ((16395, 10),), "CenterVertically", None),
		"ChartSize": (1012, 2, (3, 0), ((16387, 10),), "ChartSize", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DifferentFirstPageHeaderFooter": (2601, 2, (3, 0), ((16395, 10),), "DifferentFirstPageHeaderFooter", None),
		"Draft": (1020, 2, (3, 0), ((16395, 10),), "Draft", None),
		"EvenPage": (2605, 2, (3, 0), ((16393, 10),), "EvenPage", None),
		"FirstPage": (2606, 2, (3, 0), ((16393, 10),), "FirstPage", None),
		"FirstPageNumber": (1008, 2, (3, 0), ((16387, 10),), "FirstPageNumber", None),
		"FitToPagesTall": (1013, 2, (3, 0), ((16396, 10),), "FitToPagesTall", None),
		"FitToPagesWide": (1014, 2, (3, 0), ((16396, 10),), "FitToPagesWide", None),
		"FooterMargin": (1015, 2, (3, 0), ((16389, 10),), "FooterMargin", None),
		"HeaderMargin": (1016, 2, (3, 0), ((16389, 10),), "HeaderMargin", None),
		"LeftFooter": (1017, 2, (3, 0), ((16392, 10),), "LeftFooter", None),
		"LeftFooterPicture": (2153, 2, (3, 0), ((16393, 10),), "LeftFooterPicture", None),
		"LeftHeader": (1018, 2, (3, 0), ((16392, 10),), "LeftHeader", None),
		"LeftHeaderPicture": (2152, 2, (3, 0), ((16393, 10),), "LeftHeaderPicture", None),
		"LeftMargin": (999, 2, (3, 0), ((16389, 10),), "LeftMargin", None),
		"OddAndEvenPagesHeaderFooter": (2600, 2, (3, 0), ((16395, 10),), "OddAndEvenPagesHeaderFooter", None),
		"Order": (192, 2, (3, 0), ((16387, 10),), "Order", None),
		"Orientation": (134, 2, (3, 0), ((16387, 10),), "Orientation", None),
		"Pages": (2604, 2, (3, 0), ((16393, 10),), "Pages", None),
		"PaperSize": (1007, 2, (3, 0), ((16387, 10),), "PaperSize", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PrintArea": (1019, 2, (3, 0), ((16392, 10),), "PrintArea", None),
		"PrintComments": (1524, 2, (3, 0), ((16387, 10),), "PrintComments", None),
		"PrintErrors": (2149, 2, (3, 0), ((16387, 10),), "PrintErrors", None),
		"PrintGridlines": (1004, 2, (3, 0), ((16395, 10),), "PrintGridlines", None),
		"PrintHeadings": (1003, 2, (3, 0), ((16395, 10),), "PrintHeadings", None),
		"PrintNotes": (1021, 2, (3, 0), ((16395, 10),), "PrintNotes", None),
		"PrintQuality": (1022, 2, (3, 0), ((12, 17), (16396, 10)), "PrintQuality", None),
		"PrintTitleColumns": (1023, 2, (3, 0), ((16392, 10),), "PrintTitleColumns", None),
		"PrintTitleRows": (1024, 2, (3, 0), ((16392, 10),), "PrintTitleRows", None),
		"RightFooter": (1025, 2, (3, 0), ((16392, 10),), "RightFooter", None),
		"RightFooterPicture": (2155, 2, (3, 0), ((16393, 10),), "RightFooterPicture", None),
		"RightHeader": (1026, 2, (3, 0), ((16392, 10),), "RightHeader", None),
		"RightHeaderPicture": (2154, 2, (3, 0), ((16393, 10),), "RightHeaderPicture", None),
		"RightMargin": (1000, 2, (3, 0), ((16389, 10),), "RightMargin", None),
		"ScaleWithDocHeaderFooter": (2602, 2, (3, 0), ((16395, 10),), "ScaleWithDocHeaderFooter", None),
		"TopMargin": (1001, 2, (3, 0), ((16389, 10),), "TopMargin", None),
		"Zoom": (663, 2, (3, 0), ((16396, 10),), "Zoom", None),
	}
	_prop_map_put_ = {
		"AlignMarginsHeaderFooter": ((2603, LCID, 4, 0),()),
		"BlackAndWhite": ((1009, LCID, 4, 0),()),
		"BottomMargin": ((1002, LCID, 4, 0),()),
		"CenterFooter": ((1010, LCID, 4, 0),()),
		"CenterHeader": ((1011, LCID, 4, 0),()),
		"CenterHorizontally": ((1005, LCID, 4, 0),()),
		"CenterVertically": ((1006, LCID, 4, 0),()),
		"ChartSize": ((1012, LCID, 4, 0),()),
		"DifferentFirstPageHeaderFooter": ((2601, LCID, 4, 0),()),
		"Draft": ((1020, LCID, 4, 0),()),
		"FirstPageNumber": ((1008, LCID, 4, 0),()),
		"FitToPagesTall": ((1013, LCID, 4, 0),()),
		"FitToPagesWide": ((1014, LCID, 4, 0),()),
		"FooterMargin": ((1015, LCID, 4, 0),()),
		"HeaderMargin": ((1016, LCID, 4, 0),()),
		"LeftFooter": ((1017, LCID, 4, 0),()),
		"LeftHeader": ((1018, LCID, 4, 0),()),
		"LeftMargin": ((999, LCID, 4, 0),()),
		"OddAndEvenPagesHeaderFooter": ((2600, LCID, 4, 0),()),
		"Order": ((192, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"PaperSize": ((1007, LCID, 4, 0),()),
		"PrintArea": ((1019, LCID, 4, 0),()),
		"PrintComments": ((1524, LCID, 4, 0),()),
		"PrintErrors": ((2149, LCID, 4, 0),()),
		"PrintGridlines": ((1004, LCID, 4, 0),()),
		"PrintHeadings": ((1003, LCID, 4, 0),()),
		"PrintNotes": ((1021, LCID, 4, 0),()),
		"PrintQuality": ((1022, LCID, 4, 0),()),
		"PrintTitleColumns": ((1023, LCID, 4, 0),()),
		"PrintTitleRows": ((1024, LCID, 4, 0),()),
		"RightFooter": ((1025, LCID, 4, 0),()),
		"RightHeader": ((1026, LCID, 4, 0),()),
		"RightMargin": ((1000, LCID, 4, 0),()),
		"ScaleWithDocHeaderFooter": ((2602, LCID, 4, 0),()),
		"TopMargin": ((1001, LCID, 4, 0),()),
		"Zoom": ((663, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPages(DispatchBaseClass):
	CLSID = IID('{000244A3-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IPane(DispatchBaseClass):
	CLSID = IID('{00020895-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ScrollColumn": (654, 2, (3, 0), ((16387, 10),), "ScrollColumn", None),
		"ScrollRow": (655, 2, (3, 0), ((16387, 10),), "ScrollRow", None),
		"VisibleRange": (1118, 2, (3, 0), ((16393, 10),), "VisibleRange", None),
	}
	_prop_map_put_ = {
		"ScrollColumn": ((654, LCID, 4, 0),()),
		"ScrollRow": ((655, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPanes(DispatchBaseClass):
	CLSID = IID('{00020894-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IParameter(DispatchBaseClass):
	CLSID = IID('{0002442A-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DataType": (722, 2, (3, 0), ((16387, 10),), "DataType", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PromptString": (1599, 2, (3, 0), ((16392, 10),), "PromptString", None),
		"RefreshOnChange": (1879, 2, (3, 0), ((16395, 10),), "RefreshOnChange", None),
		"SourceRange": (1600, 2, (3, 0), ((16393, 10),), "SourceRange", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
		"Value": (6, 2, (3, 0), ((16396, 10),), "Value", None),
	}
	_prop_map_put_ = {
		"DataType": ((722, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"RefreshOnChange": ((1879, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16396, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IParameters(DispatchBaseClass):
	CLSID = IID('{0002442B-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IPhonetic(DispatchBaseClass):
	CLSID = IID('{00024438-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Alignment": (453, 2, (3, 0), ((16387, 10),), "Alignment", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"CharacterType": (1674, 2, (3, 0), ((16387, 10),), "CharacterType", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
	}
	_prop_map_put_ = {
		"Alignment": ((453, LCID, 4, 0),()),
		"CharacterType": ((1674, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPhonetics(DispatchBaseClass):
	CLSID = IID('{00024447-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Alignment": (453, 2, (3, 0), ((16387, 10),), "Alignment", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"CharacterType": (1674, 2, (3, 0), ((16387, 10),), "CharacterType", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Length": (609, 2, (3, 0), ((16387, 10),), "Length", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Start": (608, 2, (3, 0), ((16387, 10),), "Start", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
	}
	_prop_map_put_ = {
		"Alignment": ((453, LCID, 4, 0),()),
		"CharacterType": ((1674, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IPicture(DispatchBaseClass):
	CLSID = IID('{000208A6-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"BottomRightCell": (615, 2, (3, 0), ((16393, 10),), "BottomRightCell", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"TopLeftCell": (620, 2, (3, 0), ((16393, 10),), "TopLeftCell", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPictures(DispatchBaseClass):
	CLSID = IID('{000208A7-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IPivotAxis(DispatchBaseClass):
	CLSID = IID('{00024482-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PivotLines": (2685, 2, (3, 0), ((16393, 10),), "PivotLines", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPivotCache(DispatchBaseClass):
	CLSID = IID('{0002441C-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"ADOConnection": (2074, 2, (3, 0), ((16393, 10),), "ADOConnection", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"BackgroundQuery": (1427, 2, (3, 0), ((16395, 10),), "BackgroundQuery", None),
		"CommandText": (1829, 2, (3, 0), ((16396, 10),), "CommandText", None),
		"CommandType": (1830, 2, (3, 0), ((16387, 10),), "CommandType", None),
		"Connection": (1432, 2, (3, 0), ((16396, 10),), "Connection", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"EnableRefresh": (1477, 2, (3, 0), ((16395, 10),), "EnableRefresh", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"IsConnected": (2075, 2, (3, 0), ((16395, 10),), "IsConnected", None),
		"LocalConnection": (1835, 2, (3, 0), ((16396, 10),), "LocalConnection", None),
		"MaintainConnection": (1832, 2, (3, 0), ((16395, 10),), "MaintainConnection", None),
		"MemoryUsed": (372, 2, (3, 0), ((16387, 10),), "MemoryUsed", None),
		"MissingItemsLimit": (2078, 2, (3, 0), ((16387, 10),), "MissingItemsLimit", None),
		"OLAP": (2077, 2, (3, 0), ((16395, 10),), "OLAP", None),
		"OptimizeCache": (1428, 2, (3, 0), ((16395, 10),), "OptimizeCache", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"QueryType": (1831, 2, (3, 0), ((16387, 10),), "QueryType", None),
		"RecordCount": (1478, 2, (3, 0), ((16387, 10),), "RecordCount", None),
		"Recordset": (1165, 2, (3, 0), ((16393, 10),), "Recordset", None),
		"RefreshDate": (696, 2, (3, 0), ((16391, 10),), "RefreshDate", None),
		"RefreshName": (697, 2, (3, 0), ((16392, 10),), "RefreshName", None),
		"RefreshOnFileOpen": (1479, 2, (3, 0), ((16395, 10),), "RefreshOnFileOpen", None),
		"RefreshPeriod": (1833, 2, (3, 0), ((16387, 10),), "RefreshPeriod", None),
		"RobustConnect": (2081, 2, (3, 0), ((16387, 10),), "RobustConnect", None),
		"SavePassword": (1481, 2, (3, 0), ((16395, 10),), "SavePassword", None),
		"SourceConnectionFile": (2079, 2, (3, 0), ((16392, 10),), "SourceConnectionFile", None),
		"SourceData": (686, 2, (3, 0), ((16396, 10),), "SourceData", None),
		"SourceDataFile": (2080, 2, (3, 0), ((16392, 10),), "SourceDataFile", None),
		"SourceType": (685, 2, (3, 0), ((16387, 10),), "SourceType", None),
		"Sql": (1480, 2, (3, 0), ((16396, 10),), "Sql", None),
		"UpgradeOnRefresh": (2545, 2, (3, 0), ((16395, 10),), "UpgradeOnRefresh", None),
		"UseLocalConnection": (1837, 2, (3, 0), ((16395, 10),), "UseLocalConnection", None),
		"Version": (392, 2, (3, 0), ((16387, 10),), "Version", None),
		"WorkbookConnection": (2544, 2, (3, 0), ((16393, 10),), "WorkbookConnection", None),
	}
	_prop_map_put_ = {
		"BackgroundQuery": ((1427, LCID, 4, 0),()),
		"CommandText": ((1829, LCID, 4, 0),()),
		"CommandType": ((1830, LCID, 4, 0),()),
		"Connection": ((1432, LCID, 4, 0),()),
		"EnableRefresh": ((1477, LCID, 4, 0),()),
		"LocalConnection": ((1835, LCID, 4, 0),()),
		"MaintainConnection": ((1832, LCID, 4, 0),()),
		"MissingItemsLimit": ((2078, LCID, 4, 0),()),
		"OptimizeCache": ((1428, LCID, 4, 0),()),
		"Recordset": ((1165, LCID, 8, 0),()),
		"RefreshOnFileOpen": ((1479, LCID, 4, 0),()),
		"RefreshPeriod": ((1833, LCID, 4, 0),()),
		"RobustConnect": ((2081, LCID, 4, 0),()),
		"SavePassword": ((1481, LCID, 4, 0),()),
		"SourceConnectionFile": ((2079, LCID, 4, 0),()),
		"SourceData": ((686, LCID, 4, 0),()),
		"Sql": ((1480, LCID, 4, 0),()),
		"UpgradeOnRefresh": ((2545, LCID, 4, 0),()),
		"UseLocalConnection": ((1837, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPivotCaches(DispatchBaseClass):
	CLSID = IID('{0002441D-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IPivotCell(DispatchBaseClass):
	CLSID = IID('{00024458-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"CellChanged": (2931, 2, (3, 0), ((16387, 10),), "CellChanged", None),
		"ColumnItems": (2191, 2, (3, 0), ((16393, 10),), "ColumnItems", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"CustomSubtotalFunction": (2193, 2, (3, 0), ((16387, 10),), "CustomSubtotalFunction", None),
		"DataField": (2091, 2, (3, 0), ((16393, 10),), "DataField", None),
		"DataSourceValue": (2930, 2, (3, 0), ((16396, 10),), "DataSourceValue", None),
		"Dummy18": (2295, 2, (3, 0), ((16392, 10),), "Dummy18", None),
		"MDX": (2123, 2, (3, 0), ((16392, 10),), "MDX", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PivotCellType": (2189, 2, (3, 0), ((16387, 10),), "PivotCellType", None),
		"PivotColumnLine": (2674, 2, (3, 0), ((16393, 10),), "PivotColumnLine", None),
		"PivotField": (731, 2, (3, 0), ((16393, 10),), "PivotField", None),
		"PivotItem": (740, 2, (3, 0), ((16393, 10),), "PivotItem", None),
		"PivotRowLine": (2673, 2, (3, 0), ((16393, 10),), "PivotRowLine", None),
		"PivotTable": (716, 2, (3, 0), ((16393, 10),), "PivotTable", None),
		"Range": (197, 2, (3, 0), ((16393, 10),), "Range", None),
		"RowItems": (2190, 2, (3, 0), ((16393, 10),), "RowItems", None),
		"ServerActions": (2491, 2, (3, 0), ((16393, 10),), "ServerActions", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPivotField(DispatchBaseClass):
	CLSID = IID('{00020874-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AllItemsVisible": (2593, 2, (3, 0), ((16395, 10),), "AllItemsVisible", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoShowCount": (1520, 2, (3, 0), ((16387, 10),), "AutoShowCount", None),
		"AutoShowField": (1521, 2, (3, 0), ((16392, 10),), "AutoShowField", None),
		"AutoShowRange": (1519, 2, (3, 0), ((16387, 10),), "AutoShowRange", None),
		"AutoShowType": (1518, 2, (3, 0), ((16387, 10),), "AutoShowType", None),
		"AutoSortCustomSubtotal": (2591, 2, (3, 0), ((16387, 10),), "AutoSortCustomSubtotal", None),
		"AutoSortField": (1517, 2, (3, 0), ((16392, 10),), "AutoSortField", None),
		"AutoSortOrder": (1516, 2, (3, 0), ((16387, 10),), "AutoSortOrder", None),
		"AutoSortPivotLine": (2590, 2, (3, 0), ((16393, 10),), "AutoSortPivotLine", None),
		"BaseField": (734, 2, (3, 0), ((16396, 10),), "BaseField", None),
		"BaseItem": (735, 2, (3, 0), ((16396, 10),), "BaseItem", None),
		"Calculation": (316, 2, (3, 0), ((16387, 10),), "Calculation", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"ChildField": (736, 2, (3, 0), ((16393, 10),), "ChildField", None),
		"ChildItems": (730, 2, (3, 0), ((12, 17), (16396, 10)), "ChildItems", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"CubeField": (1851, 2, (3, 0), ((16393, 10),), "CubeField", None),
		"CurrentPage": (738, 2, (3, 0), ((16396, 10),), "CurrentPage", None),
		"CurrentPageList": (2145, 2, (3, 0), ((16396, 10),), "CurrentPageList", None),
		"CurrentPageName": (1852, 2, (3, 0), ((16392, 10),), "CurrentPageName", None),
		"DataRange": (720, 2, (3, 0), ((16393, 10),), "DataRange", None),
		"DataType": (722, 2, (3, 0), ((16387, 10),), "DataType", None),
		"DatabaseSort": (2140, 2, (3, 0), ((16395, 10),), "DatabaseSort", None),
		"DisplayAsCaption": (2585, 2, (3, 0), ((16395, 10),), "DisplayAsCaption", None),
		"DisplayAsTooltip": (2583, 2, (3, 0), ((16395, 10),), "DisplayAsTooltip", None),
		"DisplayInReport": (2584, 2, (3, 0), ((16395, 10),), "DisplayInReport", None),
		"DragToColumn": (1508, 2, (3, 0), ((16395, 10),), "DragToColumn", None),
		"DragToData": (1844, 2, (3, 0), ((16395, 10),), "DragToData", None),
		"DragToHide": (1509, 2, (3, 0), ((16395, 10),), "DragToHide", None),
		"DragToPage": (1510, 2, (3, 0), ((16395, 10),), "DragToPage", None),
		"DragToRow": (1511, 2, (3, 0), ((16395, 10),), "DragToRow", None),
		"DrilledDown": (1850, 2, (3, 0), ((16395, 10),), "DrilledDown", None),
		"EnableItemSelection": (2144, 2, (3, 0), ((16395, 10),), "EnableItemSelection", None),
		"EnableMultiplePageItems": (2184, 2, (3, 0), ((16395, 10),), "EnableMultiplePageItems", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"Function": (899, 2, (3, 0), ((16387, 10),), "Function", None),
		"GroupLevel": (723, 2, (3, 0), ((16396, 10),), "GroupLevel", None),
		"Hidden": (268, 2, (3, 0), ((16395, 10),), "Hidden", None),
		"HiddenItems": (728, 2, (3, 0), ((12, 17), (16396, 10)), "HiddenItems", None),
		"HiddenItemsList": (2139, 2, (3, 0), ((16396, 10),), "HiddenItemsList", None),
		"IncludeNewItemsInFilter": (2587, 2, (3, 0), ((16395, 10),), "IncludeNewItemsInFilter", None),
		"IsCalculated": (1512, 2, (3, 0), ((16395, 10),), "IsCalculated", None),
		"IsMemberProperty": (2141, 2, (3, 0), ((16395, 10),), "IsMemberProperty", None),
		"LabelRange": (719, 2, (3, 0), ((16393, 10),), "LabelRange", None),
		"LayoutBlankLine": (1845, 2, (3, 0), ((16395, 10),), "LayoutBlankLine", None),
		"LayoutCompactRow": (2586, 2, (3, 0), ((16395, 10),), "LayoutCompactRow", None),
		"LayoutForm": (1848, 2, (3, 0), ((16387, 10),), "LayoutForm", None),
		"LayoutPageBreak": (1847, 2, (3, 0), ((16395, 10),), "LayoutPageBreak", None),
		"LayoutSubtotalLocation": (1846, 2, (3, 0), ((16387, 10),), "LayoutSubtotalLocation", None),
		"MemberPropertyCaption": (2582, 2, (3, 0), ((16392, 10),), "MemberPropertyCaption", None),
		"MemoryUsed": (372, 2, (3, 0), ((16387, 10),), "MemoryUsed", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"NumberFormat": (193, 2, (3, 0), ((16392, 10),), "NumberFormat", None),
		"Orientation": (134, 2, (3, 0), ((16387, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ParentField": (732, 2, (3, 0), ((16393, 10),), "ParentField", None),
		"ParentItems": (729, 2, (3, 0), ((12, 17), (16396, 10)), "ParentItems", None),
		"PivotFilters": (2589, 2, (3, 0), ((16393, 10),), "PivotFilters", None),
		"Position": (133, 2, (3, 0), ((16396, 10),), "Position", None),
		"PropertyOrder": (2143, 2, (3, 0), ((16387, 10),), "PropertyOrder", None),
		"PropertyParentField": (2142, 2, (3, 0), ((16393, 10),), "PropertyParentField", None),
		"RepeatLabels": (2885, 2, (3, 0), ((16395, 10),), "RepeatLabels", None),
		"ServerBased": (1513, 2, (3, 0), ((16395, 10),), "ServerBased", None),
		"ShowAllItems": (452, 2, (3, 0), ((16395, 10),), "ShowAllItems", None),
		"ShowDetail": (585, 2, (3, 0), ((16395, 10),), "ShowDetail", None),
		"ShowingInAxis": (2592, 2, (3, 0), ((16395, 10),), "ShowingInAxis", None),
		"SourceCaption": (2599, 2, (3, 0), ((16392, 10),), "SourceCaption", None),
		"SourceName": (721, 2, (3, 0), ((16392, 10),), "SourceName", None),
		"StandardFormula": (2084, 2, (3, 0), ((16392, 10),), "StandardFormula", None),
		"SubtotalName": (1849, 2, (3, 0), ((16392, 10),), "SubtotalName", None),
		"Subtotals": (733, 2, (3, 0), ((12, 17), (16396, 10)), "Subtotals", None),
		"TotalLevels": (724, 2, (3, 0), ((16396, 10),), "TotalLevels", None),
		"UseMemberPropertyAsCaption": (2581, 2, (3, 0), ((16395, 10),), "UseMemberPropertyAsCaption", None),
		"Value": (6, 2, (3, 0), ((16392, 10),), "Value", None),
		"VisibleItems": (727, 2, (3, 0), ((12, 17), (16396, 10)), "VisibleItems", None),
		"VisibleItemsList": (2588, 2, (3, 0), ((16396, 10),), "VisibleItemsList", None),
		"_Default": (0, 2, (3, 0), ((16392, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"BaseField": ((734, LCID, 4, 0),()),
		"BaseItem": ((735, LCID, 4, 0),()),
		"Calculation": ((316, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"CurrentPage": ((738, LCID, 4, 0),()),
		"CurrentPageList": ((2145, LCID, 4, 0),()),
		"CurrentPageName": ((1852, LCID, 4, 0),()),
		"DatabaseSort": ((2140, LCID, 4, 0),()),
		"DisplayAsTooltip": ((2583, LCID, 4, 0),()),
		"DisplayInReport": ((2584, LCID, 4, 0),()),
		"DragToColumn": ((1508, LCID, 4, 0),()),
		"DragToData": ((1844, LCID, 4, 0),()),
		"DragToHide": ((1509, LCID, 4, 0),()),
		"DragToPage": ((1510, LCID, 4, 0),()),
		"DragToRow": ((1511, LCID, 4, 0),()),
		"DrilledDown": ((1850, LCID, 4, 0),()),
		"EnableItemSelection": ((2144, LCID, 4, 0),()),
		"EnableMultiplePageItems": ((2184, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Function": ((899, LCID, 4, 0),()),
		"Hidden": ((268, LCID, 4, 0),()),
		"HiddenItemsList": ((2139, LCID, 4, 0),()),
		"IncludeNewItemsInFilter": ((2587, LCID, 4, 0),()),
		"LayoutBlankLine": ((1845, LCID, 4, 0),()),
		"LayoutCompactRow": ((2586, LCID, 4, 0),()),
		"LayoutForm": ((1848, LCID, 4, 0),()),
		"LayoutPageBreak": ((1847, LCID, 4, 0),()),
		"LayoutSubtotalLocation": ((1846, LCID, 4, 0),()),
		"MemberPropertyCaption": ((2582, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"NumberFormat": ((193, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"PropertyOrder": ((2143, LCID, 4, 0),()),
		"RepeatLabels": ((2885, LCID, 4, 0),()),
		"ServerBased": ((1513, LCID, 4, 0),()),
		"ShowAllItems": ((452, LCID, 4, 0),()),
		"ShowDetail": ((585, LCID, 4, 0),()),
		"StandardFormula": ((2084, LCID, 4, 0),()),
		"SubtotalName": ((1849, LCID, 4, 0),()),
		"Subtotals": ((733, LCID, 4, 0),()),
		"UseMemberPropertyAsCaption": ((2581, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"VisibleItemsList": ((2588, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16392, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPivotFields(DispatchBaseClass):
	CLSID = IID('{00020875-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IPivotFilter(DispatchBaseClass):
	CLSID = IID('{00024483-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Active": (2312, 2, (3, 0), ((16395, 10),), "Active", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DataCubeField": (2687, 2, (3, 0), ((16393, 10),), "DataCubeField", None),
		"DataField": (2091, 2, (3, 0), ((16393, 10),), "DataField", None),
		"Description": (218, 2, (3, 0), ((16392, 10),), "Description", None),
		"FilterType": (2686, 2, (3, 0), ((16387, 10),), "FilterType", None),
		"IsMemberPropertyFilter": (2690, 2, (3, 0), ((16395, 10),), "IsMemberPropertyFilter", None),
		"MemberPropertyField": (2689, 2, (3, 0), ((16393, 10),), "MemberPropertyField", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Order": (192, 2, (3, 0), ((16387, 10),), "Order", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PivotField": (731, 2, (3, 0), ((16393, 10),), "PivotField", None),
		"Value1": (2688, 2, (3, 0), ((16396, 10),), "Value1", None),
		"Value2": (1388, 2, (3, 0), ((16396, 10),), "Value2", None),
		"WholeDayFilter": (3099, 2, (3, 0), ((16395, 10),), "WholeDayFilter", None),
	}
	_prop_map_put_ = {
		"Order": ((192, LCID, 4, 0),()),
		"WholeDayFilter": ((3099, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPivotFilters(DispatchBaseClass):
	CLSID = IID('{00024484-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IPivotFormula(DispatchBaseClass):
	CLSID = IID('{0002441E-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"StandardFormula": (2084, 2, (3, 0), ((16392, 10),), "StandardFormula", None),
		"Value": (6, 2, (3, 0), ((16392, 10),), "Value", None),
		"_Default": (0, 2, (3, 0), ((16392, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"Formula": ((261, LCID, 4, 0),()),
		"Index": ((486, LCID, 4, 0),()),
		"StandardFormula": ((2084, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16392, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPivotFormulas(DispatchBaseClass):
	CLSID = IID('{0002441F-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IPivotItem(DispatchBaseClass):
	CLSID = IID('{00020876-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"ChildItems": (730, 2, (3, 0), ((12, 17), (16396, 10)), "ChildItems", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DataRange": (720, 2, (3, 0), ((16393, 10),), "DataRange", None),
		"DrilledDown": (1850, 2, (3, 0), ((16395, 10),), "DrilledDown", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"IsCalculated": (1512, 2, (3, 0), ((16395, 10),), "IsCalculated", None),
		"LabelRange": (719, 2, (3, 0), ((16393, 10),), "LabelRange", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ParentItem": (741, 2, (3, 0), ((16393, 10),), "ParentItem", None),
		"ParentShowDetail": (739, 2, (3, 0), ((16395, 10),), "ParentShowDetail", None),
		"Position": (133, 2, (3, 0), ((16387, 10),), "Position", None),
		"RecordCount": (1478, 2, (3, 0), ((16387, 10),), "RecordCount", None),
		"ShowDetail": (585, 2, (3, 0), ((16395, 10),), "ShowDetail", None),
		"SourceName": (721, 2, (3, 0), ((16396, 10),), "SourceName", None),
		"SourceNameStandard": (2148, 2, (3, 0), ((16392, 10),), "SourceNameStandard", None),
		"StandardFormula": (2084, 2, (3, 0), ((16392, 10),), "StandardFormula", None),
		"Value": (6, 2, (3, 0), ((16392, 10),), "Value", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"_Default": (0, 2, (3, 0), ((16392, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"DrilledDown": ((1850, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"ShowDetail": ((585, LCID, 4, 0),()),
		"StandardFormula": ((2084, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16392, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPivotItemList(DispatchBaseClass):
	CLSID = IID('{00024468-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IPivotItems(DispatchBaseClass):
	CLSID = IID('{00020877-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IPivotLayout(DispatchBaseClass):
	CLSID = IID('{0002444A-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"ColumnFields": (713, 2, (3, 0), ((12, 17), (16393, 10)), "ColumnFields", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"CubeFields": (1839, 2, (3, 0), ((16393, 10),), "CubeFields", None),
		"DataFields": (715, 2, (3, 0), ((12, 17), (16393, 10)), "DataFields", None),
		"HiddenFields": (711, 2, (3, 0), ((12, 17), (16393, 10)), "HiddenFields", None),
		"InnerDetail": (698, 2, (3, 0), ((16392, 10),), "InnerDetail", None),
		"PageFields": (714, 2, (3, 0), ((12, 17), (16393, 10)), "PageFields", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PivotCache": (1496, 2, (3, 0), ((16393, 10),), "PivotCache", None),
		"PivotFields": (718, 2, (3, 0), ((12, 17), (16393, 10)), "PivotFields", None),
		"PivotTable": (716, 2, (3, 0), ((16393, 10),), "PivotTable", None),
		"RowFields": (712, 2, (3, 0), ((12, 17), (16393, 10)), "RowFields", None),
		"VisibleFields": (710, 2, (3, 0), ((12, 17), (16393, 10)), "VisibleFields", None),
	}
	_prop_map_put_ = {
		"InnerDetail": ((698, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPivotLine(DispatchBaseClass):
	CLSID = IID('{00024480-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"LineType": (2683, 2, (3, 0), ((16387, 10),), "LineType", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PivotLineCells": (2684, 2, (3, 0), ((16393, 10),), "PivotLineCells", None),
		"PivotLineCellsFull": (3098, 2, (3, 0), ((16393, 10),), "PivotLineCellsFull", None),
		"Position": (133, 2, (3, 0), ((16387, 10),), "Position", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPivotLineCells(DispatchBaseClass):
	CLSID = IID('{0002447F-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Full": (3097, 2, (3, 0), ((16395, 10),), "Full", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IPivotLines(DispatchBaseClass):
	CLSID = IID('{00024481-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IPivotTable(DispatchBaseClass):
	CLSID = IID('{00020872-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"ActiveFilters": (2559, 2, (3, 0), ((16393, 10),), "ActiveFilters", None),
		"Allocation": (2873, 2, (3, 0), ((16387, 10),), "Allocation", None),
		"AllocationMethod": (2875, 2, (3, 0), ((16387, 10),), "AllocationMethod", None),
		"AllocationValue": (2874, 2, (3, 0), ((16387, 10),), "AllocationValue", None),
		"AllocationWeightExpression": (2876, 2, (3, 0), ((16392, 10),), "AllocationWeightExpression", None),
		"AllowMultipleFilters": (2570, 2, (3, 0), ((16395, 10),), "AllowMultipleFilters", None),
		"AlternativeText": (1891, 2, (3, 0), ((16392, 10),), "AlternativeText", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"CacheIndex": (1483, 2, (3, 0), ((16387, 10),), "CacheIndex", None),
		"CalculatedMembers": (2125, 2, (3, 0), ((16393, 10),), "CalculatedMembers", None),
		"CalculatedMembersInFilters": (2884, 2, (3, 0), ((16395, 10),), "CalculatedMembersInFilters", None),
		"ChangeList": (2880, 2, (3, 0), ((16393, 10),), "ChangeList", None),
		"ColumnFields": (713, 2, (3, 0), ((12, 17), (16393, 10)), "ColumnFields", None),
		"ColumnGrand": (694, 2, (3, 0), ((16395, 10),), "ColumnGrand", None),
		"ColumnRange": (702, 2, (3, 0), ((16393, 10),), "ColumnRange", None),
		"CompactLayoutColumnHeader": (2572, 2, (3, 0), ((16392, 10),), "CompactLayoutColumnHeader", None),
		"CompactLayoutRowHeader": (2571, 2, (3, 0), ((16392, 10),), "CompactLayoutRowHeader", None),
		"CompactRowIndent": (2553, 2, (3, 0), ((16387, 10),), "CompactRowIndent", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"CubeFields": (1839, 2, (3, 0), ((16393, 10),), "CubeFields", None),
		"DataBodyRange": (705, 2, (3, 0), ((16393, 10),), "DataBodyRange", None),
		"DataFields": (715, 2, (3, 0), ((12, 17), (16393, 10)), "DataFields", None),
		"DataLabelRange": (704, 2, (3, 0), ((16393, 10),), "DataLabelRange", None),
		"DataPivotField": (2120, 2, (3, 0), ((16393, 10),), "DataPivotField", None),
		"DisplayContextTooltips": (2551, 2, (3, 0), ((16395, 10),), "DisplayContextTooltips", None),
		"DisplayEmptyColumn": (2137, 2, (3, 0), ((16395, 10),), "DisplayEmptyColumn", None),
		"DisplayEmptyRow": (2136, 2, (3, 0), ((16395, 10),), "DisplayEmptyRow", None),
		"DisplayErrorString": (1485, 2, (3, 0), ((16395, 10),), "DisplayErrorString", None),
		"DisplayFieldCaptions": (2555, 2, (3, 0), ((16395, 10),), "DisplayFieldCaptions", None),
		"DisplayImmediateItems": (2126, 2, (3, 0), ((16395, 10),), "DisplayImmediateItems", None),
		"DisplayMemberPropertyTooltips": (2550, 2, (3, 0), ((16395, 10),), "DisplayMemberPropertyTooltips", None),
		"DisplayNullString": (1486, 2, (3, 0), ((16395, 10),), "DisplayNullString", None),
		"EnableDataValueEditing": (2121, 2, (3, 0), ((16395, 10),), "EnableDataValueEditing", None),
		"EnableDrilldown": (1487, 2, (3, 0), ((16395, 10),), "EnableDrilldown", None),
		"EnableFieldDialog": (1488, 2, (3, 0), ((16395, 10),), "EnableFieldDialog", None),
		"EnableFieldList": (2128, 2, (3, 0), ((16395, 10),), "EnableFieldList", None),
		"EnableWizard": (1489, 2, (3, 0), ((16395, 10),), "EnableWizard", None),
		"EnableWriteback": (2872, 2, (3, 0), ((16395, 10),), "EnableWriteback", None),
		"ErrorString": (1490, 2, (3, 0), ((16392, 10),), "ErrorString", None),
		"FieldListSortAscending": (2573, 2, (3, 0), ((16395, 10),), "FieldListSortAscending", None),
		"GrandTotalName": (1840, 2, (3, 0), ((16392, 10),), "GrandTotalName", None),
		"HasAutoFormat": (695, 2, (3, 0), ((16395, 10),), "HasAutoFormat", None),
		"Hidden": (268, 2, (3, 0), ((16395, 10),), "Hidden", None),
		"HiddenFields": (711, 2, (3, 0), ((12, 17), (16393, 10)), "HiddenFields", None),
		"InGridDropZones": (2560, 2, (3, 0), ((16395, 10),), "InGridDropZones", None),
		"InnerDetail": (698, 2, (3, 0), ((16392, 10),), "InnerDetail", None),
		"LayoutRowDefault": (2554, 2, (3, 0), ((16387, 10),), "LayoutRowDefault", None),
		"Location": (1397, 2, (3, 0), ((16392, 10),), "Location", None),
		"MDX": (2123, 2, (3, 0), ((16392, 10),), "MDX", None),
		"ManualUpdate": (1493, 2, (3, 0), ((16395, 10),), "ManualUpdate", None),
		"MergeLabels": (1494, 2, (3, 0), ((16395, 10),), "MergeLabels", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"NullString": (1495, 2, (3, 0), ((16392, 10),), "NullString", None),
		"PageFieldOrder": (1429, 2, (3, 0), ((16387, 10),), "PageFieldOrder", None),
		"PageFieldStyle": (1499, 2, (3, 0), ((16392, 10),), "PageFieldStyle", None),
		"PageFieldWrapCount": (1430, 2, (3, 0), ((16387, 10),), "PageFieldWrapCount", None),
		"PageFields": (714, 2, (3, 0), ((12, 17), (16393, 10)), "PageFields", None),
		"PageRange": (703, 2, (3, 0), ((16393, 10),), "PageRange", None),
		"PageRangeCells": (1482, 2, (3, 0), ((16393, 10),), "PageRangeCells", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PivotChart": (3067, 2, (3, 0), ((16393, 10),), "PivotChart", None),
		"PivotColumnAxis": (2546, 2, (3, 0), ((16393, 10),), "PivotColumnAxis", None),
		"PivotFormulas": (1497, 2, (3, 0), ((16393, 10),), "PivotFormulas", None),
		"PivotRowAxis": (2547, 2, (3, 0), ((16393, 10),), "PivotRowAxis", None),
		"PivotSelection": (1502, 2, (3, 0), ((16392, 10),), "PivotSelection", None),
		"PivotSelectionStandard": (2089, 2, (3, 0), ((16392, 10),), "PivotSelectionStandard", None),
		"PreserveFormatting": (1500, 2, (3, 0), ((16395, 10),), "PreserveFormatting", None),
		"PrintDrillIndicators": (2549, 2, (3, 0), ((16395, 10),), "PrintDrillIndicators", None),
		"PrintTitles": (1838, 2, (3, 0), ((16395, 10),), "PrintTitles", None),
		"RefreshDate": (696, 2, (3, 0), ((16391, 10),), "RefreshDate", None),
		"RefreshName": (697, 2, (3, 0), ((16392, 10),), "RefreshName", None),
		"RepeatItemsOnEachPrintedPage": (1842, 2, (3, 0), ((16395, 10),), "RepeatItemsOnEachPrintedPage", None),
		"RowFields": (712, 2, (3, 0), ((12, 17), (16393, 10)), "RowFields", None),
		"RowGrand": (693, 2, (3, 0), ((16395, 10),), "RowGrand", None),
		"RowRange": (701, 2, (3, 0), ((16393, 10),), "RowRange", None),
		"SaveData": (692, 2, (3, 0), ((16395, 10),), "SaveData", None),
		"SelectionMode": (1503, 2, (3, 0), ((16387, 10),), "SelectionMode", None),
		"ShowCellBackgroundFromOLAP": (2138, 2, (3, 0), ((16395, 10),), "ShowCellBackgroundFromOLAP", None),
		"ShowDrillIndicators": (2548, 2, (3, 0), ((16395, 10),), "ShowDrillIndicators", None),
		"ShowPageMultipleItemLabel": (2130, 2, (3, 0), ((16395, 10),), "ShowPageMultipleItemLabel", None),
		"ShowTableStyleColumnHeaders": (2567, 2, (3, 0), ((16395, 10),), "ShowTableStyleColumnHeaders", None),
		"ShowTableStyleColumnStripes": (2565, 2, (3, 0), ((16395, 10),), "ShowTableStyleColumnStripes", None),
		"ShowTableStyleLastColumn": (2563, 2, (3, 0), ((16395, 10),), "ShowTableStyleLastColumn", None),
		"ShowTableStyleRowHeaders": (2566, 2, (3, 0), ((16395, 10),), "ShowTableStyleRowHeaders", None),
		"ShowTableStyleRowStripes": (2564, 2, (3, 0), ((16395, 10),), "ShowTableStyleRowStripes", None),
		"ShowValuesRow": (2883, 2, (3, 0), ((16395, 10),), "ShowValuesRow", None),
		"Slicers": (2881, 2, (3, 0), ((16393, 10),), "Slicers", None),
		"SmallGrid": (1841, 2, (3, 0), ((16395, 10),), "SmallGrid", None),
		"SortUsingCustomLists": (2574, 2, (3, 0), ((16395, 10),), "SortUsingCustomLists", None),
		"SourceData": (686, 2, (3, 0), ((16396, 10),), "SourceData", None),
		"SubtotalHiddenPageItems": (1498, 2, (3, 0), ((16395, 10),), "SubtotalHiddenPageItems", None),
		"Summary": (273, 2, (3, 0), ((16392, 10),), "Summary", None),
		"TableRange1": (699, 2, (3, 0), ((16393, 10),), "TableRange1", None),
		"TableRange2": (700, 2, (3, 0), ((16393, 10),), "TableRange2", None),
		"TableStyle": (1504, 2, (3, 0), ((16392, 10),), "TableStyle", None),
		"TableStyle2": (2562, 2, (3, 0), ((16396, 10),), "TableStyle2", None),
		"Tag": (1505, 2, (3, 0), ((16392, 10),), "Tag", None),
		"TotalsAnnotation": (1843, 2, (3, 0), ((16395, 10),), "TotalsAnnotation", None),
		"VacatedStyle": (1506, 2, (3, 0), ((16392, 10),), "VacatedStyle", None),
		"Value": (6, 2, (3, 0), ((16392, 10),), "Value", None),
		"Version": (392, 2, (3, 0), ((16387, 10),), "Version", None),
		"ViewCalculatedMembers": (2124, 2, (3, 0), ((16395, 10),), "ViewCalculatedMembers", None),
		"VisibleFields": (710, 2, (3, 0), ((12, 17), (16393, 10)), "VisibleFields", None),
		"VisualTotals": (2129, 2, (3, 0), ((16395, 10),), "VisualTotals", None),
		"VisualTotalsForSets": (2882, 2, (3, 0), ((16395, 10),), "VisualTotalsForSets", None),
		"_Default": (0, 2, (3, 0), ((16392, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"Allocation": ((2873, LCID, 4, 0),()),
		"AllocationMethod": ((2875, LCID, 4, 0),()),
		"AllocationValue": ((2874, LCID, 4, 0),()),
		"AllocationWeightExpression": ((2876, LCID, 4, 0),()),
		"AllowMultipleFilters": ((2570, LCID, 4, 0),()),
		"AlternativeText": ((1891, LCID, 4, 0),()),
		"CacheIndex": ((1483, LCID, 4, 0),()),
		"CalculatedMembersInFilters": ((2884, LCID, 4, 0),()),
		"ColumnGrand": ((694, LCID, 4, 0),()),
		"CompactLayoutColumnHeader": ((2572, LCID, 4, 0),()),
		"CompactLayoutRowHeader": ((2571, LCID, 4, 0),()),
		"CompactRowIndent": ((2553, LCID, 4, 0),()),
		"DisplayContextTooltips": ((2551, LCID, 4, 0),()),
		"DisplayEmptyColumn": ((2137, LCID, 4, 0),()),
		"DisplayEmptyRow": ((2136, LCID, 4, 0),()),
		"DisplayErrorString": ((1485, LCID, 4, 0),()),
		"DisplayFieldCaptions": ((2555, LCID, 4, 0),()),
		"DisplayImmediateItems": ((2126, LCID, 4, 0),()),
		"DisplayMemberPropertyTooltips": ((2550, LCID, 4, 0),()),
		"DisplayNullString": ((1486, LCID, 4, 0),()),
		"EnableDataValueEditing": ((2121, LCID, 4, 0),()),
		"EnableDrilldown": ((1487, LCID, 4, 0),()),
		"EnableFieldDialog": ((1488, LCID, 4, 0),()),
		"EnableFieldList": ((2128, LCID, 4, 0),()),
		"EnableWizard": ((1489, LCID, 4, 0),()),
		"EnableWriteback": ((2872, LCID, 4, 0),()),
		"ErrorString": ((1490, LCID, 4, 0),()),
		"FieldListSortAscending": ((2573, LCID, 4, 0),()),
		"GrandTotalName": ((1840, LCID, 4, 0),()),
		"HasAutoFormat": ((695, LCID, 4, 0),()),
		"InGridDropZones": ((2560, LCID, 4, 0),()),
		"InnerDetail": ((698, LCID, 4, 0),()),
		"LayoutRowDefault": ((2554, LCID, 4, 0),()),
		"Location": ((1397, LCID, 4, 0),()),
		"ManualUpdate": ((1493, LCID, 4, 0),()),
		"MergeLabels": ((1494, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"NullString": ((1495, LCID, 4, 0),()),
		"PageFieldOrder": ((1429, LCID, 4, 0),()),
		"PageFieldStyle": ((1499, LCID, 4, 0),()),
		"PageFieldWrapCount": ((1430, LCID, 4, 0),()),
		"PivotSelection": ((1502, LCID, 4, 0),()),
		"PivotSelectionStandard": ((2089, LCID, 4, 0),()),
		"PreserveFormatting": ((1500, LCID, 4, 0),()),
		"PrintDrillIndicators": ((2549, LCID, 4, 0),()),
		"PrintTitles": ((1838, LCID, 4, 0),()),
		"RepeatItemsOnEachPrintedPage": ((1842, LCID, 4, 0),()),
		"RowGrand": ((693, LCID, 4, 0),()),
		"SaveData": ((692, LCID, 4, 0),()),
		"SelectionMode": ((1503, LCID, 4, 0),()),
		"ShowCellBackgroundFromOLAP": ((2138, LCID, 4, 0),()),
		"ShowDrillIndicators": ((2548, LCID, 4, 0),()),
		"ShowPageMultipleItemLabel": ((2130, LCID, 4, 0),()),
		"ShowTableStyleColumnHeaders": ((2567, LCID, 4, 0),()),
		"ShowTableStyleColumnStripes": ((2565, LCID, 4, 0),()),
		"ShowTableStyleLastColumn": ((2563, LCID, 4, 0),()),
		"ShowTableStyleRowHeaders": ((2566, LCID, 4, 0),()),
		"ShowTableStyleRowStripes": ((2564, LCID, 4, 0),()),
		"ShowValuesRow": ((2883, LCID, 4, 0),()),
		"SmallGrid": ((1841, LCID, 4, 0),()),
		"SortUsingCustomLists": ((2574, LCID, 4, 0),()),
		"SourceData": ((686, LCID, 4, 0),()),
		"SubtotalHiddenPageItems": ((1498, LCID, 4, 0),()),
		"Summary": ((273, LCID, 4, 0),()),
		"TableStyle": ((1504, LCID, 4, 0),()),
		"TableStyle2": ((2562, LCID, 4, 0),()),
		"Tag": ((1505, LCID, 4, 0),()),
		"TotalsAnnotation": ((1843, LCID, 4, 0),()),
		"VacatedStyle": ((1506, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"ViewCalculatedMembers": ((2124, LCID, 4, 0),()),
		"VisualTotals": ((2129, LCID, 4, 0),()),
		"VisualTotalsForSets": ((2882, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16392, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPivotTableChangeList(DispatchBaseClass):
	CLSID = IID('{000244C1-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IPivotTables(DispatchBaseClass):
	CLSID = IID('{00020873-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IPivotValueCell(DispatchBaseClass):
	CLSID = IID('{000244CF-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PivotCell": (2013, 2, (3, 0), ((16393, 10),), "PivotCell", None),
		"ServerActions": (2491, 2, (3, 0), ((16393, 10),), "ServerActions", None),
		"Value": (6, 2, (3, 0), ((16396, 10),), "Value", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16396, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPlotArea(DispatchBaseClass):
	CLSID = IID('{000208CB-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Fill": (1663, 2, (3, 0), ((16393, 10),), "Fill", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"InsideHeight": (1670, 2, (3, 0), ((16389, 10),), "InsideHeight", None),
		"InsideLeft": (1667, 2, (3, 0), ((16389, 10),), "InsideLeft", None),
		"InsideTop": (1668, 2, (3, 0), ((16389, 10),), "InsideTop", None),
		"InsideWidth": (1669, 2, (3, 0), ((16389, 10),), "InsideWidth", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Position": (133, 2, (3, 0), ((16387, 10),), "Position", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"_InsideHeight": (2657, 2, (3, 0), ((16389, 10),), "_InsideHeight", None),
		"_InsideLeft": (2654, 2, (3, 0), ((16389, 10),), "_InsideLeft", None),
		"_InsideTop": (2655, 2, (3, 0), ((16389, 10),), "_InsideTop", None),
		"_InsideWidth": (2656, 2, (3, 0), ((16389, 10),), "_InsideWidth", None),
	}
	_prop_map_put_ = {
		"Height": ((123, LCID, 4, 0),()),
		"InsideHeight": ((1670, LCID, 4, 0),()),
		"InsideLeft": ((1667, LCID, 4, 0),()),
		"InsideTop": ((1668, LCID, 4, 0),()),
		"InsideWidth": ((1669, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPoint(DispatchBaseClass):
	CLSID = IID('{0002086A-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"ApplyPictToEnd": (1661, 2, (3, 0), ((16395, 10),), "ApplyPictToEnd", None),
		"ApplyPictToFront": (1660, 2, (3, 0), ((16395, 10),), "ApplyPictToFront", None),
		"ApplyPictToSides": (1659, 2, (3, 0), ((16395, 10),), "ApplyPictToSides", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DataLabel": (158, 2, (3, 0), ((16393, 10),), "DataLabel", None),
		"Explosion": (182, 2, (3, 0), ((16387, 10),), "Explosion", None),
		"Fill": (1663, 2, (3, 0), ((16393, 10),), "Fill", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Has3DEffect": (1665, 2, (3, 0), ((16395, 10),), "Has3DEffect", None),
		"HasDataLabel": (77, 2, (3, 0), ((16395, 10),), "HasDataLabel", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"InvertIfNegative": (132, 2, (3, 0), ((16395, 10),), "InvertIfNegative", None),
		"IsTotal": (3203, 2, (3, 0), ((16395, 10),), "IsTotal", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"MarkerBackgroundColor": (73, 2, (3, 0), ((16387, 10),), "MarkerBackgroundColor", None),
		"MarkerBackgroundColorIndex": (74, 2, (3, 0), ((16387, 10),), "MarkerBackgroundColorIndex", None),
		"MarkerForegroundColor": (75, 2, (3, 0), ((16387, 10),), "MarkerForegroundColor", None),
		"MarkerForegroundColorIndex": (76, 2, (3, 0), ((16387, 10),), "MarkerForegroundColorIndex", None),
		"MarkerSize": (231, 2, (3, 0), ((16387, 10),), "MarkerSize", None),
		"MarkerStyle": (72, 2, (3, 0), ((16387, 10),), "MarkerStyle", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PictureType": (161, 2, (3, 0), ((16387, 10),), "PictureType", None),
		"PictureUnit": (162, 2, (3, 0), ((16387, 10),), "PictureUnit", None),
		"PictureUnit2": (2649, 2, (3, 0), ((16389, 10),), "PictureUnit2", None),
		"SecondaryPlot": (1662, 2, (3, 0), ((16395, 10),), "SecondaryPlot", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
	}
	_prop_map_put_ = {
		"ApplyPictToEnd": ((1661, LCID, 4, 0),()),
		"ApplyPictToFront": ((1660, LCID, 4, 0),()),
		"ApplyPictToSides": ((1659, LCID, 4, 0),()),
		"Explosion": ((182, LCID, 4, 0),()),
		"Has3DEffect": ((1665, LCID, 4, 0),()),
		"HasDataLabel": ((77, LCID, 4, 0),()),
		"InvertIfNegative": ((132, LCID, 4, 0),()),
		"IsTotal": ((3203, LCID, 4, 0),()),
		"MarkerBackgroundColor": ((73, LCID, 4, 0),()),
		"MarkerBackgroundColorIndex": ((74, LCID, 4, 0),()),
		"MarkerForegroundColor": ((75, LCID, 4, 0),()),
		"MarkerForegroundColorIndex": ((76, LCID, 4, 0),()),
		"MarkerSize": ((231, LCID, 4, 0),()),
		"MarkerStyle": ((72, LCID, 4, 0),()),
		"PictureType": ((161, LCID, 4, 0),()),
		"PictureUnit": ((162, LCID, 4, 0),()),
		"PictureUnit2": ((2649, LCID, 4, 0),()),
		"SecondaryPlot": ((1662, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPoints(DispatchBaseClass):
	CLSID = IID('{00020869-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IProtectedViewWindow(DispatchBaseClass):
	CLSID = IID('{000244CD-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"EnableResize": (1192, 2, (3, 0), ((16395, 10),), "EnableResize", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"SourceName": (721, 2, (3, 0), ((16392, 10),), "SourceName", None),
		"SourcePath": (2993, 2, (3, 0), ((16392, 10),), "SourcePath", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"WindowState": (396, 2, (3, 0), ((16387, 10),), "WindowState", None),
		"Workbook": (752, 2, (3, 0), ((16397, 10),), "Workbook", None),
		"_Default": (0, 2, (3, 0), ((16392, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"EnableResize": ((1192, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"WindowState": ((396, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), ((16392, 10),), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IProtectedViewWindows(DispatchBaseClass):
	CLSID = IID('{000244CC-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IProtection(DispatchBaseClass):
	CLSID = IID('{00024467-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AllowDeletingColumns": (2038, 2, (3, 0), ((16395, 10),), "AllowDeletingColumns", None),
		"AllowDeletingRows": (2039, 2, (3, 0), ((16395, 10),), "AllowDeletingRows", None),
		"AllowEditRanges": (2236, 2, (3, 0), ((16393, 10),), "AllowEditRanges", None),
		"AllowFiltering": (2041, 2, (3, 0), ((16395, 10),), "AllowFiltering", None),
		"AllowFormattingCells": (2032, 2, (3, 0), ((16395, 10),), "AllowFormattingCells", None),
		"AllowFormattingColumns": (2033, 2, (3, 0), ((16395, 10),), "AllowFormattingColumns", None),
		"AllowFormattingRows": (2034, 2, (3, 0), ((16395, 10),), "AllowFormattingRows", None),
		"AllowInsertingColumns": (2035, 2, (3, 0), ((16395, 10),), "AllowInsertingColumns", None),
		"AllowInsertingHyperlinks": (2037, 2, (3, 0), ((16395, 10),), "AllowInsertingHyperlinks", None),
		"AllowInsertingRows": (2036, 2, (3, 0), ((16395, 10),), "AllowInsertingRows", None),
		"AllowSorting": (2040, 2, (3, 0), ((16395, 10),), "AllowSorting", None),
		"AllowUsingPivotTables": (2042, 2, (3, 0), ((16395, 10),), "AllowUsingPivotTables", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPublishObjects(DispatchBaseClass):
	CLSID = IID('{00024443-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IPublishedDoc(DispatchBaseClass):
	CLSID = IID('{000244F8-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DisclosureScope": (3195, 2, (3, 0), ((16387, 10),), "DisclosureScope", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PublishedDate": (3230, 2, (3, 0), ((16391, 10),), "PublishedDate", None),
		"Title": (199, 2, (3, 0), ((16392, 10),), "Title", None),
		"Url": (2271, 2, (3, 0), ((16392, 10),), "Url", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPublishedDocs(DispatchBaseClass):
	CLSID = IID('{000244F7-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IQueries(DispatchBaseClass):
	CLSID = IID('{000244EC-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"FastCombine": (3223, 2, (3, 0), ((16395, 10),), "FastCombine", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
		"FastCombine": ((3223, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IQueryTables(DispatchBaseClass):
	CLSID = IID('{00024429-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IQuickAnalysis(DispatchBaseClass):
	CLSID = IID('{000244D0-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRTD(DispatchBaseClass):
	CLSID = IID('{0002446E-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"ThrottleInterval": (2240, 2, (3, 0), ((16387, 10),), "ThrottleInterval", None),
	}
	_prop_map_put_ = {
		"ThrottleInterval": ((2240, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRTDUpdateEvent(DispatchBaseClass):
	CLSID = IID('{A43788C1-D91B-11D3-8F39-00C04F3651B8}')
	coclass_clsid = None

	def Disconnect(self):
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), (),)

	def UpdateNotify(self):
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"HeartbeatInterval": (11, 2, (3, 0), (), "HeartbeatInterval", None),
	}
	_prop_map_put_ = {
		"HeartbeatInterval": ((11, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRange(DispatchBaseClass):
	CLSID = IID('{00020846-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (3, 0), ((16396, 10),), "AddIndent", None),
		"AddressLocal": (437, 2, (3, 0), ((12, 17), (12, 17), (3, 49), (12, 17), (12, 17), (16392, 10)), "AddressLocal", None),
		"AllowEdit": (2020, 2, (3, 0), ((16395, 10),), "AllowEdit", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Areas": (568, 2, (3, 0), ((16393, 10),), "Areas", None),
		"Borders": (435, 2, (3, 0), ((16393, 10),), "Borders", None),
		"CellControl": (3411, 2, (3, 0), ((16393, 10),), "CellControl", None),
		"Cells": (238, 2, (3, 0), ((16393, 10),), "Cells", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Column": (240, 2, (3, 0), ((16387, 10),), "Column", None),
		"ColumnWidth": (242, 2, (3, 0), ((16396, 10),), "ColumnWidth", None),
		"Columns": (241, 2, (3, 0), ((16393, 10),), "Columns", None),
		"Comment": (910, 2, (3, 0), ((16393, 10),), "Comment", None),
		"CommentThreaded": (3281, 2, (3, 0), ((16393, 10),), "CommentThreaded", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"CountLarge": (2499, 2, (3, 0), ((16396, 10),), "CountLarge", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"CurrentArray": (501, 2, (3, 0), ((16393, 10),), "CurrentArray", None),
		"CurrentRegion": (243, 2, (3, 0), ((16393, 10),), "CurrentRegion", None),
		"Dependents": (543, 2, (3, 0), ((16393, 10),), "Dependents", None),
		"DirectDependents": (545, 2, (3, 0), ((16393, 10),), "DirectDependents", None),
		"DirectPrecedents": (546, 2, (3, 0), ((16393, 10),), "DirectPrecedents", None),
		"DisplayFormat": (666, 2, (3, 0), ((16393, 10),), "DisplayFormat", None),
		"EntireColumn": (246, 2, (3, 0), ((16393, 10),), "EntireColumn", None),
		"EntireRow": (247, 2, (3, 0), ((16393, 10),), "EntireRow", None),
		"Errors": (2015, 2, (3, 0), ((16393, 10),), "Errors", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"FormatConditions": (1392, 2, (3, 0), ((16393, 10),), "FormatConditions", None),
		"Formula2Local": (3300, 2, (3, 0), ((16396, 10),), "Formula2Local", None),
		"Formula2R1C1Local": (3302, 2, (3, 0), ((16396, 10),), "Formula2R1C1Local", None),
		"FormulaArray": (586, 2, (3, 0), ((16396, 10),), "FormulaArray", None),
		"FormulaHidden": (262, 2, (3, 0), ((16396, 10),), "FormulaHidden", None),
		"FormulaLabel": (1380, 2, (3, 0), ((16387, 10),), "FormulaLabel", None),
		"FormulaLocal": (263, 2, (3, 0), ((16396, 10),), "FormulaLocal", None),
		"FormulaR1C1Local": (265, 2, (3, 0), ((16396, 10),), "FormulaR1C1Local", None),
		"HasArray": (266, 2, (3, 0), ((16396, 10),), "HasArray", None),
		"HasFormula": (267, 2, (3, 0), ((16396, 10),), "HasFormula", None),
		"HasRichDataType": (3326, 2, (3, 0), ((16396, 10),), "HasRichDataType", None),
		"HasSpill": (3295, 2, (3, 0), ((16396, 10),), "HasSpill", None),
		"Height": (123, 2, (3, 0), ((16396, 10),), "Height", None),
		"Hidden": (268, 2, (3, 0), ((16396, 10),), "Hidden", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"Hyperlinks": (1393, 2, (3, 0), ((16393, 10),), "Hyperlinks", None),
		"ID": (1813, 2, (3, 0), ((16392, 10),), "ID", None),
		"IndentLevel": (201, 2, (3, 0), ((16396, 10),), "IndentLevel", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16396, 10),), "Left", None),
		"LinkedDataTypeState": (3291, 2, (3, 0), ((16396, 10),), "LinkedDataTypeState", None),
		"ListHeaderRows": (1187, 2, (3, 0), ((16387, 10),), "ListHeaderRows", None),
		"ListObject": (2257, 2, (3, 0), ((16393, 10),), "ListObject", None),
		"LocationInTable": (691, 2, (3, 0), ((16387, 10),), "LocationInTable", None),
		"Locked": (269, 2, (3, 0), ((16396, 10),), "Locked", None),
		"MDX": (2123, 2, (3, 0), ((16392, 10),), "MDX", None),
		"MergeArea": (1385, 2, (3, 0), ((16393, 10),), "MergeArea", None),
		"MergeCells": (208, 2, (3, 0), ((16396, 10),), "MergeCells", None),
		"Name": (110, 2, (3, 0), ((16396, 10),), "Name", None),
		"Next": (502, 2, (3, 0), ((16393, 10),), "Next", None),
		"NumberFormat": (193, 2, (3, 0), ((16396, 10),), "NumberFormat", None),
		"NumberFormatLocal": (1097, 2, (3, 0), ((16396, 10),), "NumberFormatLocal", None),
		"Offset": (254, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Offset", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"OutlineLevel": (271, 2, (3, 0), ((16396, 10),), "OutlineLevel", None),
		"PageBreak": (255, 2, (3, 0), ((16387, 10),), "PageBreak", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Phonetic": (1391, 2, (3, 0), ((16393, 10),), "Phonetic", None),
		"Phonetics": (1811, 2, (3, 0), ((16393, 10),), "Phonetics", None),
		"PivotCell": (2013, 2, (3, 0), ((16393, 10),), "PivotCell", None),
		"PivotField": (731, 2, (3, 0), ((16393, 10),), "PivotField", None),
		"PivotItem": (740, 2, (3, 0), ((16393, 10),), "PivotItem", None),
		"PivotTable": (716, 2, (3, 0), ((16393, 10),), "PivotTable", None),
		"Precedents": (544, 2, (3, 0), ((16393, 10),), "Precedents", None),
		"PrefixCharacter": (504, 2, (3, 0), ((16396, 10),), "PrefixCharacter", None),
		"Previous": (503, 2, (3, 0), ((16393, 10),), "Previous", None),
		"QueryTable": (1386, 2, (3, 0), ((16397, 10),), "QueryTable", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"Resize": (256, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Resize", None),
		"Row": (257, 2, (3, 0), ((16387, 10),), "Row", None),
		"RowHeight": (272, 2, (3, 0), ((16396, 10),), "RowHeight", None),
		"Rows": (258, 2, (3, 0), ((16393, 10),), "Rows", None),
		"SavedAsArray": (3303, 2, (3, 0), ((16396, 10),), "SavedAsArray", None),
		"ServerActions": (2491, 2, (3, 0), ((16393, 10),), "ServerActions", None),
		"ShowDetail": (585, 2, (3, 0), ((16396, 10),), "ShowDetail", None),
		"ShrinkToFit": (209, 2, (3, 0), ((16396, 10),), "ShrinkToFit", None),
		"SmartTags": (2016, 2, (3, 0), ((16393, 10),), "SmartTags", None),
		"SoundNote": (916, 2, (3, 0), ((16393, 10),), "SoundNote", None),
		"SparklineGroups": (2853, 2, (3, 0), ((16393, 10),), "SparklineGroups", None),
		"SpillParent": (3297, 2, (3, 0), ((16393, 10),), "SpillParent", None),
		"SpillingToRange": (3296, 2, (3, 0), ((16393, 10),), "SpillingToRange", None),
		"Style": (260, 2, (3, 0), ((16396, 10),), "Style", None),
		"Summary": (273, 2, (3, 0), ((16396, 10),), "Summary", None),
		"Text": (138, 2, (3, 0), ((16396, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16396, 10),), "Top", None),
		"UseStandardHeight": (274, 2, (3, 0), ((16396, 10),), "UseStandardHeight", None),
		"UseStandardWidth": (275, 2, (3, 0), ((16396, 10),), "UseStandardWidth", None),
		"Validation": (1387, 2, (3, 0), ((16393, 10),), "Validation", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"Width": (122, 2, (3, 0), ((16396, 10),), "Width", None),
		"Worksheet": (348, 2, (3, 0), ((16397, 10),), "Worksheet", None),
		"WrapText": (276, 2, (3, 0), ((16396, 10),), "WrapText", None),
		"XPath": (2258, 2, (3, 0), ((16393, 10),), "XPath", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"ColumnWidth": ((242, LCID, 4, 0),()),
		"Formula2Local": ((3300, LCID, 4, 0),()),
		"Formula2R1C1Local": ((3302, LCID, 4, 0),()),
		"FormulaArray": ((586, LCID, 4, 0),()),
		"FormulaHidden": ((262, LCID, 4, 0),()),
		"FormulaLabel": ((1380, LCID, 4, 0),()),
		"FormulaLocal": ((263, LCID, 4, 0),()),
		"FormulaR1C1Local": ((265, LCID, 4, 0),()),
		"Hidden": ((268, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"ID": ((1813, LCID, 4, 0),()),
		"IndentLevel": ((201, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"MergeCells": ((208, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"NumberFormat": ((193, LCID, 4, 0),()),
		"NumberFormatLocal": ((1097, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"OutlineLevel": ((271, LCID, 4, 0),()),
		"PageBreak": ((255, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"RowHeight": ((272, LCID, 4, 0),()),
		"ShowDetail": ((585, LCID, 4, 0),()),
		"ShrinkToFit": ((209, LCID, 4, 0),()),
		"Style": ((260, LCID, 4, 0),()),
		"UseStandardHeight": ((274, LCID, 4, 0),()),
		"UseStandardWidth": ((275, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"WrapText": ((276, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IRanges(DispatchBaseClass):
	CLSID = IID('{000244A0-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IRecentFile(DispatchBaseClass):
	CLSID = IID('{00024407-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Path": (291, 2, (3, 0), ((16392, 10),), "Path", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRecentFiles(DispatchBaseClass):
	CLSID = IID('{00024406-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Maximum": (1423, 2, (3, 0), ((16387, 10),), "Maximum", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
		"Maximum": ((1423, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IRectangle(DispatchBaseClass):
	CLSID = IID('{0002089C-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (3, 0), ((16395, 10),), "AddIndent", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"AutoSize": (614, 2, (3, 0), ((16395, 10),), "AutoSize", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"BottomRightCell": (615, 2, (3, 0), ((16393, 10),), "BottomRightCell", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"RoundedCorners": (619, 2, (3, 0), ((16395, 10),), "RoundedCorners", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"TopLeftCell": (620, 2, (3, 0), ((16393, 10),), "TopLeftCell", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"RoundedCorners": ((619, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRectangles(DispatchBaseClass):
	CLSID = IID('{0002089D-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (3, 0), ((16395, 10),), "AddIndent", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"AutoSize": (614, 2, (3, 0), ((16395, 10),), "AutoSize", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"RoundedCorners": (619, 2, (3, 0), ((16395, 10),), "RoundedCorners", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"RoundedCorners": ((619, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IRectangularGradient(DispatchBaseClass):
	CLSID = IID('{000244B0-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"ColorStops": (2761, 2, (3, 0), ((16393, 10),), "ColorStops", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"RectangleBottom": (2763, 2, (3, 0), ((16389, 10),), "RectangleBottom", None),
		"RectangleLeft": (2764, 2, (3, 0), ((16389, 10),), "RectangleLeft", None),
		"RectangleRight": (2765, 2, (3, 0), ((16389, 10),), "RectangleRight", None),
		"RectangleTop": (2762, 2, (3, 0), ((16389, 10),), "RectangleTop", None),
	}
	_prop_map_put_ = {
		"RectangleBottom": ((2763, LCID, 4, 0),()),
		"RectangleLeft": ((2764, LCID, 4, 0),()),
		"RectangleRight": ((2765, LCID, 4, 0),()),
		"RectangleTop": ((2762, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRefreshEvents(DispatchBaseClass):
	CLSID = IID('{0002441B-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IResearch(DispatchBaseClass):
	CLSID = IID('{000244AC-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRoutingSlip(DispatchBaseClass):
	CLSID = IID('{000208AA-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Delivery": (955, 2, (3, 0), ((16387, 10),), "Delivery", None),
		"Message": (954, 2, (3, 0), ((16396, 10),), "Message", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Recipients": (952, 2, (3, 0), ((12, 17), (16396, 10)), "Recipients", None),
		"ReturnWhenDone": (956, 2, (3, 0), ((16395, 10),), "ReturnWhenDone", None),
		"Status": (958, 2, (3, 0), ((16387, 10),), "Status", None),
		"Subject": (953, 2, (3, 0), ((16396, 10),), "Subject", None),
		"TrackStatus": (957, 2, (3, 0), ((16395, 10),), "TrackStatus", None),
	}
	_prop_map_put_ = {
		"Delivery": ((955, LCID, 4, 0),()),
		"Message": ((954, LCID, 4, 0),()),
		"Recipients": ((952, LCID, 4, 0),()),
		"ReturnWhenDone": ((956, LCID, 4, 0),()),
		"Subject": ((953, LCID, 4, 0),()),
		"TrackStatus": ((957, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRtdServer(DispatchBaseClass):
	CLSID = IID('{EC0E6191-DB51-11D3-8F3E-00C04F3651B8}')
	coclass_clsid = None

	def ConnectData(self, TopicID=defaultNamedNotOptArg, Strings=defaultNamedNotOptArg, GetNewValues=defaultNamedNotOptArg):
		return self._ApplyTypes_(11, 1, (12, 0), ((3, 1), (24588, 1), (16395, 3)), 'ConnectData', None,TopicID
			, Strings, GetNewValues)

	def DisconnectData(self, TopicID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((3, 1),),TopicID
			)

	def Heartbeat(self):
		return self._oleobj_.InvokeTypes(14, LCID, 1, (3, 0), (),)

	def RefreshData(self, TopicCount=defaultNamedNotOptArg):
		return self._ApplyTypes_(12, 1, (8204, 0), ((16387, 3),), 'RefreshData', None,TopicCount
			)

	def ServerStart(self, CallbackObject=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10, LCID, 1, (3, 0), ((9, 1),),CallbackObject
			)

	def ServerTerminate(self):
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IScenario(DispatchBaseClass):
	CLSID = IID('{00020897-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"ChangingCells": (911, 2, (3, 0), ((16393, 10),), "ChangingCells", None),
		"Comment": (910, 2, (3, 0), ((16392, 10),), "Comment", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Hidden": (268, 2, (3, 0), ((16395, 10),), "Hidden", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Values": (164, 2, (3, 0), ((12, 17), (16396, 10)), "Values", None),
	}
	_prop_map_put_ = {
		"Comment": ((910, LCID, 4, 0),()),
		"Hidden": ((268, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IScenarios(DispatchBaseClass):
	CLSID = IID('{00020896-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IScrollBar(DispatchBaseClass):
	CLSID = IID('{00020885-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"BottomRightCell": (615, 2, (3, 0), ((16393, 10),), "BottomRightCell", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Display3DShading": (1122, 2, (3, 0), ((16395, 10),), "Display3DShading", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"LargeChange": (845, 2, (3, 0), ((16387, 10),), "LargeChange", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"LinkedCell": (1058, 2, (3, 0), ((16392, 10),), "LinkedCell", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"Max": (842, 2, (3, 0), ((16387, 10),), "Max", None),
		"Min": (843, 2, (3, 0), ((16387, 10),), "Min", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"SmallChange": (844, 2, (3, 0), ((16387, 10),), "SmallChange", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"TopLeftCell": (620, 2, (3, 0), ((16393, 10),), "TopLeftCell", None),
		"Value": (6, 2, (3, 0), ((16387, 10),), "Value", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
		"_Default": (0, 2, (3, 0), ((16387, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"LargeChange": ((845, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Max": ((842, LCID, 4, 0),()),
		"Min": ((843, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"SmallChange": ((844, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16387, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IScrollBars(DispatchBaseClass):
	CLSID = IID('{00020886-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Display3DShading": (1122, 2, (3, 0), ((16395, 10),), "Display3DShading", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"LargeChange": (845, 2, (3, 0), ((16387, 10),), "LargeChange", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"LinkedCell": (1058, 2, (3, 0), ((16392, 10),), "LinkedCell", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"Max": (842, 2, (3, 0), ((16387, 10),), "Max", None),
		"Min": (843, 2, (3, 0), ((16387, 10),), "Min", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"SmallChange": (844, 2, (3, 0), ((16387, 10),), "SmallChange", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Value": (6, 2, (3, 0), ((16387, 10),), "Value", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
		"_Default": (0, 2, (3, 0), ((16387, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"LargeChange": ((845, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Max": ((842, LCID, 4, 0),()),
		"Min": ((843, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"SmallChange": ((844, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16387, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ISeries(DispatchBaseClass):
	CLSID = IID('{0002086B-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"ApplyPictToEnd": (1661, 2, (3, 0), ((16395, 10),), "ApplyPictToEnd", None),
		"ApplyPictToFront": (1660, 2, (3, 0), ((16395, 10),), "ApplyPictToFront", None),
		"ApplyPictToSides": (1659, 2, (3, 0), ((16395, 10),), "ApplyPictToSides", None),
		"AxisGroup": (47, 2, (3, 0), ((16387, 10),), "AxisGroup", None),
		"BarShape": (1403, 2, (3, 0), ((16387, 10),), "BarShape", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"BubbleSizes": (1664, 2, (3, 0), ((16396, 10),), "BubbleSizes", None),
		"ChartType": (1400, 2, (3, 0), ((16387, 10),), "ChartType", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"ErrorBars": (159, 2, (3, 0), ((16393, 10),), "ErrorBars", None),
		"Explosion": (182, 2, (3, 0), ((16387, 10),), "Explosion", None),
		"Fill": (1663, 2, (3, 0), ((16393, 10),), "Fill", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"FormulaLocal": (263, 2, (3, 0), ((16392, 10),), "FormulaLocal", None),
		"FormulaR1C1": (264, 2, (3, 0), ((16392, 10),), "FormulaR1C1", None),
		"FormulaR1C1Local": (265, 2, (3, 0), ((16392, 10),), "FormulaR1C1Local", None),
		"GeoMappingLevel": (3251, 2, (3, 0), ((16387, 10),), "GeoMappingLevel", None),
		"GeoProjectionType": (3250, 2, (3, 0), ((16387, 10),), "GeoProjectionType", None),
		"Has3DEffect": (1665, 2, (3, 0), ((16395, 10),), "Has3DEffect", None),
		"HasDataLabels": (78, 2, (3, 0), ((16395, 10),), "HasDataLabels", None),
		"HasErrorBars": (160, 2, (3, 0), ((16395, 10),), "HasErrorBars", None),
		"HasLeaderLines": (1394, 2, (3, 0), ((16395, 10),), "HasLeaderLines", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"InvertColor": (2916, 2, (3, 0), ((16387, 10),), "InvertColor", None),
		"InvertColorIndex": (2917, 2, (3, 0), ((16387, 10),), "InvertColorIndex", None),
		"InvertIfNegative": (132, 2, (3, 0), ((16395, 10),), "InvertIfNegative", None),
		"IsFiltered": (3083, 2, (3, 0), ((16395, 10),), "IsFiltered", None),
		"LeaderLines": (1666, 2, (3, 0), ((16393, 10),), "LeaderLines", None),
		"MarkerBackgroundColor": (73, 2, (3, 0), ((16387, 10),), "MarkerBackgroundColor", None),
		"MarkerBackgroundColorIndex": (74, 2, (3, 0), ((16387, 10),), "MarkerBackgroundColorIndex", None),
		"MarkerForegroundColor": (75, 2, (3, 0), ((16387, 10),), "MarkerForegroundColor", None),
		"MarkerForegroundColorIndex": (76, 2, (3, 0), ((16387, 10),), "MarkerForegroundColorIndex", None),
		"MarkerSize": (231, 2, (3, 0), ((16387, 10),), "MarkerSize", None),
		"MarkerStyle": (72, 2, (3, 0), ((16387, 10),), "MarkerStyle", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ParentDataLabelOption": (3204, 2, (3, 0), ((16387, 10),), "ParentDataLabelOption", None),
		"PictureType": (161, 2, (3, 0), ((16387, 10),), "PictureType", None),
		"PictureUnit": (162, 2, (3, 0), ((16387, 10),), "PictureUnit", None),
		"PictureUnit2": (2649, 2, (3, 0), ((16389, 10),), "PictureUnit2", None),
		"PlotColorIndex": (2915, 2, (3, 0), ((16387, 10),), "PlotColorIndex", None),
		"PlotOrder": (228, 2, (3, 0), ((16387, 10),), "PlotOrder", None),
		"QuartileCalculationInclusiveMedian": (3205, 2, (3, 0), ((16395, 10),), "QuartileCalculationInclusiveMedian", None),
		"RegionLabelOption": (3252, 2, (3, 0), ((16387, 10),), "RegionLabelOption", None),
		"SeriesColorGradientStyle": (3261, 2, (3, 0), ((16387, 10),), "SeriesColorGradientStyle", None),
		"SeriesColorMaxGradientStop": (3264, 2, (3, 0), ((16393, 10),), "SeriesColorMaxGradientStop", None),
		"SeriesColorMidGradientStop": (3263, 2, (3, 0), ((16393, 10),), "SeriesColorMidGradientStop", None),
		"SeriesColorMinGradientStop": (3262, 2, (3, 0), ((16393, 10),), "SeriesColorMinGradientStop", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"Smooth": (163, 2, (3, 0), ((16395, 10),), "Smooth", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
		"ValueSortOrder": (3229, 2, (3, 0), ((16387, 10),), "ValueSortOrder", None),
		"Values": (164, 2, (3, 0), ((16396, 10),), "Values", None),
		"XValues": (1111, 2, (3, 0), ((16396, 10),), "XValues", None),
	}
	_prop_map_put_ = {
		"ApplyPictToEnd": ((1661, LCID, 4, 0),()),
		"ApplyPictToFront": ((1660, LCID, 4, 0),()),
		"ApplyPictToSides": ((1659, LCID, 4, 0),()),
		"AxisGroup": ((47, LCID, 4, 0),()),
		"BarShape": ((1403, LCID, 4, 0),()),
		"BubbleSizes": ((1664, LCID, 4, 0),()),
		"ChartType": ((1400, LCID, 4, 0),()),
		"Explosion": ((182, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"FormulaLocal": ((263, LCID, 4, 0),()),
		"FormulaR1C1": ((264, LCID, 4, 0),()),
		"FormulaR1C1Local": ((265, LCID, 4, 0),()),
		"GeoMappingLevel": ((3251, LCID, 4, 0),()),
		"GeoProjectionType": ((3250, LCID, 4, 0),()),
		"Has3DEffect": ((1665, LCID, 4, 0),()),
		"HasDataLabels": ((78, LCID, 4, 0),()),
		"HasErrorBars": ((160, LCID, 4, 0),()),
		"HasLeaderLines": ((1394, LCID, 4, 0),()),
		"InvertColor": ((2916, LCID, 4, 0),()),
		"InvertColorIndex": ((2917, LCID, 4, 0),()),
		"InvertIfNegative": ((132, LCID, 4, 0),()),
		"IsFiltered": ((3083, LCID, 4, 0),()),
		"MarkerBackgroundColor": ((73, LCID, 4, 0),()),
		"MarkerBackgroundColorIndex": ((74, LCID, 4, 0),()),
		"MarkerForegroundColor": ((75, LCID, 4, 0),()),
		"MarkerForegroundColorIndex": ((76, LCID, 4, 0),()),
		"MarkerSize": ((231, LCID, 4, 0),()),
		"MarkerStyle": ((72, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"ParentDataLabelOption": ((3204, LCID, 4, 0),()),
		"PictureType": ((161, LCID, 4, 0),()),
		"PictureUnit": ((162, LCID, 4, 0),()),
		"PictureUnit2": ((2649, LCID, 4, 0),()),
		"PlotOrder": ((228, LCID, 4, 0),()),
		"QuartileCalculationInclusiveMedian": ((3205, LCID, 4, 0),()),
		"RegionLabelOption": ((3252, LCID, 4, 0),()),
		"SeriesColorGradientStyle": ((3261, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Smooth": ((163, LCID, 4, 0),()),
		"Type": ((108, LCID, 4, 0),()),
		"ValueSortOrder": ((3229, LCID, 4, 0),()),
		"Values": ((164, LCID, 4, 0),()),
		"XValues": ((1111, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISeriesCollection(DispatchBaseClass):
	CLSID = IID('{0002086C-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ISeriesGradientStopColorFormat(DispatchBaseClass):
	CLSID = IID('{000244F9-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"ObjectThemeColor": (3265, 2, (3, 0), ((16387, 10),), "ObjectThemeColor", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"RGB": (1055, 2, (3, 0), ((16387, 10),), "RGB", None),
		"TintAndShade": (2366, 2, (3, 0), ((16388, 10),), "TintAndShade", None),
		"Transparency": (3266, 2, (3, 0), ((16388, 10),), "Transparency", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
	}
	_prop_map_put_ = {
		"ObjectThemeColor": ((3265, LCID, 4, 0),()),
		"RGB": ((1055, LCID, 4, 0),()),
		"TintAndShade": ((2366, LCID, 4, 0),()),
		"Transparency": ((3266, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISeriesLines(DispatchBaseClass):
	CLSID = IID('{000208C1-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IServerViewableItems(DispatchBaseClass):
	CLSID = IID('{000244A4-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IShape(DispatchBaseClass):
	CLSID = IID('{00024439-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Adjustments": (1691, 2, (3, 0), ((16393, 10),), "Adjustments", None),
		"AlternativeText": (1891, 2, (3, 0), ((16392, 10),), "AlternativeText", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoShapeType": (1693, 2, (3, 0), ((16387, 10),), "AutoShapeType", None),
		"BackgroundStyle": (2661, 2, (3, 0), ((16387, 10),), "BackgroundStyle", None),
		"BlackWhiteMode": (1707, 2, (3, 0), ((16387, 10),), "BlackWhiteMode", None),
		"BottomRightCell": (615, 2, (3, 0), ((16393, 10),), "BottomRightCell", None),
		"Callout": (1694, 2, (3, 0), ((16393, 10),), "Callout", None),
		"CanvasItems": (2171, 2, (3, 0), ((16393, 10),), "CanvasItems", None),
		"Chart": (7, 2, (3, 0), ((16397, 10),), "Chart", None),
		"Child": (2169, 2, (3, 0), ((16387, 10),), "Child", None),
		"ConnectionSiteCount": (1695, 2, (3, 0), ((16387, 10),), "ConnectionSiteCount", None),
		"Connector": (1696, 2, (3, 0), ((16387, 10),), "Connector", None),
		"ConnectorFormat": (1697, 2, (3, 0), ((16393, 10),), "ConnectorFormat", None),
		"ControlFormat": (1709, 2, (3, 0), ((16393, 10),), "ControlFormat", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Decorative": (3358, 2, (3, 0), ((16387, 10),), "Decorative", None),
		"Diagram": (2167, 2, (3, 0), ((16393, 10),), "Diagram", None),
		"DiagramNode": (2165, 2, (3, 0), ((16393, 10),), "DiagramNode", None),
		"DrawingObject": (1708, 2, (3, 0), ((16393, 10),), "DrawingObject", None),
		"Fill": (1663, 2, (3, 0), ((16393, 10),), "Fill", None),
		"FormControlType": (1712, 2, (3, 0), ((16387, 10),), "FormControlType", None),
		"Glow": (2663, 2, (3, 0), ((16393, 10),), "Glow", None),
		"GraphicStyle": (3272, 2, (3, 0), ((16387, 10),), "GraphicStyle", None),
		"GroupItems": (1698, 2, (3, 0), ((16393, 10),), "GroupItems", None),
		"HasChart": (2658, 2, (3, 0), ((16387, 10),), "HasChart", None),
		"HasDiagram": (2168, 2, (3, 0), ((16387, 10),), "HasDiagram", None),
		"HasDiagramNode": (2166, 2, (3, 0), ((16387, 10),), "HasDiagramNode", None),
		"HasSmartArt": (2918, 2, (3, 0), ((16387, 10),), "HasSmartArt", None),
		"Height": (123, 2, (3, 0), ((16388, 10),), "Height", None),
		"HorizontalFlip": (1699, 2, (3, 0), ((16387, 10),), "HorizontalFlip", None),
		"Hyperlink": (1706, 2, (3, 0), ((16393, 10),), "Hyperlink", None),
		"ID": (570, 2, (3, 0), ((16387, 10),), "ID", None),
		"Left": (127, 2, (3, 0), ((16388, 10),), "Left", None),
		"Line": (817, 2, (3, 0), ((16393, 10),), "Line", None),
		"LinkFormat": (1710, 2, (3, 0), ((16393, 10),), "LinkFormat", None),
		"LockAspectRatio": (1700, 2, (3, 0), ((16387, 10),), "LockAspectRatio", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"Model3D": (3357, 2, (3, 0), ((16393, 10),), "Model3D", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Nodes": (1701, 2, (3, 0), ((16393, 10),), "Nodes", None),
		"OLEFormat": (1711, 2, (3, 0), ((16393, 10),), "OLEFormat", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ParentGroup": (2170, 2, (3, 0), ((16393, 10),), "ParentGroup", None),
		"PictureFormat": (1631, 2, (3, 0), ((16393, 10),), "PictureFormat", None),
		"Placement": (617, 2, (3, 0), ((16387, 10),), "Placement", None),
		"Reflection": (2664, 2, (3, 0), ((16393, 10),), "Reflection", None),
		"Rotation": (59, 2, (3, 0), ((16388, 10),), "Rotation", None),
		"Script": (1892, 2, (3, 0), ((16393, 10),), "Script", None),
		"Shadow": (103, 2, (3, 0), ((16393, 10),), "Shadow", None),
		"ShapeStyle": (2660, 2, (3, 0), ((16387, 10),), "ShapeStyle", None),
		"SmartArt": (2919, 2, (3, 0), ((16393, 10),), "SmartArt", None),
		"SoftEdge": (2662, 2, (3, 0), ((16393, 10),), "SoftEdge", None),
		"TextEffect": (1702, 2, (3, 0), ((16393, 10),), "TextEffect", None),
		"TextFrame": (1692, 2, (3, 0), ((16393, 10),), "TextFrame", None),
		"TextFrame2": (2659, 2, (3, 0), ((16393, 10),), "TextFrame2", None),
		"ThreeD": (1703, 2, (3, 0), ((16393, 10),), "ThreeD", None),
		"Title": (199, 2, (3, 0), ((16392, 10),), "Title", None),
		"Top": (126, 2, (3, 0), ((16388, 10),), "Top", None),
		"TopLeftCell": (620, 2, (3, 0), ((16393, 10),), "TopLeftCell", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
		"VerticalFlip": (1704, 2, (3, 0), ((16387, 10),), "VerticalFlip", None),
		"Vertices": (621, 2, (3, 0), ((16396, 10),), "Vertices", None),
		"Visible": (558, 2, (3, 0), ((16387, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16388, 10),), "Width", None),
		"ZOrderPosition": (1705, 2, (3, 0), ((16387, 10),), "ZOrderPosition", None),
	}
	_prop_map_put_ = {
		"AlternativeText": ((1891, LCID, 4, 0),()),
		"AutoShapeType": ((1693, LCID, 4, 0),()),
		"BackgroundStyle": ((2661, LCID, 4, 0),()),
		"BlackWhiteMode": ((1707, LCID, 4, 0),()),
		"Decorative": ((3358, LCID, 4, 0),()),
		"GraphicStyle": ((3272, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LockAspectRatio": ((1700, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"Rotation": ((59, LCID, 4, 0),()),
		"ShapeStyle": ((2660, LCID, 4, 0),()),
		"Title": ((199, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IShapeRange(DispatchBaseClass):
	CLSID = IID('{0002443B-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Adjustments": (1691, 2, (3, 0), ((16393, 10),), "Adjustments", None),
		"AlternativeText": (1891, 2, (3, 0), ((16392, 10),), "AlternativeText", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoShapeType": (1693, 2, (3, 0), ((16387, 10),), "AutoShapeType", None),
		"BackgroundStyle": (2661, 2, (3, 0), ((16387, 10),), "BackgroundStyle", None),
		"BlackWhiteMode": (1707, 2, (3, 0), ((16387, 10),), "BlackWhiteMode", None),
		"Callout": (1694, 2, (3, 0), ((16393, 10),), "Callout", None),
		"CanvasItems": (2171, 2, (3, 0), ((16393, 10),), "CanvasItems", None),
		"Chart": (7, 2, (3, 0), ((16397, 10),), "Chart", None),
		"Child": (2169, 2, (3, 0), ((16387, 10),), "Child", None),
		"ConnectionSiteCount": (1695, 2, (3, 0), ((16387, 10),), "ConnectionSiteCount", None),
		"Connector": (1696, 2, (3, 0), ((16387, 10),), "Connector", None),
		"ConnectorFormat": (1697, 2, (3, 0), ((16393, 10),), "ConnectorFormat", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Decorative": (3358, 2, (3, 0), ((16387, 10),), "Decorative", None),
		"Diagram": (2167, 2, (3, 0), ((16393, 10),), "Diagram", None),
		"DiagramNode": (2165, 2, (3, 0), ((16393, 10),), "DiagramNode", None),
		"Fill": (1663, 2, (3, 0), ((16393, 10),), "Fill", None),
		"Glow": (2663, 2, (3, 0), ((16393, 10),), "Glow", None),
		"GraphicStyle": (3272, 2, (3, 0), ((16387, 10),), "GraphicStyle", None),
		"GroupItems": (1698, 2, (3, 0), ((16393, 10),), "GroupItems", None),
		"HasChart": (2658, 2, (3, 0), ((16387, 10),), "HasChart", None),
		"HasDiagram": (2168, 2, (3, 0), ((16387, 10),), "HasDiagram", None),
		"HasDiagramNode": (2166, 2, (3, 0), ((16387, 10),), "HasDiagramNode", None),
		"Height": (123, 2, (3, 0), ((16388, 10),), "Height", None),
		"HorizontalFlip": (1699, 2, (3, 0), ((16387, 10),), "HorizontalFlip", None),
		"ID": (570, 2, (3, 0), ((16387, 10),), "ID", None),
		"Left": (127, 2, (3, 0), ((16388, 10),), "Left", None),
		"Line": (817, 2, (3, 0), ((16393, 10),), "Line", None),
		"LockAspectRatio": (1700, 2, (3, 0), ((16387, 10),), "LockAspectRatio", None),
		"Model3D": (3357, 2, (3, 0), ((16393, 10),), "Model3D", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Nodes": (1701, 2, (3, 0), ((16393, 10),), "Nodes", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ParentGroup": (2170, 2, (3, 0), ((16393, 10),), "ParentGroup", None),
		"PictureFormat": (1631, 2, (3, 0), ((16393, 10),), "PictureFormat", None),
		"Reflection": (2664, 2, (3, 0), ((16393, 10),), "Reflection", None),
		"Rotation": (59, 2, (3, 0), ((16388, 10),), "Rotation", None),
		"Shadow": (103, 2, (3, 0), ((16393, 10),), "Shadow", None),
		"ShapeStyle": (2660, 2, (3, 0), ((16387, 10),), "ShapeStyle", None),
		"SoftEdge": (2662, 2, (3, 0), ((16393, 10),), "SoftEdge", None),
		"TextEffect": (1702, 2, (3, 0), ((16393, 10),), "TextEffect", None),
		"TextFrame": (1692, 2, (3, 0), ((16393, 10),), "TextFrame", None),
		"TextFrame2": (2659, 2, (3, 0), ((16393, 10),), "TextFrame2", None),
		"ThreeD": (1703, 2, (3, 0), ((16393, 10),), "ThreeD", None),
		"Title": (199, 2, (3, 0), ((16392, 10),), "Title", None),
		"Top": (126, 2, (3, 0), ((16388, 10),), "Top", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
		"VerticalFlip": (1704, 2, (3, 0), ((16387, 10),), "VerticalFlip", None),
		"Vertices": (621, 2, (3, 0), ((16396, 10),), "Vertices", None),
		"Visible": (558, 2, (3, 0), ((16387, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16388, 10),), "Width", None),
		"ZOrderPosition": (1705, 2, (3, 0), ((16387, 10),), "ZOrderPosition", None),
	}
	_prop_map_put_ = {
		"AlternativeText": ((1891, LCID, 4, 0),()),
		"AutoShapeType": ((1693, LCID, 4, 0),()),
		"BackgroundStyle": ((2661, LCID, 4, 0),()),
		"BlackWhiteMode": ((1707, LCID, 4, 0),()),
		"Decorative": ((3358, LCID, 4, 0),()),
		"GraphicStyle": ((3272, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LockAspectRatio": ((1700, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"Rotation": ((59, LCID, 4, 0),()),
		"ShapeStyle": ((2660, LCID, 4, 0),()),
		"Title": ((199, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IShapes(DispatchBaseClass):
	CLSID = IID('{0002443A-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ISheetViews(DispatchBaseClass):
	CLSID = IID('{0002448C-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ISlicer(DispatchBaseClass):
	CLSID = IID('{000244C8-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"ActiveItem": (2988, 2, (3, 0), ((16393, 10),), "ActiveItem", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"ColumnWidth": (242, 2, (3, 0), ((16389, 10),), "ColumnWidth", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DisableMoveResizeUI": (2983, 2, (3, 0), ((16395, 10),), "DisableMoveResizeUI", None),
		"DisplayHeader": (2985, 2, (3, 0), ((16395, 10),), "DisplayHeader", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"NumberOfColumns": (2984, 2, (3, 0), ((16387, 10),), "NumberOfColumns", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"RowHeight": (272, 2, (3, 0), ((16389, 10),), "RowHeight", None),
		"Shape": (1582, 2, (3, 0), ((16393, 10),), "Shape", None),
		"SlicerCache": (2986, 2, (3, 0), ((16393, 10),), "SlicerCache", None),
		"SlicerCacheLevel": (2987, 2, (3, 0), ((16393, 10),), "SlicerCacheLevel", None),
		"SlicerCacheType": (3111, 2, (3, 0), ((16387, 10),), "SlicerCacheType", None),
		"Style": (260, 2, (3, 0), ((16396, 10),), "Style", None),
		"TimelineViewState": (3116, 2, (3, 0), ((16393, 10),), "TimelineViewState", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"ColumnWidth": ((242, LCID, 4, 0),()),
		"DisableMoveResizeUI": ((2983, LCID, 4, 0),()),
		"DisplayHeader": ((2985, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"NumberOfColumns": ((2984, LCID, 4, 0),()),
		"RowHeight": ((272, LCID, 4, 0),()),
		"Style": ((260, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISlicerCache(DispatchBaseClass):
	CLSID = IID('{000244C4-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"CrossFilterType": (2978, 2, (3, 0), ((16387, 10),), "CrossFilterType", None),
		"FilterCleared": (3113, 2, (3, 0), ((16395, 10),), "FilterCleared", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"List": (861, 2, (3, 0), ((16395, 10),), "List", None),
		"ListObject": (2257, 2, (3, 0), ((16393, 10),), "ListObject", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OLAP": (2077, 2, (3, 0), ((16395, 10),), "OLAP", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PivotTables": (690, 2, (3, 0), ((16393, 10),), "PivotTables", None),
		"RequireManualUpdate": (3114, 2, (3, 0), ((16395, 10),), "RequireManualUpdate", None),
		"ShowAllItems": (452, 2, (3, 0), ((16395, 10),), "ShowAllItems", None),
		"SlicerCacheLevels": (2974, 2, (3, 0), ((16393, 10),), "SlicerCacheLevels", None),
		"SlicerCacheType": (3111, 2, (3, 0), ((16387, 10),), "SlicerCacheType", None),
		"SlicerItems": (2977, 2, (3, 0), ((16393, 10),), "SlicerItems", None),
		"Slicers": (2881, 2, (3, 0), ((16393, 10),), "Slicers", None),
		"SortItems": (2979, 2, (3, 0), ((16387, 10),), "SortItems", None),
		"SortUsingCustomLists": (2574, 2, (3, 0), ((16395, 10),), "SortUsingCustomLists", None),
		"SourceName": (721, 2, (3, 0), ((16392, 10),), "SourceName", None),
		"SourceType": (685, 2, (3, 0), ((16387, 10),), "SourceType", None),
		"TimelineState": (3112, 2, (3, 0), ((16393, 10),), "TimelineState", None),
		"VisibleSlicerItems": (2975, 2, (3, 0), ((16393, 10),), "VisibleSlicerItems", None),
		"VisibleSlicerItemsList": (2976, 2, (3, 0), ((16396, 10),), "VisibleSlicerItemsList", None),
		"WorkbookConnection": (2544, 2, (3, 0), ((16393, 10),), "WorkbookConnection", None),
	}
	_prop_map_put_ = {
		"CrossFilterType": ((2978, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"RequireManualUpdate": ((3114, LCID, 4, 0),()),
		"ShowAllItems": ((452, LCID, 4, 0),()),
		"SortItems": ((2979, LCID, 4, 0),()),
		"SortUsingCustomLists": ((2574, LCID, 4, 0),()),
		"VisibleSlicerItemsList": ((2976, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISlicerCacheLevel(DispatchBaseClass):
	CLSID = IID('{000244C6-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"CrossFilterType": (2978, 2, (3, 0), ((16387, 10),), "CrossFilterType", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Ordinal": (2981, 2, (3, 0), ((16387, 10),), "Ordinal", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"SlicerItems": (2977, 2, (3, 0), ((16393, 10),), "SlicerItems", None),
		"SortItems": (2979, 2, (3, 0), ((16387, 10),), "SortItems", None),
		"VisibleSlicerItemsList": (2976, 2, (3, 0), ((16396, 10),), "VisibleSlicerItemsList", None),
	}
	_prop_map_put_ = {
		"CrossFilterType": ((2978, LCID, 4, 0),()),
		"SortItems": ((2979, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ISlicerCacheLevels(DispatchBaseClass):
	CLSID = IID('{000244C5-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Item": (170, 2, (3, 0), ((12, 17), (16393, 10)), "Item", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"_Default": (0, 2, (3, 0), ((12, 17), (16393, 10)), "_Default", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), ((12, 17), (16393, 10)), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ISlicerCaches(DispatchBaseClass):
	CLSID = IID('{000244C3-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ISlicerItem(DispatchBaseClass):
	CLSID = IID('{000244C9-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"HasData": (2989, 2, (3, 0), ((16395, 10),), "HasData", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Selected": (1123, 2, (3, 0), ((16395, 10),), "Selected", None),
		"SourceName": (721, 2, (3, 0), ((16396, 10),), "SourceName", None),
		"SourceNameStandard": (2148, 2, (3, 0), ((16392, 10),), "SourceNameStandard", None),
		"Value": (6, 2, (3, 0), ((16392, 10),), "Value", None),
	}
	_prop_map_put_ = {
		"Selected": ((1123, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16392, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISlicerItems(DispatchBaseClass):
	CLSID = IID('{000244CA-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ISlicerPivotTables(DispatchBaseClass):
	CLSID = IID('{000244CB-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ISlicers(DispatchBaseClass):
	CLSID = IID('{000244C7-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ISmartTag(DispatchBaseClass):
	CLSID = IID('{00024460-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DownloadURL": (2212, 2, (3, 0), ((16392, 10),), "DownloadURL", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Properties": (2135, 2, (3, 0), ((16393, 10),), "Properties", None),
		"Range": (197, 2, (3, 0), ((16393, 10),), "Range", None),
		"SmartTagActions": (2214, 2, (3, 0), ((16393, 10),), "SmartTagActions", None),
		"XML": (2213, 2, (3, 0), ((16392, 10),), "XML", None),
		"_Default": (0, 2, (3, 0), ((16392, 10),), "_Default", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), ((16392, 10),), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISmartTagAction(DispatchBaseClass):
	CLSID = IID('{0002445E-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"ActiveXControl": (2303, 2, (3, 0), ((16393, 10),), "ActiveXControl", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"CheckboxState": (2299, 2, (3, 0), ((16395, 10),), "CheckboxState", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"ExpandHelp": (2298, 2, (3, 0), ((16395, 10),), "ExpandHelp", None),
		"ListSelection": (2301, 2, (3, 0), ((16387, 10),), "ListSelection", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PresentInPane": (2297, 2, (3, 0), ((16395, 10),), "PresentInPane", None),
		"RadioGroupSelection": (2302, 2, (3, 0), ((16387, 10),), "RadioGroupSelection", None),
		"TextboxText": (2300, 2, (3, 0), ((16392, 10),), "TextboxText", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
		"_Default": (0, 2, (3, 0), ((16392, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"CheckboxState": ((2299, LCID, 4, 0),()),
		"ExpandHelp": ((2298, LCID, 4, 0),()),
		"ListSelection": ((2301, LCID, 4, 0),()),
		"RadioGroupSelection": ((2302, LCID, 4, 0),()),
		"TextboxText": ((2300, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), ((16392, 10),), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISmartTagActions(DispatchBaseClass):
	CLSID = IID('{0002445F-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ISmartTagOptions(DispatchBaseClass):
	CLSID = IID('{00024464-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DisplaySmartTags": (2218, 2, (3, 0), ((16387, 10),), "DisplaySmartTags", None),
		"EmbedSmartTags": (2219, 2, (3, 0), ((16395, 10),), "EmbedSmartTags", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
		"DisplaySmartTags": ((2218, LCID, 4, 0),()),
		"EmbedSmartTags": ((2219, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISmartTagRecognizer(DispatchBaseClass):
	CLSID = IID('{00024462-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"FullName": (289, 2, (3, 0), ((16392, 10),), "FullName", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"_Default": (0, 2, (3, 0), ((16392, 10),), "_Default", None),
		"progID": (2216, 2, (3, 0), ((16392, 10),), "progID", None),
	}
	_prop_map_put_ = {
		"Enabled": ((600, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), ((16392, 10),), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISmartTagRecognizers(DispatchBaseClass):
	CLSID = IID('{00024463-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Recognize": (2217, 2, (3, 0), ((16395, 10),), "Recognize", None),
	}
	_prop_map_put_ = {
		"Recognize": ((2217, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ISmartTags(DispatchBaseClass):
	CLSID = IID('{00024461-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ISort(DispatchBaseClass):
	CLSID = IID('{000244AB-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Header": (895, 2, (3, 0), ((16387, 10),), "Header", None),
		"MatchCase": (426, 2, (3, 0), ((16395, 10),), "MatchCase", None),
		"Orientation": (134, 2, (3, 0), ((16387, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Rng": (2748, 2, (3, 0), ((16393, 10),), "Rng", None),
		"SortFields": (2749, 2, (3, 0), ((16393, 10),), "SortFields", None),
		"SortMethod": (897, 2, (3, 0), ((16387, 10),), "SortMethod", None),
	}
	_prop_map_put_ = {
		"Header": ((895, LCID, 4, 0),()),
		"MatchCase": ((426, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"SortMethod": ((897, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISortField(DispatchBaseClass):
	CLSID = IID('{000244A9-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"CustomOrder": (2743, 2, (3, 0), ((16396, 10),), "CustomOrder", None),
		"DataOption": (2744, 2, (3, 0), ((16387, 10),), "DataOption", None),
		"Key": (155, 2, (3, 0), ((16393, 10),), "Key", None),
		"Order": (192, 2, (3, 0), ((16387, 10),), "Order", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Priority": (985, 2, (3, 0), ((16387, 10),), "Priority", None),
		"SortOn": (2741, 2, (3, 0), ((16387, 10),), "SortOn", None),
		"SortOnValue": (2742, 2, (3, 0), ((16393, 10),), "SortOnValue", None),
		"SubField": (3328, 2, (3, 0), ((16396, 10),), "SubField", None),
	}
	_prop_map_put_ = {
		"CustomOrder": ((2743, LCID, 4, 0),()),
		"DataOption": ((2744, LCID, 4, 0),()),
		"Order": ((192, LCID, 4, 0),()),
		"Priority": ((985, LCID, 4, 0),()),
		"SortOn": ((2741, LCID, 4, 0),()),
		"SubField": ((3328, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISortFields(DispatchBaseClass):
	CLSID = IID('{000244AA-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ISoundNote(DispatchBaseClass):
	CLSID = IID('{0002087B-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISparkAxes(DispatchBaseClass):
	CLSID = IID('{000244BA-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Horizontal": (2962, 2, (3, 0), ((16393, 10),), "Horizontal", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Vertical": (2961, 2, (3, 0), ((16393, 10),), "Vertical", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISparkColor(DispatchBaseClass):
	CLSID = IID('{000244BD-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Color": (99, 2, (3, 0), ((16393, 10),), "Color", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
	}
	_prop_map_put_ = {
		"Visible": ((558, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISparkHorizontalAxis(DispatchBaseClass):
	CLSID = IID('{000244BB-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Axis": (67, 2, (3, 0), ((16393, 10),), "Axis", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"IsDateAxis": (2963, 2, (3, 0), ((16395, 10),), "IsDateAxis", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"RightToLeftPlotOrder": (2964, 2, (3, 0), ((16395, 10),), "RightToLeftPlotOrder", None),
	}
	_prop_map_put_ = {
		"RightToLeftPlotOrder": ((2964, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISparkPoints(DispatchBaseClass):
	CLSID = IID('{000244B8-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Firstpoint": (2959, 2, (3, 0), ((16393, 10),), "Firstpoint", None),
		"Highpoint": (2957, 2, (3, 0), ((16393, 10),), "Highpoint", None),
		"Lastpoint": (2960, 2, (3, 0), ((16393, 10),), "Lastpoint", None),
		"Lowpoint": (2958, 2, (3, 0), ((16393, 10),), "Lowpoint", None),
		"Markers": (2956, 2, (3, 0), ((16393, 10),), "Markers", None),
		"Negative": (2955, 2, (3, 0), ((16393, 10),), "Negative", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISparkVerticalAxis(DispatchBaseClass):
	CLSID = IID('{000244BC-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"CustomMaxScaleValue": (2968, 2, (3, 0), ((16396, 10),), "CustomMaxScaleValue", None),
		"CustomMinScaleValue": (2966, 2, (3, 0), ((16396, 10),), "CustomMinScaleValue", None),
		"MaxScaleType": (2967, 2, (3, 0), ((16387, 10),), "MaxScaleType", None),
		"MinScaleType": (2965, 2, (3, 0), ((16387, 10),), "MinScaleType", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
		"CustomMaxScaleValue": ((2968, LCID, 4, 0),()),
		"CustomMinScaleValue": ((2966, LCID, 4, 0),()),
		"MaxScaleType": ((2967, LCID, 4, 0),()),
		"MinScaleType": ((2965, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISparkline(DispatchBaseClass):
	CLSID = IID('{000244B9-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Location": (1397, 2, (3, 0), ((16393, 10),), "Location", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"SourceData": (686, 2, (3, 0), ((16392, 10),), "SourceData", None),
	}
	_prop_map_put_ = {
		"Location": ((1397, LCID, 8, 0),()),
		"SourceData": ((686, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISparklineGroup(DispatchBaseClass):
	CLSID = IID('{000244B7-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Axes": (23, 2, (3, 0), ((16393, 10),), "Axes", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DateRange": (2948, 2, (3, 0), ((16392, 10),), "DateRange", None),
		"DisplayBlanksAs": (93, 2, (3, 0), ((16387, 10),), "DisplayBlanksAs", None),
		"DisplayHidden": (2953, 2, (3, 0), ((16395, 10),), "DisplayHidden", None),
		"LineWeight": (2954, 2, (3, 0), ((16396, 10),), "LineWeight", None),
		"Location": (1397, 2, (3, 0), ((16393, 10),), "Location", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PlotBy": (202, 2, (3, 0), ((16387, 10),), "PlotBy", None),
		"Points": (70, 2, (3, 0), ((16393, 10),), "Points", None),
		"SeriesColor": (2952, 2, (3, 0), ((16393, 10),), "SeriesColor", None),
		"SourceData": (686, 2, (3, 0), ((16392, 10),), "SourceData", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
	}
	_prop_map_put_ = {
		"DateRange": ((2948, LCID, 4, 0),()),
		"DisplayBlanksAs": ((93, LCID, 4, 0),()),
		"DisplayHidden": ((2953, LCID, 4, 0),()),
		"LineWeight": ((2954, LCID, 4, 0),()),
		"Location": ((1397, LCID, 8, 0),()),
		"PlotBy": ((202, LCID, 4, 0),()),
		"SourceData": ((686, LCID, 4, 0),()),
		"Type": ((108, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ISparklineGroups(DispatchBaseClass):
	CLSID = IID('{000244B6-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ISpeech(DispatchBaseClass):
	CLSID = IID('{00024466-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Direction": (168, 2, (3, 0), ((16387, 10),), "Direction", None),
		"SpeakCellOnEnter": (2235, 2, (3, 0), ((16395, 10),), "SpeakCellOnEnter", None),
	}
	_prop_map_put_ = {
		"Direction": ((168, LCID, 4, 0),()),
		"SpeakCellOnEnter": ((2235, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISpellingOptions(DispatchBaseClass):
	CLSID = IID('{00024465-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"ArabicModes": (2231, 2, (3, 0), ((16387, 10),), "ArabicModes", None),
		"ArabicStrictAlefHamza": (2932, 2, (3, 0), ((16395, 10),), "ArabicStrictAlefHamza", None),
		"ArabicStrictFinalYaa": (2933, 2, (3, 0), ((16395, 10),), "ArabicStrictFinalYaa", None),
		"ArabicStrictTaaMarboota": (2934, 2, (3, 0), ((16395, 10),), "ArabicStrictTaaMarboota", None),
		"BrazilReform": (2938, 2, (3, 0), ((16387, 10),), "BrazilReform", None),
		"DictLang": (2220, 2, (3, 0), ((16387, 10),), "DictLang", None),
		"GermanPostReform": (2226, 2, (3, 0), ((16395, 10),), "GermanPostReform", None),
		"HebrewModes": (2230, 2, (3, 0), ((16387, 10),), "HebrewModes", None),
		"IgnoreCaps": (2222, 2, (3, 0), ((16395, 10),), "IgnoreCaps", None),
		"IgnoreFileNames": (2225, 2, (3, 0), ((16395, 10),), "IgnoreFileNames", None),
		"IgnoreMixedDigits": (2224, 2, (3, 0), ((16395, 10),), "IgnoreMixedDigits", None),
		"KoreanCombineAux": (2227, 2, (3, 0), ((16395, 10),), "KoreanCombineAux", None),
		"KoreanProcessCompound": (2229, 2, (3, 0), ((16395, 10),), "KoreanProcessCompound", None),
		"KoreanUseAutoChangeList": (2228, 2, (3, 0), ((16395, 10),), "KoreanUseAutoChangeList", None),
		"PortugalReform": (2937, 2, (3, 0), ((16387, 10),), "PortugalReform", None),
		"RussianStrictE": (2935, 2, (3, 0), ((16395, 10),), "RussianStrictE", None),
		"SpanishModes": (2936, 2, (3, 0), ((16387, 10),), "SpanishModes", None),
		"SuggestMainOnly": (2223, 2, (3, 0), ((16395, 10),), "SuggestMainOnly", None),
		"UserDict": (2221, 2, (3, 0), ((16392, 10),), "UserDict", None),
	}
	_prop_map_put_ = {
		"ArabicModes": ((2231, LCID, 4, 0),()),
		"ArabicStrictAlefHamza": ((2932, LCID, 4, 0),()),
		"ArabicStrictFinalYaa": ((2933, LCID, 4, 0),()),
		"ArabicStrictTaaMarboota": ((2934, LCID, 4, 0),()),
		"BrazilReform": ((2938, LCID, 4, 0),()),
		"DictLang": ((2220, LCID, 4, 0),()),
		"GermanPostReform": ((2226, LCID, 4, 0),()),
		"HebrewModes": ((2230, LCID, 4, 0),()),
		"IgnoreCaps": ((2222, LCID, 4, 0),()),
		"IgnoreFileNames": ((2225, LCID, 4, 0),()),
		"IgnoreMixedDigits": ((2224, LCID, 4, 0),()),
		"KoreanCombineAux": ((2227, LCID, 4, 0),()),
		"KoreanProcessCompound": ((2229, LCID, 4, 0),()),
		"KoreanUseAutoChangeList": ((2228, LCID, 4, 0),()),
		"PortugalReform": ((2937, LCID, 4, 0),()),
		"RussianStrictE": ((2935, LCID, 4, 0),()),
		"SpanishModes": ((2936, LCID, 4, 0),()),
		"SuggestMainOnly": ((2223, LCID, 4, 0),()),
		"UserDict": ((2221, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISpinner(DispatchBaseClass):
	CLSID = IID('{0002088D-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"BottomRightCell": (615, 2, (3, 0), ((16393, 10),), "BottomRightCell", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Display3DShading": (1122, 2, (3, 0), ((16395, 10),), "Display3DShading", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"LinkedCell": (1058, 2, (3, 0), ((16392, 10),), "LinkedCell", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"Max": (842, 2, (3, 0), ((16387, 10),), "Max", None),
		"Min": (843, 2, (3, 0), ((16387, 10),), "Min", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"SmallChange": (844, 2, (3, 0), ((16387, 10),), "SmallChange", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"TopLeftCell": (620, 2, (3, 0), ((16393, 10),), "TopLeftCell", None),
		"Value": (6, 2, (3, 0), ((16387, 10),), "Value", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
		"_Default": (0, 2, (3, 0), ((16387, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Max": ((842, LCID, 4, 0),()),
		"Min": ((843, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"SmallChange": ((844, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16387, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISpinners(DispatchBaseClass):
	CLSID = IID('{0002088E-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Display3DShading": (1122, 2, (3, 0), ((16395, 10),), "Display3DShading", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"LinkedCell": (1058, 2, (3, 0), ((16392, 10),), "LinkedCell", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"Max": (842, 2, (3, 0), ((16387, 10),), "Max", None),
		"Min": (843, 2, (3, 0), ((16387, 10),), "Min", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"SmallChange": (844, 2, (3, 0), ((16387, 10),), "SmallChange", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Value": (6, 2, (3, 0), ((16387, 10),), "Value", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
		"_Default": (0, 2, (3, 0), ((16387, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Max": ((842, LCID, 4, 0),()),
		"Min": ((843, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"SmallChange": ((844, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16387, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IStyle(DispatchBaseClass):
	CLSID = IID('{00020852-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (3, 0), ((16395, 10),), "AddIndent", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Borders": (435, 2, (3, 0), ((16393, 10),), "Borders", None),
		"BuiltIn": (553, 2, (3, 0), ((16395, 10),), "BuiltIn", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"FormulaHidden": (262, 2, (3, 0), ((16395, 10),), "FormulaHidden", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16387, 10),), "HorizontalAlignment", None),
		"IncludeAlignment": (413, 2, (3, 0), ((16395, 10),), "IncludeAlignment", None),
		"IncludeBorder": (414, 2, (3, 0), ((16395, 10),), "IncludeBorder", None),
		"IncludeFont": (415, 2, (3, 0), ((16395, 10),), "IncludeFont", None),
		"IncludeNumber": (416, 2, (3, 0), ((16395, 10),), "IncludeNumber", None),
		"IncludePatterns": (417, 2, (3, 0), ((16395, 10),), "IncludePatterns", None),
		"IncludeProtection": (418, 2, (3, 0), ((16395, 10),), "IncludeProtection", None),
		"IndentLevel": (201, 2, (3, 0), ((16387, 10),), "IndentLevel", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"MergeCells": (208, 2, (3, 0), ((16396, 10),), "MergeCells", None),
		"NameLocal": (937, 2, (3, 0), ((16392, 10),), "NameLocal", None),
		"NumberFormat": (193, 2, (3, 0), ((16392, 10),), "NumberFormat", None),
		"NumberFormatLocal": (1097, 2, (3, 0), ((16392, 10),), "NumberFormatLocal", None),
		"Orientation": (134, 2, (3, 0), ((16387, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"ShrinkToFit": (209, 2, (3, 0), ((16395, 10),), "ShrinkToFit", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16387, 10),), "VerticalAlignment", None),
		"WrapText": (276, 2, (3, 0), ((16395, 10),), "WrapText", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"FormulaHidden": ((262, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"IncludeAlignment": ((413, LCID, 4, 0),()),
		"IncludeBorder": ((414, LCID, 4, 0),()),
		"IncludeFont": ((415, LCID, 4, 0),()),
		"IncludeNumber": ((416, LCID, 4, 0),()),
		"IncludePatterns": ((417, LCID, 4, 0),()),
		"IncludeProtection": ((418, LCID, 4, 0),()),
		"IndentLevel": ((201, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"MergeCells": ((208, LCID, 4, 0),()),
		"NumberFormat": ((193, LCID, 4, 0),()),
		"NumberFormatLocal": ((1097, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"ShrinkToFit": ((209, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"WrapText": ((276, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IStyles(DispatchBaseClass):
	CLSID = IID('{00020853-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ITab(DispatchBaseClass):
	CLSID = IID('{00024469-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Color": (99, 2, (3, 0), ((16396, 10),), "Color", None),
		"ColorIndex": (97, 2, (3, 0), ((16387, 10),), "ColorIndex", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ThemeColor": (2365, 2, (3, 0), ((16387, 10),), "ThemeColor", None),
		"TintAndShade": (2366, 2, (3, 0), ((16396, 10),), "TintAndShade", None),
	}
	_prop_map_put_ = {
		"Color": ((99, LCID, 4, 0),()),
		"ColorIndex": ((97, LCID, 4, 0),()),
		"ThemeColor": ((2365, LCID, 4, 0),()),
		"TintAndShade": ((2366, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITableObject(DispatchBaseClass):
	CLSID = IID('{000244CE-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AdjustColumnWidth": (1868, 2, (3, 0), ((16395, 10),), "AdjustColumnWidth", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Destination": (681, 2, (3, 0), ((16393, 10),), "Destination", None),
		"EnableEditing": (1595, 2, (3, 0), ((16395, 10),), "EnableEditing", None),
		"EnableRefresh": (1477, 2, (3, 0), ((16395, 10),), "EnableRefresh", None),
		"FetchedRowOverflow": (1588, 2, (3, 0), ((16395, 10),), "FetchedRowOverflow", None),
		"ListObject": (2257, 2, (3, 0), ((16393, 10),), "ListObject", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PreserveColumnInfo": (1867, 2, (3, 0), ((16395, 10),), "PreserveColumnInfo", None),
		"PreserveFormatting": (1500, 2, (3, 0), ((16395, 10),), "PreserveFormatting", None),
		"RefreshStyle": (1590, 2, (3, 0), ((16387, 10),), "RefreshStyle", None),
		"ResultRange": (1592, 2, (3, 0), ((16393, 10),), "ResultRange", None),
		"RowNumbers": (1585, 2, (3, 0), ((16395, 10),), "RowNumbers", None),
		"WorkbookConnection": (2544, 2, (3, 0), ((16393, 10),), "WorkbookConnection", None),
	}
	_prop_map_put_ = {
		"AdjustColumnWidth": ((1868, LCID, 4, 0),()),
		"EnableEditing": ((1595, LCID, 4, 0),()),
		"EnableRefresh": ((1477, LCID, 4, 0),()),
		"PreserveColumnInfo": ((1867, LCID, 4, 0),()),
		"PreserveFormatting": ((1500, LCID, 4, 0),()),
		"RefreshStyle": ((1590, LCID, 4, 0),()),
		"RowNumbers": ((1585, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITableStyle(DispatchBaseClass):
	CLSID = IID('{000244A7-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"BuiltIn": (553, 2, (3, 0), ((16395, 10),), "BuiltIn", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"NameLocal": (937, 2, (3, 0), ((16392, 10),), "NameLocal", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ShowAsAvailablePivotTableStyle": (2739, 2, (3, 0), ((16395, 10),), "ShowAsAvailablePivotTableStyle", None),
		"ShowAsAvailableSlicerStyle": (2946, 2, (3, 0), ((16395, 10),), "ShowAsAvailableSlicerStyle", None),
		"ShowAsAvailableTableStyle": (2738, 2, (3, 0), ((16395, 10),), "ShowAsAvailableTableStyle", None),
		"ShowAsAvailableTimelineStyle": (3110, 2, (3, 0), ((16395, 10),), "ShowAsAvailableTimelineStyle", None),
		"TableStyleElements": (2737, 2, (3, 0), ((16393, 10),), "TableStyleElements", None),
		"_Default": (0, 2, (3, 0), ((16392, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"ShowAsAvailablePivotTableStyle": ((2739, LCID, 4, 0),()),
		"ShowAsAvailableSlicerStyle": ((2946, LCID, 4, 0),()),
		"ShowAsAvailableTableStyle": ((2738, LCID, 4, 0),()),
		"ShowAsAvailableTimelineStyle": ((3110, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), ((16392, 10),), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITableStyleElement(DispatchBaseClass):
	CLSID = IID('{000244A5-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Borders": (435, 2, (3, 0), ((16393, 10),), "Borders", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"HasFormat": (2735, 2, (3, 0), ((16395, 10),), "HasFormat", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"StripeSize": (2736, 2, (3, 0), ((16387, 10),), "StripeSize", None),
	}
	_prop_map_put_ = {
		"StripeSize": ((2736, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITableStyleElements(DispatchBaseClass):
	CLSID = IID('{000244A6-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ITableStyles(DispatchBaseClass):
	CLSID = IID('{000244A8-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ITextBox(DispatchBaseClass):
	CLSID = IID('{000208A4-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (3, 0), ((16395, 10),), "AddIndent", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"AutoSize": (614, 2, (3, 0), ((16395, 10),), "AutoSize", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"BottomRightCell": (615, 2, (3, 0), ((16393, 10),), "BottomRightCell", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"RoundedCorners": (619, 2, (3, 0), ((16395, 10),), "RoundedCorners", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"TopLeftCell": (620, 2, (3, 0), ((16393, 10),), "TopLeftCell", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"RoundedCorners": ((619, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITextBoxes(DispatchBaseClass):
	CLSID = IID('{000208A5-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (3, 0), ((16395, 10),), "AddIndent", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"AutoSize": (614, 2, (3, 0), ((16395, 10),), "AutoSize", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Caption": (139, 2, (3, 0), ((16392, 10),), "Caption", None),
		"Characters": (603, 2, (3, 0), ((12, 17), (12, 17), (16393, 10)), "Characters", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16396, 10),), "HorizontalAlignment", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"Locked": (269, 2, (3, 0), ((16395, 10),), "Locked", None),
		"LockedText": (616, 2, (3, 0), ((16395, 10),), "LockedText", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Orientation": (134, 2, (3, 0), ((16396, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (617, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (618, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"RoundedCorners": (619, 2, (3, 0), ((16395, 10),), "RoundedCorners", None),
		"Shadow": (103, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"ShapeRange": (1528, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"Text": (138, 2, (3, 0), ((16392, 10),), "Text", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16396, 10),), "VerticalAlignment", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (622, 2, (3, 0), ((16387, 10),), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"RoundedCorners": ((619, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ITextConnection(DispatchBaseClass):
	CLSID = IID('{000244D3-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Connection": (1432, 2, (3, 0), ((16396, 10),), "Connection", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"TextFileColumnDataTypes": (1865, 2, (3, 0), ((16396, 10),), "TextFileColumnDataTypes", None),
		"TextFileCommaDelimiter": (1862, 2, (3, 0), ((16395, 10),), "TextFileCommaDelimiter", None),
		"TextFileConsecutiveDelimiter": (1859, 2, (3, 0), ((16395, 10),), "TextFileConsecutiveDelimiter", None),
		"TextFileDecimalSeparator": (1870, 2, (3, 0), ((16392, 10),), "TextFileDecimalSeparator", None),
		"TextFileFixedColumnWidths": (1866, 2, (3, 0), ((16396, 10),), "TextFileFixedColumnWidths", None),
		"TextFileHeaderRow": (3118, 2, (3, 0), ((16395, 10),), "TextFileHeaderRow", None),
		"TextFileOtherDelimiter": (1864, 2, (3, 0), ((16392, 10),), "TextFileOtherDelimiter", None),
		"TextFileParseType": (1857, 2, (3, 0), ((16387, 10),), "TextFileParseType", None),
		"TextFilePlatform": (1855, 2, (3, 0), ((16387, 10),), "TextFilePlatform", None),
		"TextFilePromptOnRefresh": (1869, 2, (3, 0), ((16395, 10),), "TextFilePromptOnRefresh", None),
		"TextFileSemicolonDelimiter": (1861, 2, (3, 0), ((16395, 10),), "TextFileSemicolonDelimiter", None),
		"TextFileSpaceDelimiter": (1863, 2, (3, 0), ((16395, 10),), "TextFileSpaceDelimiter", None),
		"TextFileStartRow": (1856, 2, (3, 0), ((16387, 10),), "TextFileStartRow", None),
		"TextFileTabDelimiter": (1860, 2, (3, 0), ((16395, 10),), "TextFileTabDelimiter", None),
		"TextFileTextQualifier": (1858, 2, (3, 0), ((16387, 10),), "TextFileTextQualifier", None),
		"TextFileThousandsSeparator": (1871, 2, (3, 0), ((16392, 10),), "TextFileThousandsSeparator", None),
		"TextFileTrailingMinusNumbers": (2164, 2, (3, 0), ((16395, 10),), "TextFileTrailingMinusNumbers", None),
		"TextFileVisualLayout": (2245, 2, (3, 0), ((16387, 10),), "TextFileVisualLayout", None),
	}
	_prop_map_put_ = {
		"Connection": ((1432, LCID, 4, 0),()),
		"TextFileColumnDataTypes": ((1865, LCID, 4, 0),()),
		"TextFileCommaDelimiter": ((1862, LCID, 4, 0),()),
		"TextFileConsecutiveDelimiter": ((1859, LCID, 4, 0),()),
		"TextFileDecimalSeparator": ((1870, LCID, 4, 0),()),
		"TextFileFixedColumnWidths": ((1866, LCID, 4, 0),()),
		"TextFileHeaderRow": ((3118, LCID, 4, 0),()),
		"TextFileOtherDelimiter": ((1864, LCID, 4, 0),()),
		"TextFileParseType": ((1857, LCID, 4, 0),()),
		"TextFilePlatform": ((1855, LCID, 4, 0),()),
		"TextFilePromptOnRefresh": ((1869, LCID, 4, 0),()),
		"TextFileSemicolonDelimiter": ((1861, LCID, 4, 0),()),
		"TextFileSpaceDelimiter": ((1863, LCID, 4, 0),()),
		"TextFileStartRow": ((1856, LCID, 4, 0),()),
		"TextFileTabDelimiter": ((1860, LCID, 4, 0),()),
		"TextFileTextQualifier": ((1858, LCID, 4, 0),()),
		"TextFileThousandsSeparator": ((1871, LCID, 4, 0),()),
		"TextFileTrailingMinusNumbers": ((2164, LCID, 4, 0),()),
		"TextFileVisualLayout": ((2245, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITextFrame(DispatchBaseClass):
	CLSID = IID('{0002443D-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoMargins": (1749, 2, (3, 0), ((16395, 10),), "AutoMargins", None),
		"AutoSize": (614, 2, (3, 0), ((16395, 10),), "AutoSize", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"HorizontalAlignment": (136, 2, (3, 0), ((16387, 10),), "HorizontalAlignment", None),
		"HorizontalOverflow": (2923, 2, (3, 0), ((16387, 10),), "HorizontalOverflow", None),
		"MarginBottom": (1745, 2, (3, 0), ((16388, 10),), "MarginBottom", None),
		"MarginLeft": (1746, 2, (3, 0), ((16388, 10),), "MarginLeft", None),
		"MarginRight": (1747, 2, (3, 0), ((16388, 10),), "MarginRight", None),
		"MarginTop": (1748, 2, (3, 0), ((16388, 10),), "MarginTop", None),
		"Orientation": (134, 2, (3, 0), ((16387, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
		"VerticalAlignment": (137, 2, (3, 0), ((16387, 10),), "VerticalAlignment", None),
		"VerticalOverflow": (2922, 2, (3, 0), ((16387, 10),), "VerticalOverflow", None),
	}
	_prop_map_put_ = {
		"AutoMargins": ((1749, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"HorizontalOverflow": ((2923, LCID, 4, 0),()),
		"MarginBottom": ((1745, LCID, 4, 0),()),
		"MarginLeft": ((1746, LCID, 4, 0),()),
		"MarginRight": ((1747, LCID, 4, 0),()),
		"MarginTop": ((1748, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"VerticalOverflow": ((2922, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITickLabels(DispatchBaseClass):
	CLSID = IID('{000208C9-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Alignment": (453, 2, (3, 0), ((16387, 10),), "Alignment", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoScaleFont": (1525, 2, (3, 0), ((16396, 10),), "AutoScaleFont", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Depth": (1890, 2, (3, 0), ((16387, 10),), "Depth", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"MultiLevel": (2653, 2, (3, 0), ((16395, 10),), "MultiLevel", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"NumberFormat": (193, 2, (3, 0), ((16392, 10),), "NumberFormat", None),
		"NumberFormatLinked": (194, 2, (3, 0), ((16395, 10),), "NumberFormatLinked", None),
		"NumberFormatLocal": (1097, 2, (3, 0), ((16396, 10),), "NumberFormatLocal", None),
		"Offset": (254, 2, (3, 0), ((16387, 10),), "Offset", None),
		"Orientation": (134, 2, (3, 0), ((16387, 10),), "Orientation", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ReadingOrder": (975, 2, (3, 0), ((16387, 10),), "ReadingOrder", None),
	}
	_prop_map_put_ = {
		"Alignment": ((453, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"MultiLevel": ((2653, LCID, 4, 0),()),
		"NumberFormat": ((193, LCID, 4, 0),()),
		"NumberFormatLinked": ((194, LCID, 4, 0),()),
		"NumberFormatLocal": ((1097, LCID, 4, 0),()),
		"Offset": ((254, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITimelineState(DispatchBaseClass):
	CLSID = IID('{000244DF-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"EndDate": (3134, 2, (3, 0), ((16396, 10),), "EndDate", None),
		"FilterType": (2686, 2, (3, 0), ((16387, 10),), "FilterType", None),
		"FilterValue1": (3135, 2, (3, 0), ((16396, 10),), "FilterValue1", None),
		"FilterValue2": (3136, 2, (3, 0), ((16396, 10),), "FilterValue2", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"SingleRangeFilterState": (3137, 2, (3, 0), ((16395, 10),), "SingleRangeFilterState", None),
		"StartDate": (3133, 2, (3, 0), ((16396, 10),), "StartDate", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITimelineViewState(DispatchBaseClass):
	CLSID = IID('{000244E0-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Level": (2980, 2, (3, 0), ((16387, 10),), "Level", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ShowHeader": (3139, 2, (3, 0), ((16395, 10),), "ShowHeader", None),
		"ShowHorizontalScrollbar": (3142, 2, (3, 0), ((16395, 10),), "ShowHorizontalScrollbar", None),
		"ShowSelectionLabel": (3140, 2, (3, 0), ((16395, 10),), "ShowSelectionLabel", None),
		"ShowTimeLevel": (3141, 2, (3, 0), ((16395, 10),), "ShowTimeLevel", None),
	}
	_prop_map_put_ = {
		"Level": ((2980, LCID, 4, 0),()),
		"ShowHeader": ((3139, LCID, 4, 0),()),
		"ShowHorizontalScrollbar": ((3142, LCID, 4, 0),()),
		"ShowSelectionLabel": ((3140, LCID, 4, 0),()),
		"ShowTimeLevel": ((3141, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IToolbar(DispatchBaseClass):
	CLSID = IID('{0002085C-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"BuiltIn": (553, 2, (3, 0), ((16395, 10),), "BuiltIn", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Height": (123, 2, (3, 0), ((16387, 10),), "Height", None),
		"Left": (127, 2, (3, 0), ((16387, 10),), "Left", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Position": (133, 2, (3, 0), ((16387, 10),), "Position", None),
		"Protection": (176, 2, (3, 0), ((16387, 10),), "Protection", None),
		"ToolbarButtons": (964, 2, (3, 0), ((16393, 10),), "ToolbarButtons", None),
		"Top": (126, 2, (3, 0), ((16387, 10),), "Top", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (122, 2, (3, 0), ((16387, 10),), "Width", None),
	}
	_prop_map_put_ = {
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"Protection": ((176, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IToolbarButton(DispatchBaseClass):
	CLSID = IID('{0002085E-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"BuiltIn": (553, 2, (3, 0), ((16395, 10),), "BuiltIn", None),
		"BuiltInFace": (554, 2, (3, 0), ((16395, 10),), "BuiltInFace", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (600, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"HelpContextID": (355, 2, (3, 0), ((16387, 10),), "HelpContextID", None),
		"HelpFile": (360, 2, (3, 0), ((16392, 10),), "HelpFile", None),
		"ID": (570, 2, (3, 0), ((16387, 10),), "ID", None),
		"IsGap": (561, 2, (3, 0), ((16395, 10),), "IsGap", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"OnAction": (596, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Pushed": (560, 2, (3, 0), ((16395, 10),), "Pushed", None),
		"StatusBar": (386, 2, (3, 0), ((16392, 10),), "StatusBar", None),
		"Width": (122, 2, (3, 0), ((16387, 10),), "Width", None),
	}
	_prop_map_put_ = {
		"BuiltInFace": ((554, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"HelpContextID": ((355, LCID, 4, 0),()),
		"HelpFile": ((360, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Pushed": ((560, LCID, 4, 0),()),
		"StatusBar": ((386, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IToolbarButtons(DispatchBaseClass):
	CLSID = IID('{0002085F-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IToolbars(DispatchBaseClass):
	CLSID = IID('{0002085D-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ITop10(DispatchBaseClass):
	CLSID = IID('{0002449D-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AppliesTo": (2626, 2, (3, 0), ((16393, 10),), "AppliesTo", None),
		"Borders": (435, 2, (3, 0), ((16393, 10),), "Borders", None),
		"CalcFor": (2730, 2, (3, 0), ((16387, 10),), "CalcFor", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"NumberFormat": (193, 2, (3, 0), ((16396, 10),), "NumberFormat", None),
		"PTCondition": (2631, 2, (3, 0), ((16395, 10),), "PTCondition", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Percent": (2729, 2, (3, 0), ((16395, 10),), "Percent", None),
		"Priority": (985, 2, (3, 0), ((16387, 10),), "Priority", None),
		"Rank": (1290, 2, (3, 0), ((16387, 10),), "Rank", None),
		"ScopeType": (2615, 2, (3, 0), ((16387, 10),), "ScopeType", None),
		"StopIfTrue": (2625, 2, (3, 0), ((16395, 10),), "StopIfTrue", None),
		"TopBottom": (2728, 2, (3, 0), ((16387, 10),), "TopBottom", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
	}
	_prop_map_put_ = {
		"CalcFor": ((2730, LCID, 4, 0),()),
		"NumberFormat": ((193, LCID, 4, 0),()),
		"Percent": ((2729, LCID, 4, 0),()),
		"Priority": ((985, LCID, 4, 0),()),
		"Rank": ((1290, LCID, 4, 0),()),
		"ScopeType": ((2615, LCID, 4, 0),()),
		"StopIfTrue": ((2625, LCID, 4, 0),()),
		"TopBottom": ((2728, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITrendline(DispatchBaseClass):
	CLSID = IID('{000208BE-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Backward": (185, 2, (3, 0), ((16387, 10),), "Backward", None),
		"Backward2": (2650, 2, (3, 0), ((16389, 10),), "Backward2", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DataLabel": (158, 2, (3, 0), ((16393, 10),), "DataLabel", None),
		"DisplayEquation": (190, 2, (3, 0), ((16395, 10),), "DisplayEquation", None),
		"DisplayRSquared": (189, 2, (3, 0), ((16395, 10),), "DisplayRSquared", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Forward": (191, 2, (3, 0), ((16387, 10),), "Forward", None),
		"Forward2": (2651, 2, (3, 0), ((16389, 10),), "Forward2", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Intercept": (186, 2, (3, 0), ((16389, 10),), "Intercept", None),
		"InterceptIsAuto": (187, 2, (3, 0), ((16395, 10),), "InterceptIsAuto", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"NameIsAuto": (188, 2, (3, 0), ((16395, 10),), "NameIsAuto", None),
		"Order": (192, 2, (3, 0), ((16387, 10),), "Order", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Period": (184, 2, (3, 0), ((16387, 10),), "Period", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
	}
	_prop_map_put_ = {
		"Backward": ((185, LCID, 4, 0),()),
		"Backward2": ((2650, LCID, 4, 0),()),
		"DisplayEquation": ((190, LCID, 4, 0),()),
		"DisplayRSquared": ((189, LCID, 4, 0),()),
		"Forward": ((191, LCID, 4, 0),()),
		"Forward2": ((2651, LCID, 4, 0),()),
		"Intercept": ((186, LCID, 4, 0),()),
		"InterceptIsAuto": ((187, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"NameIsAuto": ((188, LCID, 4, 0),()),
		"Order": ((192, LCID, 4, 0),()),
		"Period": ((184, LCID, 4, 0),()),
		"Type": ((108, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITrendlines(DispatchBaseClass):
	CLSID = IID('{000208BD-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IUniqueValues(DispatchBaseClass):
	CLSID = IID('{0002449F-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AppliesTo": (2626, 2, (3, 0), ((16393, 10),), "AppliesTo", None),
		"Borders": (435, 2, (3, 0), ((16393, 10),), "Borders", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DupeUnique": (2733, 2, (3, 0), ((16387, 10),), "DupeUnique", None),
		"Font": (146, 2, (3, 0), ((16393, 10),), "Font", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"NumberFormat": (193, 2, (3, 0), ((16396, 10),), "NumberFormat", None),
		"PTCondition": (2631, 2, (3, 0), ((16395, 10),), "PTCondition", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Priority": (985, 2, (3, 0), ((16387, 10),), "Priority", None),
		"ScopeType": (2615, 2, (3, 0), ((16387, 10),), "ScopeType", None),
		"StopIfTrue": (2625, 2, (3, 0), ((16395, 10),), "StopIfTrue", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
	}
	_prop_map_put_ = {
		"DupeUnique": ((2733, LCID, 4, 0),()),
		"NumberFormat": ((193, LCID, 4, 0),()),
		"Priority": ((985, LCID, 4, 0),()),
		"ScopeType": ((2615, LCID, 4, 0),()),
		"StopIfTrue": ((2625, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IUpBars(DispatchBaseClass):
	CLSID = IID('{000208C5-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Fill": (1663, 2, (3, 0), ((16393, 10),), "Fill", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IUsedObjects(DispatchBaseClass):
	CLSID = IID('{00024451-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IUserAccess(DispatchBaseClass):
	CLSID = IID('{0002446D-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AllowEdit": (2020, 2, (3, 0), ((16395, 10),), "AllowEdit", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
	}
	_prop_map_put_ = {
		"AllowEdit": ((2020, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IUserAccessList(DispatchBaseClass):
	CLSID = IID('{0002446C-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IVPageBreak(DispatchBaseClass):
	CLSID = IID('{00024402-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Extent": (1422, 2, (3, 0), ((16387, 10),), "Extent", None),
		"Location": (1397, 2, (3, 0), ((16393, 10),), "Location", None),
		"Parent": (150, 2, (3, 0), ((16397, 10),), "Parent", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
	}
	_prop_map_put_ = {
		"Location": ((1397, LCID, 8, 0),()),
		"Type": ((108, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVPageBreaks(DispatchBaseClass):
	CLSID = IID('{00024405-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IValidation(DispatchBaseClass):
	CLSID = IID('{0002442F-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AlertStyle": (1605, 2, (3, 0), ((16387, 10),), "AlertStyle", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"ErrorMessage": (1609, 2, (3, 0), ((16392, 10),), "ErrorMessage", None),
		"ErrorTitle": (1610, 2, (3, 0), ((16392, 10),), "ErrorTitle", None),
		"Formula1": (1579, 2, (3, 0), ((16392, 10),), "Formula1", None),
		"Formula2": (1580, 2, (3, 0), ((16392, 10),), "Formula2", None),
		"IMEMode": (1607, 2, (3, 0), ((16387, 10),), "IMEMode", None),
		"IgnoreBlank": (1606, 2, (3, 0), ((16395, 10),), "IgnoreBlank", None),
		"InCellDropdown": (1608, 2, (3, 0), ((16395, 10),), "InCellDropdown", None),
		"InputMessage": (1611, 2, (3, 0), ((16392, 10),), "InputMessage", None),
		"InputTitle": (1612, 2, (3, 0), ((16392, 10),), "InputTitle", None),
		"Operator": (797, 2, (3, 0), ((16387, 10),), "Operator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"ShowError": (1613, 2, (3, 0), ((16395, 10),), "ShowError", None),
		"ShowInput": (1614, 2, (3, 0), ((16395, 10),), "ShowInput", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
		"Value": (6, 2, (3, 0), ((16395, 10),), "Value", None),
	}
	_prop_map_put_ = {
		"ErrorMessage": ((1609, LCID, 4, 0),()),
		"ErrorTitle": ((1610, LCID, 4, 0),()),
		"IMEMode": ((1607, LCID, 4, 0),()),
		"IgnoreBlank": ((1606, LCID, 4, 0),()),
		"InCellDropdown": ((1608, LCID, 4, 0),()),
		"InputMessage": ((1611, LCID, 4, 0),()),
		"InputTitle": ((1612, LCID, 4, 0),()),
		"ShowError": ((1613, LCID, 4, 0),()),
		"ShowInput": ((1614, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16395, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IValueChange(DispatchBaseClass):
	CLSID = IID('{000244C0-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AllocationMethod": (2875, 2, (3, 0), ((16387, 10),), "AllocationMethod", None),
		"AllocationValue": (2874, 2, (3, 0), ((16387, 10),), "AllocationValue", None),
		"AllocationWeightExpression": (2876, 2, (3, 0), ((16392, 10),), "AllocationWeightExpression", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Order": (192, 2, (3, 0), ((16387, 10),), "Order", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PivotCell": (2013, 2, (3, 0), ((16393, 10),), "PivotCell", None),
		"Tuple": (2972, 2, (3, 0), ((16392, 10),), "Tuple", None),
		"Value": (6, 2, (3, 0), ((16389, 10),), "Value", None),
		"VisibleInPivotTable": (2971, 2, (3, 0), ((16395, 10),), "VisibleInPivotTable", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16389, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IWalls(DispatchBaseClass):
	CLSID = IID('{000208C8-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Border": (128, 2, (3, 0), ((16393, 10),), "Border", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Fill": (1663, 2, (3, 0), ((16393, 10),), "Fill", None),
		"Format": (116, 2, (3, 0), ((16393, 10),), "Format", None),
		"Interior": (129, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PictureType": (161, 2, (3, 0), ((16396, 10),), "PictureType", None),
		"PictureUnit": (162, 2, (3, 0), ((16396, 10),), "PictureUnit", None),
		"Thickness": (2652, 2, (3, 0), ((16387, 10),), "Thickness", None),
	}
	_prop_map_put_ = {
		"PictureType": ((161, LCID, 4, 0),()),
		"PictureUnit": ((162, LCID, 4, 0),()),
		"Thickness": ((2652, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IWatch(DispatchBaseClass):
	CLSID = IID('{00024457-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Source": (222, 2, (3, 0), ((16396, 10),), "Source", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IWatches(DispatchBaseClass):
	CLSID = IID('{00024456-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IWindow(DispatchBaseClass):
	CLSID = IID('{00020893-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"ActiveCell": (305, 2, (3, 0), ((16393, 10),), "ActiveCell", None),
		"ActiveChart": (183, 2, (3, 0), ((16397, 10),), "ActiveChart", None),
		"ActivePane": (642, 2, (3, 0), ((16393, 10),), "ActivePane", None),
		"ActiveSheet": (307, 2, (3, 0), ((16393, 10),), "ActiveSheet", None),
		"ActiveSheetView": (2369, 2, (3, 0), ((16393, 10),), "ActiveSheetView", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoFilterDateGrouping": (2371, 2, (3, 0), ((16395, 10),), "AutoFilterDateGrouping", None),
		"Caption": (139, 2, (3, 0), ((16396, 10),), "Caption", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DisplayFormulas": (644, 2, (3, 0), ((16395, 10),), "DisplayFormulas", None),
		"DisplayGridlines": (645, 2, (3, 0), ((16395, 10),), "DisplayGridlines", None),
		"DisplayHeadings": (646, 2, (3, 0), ((16395, 10),), "DisplayHeadings", None),
		"DisplayHorizontalScrollBar": (921, 2, (3, 0), ((16395, 10),), "DisplayHorizontalScrollBar", None),
		"DisplayOutline": (647, 2, (3, 0), ((16395, 10),), "DisplayOutline", None),
		"DisplayRightToLeft": (1774, 2, (3, 0), ((16395, 10),), "DisplayRightToLeft", None),
		"DisplayRuler": (2370, 2, (3, 0), ((16395, 10),), "DisplayRuler", None),
		"DisplayVerticalScrollBar": (922, 2, (3, 0), ((16395, 10),), "DisplayVerticalScrollBar", None),
		"DisplayWhitespace": (2372, 2, (3, 0), ((16395, 10),), "DisplayWhitespace", None),
		"DisplayWorkbookTabs": (923, 2, (3, 0), ((16395, 10),), "DisplayWorkbookTabs", None),
		"DisplayZeros": (649, 2, (3, 0), ((16395, 10),), "DisplayZeros", None),
		"EnableResize": (1192, 2, (3, 0), ((16395, 10),), "EnableResize", None),
		"FreezePanes": (650, 2, (3, 0), ((16395, 10),), "FreezePanes", None),
		"GridlineColor": (651, 2, (3, 0), ((16387, 10),), "GridlineColor", None),
		"GridlineColorIndex": (652, 2, (3, 0), ((16387, 10),), "GridlineColorIndex", None),
		"Height": (123, 2, (3, 0), ((16389, 10),), "Height", None),
		"Hwnd": (1950, 2, (3, 0), ((16387, 10),), "Hwnd", None),
		"Index": (486, 2, (3, 0), ((16387, 10),), "Index", None),
		"Left": (127, 2, (3, 0), ((16389, 10),), "Left", None),
		"OnWindow": (623, 2, (3, 0), ((16392, 10),), "OnWindow", None),
		"Panes": (653, 2, (3, 0), ((16393, 10),), "Panes", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"RangeSelection": (1189, 2, (3, 0), ((16393, 10),), "RangeSelection", None),
		"ScrollColumn": (654, 2, (3, 0), ((16387, 10),), "ScrollColumn", None),
		"ScrollRow": (655, 2, (3, 0), ((16387, 10),), "ScrollRow", None),
		"SelectedSheets": (656, 2, (3, 0), ((16393, 10),), "SelectedSheets", None),
		"Selection": (147, 2, (3, 0), ((16393, 10),), "Selection", None),
		"SheetViews": (2368, 2, (3, 0), ((16393, 10),), "SheetViews", None),
		"Split": (657, 2, (3, 0), ((16395, 10),), "Split", None),
		"SplitColumn": (658, 2, (3, 0), ((16387, 10),), "SplitColumn", None),
		"SplitHorizontal": (659, 2, (3, 0), ((16389, 10),), "SplitHorizontal", None),
		"SplitRow": (660, 2, (3, 0), ((16387, 10),), "SplitRow", None),
		"SplitVertical": (661, 2, (3, 0), ((16389, 10),), "SplitVertical", None),
		"TabRatio": (673, 2, (3, 0), ((16389, 10),), "TabRatio", None),
		"Top": (126, 2, (3, 0), ((16389, 10),), "Top", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
		"UsableHeight": (389, 2, (3, 0), ((16389, 10),), "UsableHeight", None),
		"UsableWidth": (390, 2, (3, 0), ((16389, 10),), "UsableWidth", None),
		"View": (1194, 2, (3, 0), ((16387, 10),), "View", None),
		"Visible": (558, 2, (3, 0), ((16395, 10),), "Visible", None),
		"VisibleRange": (1118, 2, (3, 0), ((16393, 10),), "VisibleRange", None),
		"Width": (122, 2, (3, 0), ((16389, 10),), "Width", None),
		"WindowNumber": (1119, 2, (3, 0), ((16387, 10),), "WindowNumber", None),
		"WindowState": (396, 2, (3, 0), ((16387, 10),), "WindowState", None),
		"Zoom": (663, 2, (3, 0), ((16396, 10),), "Zoom", None),
		"_DisplayRightToLeft": (648, 2, (3, 0), ((16395, 10),), "_DisplayRightToLeft", None),
	}
	_prop_map_put_ = {
		"AutoFilterDateGrouping": ((2371, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"DisplayFormulas": ((644, LCID, 4, 0),()),
		"DisplayGridlines": ((645, LCID, 4, 0),()),
		"DisplayHeadings": ((646, LCID, 4, 0),()),
		"DisplayHorizontalScrollBar": ((921, LCID, 4, 0),()),
		"DisplayOutline": ((647, LCID, 4, 0),()),
		"DisplayRightToLeft": ((1774, LCID, 4, 0),()),
		"DisplayRuler": ((2370, LCID, 4, 0),()),
		"DisplayVerticalScrollBar": ((922, LCID, 4, 0),()),
		"DisplayWhitespace": ((2372, LCID, 4, 0),()),
		"DisplayWorkbookTabs": ((923, LCID, 4, 0),()),
		"DisplayZeros": ((649, LCID, 4, 0),()),
		"EnableResize": ((1192, LCID, 4, 0),()),
		"FreezePanes": ((650, LCID, 4, 0),()),
		"GridlineColor": ((651, LCID, 4, 0),()),
		"GridlineColorIndex": ((652, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"OnWindow": ((623, LCID, 4, 0),()),
		"ScrollColumn": ((654, LCID, 4, 0),()),
		"ScrollRow": ((655, LCID, 4, 0),()),
		"Split": ((657, LCID, 4, 0),()),
		"SplitColumn": ((658, LCID, 4, 0),()),
		"SplitHorizontal": ((659, LCID, 4, 0),()),
		"SplitRow": ((660, LCID, 4, 0),()),
		"SplitVertical": ((661, LCID, 4, 0),()),
		"TabRatio": ((673, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"View": ((1194, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"WindowState": ((396, LCID, 4, 0),()),
		"Zoom": ((663, LCID, 4, 0),()),
		"_DisplayRightToLeft": ((648, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IWindows(DispatchBaseClass):
	CLSID = IID('{00020892-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"SyncScrollingSideBySide": (2249, 2, (3, 0), ((16395, 10),), "SyncScrollingSideBySide", None),
	}
	_prop_map_put_ = {
		"SyncScrollingSideBySide": ((2249, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IWorkbookConnection(DispatchBaseClass):
	CLSID = IID('{00024485-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DataFeedConnection": (3104, 2, (3, 0), ((16393, 10),), "DataFeedConnection", None),
		"Description": (218, 2, (3, 0), ((16392, 10),), "Description", None),
		"InModel": (3105, 2, (3, 0), ((16395, 10),), "InModel", None),
		"ModelConnection": (3100, 2, (3, 0), ((16393, 10),), "ModelConnection", None),
		"ModelTables": (3106, 2, (3, 0), ((16393, 10),), "ModelTables", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"ODBCConnection": (2698, 2, (3, 0), ((16393, 10),), "ODBCConnection", None),
		"OLEDBConnection": (2697, 2, (3, 0), ((16393, 10),), "OLEDBConnection", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Ranges": (2699, 2, (3, 0), ((16393, 10),), "Ranges", None),
		"RefreshWithRefreshAll": (3102, 2, (3, 0), ((16395, 10),), "RefreshWithRefreshAll", None),
		"TextConnection": (3103, 2, (3, 0), ((16393, 10),), "TextConnection", None),
		"Type": (108, 2, (3, 0), ((16387, 10),), "Type", None),
		"WorksheetDataConnection": (3101, 2, (3, 0), ((16393, 10),), "WorksheetDataConnection", None),
		"_Default": (0, 2, (3, 0), ((16392, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"Description": ((218, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"RefreshWithRefreshAll": ((3102, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), ((16392, 10),), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IWorkbookEvents(DispatchBaseClass):
	CLSID = IID('{00024412-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IWorkbookQuery(DispatchBaseClass):
	CLSID = IID('{000244EB-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Description": (218, 2, (3, 0), ((16392, 10),), "Description", None),
		"Formula": (261, 2, (3, 0), ((16392, 10),), "Formula", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"_Default": (0, 2, (3, 0), ((16392, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"Description": ((218, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), ((16392, 10),), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IWorksheetDataConnection(DispatchBaseClass):
	CLSID = IID('{000244D2-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"CommandText": (1829, 2, (3, 0), ((16396, 10),), "CommandText", None),
		"CommandType": (1830, 2, (3, 0), ((16387, 10),), "CommandType", None),
		"Connection": (1432, 2, (3, 0), ((16396, 10),), "Connection", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
		"CommandText": ((1829, LCID, 4, 0),()),
		"CommandType": ((1830, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IWorksheetFunction(DispatchBaseClass):
	CLSID = IID('{00020845-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IWorksheetView(DispatchBaseClass):
	CLSID = IID('{00024487-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DisplayFormulas": (644, 2, (3, 0), ((16395, 10),), "DisplayFormulas", None),
		"DisplayGridlines": (645, 2, (3, 0), ((16395, 10),), "DisplayGridlines", None),
		"DisplayHeadings": (646, 2, (3, 0), ((16395, 10),), "DisplayHeadings", None),
		"DisplayOutline": (647, 2, (3, 0), ((16395, 10),), "DisplayOutline", None),
		"DisplayZeros": (649, 2, (3, 0), ((16395, 10),), "DisplayZeros", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Sheet": (751, 2, (3, 0), ((16393, 10),), "Sheet", None),
	}
	_prop_map_put_ = {
		"DisplayFormulas": ((644, LCID, 4, 0),()),
		"DisplayGridlines": ((645, LCID, 4, 0),()),
		"DisplayHeadings": ((646, LCID, 4, 0),()),
		"DisplayOutline": ((647, LCID, 4, 0),()),
		"DisplayZeros": ((649, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IWorksheets(DispatchBaseClass):
	CLSID = IID('{000208B1-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"HPageBreaks": (1418, 2, (3, 0), ((16393, 10),), "HPageBreaks", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"VPageBreaks": (1419, 2, (3, 0), ((16393, 10),), "VPageBreaks", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IXPath(DispatchBaseClass):
	CLSID = IID('{0002447E-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Map": (2262, 2, (3, 0), ((16393, 10),), "Map", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Repeating": (2360, 2, (3, 0), ((16395, 10),), "Repeating", None),
		"Value": (6, 2, (3, 0), ((16392, 10),), "Value", None),
		"_Default": (0, 2, (3, 0), ((16392, 10),), "_Default", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16392, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IXmlDataBinding(DispatchBaseClass):
	CLSID = IID('{00024478-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"SourceUrl": (2331, 2, (3, 0), ((16392, 10),), "SourceUrl", None),
		"_Default": (0, 2, (3, 0), ((16392, 10),), "_Default", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), ((16392, 10),), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IXmlMap(DispatchBaseClass):
	CLSID = IID('{0002447B-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AdjustColumnWidth": (1868, 2, (3, 0), ((16395, 10),), "AdjustColumnWidth", None),
		"AppendOnImport": (2339, 2, (3, 0), ((16395, 10),), "AppendOnImport", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"DataBinding": (2343, 2, (3, 0), ((16393, 10),), "DataBinding", None),
		"IsExportable": (2334, 2, (3, 0), ((16395, 10),), "IsExportable", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PreserveColumnFilter": (2337, 2, (3, 0), ((16395, 10),), "PreserveColumnFilter", None),
		"PreserveNumberFormatting": (2338, 2, (3, 0), ((16395, 10),), "PreserveNumberFormatting", None),
		"RootElementName": (2340, 2, (3, 0), ((16392, 10),), "RootElementName", None),
		"RootElementNamespace": (2341, 2, (3, 0), ((16393, 10),), "RootElementNamespace", None),
		"SaveDataSourceDefinition": (2336, 2, (3, 0), ((16395, 10),), "SaveDataSourceDefinition", None),
		"Schemas": (2342, 2, (3, 0), ((16393, 10),), "Schemas", None),
		"ShowImportExportValidationErrors": (2335, 2, (3, 0), ((16395, 10),), "ShowImportExportValidationErrors", None),
		"WorkbookConnection": (2544, 2, (3, 0), ((16393, 10),), "WorkbookConnection", None),
		"_Default": (0, 2, (3, 0), ((16392, 10),), "_Default", None),
	}
	_prop_map_put_ = {
		"AdjustColumnWidth": ((1868, LCID, 4, 0),()),
		"AppendOnImport": ((2339, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"PreserveColumnFilter": ((2337, LCID, 4, 0),()),
		"PreserveNumberFormatting": ((2338, LCID, 4, 0),()),
		"SaveDataSourceDefinition": ((2336, LCID, 4, 0),()),
		"ShowImportExportValidationErrors": ((2335, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), ((16392, 10),), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IXmlMaps(DispatchBaseClass):
	CLSID = IID('{0002447C-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IXmlNamespace(DispatchBaseClass):
	CLSID = IID('{00024476-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Prefix": (2326, 2, (3, 0), ((16392, 10),), "Prefix", None),
		"Uri": (2325, 2, (3, 0), ((16392, 10),), "Uri", None),
		"_Default": (0, 2, (3, 0), ((16392, 10),), "_Default", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), ((16392, 10),), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IXmlNamespaces(DispatchBaseClass):
	CLSID = IID('{00024477-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Value": (6, 2, (3, 0), ((16392, 10),), "Value", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), ((16392, 10),), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IXmlSchema(DispatchBaseClass):
	CLSID = IID('{00024479-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Namespace": (2332, 2, (3, 0), ((16393, 10),), "Namespace", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"XML": (2333, 2, (3, 0), ((16392, 10),), "XML", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IXmlSchemas(DispatchBaseClass):
	CLSID = IID('{0002447A-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"Count": (118, 2, (3, 0), ((16387, 10),), "Count", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), ((16387, 10),), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Icon(DispatchBaseClass):
	CLSID = IID('{0002449A-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		# Method 'Parent' returns object of type 'IconSet'
		"Parent": (150, 2, (9, 0), (), "Parent", '{0002449B-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IconCriteria(DispatchBaseClass):
	CLSID = IID('{00024498-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type IconCriterion
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024499-0000-0000-C000-000000000046}')
		return ret

	# Result is of type IconCriterion
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024499-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		"Count": (118, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024499-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024499-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00024499-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IconCriterion(DispatchBaseClass):
	CLSID = IID('{00024499-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Icon": (2747, 2, (3, 0), (), "Icon", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"Operator": (797, 2, (3, 0), (), "Operator", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
	}
	_prop_map_put_ = {
		"Icon": ((2747, LCID, 4, 0),()),
		"Operator": ((797, LCID, 4, 0),()),
		"Type": ((108, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IconSet(DispatchBaseClass):
	CLSID = IID('{0002449B-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Icon
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0002449A-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Icon
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{0002449A-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"ID": (570, 2, (3, 0), (), "ID", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0002449A-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0002449A-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{0002449A-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class IconSetCondition(DispatchBaseClass):
	CLSID = IID('{00024497-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def ModifyAppliesToRange(self, Range=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2627, LCID, 1, (24, 0), ((9, 1),),Range
			)

	def SetFirstPriority(self):
		return self._oleobj_.InvokeTypes(2629, LCID, 1, (24, 0), (),)

	def SetLastPriority(self):
		return self._oleobj_.InvokeTypes(2630, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'AppliesTo' returns object of type 'Range'
		"AppliesTo": (2626, 2, (9, 0), (), "AppliesTo", '{00020846-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		# Method 'IconCriteria' returns object of type 'IconCriteria'
		"IconCriteria": (2727, 2, (9, 0), (), "IconCriteria", '{00024498-0000-0000-C000-000000000046}'),
		"IconSet": (2726, 2, (12, 0), (), "IconSet", None),
		"PTCondition": (2631, 2, (11, 0), (), "PTCondition", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PercentileValues": (2724, 2, (11, 0), (), "PercentileValues", None),
		"Priority": (985, 2, (3, 0), (), "Priority", None),
		"ReverseOrder": (2723, 2, (11, 0), (), "ReverseOrder", None),
		"ScopeType": (2615, 2, (3, 0), (), "ScopeType", None),
		"ShowIconOnly": (2725, 2, (11, 0), (), "ShowIconOnly", None),
		"StopIfTrue": (2625, 2, (11, 0), (), "StopIfTrue", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Formula": ((261, LCID, 4, 0),()),
		"IconSet": ((2726, LCID, 4, 0),()),
		"PercentileValues": ((2724, LCID, 4, 0),()),
		"Priority": ((985, LCID, 4, 0),()),
		"ReverseOrder": ((2723, LCID, 4, 0),()),
		"ScopeType": ((2615, LCID, 4, 0),()),
		"ShowIconOnly": ((2725, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IconSets(DispatchBaseClass):
	CLSID = IID('{0002449C-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', None)
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', None)
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Interior(DispatchBaseClass):
	CLSID = IID('{00020870-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Color": (99, 2, (12, 0), (), "Color", None),
		"ColorIndex": (97, 2, (12, 0), (), "ColorIndex", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Gradient": (2645, 2, (9, 0), (), "Gradient", None),
		"InvertIfNegative": (132, 2, (12, 0), (), "InvertIfNegative", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Pattern": (95, 2, (12, 0), (), "Pattern", None),
		"PatternColor": (100, 2, (12, 0), (), "PatternColor", None),
		"PatternColorIndex": (98, 2, (12, 0), (), "PatternColorIndex", None),
		"PatternThemeColor": (2643, 2, (12, 0), (), "PatternThemeColor", None),
		"PatternTintAndShade": (2644, 2, (12, 0), (), "PatternTintAndShade", None),
		"ThemeColor": (2365, 2, (12, 0), (), "ThemeColor", None),
		"TintAndShade": (2366, 2, (12, 0), (), "TintAndShade", None),
	}
	_prop_map_put_ = {
		"Color": ((99, LCID, 4, 0),()),
		"ColorIndex": ((97, LCID, 4, 0),()),
		"InvertIfNegative": ((132, LCID, 4, 0),()),
		"Pattern": ((95, LCID, 4, 0),()),
		"PatternColor": ((100, LCID, 4, 0),()),
		"PatternColorIndex": ((98, LCID, 4, 0),()),
		"PatternThemeColor": ((2643, LCID, 4, 0),()),
		"PatternTintAndShade": ((2644, LCID, 4, 0),()),
		"ThemeColor": ((2365, LCID, 4, 0),()),
		"TintAndShade": ((2366, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Label(DispatchBaseClass):
	CLSID = IID('{00020890-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		"Accelerator": (846, 2, (12, 0), (), "Accelerator", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'BottomRightCell' returns object of type 'Range'
		"BottomRightCell": (615, 2, (9, 0), (), "BottomRightCell", '{00020846-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (12, 0), (), "PhoneticAccelerator", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		# Method 'TopLeftCell' returns object of type 'Range'
		"TopLeftCell": (620, 2, (9, 0), (), "TopLeftCell", '{00020846-0000-0000-C000-000000000046}'),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Labels(DispatchBaseClass):
	CLSID = IID('{00020891-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Label
	def Add(self, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),Left
			, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00020890-0000-0000-C000-000000000046}')
		return ret

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	# Result is of type GroupObject
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00020898-0000-0000-C000-000000000046}')
		return ret

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		"Accelerator": (846, 2, (12, 0), (), "Accelerator", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (12, 0), (), "PhoneticAccelerator", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class LeaderLines(DispatchBaseClass):
	CLSID = IID('{00024437-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def Select(self):
		return self._oleobj_.InvokeTypes(235, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Legend(DispatchBaseClass):
	CLSID = IID('{000208CD-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Clear(self):
		return self._ApplyTypes_(111, 1, (12, 0), (), 'Clear', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def GetProperty(self, ID=defaultNamedNotOptArg):
		return self._ApplyTypes_(3256, 1, (12, 0), ((8, 1),), 'GetProperty', None,ID
			)

	def LegendEntries(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(173, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'LegendEntries', None)
		return ret

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	def SetProperty(self, ID=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3253, LCID, 1, (24, 0), ((8, 1), (12, 1)),ID
			, Value)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Fill' returns object of type 'ChartFillFormat'
		"Fill": (1663, 2, (9, 0), (), "Fill", '{00024435-0000-0000-C000-000000000046}'),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"IncludeInLayout": (2648, 2, (11, 0), (), "IncludeInLayout", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Position": (133, 2, (3, 0), (), "Position", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"IncludeInLayout": ((2648, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class LegendEntries(DispatchBaseClass):
	CLSID = IID('{000208BB-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type LegendEntry
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000208BA-0000-0000-C000-000000000046}')
		return ret

	# Result is of type LegendEntry
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000208BA-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000208BA-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000208BA-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{000208BA-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class LegendEntry(DispatchBaseClass):
	CLSID = IID('{000208BA-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		# Method 'LegendKey' returns object of type 'LegendKey'
		"LegendKey": (174, 2, (9, 0), (), "LegendKey", '{000208BC-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class LegendKey(DispatchBaseClass):
	CLSID = IID('{000208BC-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def ClearFormats(self):
		return self._ApplyTypes_(112, 1, (12, 0), (), 'ClearFormats', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Fill' returns object of type 'ChartFillFormat'
		"Fill": (1663, 2, (9, 0), (), "Fill", '{00024435-0000-0000-C000-000000000046}'),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"Height": (123, 2, (5, 0), (), "Height", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"InvertIfNegative": (132, 2, (11, 0), (), "InvertIfNegative", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"MarkerBackgroundColor": (73, 2, (3, 0), (), "MarkerBackgroundColor", None),
		"MarkerBackgroundColorIndex": (74, 2, (3, 0), (), "MarkerBackgroundColorIndex", None),
		"MarkerForegroundColor": (75, 2, (3, 0), (), "MarkerForegroundColor", None),
		"MarkerForegroundColorIndex": (76, 2, (3, 0), (), "MarkerForegroundColorIndex", None),
		"MarkerSize": (231, 2, (3, 0), (), "MarkerSize", None),
		"MarkerStyle": (72, 2, (3, 0), (), "MarkerStyle", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PictureType": (161, 2, (3, 0), (), "PictureType", None),
		"PictureUnit": (162, 2, (3, 0), (), "PictureUnit", None),
		"PictureUnit2": (2649, 2, (5, 0), (), "PictureUnit2", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		"Smooth": (163, 2, (11, 0), (), "Smooth", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"InvertIfNegative": ((132, LCID, 4, 0),()),
		"MarkerBackgroundColor": ((73, LCID, 4, 0),()),
		"MarkerBackgroundColorIndex": ((74, LCID, 4, 0),()),
		"MarkerForegroundColor": ((75, LCID, 4, 0),()),
		"MarkerForegroundColorIndex": ((76, LCID, 4, 0),()),
		"MarkerSize": ((231, LCID, 4, 0),()),
		"MarkerStyle": ((72, LCID, 4, 0),()),
		"PictureType": ((161, LCID, 4, 0),()),
		"PictureUnit": ((162, LCID, 4, 0),()),
		"PictureUnit2": ((2649, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Smooth": ((163, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Line(DispatchBaseClass):
	CLSID = IID('{0002089A-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"ArrowHeadLength": (611, 2, (12, 0), (), "ArrowHeadLength", None),
		"ArrowHeadStyle": (612, 2, (12, 0), (), "ArrowHeadStyle", None),
		"ArrowHeadWidth": (613, 2, (12, 0), (), "ArrowHeadWidth", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		# Method 'BottomRightCell' returns object of type 'Range'
		"BottomRightCell": (615, 2, (9, 0), (), "BottomRightCell", '{00020846-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Top": (126, 2, (5, 0), (), "Top", None),
		# Method 'TopLeftCell' returns object of type 'Range'
		"TopLeftCell": (620, 2, (9, 0), (), "TopLeftCell", '{00020846-0000-0000-C000-000000000046}'),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"ArrowHeadLength": ((611, LCID, 4, 0),()),
		"ArrowHeadStyle": ((612, LCID, 4, 0),()),
		"ArrowHeadWidth": ((613, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class LineFormat(DispatchBaseClass):
	CLSID = IID('{000C0317-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1610743808, 2, (9, 0), (), "Application", None),
		# Method 'BackColor' returns object of type 'ColorFormat'
		"BackColor": (100, 2, (9, 0), (), "BackColor", '{000C0312-0000-0000-C000-000000000046}'),
		"BeginArrowheadLength": (101, 2, (3, 0), (), "BeginArrowheadLength", None),
		"BeginArrowheadStyle": (102, 2, (3, 0), (), "BeginArrowheadStyle", None),
		"BeginArrowheadWidth": (103, 2, (3, 0), (), "BeginArrowheadWidth", None),
		"Creator": (1610743809, 2, (3, 0), (), "Creator", None),
		"DashStyle": (104, 2, (3, 0), (), "DashStyle", None),
		"EndArrowheadLength": (105, 2, (3, 0), (), "EndArrowheadLength", None),
		"EndArrowheadStyle": (106, 2, (3, 0), (), "EndArrowheadStyle", None),
		"EndArrowheadWidth": (107, 2, (3, 0), (), "EndArrowheadWidth", None),
		# Method 'ForeColor' returns object of type 'ColorFormat'
		"ForeColor": (108, 2, (9, 0), (), "ForeColor", '{000C0312-0000-0000-C000-000000000046}'),
		"InsetPen": (114, 2, (3, 0), (), "InsetPen", None),
		"Parent": (1, 2, (9, 0), (), "Parent", None),
		"Pattern": (109, 2, (3, 0), (), "Pattern", None),
		"Style": (110, 2, (3, 0), (), "Style", None),
		"Transparency": (111, 2, (4, 0), (), "Transparency", None),
		"Visible": (112, 2, (3, 0), (), "Visible", None),
		"Weight": (113, 2, (4, 0), (), "Weight", None),
	}
	_prop_map_put_ = {
		"BackColor": ((100, LCID, 4, 0),()),
		"BeginArrowheadLength": ((101, LCID, 4, 0),()),
		"BeginArrowheadStyle": ((102, LCID, 4, 0),()),
		"BeginArrowheadWidth": ((103, LCID, 4, 0),()),
		"DashStyle": ((104, LCID, 4, 0),()),
		"EndArrowheadLength": ((105, LCID, 4, 0),()),
		"EndArrowheadStyle": ((106, LCID, 4, 0),()),
		"EndArrowheadWidth": ((107, LCID, 4, 0),()),
		"ForeColor": ((108, LCID, 4, 0),()),
		"InsetPen": ((114, LCID, 4, 0),()),
		"Pattern": ((109, LCID, 4, 0),()),
		"Style": ((110, LCID, 4, 0),()),
		"Transparency": ((111, LCID, 4, 0),()),
		"Visible": ((112, LCID, 4, 0),()),
		"Weight": ((113, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class LinearGradient(DispatchBaseClass):
	CLSID = IID('{000244AF-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'ColorStops' returns object of type 'ColorStops'
		"ColorStops": (2761, 2, (9, 0), (), "ColorStops", '{000244AE-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Degree": (1623, 2, (5, 0), (), "Degree", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"Degree": ((1623, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Lines(DispatchBaseClass):
	CLSID = IID('{0002089B-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Line
	def Add(self, X1=defaultNamedNotOptArg, Y1=defaultNamedNotOptArg, X2=defaultNamedNotOptArg, Y2=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),X1
			, Y1, X2, Y2)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0002089A-0000-0000-C000-000000000046}')
		return ret

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type GroupObject
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00020898-0000-0000-C000-000000000046}')
		return ret

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"ArrowHeadLength": (611, 2, (12, 0), (), "ArrowHeadLength", None),
		"ArrowHeadStyle": (612, 2, (12, 0), (), "ArrowHeadStyle", None),
		"ArrowHeadWidth": (613, 2, (12, 0), (), "ArrowHeadWidth", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"ArrowHeadLength": ((611, LCID, 4, 0),()),
		"ArrowHeadStyle": ((612, LCID, 4, 0),()),
		"ArrowHeadWidth": ((613, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class LinkFormat(DispatchBaseClass):
	CLSID = IID('{00024442-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Update(self):
		return self._oleobj_.InvokeTypes(680, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoUpdate": (1048, 2, (11, 0), (), "AutoUpdate", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"AutoUpdate": ((1048, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ListBox(DispatchBaseClass):
	CLSID = IID('{00020887-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def AddItem(self, Text=defaultNamedNotOptArg, Index=defaultNamedOptArg):
		return self._ApplyTypes_(851, 1, (12, 0), ((12, 1), (12, 17)), 'AddItem', None,Text
			, Index)

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# The method GetList is actually a property, but must be used as a method to correctly pass the arguments
	def GetList(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(861, 2, (12, 0), ((12, 17),), 'GetList', None,Index
			)

	# The method GetSelected is actually a property, but must be used as a method to correctly pass the arguments
	def GetSelected(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(1123, 2, (12, 0), ((12, 17),), 'GetSelected', None,Index
			)

	def RemoveAllItems(self):
		return self._ApplyTypes_(853, 1, (12, 0), (), 'RemoveAllItems', None,)

	def RemoveItem(self, Index=defaultNamedNotOptArg, Count=defaultNamedOptArg):
		return self._ApplyTypes_(852, 1, (12, 0), ((3, 1), (12, 17)), 'RemoveItem', None,Index
			, Count)

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	# The method SetList is actually a property, but must be used as a method to correctly pass the arguments
	def SetList(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(861, LCID, 4, (24, 0), ((12, 17), (12, 1)),Index
			, arg1)

	# The method SetSelected is actually a property, but must be used as a method to correctly pass the arguments
	def SetSelected(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(1123, LCID, 4, (24, 0), ((12, 17), (12, 1)),Index
			, arg1)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'BottomRightCell' returns object of type 'Range'
		"BottomRightCell": (615, 2, (9, 0), (), "BottomRightCell", '{00020846-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Display3DShading": (1122, 2, (11, 0), (), "Display3DShading", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"LinkedCell": (1058, 2, (8, 0), (), "LinkedCell", None),
		"LinkedObject": (862, 2, (12, 0), (), "LinkedObject", None),
		"List": (861, 2, (12, 0), ((12, 17),), "List", None),
		"ListCount": (849, 2, (3, 0), (), "ListCount", None),
		"ListFillRange": (847, 2, (8, 0), (), "ListFillRange", None),
		"ListIndex": (850, 2, (3, 0), (), "ListIndex", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"MultiSelect": (32, 2, (3, 0), (), "MultiSelect", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"Selected": (1123, 2, (12, 0), ((12, 17),), "Selected", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Top": (126, 2, (5, 0), (), "Top", None),
		# Method 'TopLeftCell' returns object of type 'Range'
		"TopLeftCell": (620, 2, (9, 0), (), "TopLeftCell", '{00020846-0000-0000-C000-000000000046}'),
		"Value": (6, 2, (3, 0), (), "Value", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
		"_Default": (0, 2, (3, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"List": ((861, LCID, 4, 0),()),
		"ListFillRange": ((847, LCID, 4, 0),()),
		"ListIndex": ((850, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"MultiSelect": ((32, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Selected": ((1123, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ListBoxes(DispatchBaseClass):
	CLSID = IID('{00020888-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ListBox
	def Add(self, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),Left
			, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00020887-0000-0000-C000-000000000046}')
		return ret

	def AddItem(self, Text=defaultNamedNotOptArg, Index=defaultNamedOptArg):
		return self._ApplyTypes_(851, 1, (12, 0), ((12, 1), (12, 17)), 'AddItem', None,Text
			, Index)

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# The method GetList is actually a property, but must be used as a method to correctly pass the arguments
	def GetList(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(861, 2, (12, 0), ((12, 17),), 'GetList', None,Index
			)

	# The method GetSelected is actually a property, but must be used as a method to correctly pass the arguments
	def GetSelected(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(1123, 2, (12, 0), ((12, 17),), 'GetSelected', None,Index
			)

	# Result is of type GroupObject
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00020898-0000-0000-C000-000000000046}')
		return ret

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def RemoveAllItems(self):
		return self._ApplyTypes_(853, 1, (12, 0), (), 'RemoveAllItems', None,)

	def RemoveItem(self, Index=defaultNamedNotOptArg, Count=defaultNamedOptArg):
		return self._ApplyTypes_(852, 1, (12, 0), ((3, 1), (12, 17)), 'RemoveItem', None,Index
			, Count)

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	# The method SetList is actually a property, but must be used as a method to correctly pass the arguments
	def SetList(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(861, LCID, 4, (24, 0), ((12, 17), (12, 1)),Index
			, arg1)

	# The method SetSelected is actually a property, but must be used as a method to correctly pass the arguments
	def SetSelected(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(1123, LCID, 4, (24, 0), ((12, 17), (12, 1)),Index
			, arg1)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Display3DShading": (1122, 2, (11, 0), (), "Display3DShading", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"LinkedCell": (1058, 2, (8, 0), (), "LinkedCell", None),
		"List": (861, 2, (12, 0), ((12, 17),), "List", None),
		"ListFillRange": (847, 2, (8, 0), (), "ListFillRange", None),
		"ListIndex": (850, 2, (3, 0), (), "ListIndex", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"MultiSelect": (32, 2, (3, 0), (), "MultiSelect", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"Selected": (1123, 2, (12, 0), ((12, 17),), "Selected", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Value": (6, 2, (3, 0), (), "Value", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
		"_Default": (0, 2, (3, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"List": ((861, LCID, 4, 0),()),
		"ListFillRange": ((847, LCID, 4, 0),()),
		"ListIndex": ((850, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"MultiSelect": ((32, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Selected": ((1123, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ListColumn(DispatchBaseClass):
	CLSID = IID('{00024473-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'DataBodyRange' returns object of type 'Range'
		"DataBodyRange": (705, 2, (9, 0), (), "DataBodyRange", '{00020846-0000-0000-C000-000000000046}'),
		"Index": (486, 2, (3, 0), (), "Index", None),
		# Method 'ListDataFormat' returns object of type 'ListDataFormat'
		"ListDataFormat": (2321, 2, (9, 0), (), "ListDataFormat", '{0002447D-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'Range' returns object of type 'Range'
		"Range": (197, 2, (9, 0), (), "Range", '{00020846-0000-0000-C000-000000000046}'),
		"SharePointFormula": (2323, 2, (8, 0), (), "SharePointFormula", None),
		# Method 'Total' returns object of type 'Range'
		"Total": (2681, 2, (9, 0), (), "Total", '{00020846-0000-0000-C000-000000000046}'),
		"TotalsCalculation": (2322, 2, (3, 0), (), "TotalsCalculation", None),
		# Method 'XPath' returns object of type 'XPath'
		"XPath": (2258, 2, (9, 0), (), "XPath", '{0002447E-0000-0000-C000-000000000046}'),
		"_Default": (0, 2, (8, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Name": ((110, LCID, 4, 0),()),
		"TotalsCalculation": ((2322, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ListColumns(DispatchBaseClass):
	CLSID = IID('{00024472-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ListColumn
	def Add(self, Position=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((12, 17),),Position
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00024473-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ListColumn
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024473-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ListColumn
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024473-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024473-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024473-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00024473-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ListDataFormat(DispatchBaseClass):
	CLSID = IID('{0002447D-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AllowFillIn": (2357, 2, (11, 0), (), "AllowFillIn", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Choices": (2348, 2, (12, 0), (), "Choices", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DecimalPlaces": (2349, 2, (3, 0), (), "DecimalPlaces", None),
		"DefaultValue": (2350, 2, (12, 0), (), "DefaultValue", None),
		"IsPercent": (2351, 2, (11, 0), (), "IsPercent", None),
		"MaxCharacters": (2353, 2, (3, 0), (), "MaxCharacters", None),
		"MaxNumber": (2354, 2, (12, 0), (), "MaxNumber", None),
		"MinNumber": (2355, 2, (12, 0), (), "MinNumber", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"ReadOnly": (296, 2, (11, 0), (), "ReadOnly", None),
		"Required": (2356, 2, (11, 0), (), "Required", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
		"_Default": (0, 2, (3, 0), (), "_Default", None),
		"lcid": (2352, 2, (3, 0), (), "lcid", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), (), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ListObject(DispatchBaseClass):
	CLSID = IID('{00024471-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def ExportToVisio(self):
		return self._oleobj_.InvokeTypes(2680, LCID, 1, (24, 0), (),)

	def Publish(self, Target=defaultNamedNotOptArg, LinkSource=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(1895, LCID, 1, (8, 0), ((12, 1), (11, 1)),Target
			, LinkSource)

	def Refresh(self):
		return self._oleobj_.InvokeTypes(1417, LCID, 1, (24, 0), (),)

	def Resize(self, Range=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(256, LCID, 1, (24, 0), ((9, 1),),Range
			)

	def Unlink(self):
		return self._oleobj_.InvokeTypes(2308, LCID, 1, (24, 0), (),)

	def Unlist(self):
		return self._oleobj_.InvokeTypes(2309, LCID, 1, (24, 0), (),)

	def UpdateChanges(self, iConflictType=0):
		return self._oleobj_.InvokeTypes(2310, LCID, 1, (24, 0), ((3, 49),),iConflictType
			)

	_prop_map_get_ = {
		"Active": (2312, 2, (11, 0), (), "Active", None),
		"AlternativeText": (1891, 2, (8, 0), (), "AlternativeText", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'AutoFilter' returns object of type 'AutoFilter'
		"AutoFilter": (3289, 2, (9, 0), (), "AutoFilter", '{00024432-0000-0000-C000-000000000046}'),
		"Comment": (910, 2, (8, 0), (), "Comment", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'DataBodyRange' returns object of type 'Range'
		"DataBodyRange": (705, 2, (9, 0), (), "DataBodyRange", '{00020846-0000-0000-C000-000000000046}'),
		"DisplayName": (2677, 2, (8, 0), (), "DisplayName", None),
		"DisplayRightToLeft": (1774, 2, (11, 0), (), "DisplayRightToLeft", None),
		# Method 'HeaderRowRange' returns object of type 'Range'
		"HeaderRowRange": (2313, 2, (9, 0), (), "HeaderRowRange", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'InsertRowRange' returns object of type 'Range'
		"InsertRowRange": (2314, 2, (9, 0), (), "InsertRowRange", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'ListColumns' returns object of type 'ListColumns'
		"ListColumns": (2315, 2, (9, 0), (), "ListColumns", '{00024472-0000-0000-C000-000000000046}'),
		# Method 'ListRows' returns object of type 'ListRows'
		"ListRows": (2316, 2, (9, 0), (), "ListRows", '{00024474-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'QueryTable' returns object of type 'QueryTable'
		"QueryTable": (1386, 2, (13, 0), (), "QueryTable", '{59191DA1-EA47-11CE-A51F-00AA0061507F}'),
		# Method 'Range' returns object of type 'Range'
		"Range": (197, 2, (9, 0), (), "Range", '{00020846-0000-0000-C000-000000000046}'),
		"SharePointURL": (2320, 2, (8, 0), (), "SharePointURL", None),
		"ShowAutoFilter": (2317, 2, (11, 0), (), "ShowAutoFilter", None),
		"ShowAutoFilterDropDown": (3096, 2, (11, 0), (), "ShowAutoFilterDropDown", None),
		"ShowHeaders": (2678, 2, (11, 0), (), "ShowHeaders", None),
		"ShowTableStyleColumnStripes": (2565, 2, (11, 0), (), "ShowTableStyleColumnStripes", None),
		"ShowTableStyleFirstColumn": (2679, 2, (11, 0), (), "ShowTableStyleFirstColumn", None),
		"ShowTableStyleLastColumn": (2563, 2, (11, 0), (), "ShowTableStyleLastColumn", None),
		"ShowTableStyleRowStripes": (2564, 2, (11, 0), (), "ShowTableStyleRowStripes", None),
		"ShowTotals": (2318, 2, (11, 0), (), "ShowTotals", None),
		# Method 'Slicers' returns object of type 'Slicers'
		"Slicers": (2881, 2, (9, 0), (), "Slicers", '{000244C7-0000-0000-C000-000000000046}'),
		# Method 'Sort' returns object of type 'Sort'
		"Sort": (3288, 2, (9, 0), (), "Sort", '{000244AB-0000-0000-C000-000000000046}'),
		"SourceType": (685, 2, (3, 0), (), "SourceType", None),
		"Summary": (273, 2, (8, 0), (), "Summary", None),
		# Method 'TableObject' returns object of type 'TableObject'
		"TableObject": (3095, 2, (9, 0), (), "TableObject", '{000244CE-0000-0000-C000-000000000046}'),
		"TableStyle": (1504, 2, (12, 0), (), "TableStyle", None),
		# Method 'TotalsRowRange' returns object of type 'Range'
		"TotalsRowRange": (2319, 2, (9, 0), (), "TotalsRowRange", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'XmlMap' returns object of type 'XmlMap'
		"XmlMap": (2253, 2, (9, 0), (), "XmlMap", '{0002447B-0000-0000-C000-000000000046}'),
		# Method '_AutoFilter' returns object of type 'AutoFilter'
		"_AutoFilter": (793, 2, (9, 0), (), "_AutoFilter", '{00024432-0000-0000-C000-000000000046}'),
		"_Default": (0, 2, (8, 0), (), "_Default", None),
		# Method '_Sort' returns object of type 'Sort'
		"_Sort": (880, 2, (9, 0), (), "_Sort", '{000244AB-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
		"AlternativeText": ((1891, LCID, 4, 0),()),
		"Comment": ((910, LCID, 4, 0),()),
		"DisplayName": ((2677, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"ShowAutoFilter": ((2317, LCID, 4, 0),()),
		"ShowAutoFilterDropDown": ((3096, LCID, 4, 0),()),
		"ShowHeaders": ((2678, LCID, 4, 0),()),
		"ShowTableStyleColumnStripes": ((2565, LCID, 4, 0),()),
		"ShowTableStyleFirstColumn": ((2679, LCID, 4, 0),()),
		"ShowTableStyleLastColumn": ((2563, LCID, 4, 0),()),
		"ShowTableStyleRowStripes": ((2564, LCID, 4, 0),()),
		"ShowTotals": ((2318, LCID, 4, 0),()),
		"Summary": ((273, LCID, 4, 0),()),
		"TableStyle": ((1504, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ListObjects(DispatchBaseClass):
	CLSID = IID('{00024470-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ListObject
	def Add(self, SourceType=1, Source=defaultNamedNotOptArg, LinkSource=defaultNamedNotOptArg, XlListObjectHasHeaders=0
			, Destination=defaultNamedOptArg, TableStyleName=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((3, 49), (12, 17), (12, 17), (3, 49), (12, 17), (12, 17)),SourceType
			, Source, LinkSource, XlListObjectHasHeaders, Destination, TableStyleName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00024471-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ListObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024471-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ListObject
	def _Add(self, SourceType=1, Source=defaultNamedNotOptArg, LinkSource=defaultNamedNotOptArg, XlListObjectHasHeaders=0
			, Destination=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(2085, LCID, 1, (9, 0), ((3, 49), (12, 17), (12, 17), (3, 49), (12, 17)),SourceType
			, Source, LinkSource, XlListObjectHasHeaders, Destination)
		if ret is not None:
			ret = Dispatch(ret, '_Add', '{00024471-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ListObject
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024471-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024471-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024471-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00024471-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ListRow(DispatchBaseClass):
	CLSID = IID('{00024475-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"InvalidData": (2324, 2, (11, 0), (), "InvalidData", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'Range' returns object of type 'Range'
		"Range": (197, 2, (9, 0), (), "Range", '{00020846-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ListRows(DispatchBaseClass):
	CLSID = IID('{00024474-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ListRow
	def Add(self, Position=defaultNamedOptArg, AlwaysInsert=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((12, 17), (12, 17)),Position
			, AlwaysInsert)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00024475-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ListRow
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024475-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ListRow
	def _Add(self, Position=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(2085, LCID, 1, (9, 0), ((12, 17),),Position
			)
		if ret is not None:
			ret = Dispatch(ret, '_Add', '{00024475-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ListRow
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024475-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024475-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024475-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00024475-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Mailer(DispatchBaseClass):
	CLSID = IID('{000208D1-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"BCCRecipients": (983, 2, (12, 0), (), "BCCRecipients", None),
		"CCRecipients": (982, 2, (12, 0), (), "CCRecipients", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enclosures": (984, 2, (12, 0), (), "Enclosures", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Received": (986, 2, (11, 0), (), "Received", None),
		"SendDateTime": (987, 2, (7, 0), (), "SendDateTime", None),
		"Sender": (988, 2, (8, 0), (), "Sender", None),
		"Subject": (953, 2, (8, 0), (), "Subject", None),
		"ToRecipients": (981, 2, (12, 0), (), "ToRecipients", None),
		"WhichAddress": (974, 2, (12, 0), (), "WhichAddress", None),
	}
	_prop_map_put_ = {
		"BCCRecipients": ((983, LCID, 4, 0),()),
		"CCRecipients": ((982, LCID, 4, 0),()),
		"Enclosures": ((984, LCID, 4, 0),()),
		"Subject": ((953, LCID, 4, 0),()),
		"ToRecipients": ((981, LCID, 4, 0),()),
		"WhichAddress": ((974, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Menu(DispatchBaseClass):
	CLSID = IID('{00020866-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		# Method 'MenuItems' returns object of type 'MenuItems'
		"MenuItems": (593, 2, (9, 0), (), "MenuItems", '{00020867-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class MenuBar(DispatchBaseClass):
	CLSID = IID('{00020864-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Activate(self):
		return self._oleobj_.InvokeTypes(304, LCID, 1, (24, 0), (),)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def Reset(self):
		return self._oleobj_.InvokeTypes(555, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"BuiltIn": (553, 2, (11, 0), (), "BuiltIn", None),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		# Method 'Menus' returns object of type 'Menus'
		"Menus": (591, 2, (9, 0), (), "Menus", '{00020865-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class MenuBars(DispatchBaseClass):
	CLSID = IID('{00020863-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type MenuBar
	def Add(self, Name=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((12, 17),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00020864-0000-0000-C000-000000000046}')
		return ret

	# Result is of type MenuBar
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00020864-0000-0000-C000-000000000046}')
		return ret

	# Result is of type MenuBar
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00020864-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00020864-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00020864-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00020864-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class MenuItem(DispatchBaseClass):
	CLSID = IID('{00020868-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		"Checked": (599, 2, (11, 0), (), "Checked", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"HelpContextID": (355, 2, (3, 0), (), "HelpContextID", None),
		"HelpFile": (360, 2, (8, 0), (), "HelpFile", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"StatusBar": (386, 2, (8, 0), (), "StatusBar", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"Checked": ((599, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"HelpContextID": ((355, LCID, 4, 0),()),
		"HelpFile": ((360, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"StatusBar": ((386, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class MenuItems(DispatchBaseClass):
	CLSID = IID('{00020867-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type MenuItem
	def Add(self, Caption=defaultNamedNotOptArg, OnAction=defaultNamedOptArg, ShortcutKey=defaultNamedOptArg, Before=defaultNamedOptArg
			, Restore=defaultNamedOptArg, StatusBar=defaultNamedOptArg, HelpFile=defaultNamedOptArg, HelpContextID=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Caption
			, OnAction, ShortcutKey, Before, Restore, StatusBar
			, HelpFile, HelpContextID)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00020868-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Menu
	def AddMenu(self, Caption=defaultNamedNotOptArg, Before=defaultNamedOptArg, Restore=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(598, LCID, 1, (9, 0), ((8, 1), (12, 17), (12, 17)),Caption
			, Before, Restore)
		if ret is not None:
			ret = Dispatch(ret, 'AddMenu', '{00020866-0000-0000-C000-000000000046}')
		return ret

	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', None)
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', None)
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Menus(DispatchBaseClass):
	CLSID = IID('{00020865-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Menu
	def Add(self, Caption=defaultNamedNotOptArg, Before=defaultNamedOptArg, Restore=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1), (12, 17), (12, 17)),Caption
			, Before, Restore)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00020866-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Menu
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00020866-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Menu
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00020866-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00020866-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00020866-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00020866-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Model(DispatchBaseClass):
	CLSID = IID('{000244DB-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type WorkbookConnection
	def AddConnection(self, ConnectionToDataSource=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(3127, LCID, 1, (9, 0), ((9, 1),),ConnectionToDataSource
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddConnection', '{00024485-0000-0000-C000-000000000046}')
		return ret

	# Result is of type WorkbookConnection
	def CreateModelWorkbookConnection(self, ModelTable=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(3129, LCID, 1, (9, 0), ((12, 1),),ModelTable
			)
		if ret is not None:
			ret = Dispatch(ret, 'CreateModelWorkbookConnection', '{00024485-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ModelFormatCurrency
	# The method GetModelFormatCurrency is actually a property, but must be used as a method to correctly pass the arguments
	def GetModelFormatCurrency(self, Symbol=defaultNamedOptArg, DecimalPlaces=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3219, LCID, 2, (9, 0), ((12, 17), (12, 17)),Symbol
			, DecimalPlaces)
		if ret is not None:
			ret = Dispatch(ret, 'GetModelFormatCurrency', '{000244F5-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ModelFormatDate
	# The method GetModelFormatDate is actually a property, but must be used as a method to correctly pass the arguments
	def GetModelFormatDate(self, FormatString=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3212, LCID, 2, (9, 0), ((12, 17),),FormatString
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetModelFormatDate', '{000244F0-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ModelFormatDecimalNumber
	# The method GetModelFormatDecimalNumber is actually a property, but must be used as a method to correctly pass the arguments
	def GetModelFormatDecimalNumber(self, UseThousandSeparator=defaultNamedOptArg, DecimalPlaces=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3214, LCID, 2, (9, 0), ((12, 17), (12, 17)),UseThousandSeparator
			, DecimalPlaces)
		if ret is not None:
			ret = Dispatch(ret, 'GetModelFormatDecimalNumber', '{000244F1-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ModelFormatPercentageNumber
	# The method GetModelFormatPercentageNumber is actually a property, but must be used as a method to correctly pass the arguments
	def GetModelFormatPercentageNumber(self, UseThousandSeparator=defaultNamedOptArg, DecimalPlaces=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3217, LCID, 2, (9, 0), ((12, 17), (12, 17)),UseThousandSeparator
			, DecimalPlaces)
		if ret is not None:
			ret = Dispatch(ret, 'GetModelFormatPercentageNumber', '{000244F3-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ModelFormatScientificNumber
	# The method GetModelFormatScientificNumber is actually a property, but must be used as a method to correctly pass the arguments
	def GetModelFormatScientificNumber(self, DecimalPlaces=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3218, LCID, 2, (9, 0), ((12, 17),),DecimalPlaces
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetModelFormatScientificNumber', '{000244F4-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ModelFormatWholeNumber
	# The method GetModelFormatWholeNumber is actually a property, but must be used as a method to correctly pass the arguments
	def GetModelFormatWholeNumber(self, UseThousandSeparator=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3216, LCID, 2, (9, 0), ((12, 17),),UseThousandSeparator
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetModelFormatWholeNumber', '{000244F2-0000-0000-C000-000000000046}')
		return ret

	def Initialize(self):
		return self._oleobj_.InvokeTypes(3132, LCID, 1, (24, 0), (),)

	def Refresh(self):
		return self._oleobj_.InvokeTypes(1417, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'DataModelConnection' returns object of type 'WorkbookConnection'
		"DataModelConnection": (3131, 2, (9, 0), (), "DataModelConnection", '{00024485-0000-0000-C000-000000000046}'),
		# Method 'ModelFormatBoolean' returns object of type 'ModelFormatBoolean'
		"ModelFormatBoolean": (3221, 2, (9, 0), (), "ModelFormatBoolean", '{000244F6-0000-0000-C000-000000000046}'),
		# Method 'ModelFormatCurrency' returns object of type 'ModelFormatCurrency'
		"ModelFormatCurrency": (3219, 2, (9, 0), ((12, 17), (12, 17)), "ModelFormatCurrency", '{000244F5-0000-0000-C000-000000000046}'),
		# Method 'ModelFormatDate' returns object of type 'ModelFormatDate'
		"ModelFormatDate": (3212, 2, (9, 0), ((12, 17),), "ModelFormatDate", '{000244F0-0000-0000-C000-000000000046}'),
		# Method 'ModelFormatDecimalNumber' returns object of type 'ModelFormatDecimalNumber'
		"ModelFormatDecimalNumber": (3214, 2, (9, 0), ((12, 17), (12, 17)), "ModelFormatDecimalNumber", '{000244F1-0000-0000-C000-000000000046}'),
		# Method 'ModelFormatGeneral' returns object of type 'ModelFormatGeneral'
		"ModelFormatGeneral": (3211, 2, (9, 0), (), "ModelFormatGeneral", '{000244EF-0000-0000-C000-000000000046}'),
		# Method 'ModelFormatPercentageNumber' returns object of type 'ModelFormatPercentageNumber'
		"ModelFormatPercentageNumber": (3217, 2, (9, 0), ((12, 17), (12, 17)), "ModelFormatPercentageNumber", '{000244F3-0000-0000-C000-000000000046}'),
		# Method 'ModelFormatScientificNumber' returns object of type 'ModelFormatScientificNumber'
		"ModelFormatScientificNumber": (3218, 2, (9, 0), ((12, 17),), "ModelFormatScientificNumber", '{000244F4-0000-0000-C000-000000000046}'),
		# Method 'ModelFormatWholeNumber' returns object of type 'ModelFormatWholeNumber'
		"ModelFormatWholeNumber": (3216, 2, (9, 0), ((12, 17),), "ModelFormatWholeNumber", '{000244F2-0000-0000-C000-000000000046}'),
		# Method 'ModelMeasures' returns object of type 'ModelMeasures'
		"ModelMeasures": (3210, 2, (9, 0), (), "ModelMeasures", '{000244EE-0000-0000-C000-000000000046}'),
		# Method 'ModelRelationships' returns object of type 'ModelRelationships'
		"ModelRelationships": (3126, 2, (9, 0), (), "ModelRelationships", '{000244DA-0000-0000-C000-000000000046}'),
		# Method 'ModelTables' returns object of type 'ModelTables'
		"ModelTables": (3106, 2, (9, 0), (), "ModelTables", '{000244D8-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Model3DFormat(DispatchBaseClass):
	CLSID = IID('{000C03D8-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def IncrementRotationX(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(112, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def IncrementRotationY(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(113, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def IncrementRotationZ(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(114, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def ResetModel(self, ResetSize=False):
		return self._oleobj_.InvokeTypes(111, LCID, 1, (24, 0), ((11, 49),),ResetSize
			)

	_prop_map_get_ = {
		"Application": (1610743808, 2, (9, 0), (), "Application", None),
		"AutoFit": (100, 2, (3, 0), (), "AutoFit", None),
		"CameraPositionX": (105, 2, (4, 0), (), "CameraPositionX", None),
		"CameraPositionY": (106, 2, (4, 0), (), "CameraPositionY", None),
		"CameraPositionZ": (107, 2, (4, 0), (), "CameraPositionZ", None),
		"Creator": (1610743809, 2, (3, 0), (), "Creator", None),
		"FieldOfView": (104, 2, (4, 0), (), "FieldOfView", None),
		"LookAtPointX": (108, 2, (4, 0), (), "LookAtPointX", None),
		"LookAtPointY": (109, 2, (4, 0), (), "LookAtPointY", None),
		"LookAtPointZ": (110, 2, (4, 0), (), "LookAtPointZ", None),
		"Parent": (1, 2, (9, 0), (), "Parent", None),
		"RotationX": (101, 2, (4, 0), (), "RotationX", None),
		"RotationY": (102, 2, (4, 0), (), "RotationY", None),
		"RotationZ": (103, 2, (4, 0), (), "RotationZ", None),
	}
	_prop_map_put_ = {
		"AutoFit": ((100, LCID, 4, 0),()),
		"CameraPositionX": ((105, LCID, 4, 0),()),
		"CameraPositionY": ((106, LCID, 4, 0),()),
		"CameraPositionZ": ((107, LCID, 4, 0),()),
		"FieldOfView": ((104, LCID, 4, 0),()),
		"LookAtPointX": ((108, LCID, 4, 0),()),
		"LookAtPointY": ((109, LCID, 4, 0),()),
		"LookAtPointZ": ((110, LCID, 4, 0),()),
		"RotationX": ((101, LCID, 4, 0),()),
		"RotationY": ((102, LCID, 4, 0),()),
		"RotationZ": ((103, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ModelChanges(DispatchBaseClass):
	CLSID = IID('{000244E4-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'ColumnsAdded' returns object of type 'ModelColumnNames'
		"ColumnsAdded": (3150, 2, (9, 0), (), "ColumnsAdded", '{000244E6-0000-0000-C000-000000000046}'),
		# Method 'ColumnsChanged' returns object of type 'ModelColumnChanges'
		"ColumnsChanged": (3152, 2, (9, 0), (), "ColumnsChanged", '{000244E8-0000-0000-C000-000000000046}'),
		# Method 'ColumnsDeleted' returns object of type 'ModelColumnNames'
		"ColumnsDeleted": (3151, 2, (9, 0), (), "ColumnsDeleted", '{000244E6-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'MeasuresAdded' returns object of type 'ModelMeasureNames'
		"MeasuresAdded": (3153, 2, (9, 0), (), "MeasuresAdded", '{000244EA-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"RelationshipChange": (3149, 2, (11, 0), (), "RelationshipChange", None),
		"Source": (222, 2, (3, 0), (), "Source", None),
		# Method 'TableNamesChanged' returns object of type 'ModelTableNameChanges'
		"TableNamesChanged": (3148, 2, (9, 0), (), "TableNamesChanged", '{000244E3-0000-0000-C000-000000000046}'),
		# Method 'TablesAdded' returns object of type 'ModelTableNames'
		"TablesAdded": (3145, 2, (9, 0), (), "TablesAdded", '{000244E1-0000-0000-C000-000000000046}'),
		# Method 'TablesDeleted' returns object of type 'ModelTableNames'
		"TablesDeleted": (3146, 2, (9, 0), (), "TablesDeleted", '{000244E1-0000-0000-C000-000000000046}'),
		# Method 'TablesModified' returns object of type 'ModelTableNames'
		"TablesModified": (3147, 2, (9, 0), (), "TablesModified", '{000244E1-0000-0000-C000-000000000046}'),
		"UnknownChange": (3154, 2, (11, 0), (), "UnknownChange", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ModelColumnChange(DispatchBaseClass):
	CLSID = IID('{000244E7-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"ColumnName": (3156, 2, (8, 0), (), "ColumnName", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"TableName": (688, 2, (8, 0), (), "TableName", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ModelColumnChanges(DispatchBaseClass):
	CLSID = IID('{000244E8-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ModelColumnChange
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244E7-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ModelColumnChange
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244E7-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244E7-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244E7-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{000244E7-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ModelColumnName(DispatchBaseClass):
	CLSID = IID('{000244E5-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"ColumnName": (3156, 2, (8, 0), (), "ColumnName", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"TableName": (688, 2, (8, 0), (), "TableName", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ModelColumnNames(DispatchBaseClass):
	CLSID = IID('{000244E6-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ModelColumnName
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244E5-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ModelColumnName
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244E5-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244E5-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244E5-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{000244E5-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ModelConnection(DispatchBaseClass):
	CLSID = IID('{000244D1-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"ADOConnection": (2074, 2, (9, 0), (), "ADOConnection", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'CalculatedMembers' returns object of type 'CalculatedMembers'
		"CalculatedMembers": (2125, 2, (9, 0), (), "CalculatedMembers", '{00024454-0000-0000-C000-000000000046}'),
		"CommandText": (1829, 2, (12, 0), (), "CommandText", None),
		"CommandType": (1830, 2, (3, 0), (), "CommandType", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"CommandText": ((1829, LCID, 4, 0),()),
		"CommandType": ((1830, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ModelFormatBoolean(DispatchBaseClass):
	CLSID = IID('{000244F6-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ModelFormatCurrency(DispatchBaseClass):
	CLSID = IID('{000244F5-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DecimalPlaces": (2349, 2, (3, 0), (), "DecimalPlaces", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Symbol": (3220, 2, (8, 0), (), "Symbol", None),
	}
	_prop_map_put_ = {
		"DecimalPlaces": ((2349, LCID, 4, 0),()),
		"Symbol": ((3220, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ModelFormatDate(DispatchBaseClass):
	CLSID = IID('{000244F0-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"FormatString": (3213, 2, (8, 0), (), "FormatString", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"FormatString": ((3213, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ModelFormatDecimalNumber(DispatchBaseClass):
	CLSID = IID('{000244F1-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DecimalPlaces": (2349, 2, (3, 0), (), "DecimalPlaces", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"UseThousandSeparator": (3215, 2, (11, 0), (), "UseThousandSeparator", None),
	}
	_prop_map_put_ = {
		"DecimalPlaces": ((2349, LCID, 4, 0),()),
		"UseThousandSeparator": ((3215, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ModelFormatGeneral(DispatchBaseClass):
	CLSID = IID('{000244EF-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ModelFormatPercentageNumber(DispatchBaseClass):
	CLSID = IID('{000244F3-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DecimalPlaces": (2349, 2, (3, 0), (), "DecimalPlaces", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"UseThousandSeparator": (3215, 2, (11, 0), (), "UseThousandSeparator", None),
	}
	_prop_map_put_ = {
		"DecimalPlaces": ((2349, LCID, 4, 0),()),
		"UseThousandSeparator": ((3215, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ModelFormatScientificNumber(DispatchBaseClass):
	CLSID = IID('{000244F4-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DecimalPlaces": (2349, 2, (3, 0), (), "DecimalPlaces", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"DecimalPlaces": ((2349, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ModelFormatWholeNumber(DispatchBaseClass):
	CLSID = IID('{000244F2-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"UseThousandSeparator": (3215, 2, (11, 0), (), "UseThousandSeparator", None),
	}
	_prop_map_put_ = {
		"UseThousandSeparator": ((3215, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ModelMeasure(DispatchBaseClass):
	CLSID = IID('{000244ED-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'AssociatedTable' returns object of type 'ModelTable'
		"AssociatedTable": (3224, 2, (9, 0), (), "AssociatedTable", '{000244D7-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Description": (218, 2, (8, 0), (), "Description", None),
		"FormatInformation": (3225, 2, (12, 0), (), "FormatInformation", None),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"AssociatedTable": ((3224, LCID, 8, 0),()),
		"Description": ((218, LCID, 4, 0),()),
		"FormatInformation": ((3225, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ModelMeasureName(DispatchBaseClass):
	CLSID = IID('{000244E9-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"MeasureName": (3157, 2, (8, 0), (), "MeasureName", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"TableName": (688, 2, (8, 0), (), "TableName", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ModelMeasureNames(DispatchBaseClass):
	CLSID = IID('{000244EA-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ModelMeasureName
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244E9-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ModelMeasureName
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244E9-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244E9-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244E9-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{000244E9-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ModelMeasures(DispatchBaseClass):
	CLSID = IID('{000244EE-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ModelMeasure
	def Add(self, MeasureName=defaultNamedNotOptArg, AssociatedTable=defaultNamedNotOptArg, Formula=defaultNamedNotOptArg, FormatInformation=defaultNamedNotOptArg
			, Description=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1), (9, 1), (8, 1), (12, 1), (12, 17)),MeasureName
			, AssociatedTable, Formula, FormatInformation, Description)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{000244ED-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ModelMeasure
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244ED-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ModelMeasure
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244ED-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244ED-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244ED-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{000244ED-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ModelRelationship(DispatchBaseClass):
	CLSID = IID('{000244D9-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Active": (2312, 2, (11, 0), (), "Active", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'ForeignKeyColumn' returns object of type 'ModelTableColumn'
		"ForeignKeyColumn": (3123, 2, (9, 0), (), "ForeignKeyColumn", '{000244D5-0000-0000-C000-000000000046}'),
		# Method 'ForeignKeyTable' returns object of type 'ModelTable'
		"ForeignKeyTable": (3122, 2, (9, 0), (), "ForeignKeyTable", '{000244D7-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'PrimaryKeyColumn' returns object of type 'ModelTableColumn'
		"PrimaryKeyColumn": (3125, 2, (9, 0), (), "PrimaryKeyColumn", '{000244D5-0000-0000-C000-000000000046}'),
		# Method 'PrimaryKeyTable' returns object of type 'ModelTable'
		"PrimaryKeyTable": (3124, 2, (9, 0), (), "PrimaryKeyTable", '{000244D7-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
		"Active": ((2312, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ModelRelationships(DispatchBaseClass):
	CLSID = IID('{000244DA-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ModelRelationship
	def Add(self, ForeignKeyColumn=defaultNamedNotOptArg, PrimaryKeyColumn=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((9, 1), (9, 1)),ForeignKeyColumn
			, PrimaryKeyColumn)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{000244D9-0000-0000-C000-000000000046}')
		return ret

	def DetectRelationships(self, PivotTable=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3209, LCID, 1, (24, 0), ((9, 1),),PivotTable
			)

	# Result is of type ModelRelationship
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244D9-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ModelRelationship
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244D9-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244D9-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244D9-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{000244D9-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ModelTable(DispatchBaseClass):
	CLSID = IID('{000244D7-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Dummy1(self, NewName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1782, LCID, 1, (24, 0), ((8, 1),),NewName
			)

	def Refresh(self):
		return self._oleobj_.InvokeTypes(1417, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'ModelTableColumns' returns object of type 'ModelTableColumns'
		"ModelTableColumns": (3119, 2, (9, 0), (), "ModelTableColumns", '{000244D6-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"RecordCount": (1478, 2, (3, 0), (), "RecordCount", None),
		"SourceName": (721, 2, (8, 0), (), "SourceName", None),
		# Method 'SourceWorkbookConnection' returns object of type 'WorkbookConnection'
		"SourceWorkbookConnection": (3120, 2, (9, 0), (), "SourceWorkbookConnection", '{00024485-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ModelTableColumn(DispatchBaseClass):
	CLSID = IID('{000244D5-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Dummy1(self, NewName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1782, LCID, 1, (24, 0), ((8, 1),),NewName
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DataType": (722, 2, (3, 0), (), "DataType", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ModelTableColumns(DispatchBaseClass):
	CLSID = IID('{000244D6-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ModelTableColumn
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244D5-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ModelTableColumn
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244D5-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244D5-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244D5-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{000244D5-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ModelTableNameChange(DispatchBaseClass):
	CLSID = IID('{000244E2-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"TableNameNew": (3144, 2, (8, 0), (), "TableNameNew", None),
		"TableNameOld": (3143, 2, (8, 0), (), "TableNameOld", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ModelTableNameChanges(DispatchBaseClass):
	CLSID = IID('{000244E3-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ModelTableNameChange
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244E2-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ModelTableNameChange
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244E2-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244E2-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244E2-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{000244E2-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ModelTableNames(DispatchBaseClass):
	CLSID = IID('{000244E1-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Item(self, Index=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(170, LCID, 1, (8, 0), ((12, 1),),Index
			)

	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(0, LCID, 2, (8, 0), ((12, 1),),Index
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(0, LCID, 2, (8, 0), ((12, 1),),Index
			)

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ModelTables(DispatchBaseClass):
	CLSID = IID('{000244D8-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ModelTable
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244D7-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ModelTable
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244D7-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244D7-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244D7-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{000244D7-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Module(DispatchBaseClass):
	CLSID = IID('{000208AD-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Activate(self):
		return self._oleobj_.InvokeTypes(304, LCID, 1, (24, 0), (),)

	def Copy(self, Before=defaultNamedOptArg, After=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(551, LCID, 1, (24, 0), ((12, 17), (12, 17)),Before
			, After)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def InsertFile(self, Filename=defaultNamedNotOptArg, Merge=defaultNamedOptArg):
		return self._ApplyTypes_(584, 1, (12, 0), ((12, 1), (12, 17)), 'InsertFile', None,Filename
			, Merge)

	def Move(self, Before=defaultNamedOptArg, After=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(637, LCID, 1, (24, 0), ((12, 17), (12, 17)),Before
			, After)

	def PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2361, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate)

	def Protect(self, Password=defaultNamedOptArg, DrawingObjects=defaultNamedOptArg, Contents=defaultNamedOptArg, Scenarios=defaultNamedOptArg
			, UserInterfaceOnly=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2029, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Password
			, DrawingObjects, Contents, Scenarios, UserInterfaceOnly)

	def SaveAs(self, Filename=defaultNamedNotOptArg, FileFormat=defaultNamedOptArg, Password=defaultNamedOptArg, WriteResPassword=defaultNamedOptArg
			, ReadOnlyRecommended=defaultNamedOptArg, CreateBackup=defaultNamedOptArg, AddToMru=defaultNamedOptArg, TextCodepage=defaultNamedOptArg, TextVisualLayout=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(3174, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup
			, AddToMru, TextCodepage, TextVisualLayout)

	def Select(self, Replace=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(235, LCID, 1, (24, 0), ((12, 17),),Replace
			)

	def Unprotect(self, Password=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(285, LCID, 1, (24, 0), ((12, 17),),Password
			)

	def _PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1772, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate)

	def _Protect(self, Password=defaultNamedOptArg, DrawingObjects=defaultNamedOptArg, Contents=defaultNamedOptArg, Scenarios=defaultNamedOptArg
			, UserInterfaceOnly=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(282, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Password
			, DrawingObjects, Contents, Scenarios, UserInterfaceOnly)

	def _SaveAs(self, Filename=defaultNamedNotOptArg, FileFormat=defaultNamedOptArg, Password=defaultNamedOptArg, WriteResPassword=defaultNamedOptArg
			, ReadOnlyRecommended=defaultNamedOptArg, CreateBackup=defaultNamedOptArg, AddToMru=defaultNamedOptArg, TextCodepage=defaultNamedOptArg, TextVisualLayout=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1925, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup
			, AddToMru, TextCodepage, TextVisualLayout)

	def _PrintOut_(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(905, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate)

	def _SaveAs_(self, Filename=defaultNamedNotOptArg, FileFormat=defaultNamedOptArg, Password=defaultNamedOptArg, WriteResPassword=defaultNamedOptArg
			, ReadOnlyRecommended=defaultNamedOptArg, CreateBackup=defaultNamedOptArg, AddToMru=defaultNamedOptArg, TextCodepage=defaultNamedOptArg, TextVisualLayout=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(284, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup
			, AddToMru, TextCodepage, TextVisualLayout)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"CodeName": (1373, 2, (8, 0), (), "CodeName", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Next": (502, 2, (9, 0), (), "Next", None),
		"OnDoubleClick": (628, 2, (8, 0), (), "OnDoubleClick", None),
		"OnSheetActivate": (1031, 2, (8, 0), (), "OnSheetActivate", None),
		"OnSheetDeactivate": (1081, 2, (8, 0), (), "OnSheetDeactivate", None),
		# Method 'PageSetup' returns object of type 'PageSetup'
		"PageSetup": (998, 2, (9, 0), (), "PageSetup", '{000208B4-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Previous": (503, 2, (9, 0), (), "Previous", None),
		"ProtectContents": (292, 2, (11, 0), (), "ProtectContents", None),
		"ProtectionMode": (1159, 2, (11, 0), (), "ProtectionMode", None),
		# Method 'Shapes' returns object of type 'Shapes'
		"Shapes": (1377, 2, (9, 0), (), "Shapes", '{0002443A-0000-0000-C000-000000000046}'),
		"Visible": (558, 2, (3, 0), (), "Visible", None),
		"_CodeName": (-2147418112, 2, (8, 0), (), "_CodeName", None),
	}
	_prop_map_put_ = {
		"Name": ((110, LCID, 4, 0),()),
		"OnDoubleClick": ((628, LCID, 4, 0),()),
		"OnSheetActivate": ((1031, LCID, 4, 0),()),
		"OnSheetDeactivate": ((1081, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"_CodeName": ((-2147418112, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ModuleView(DispatchBaseClass):
	CLSID = IID('{00024489-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Sheet": (751, 2, (9, 0), (), "Sheet", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Modules(DispatchBaseClass):
	CLSID = IID('{000208AE-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Module
	def Add(self, Before=defaultNamedOptArg, After=defaultNamedOptArg, Count=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17)),Before
			, After, Count)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{000208AD-0000-0000-C000-000000000046}')
		return ret

	def Add2(self, Before=defaultNamedOptArg, After=defaultNamedOptArg, Count=defaultNamedOptArg, NewLayout=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3054, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17), (12, 17)),Before
			, After, Count, NewLayout)
		if ret is not None:
			ret = Dispatch(ret, 'Add2', None)
		return ret

	def Copy(self, Before=defaultNamedOptArg, After=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(551, LCID, 1, (24, 0), ((12, 17), (12, 17)),Before
			, After)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Move(self, Before=defaultNamedOptArg, After=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(637, LCID, 1, (24, 0), ((12, 17), (12, 17)),Before
			, After)

	def PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg, IgnorePrintAreas=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2361, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName, IgnorePrintAreas)

	def Select(self, Replace=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(235, LCID, 1, (24, 0), ((12, 17),),Replace
			)

	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', None)
		return ret

	def _PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1772, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName)

	def _PrintOut_(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(905, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'HPageBreaks' returns object of type 'HPageBreaks'
		"HPageBreaks": (1418, 2, (9, 0), (), "HPageBreaks", '{00024404-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'VPageBreaks' returns object of type 'VPageBreaks'
		"VPageBreaks": (1419, 2, (9, 0), (), "VPageBreaks", '{00024405-0000-0000-C000-000000000046}'),
		"Visible": (558, 2, (12, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Visible": ((558, LCID, 4, 0),()),
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', None)
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class MultiThreadedCalculation(DispatchBaseClass):
	CLSID = IID('{000244B1-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"ThreadCount": (2767, 2, (3, 0), (), "ThreadCount", None),
		"ThreadMode": (2766, 2, (3, 0), (), "ThreadMode", None),
	}
	_prop_map_put_ = {
		"Enabled": ((600, LCID, 4, 0),()),
		"ThreadCount": ((2767, LCID, 4, 0),()),
		"ThreadMode": ((2766, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Name(DispatchBaseClass):
	CLSID = IID('{000208B9-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Category": (934, 2, (8, 0), (), "Category", None),
		"CategoryLocal": (935, 2, (8, 0), (), "CategoryLocal", None),
		"Comment": (910, 2, (8, 0), (), "Comment", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"MacroType": (936, 2, (3, 0), (), "MacroType", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"NameLocal": (937, 2, (8, 0), (), "NameLocal", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"RefersTo": (938, 2, (12, 0), (), "RefersTo", None),
		"RefersToLocal": (939, 2, (12, 0), (), "RefersToLocal", None),
		"RefersToR1C1": (940, 2, (12, 0), (), "RefersToR1C1", None),
		"RefersToR1C1Local": (941, 2, (12, 0), (), "RefersToR1C1Local", None),
		# Method 'RefersToRange' returns object of type 'Range'
		"RefersToRange": (1160, 2, (9, 0), (), "RefersToRange", '{00020846-0000-0000-C000-000000000046}'),
		"ShortcutKey": (597, 2, (8, 0), (), "ShortcutKey", None),
		"ValidWorkbookParameter": (2608, 2, (11, 0), (), "ValidWorkbookParameter", None),
		"Value": (6, 2, (8, 0), (), "Value", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"WorkbookParameter": (2607, 2, (11, 0), (), "WorkbookParameter", None),
		"_Default": (0, 2, (8, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Category": ((934, LCID, 4, 0),()),
		"CategoryLocal": ((935, LCID, 4, 0),()),
		"Comment": ((910, LCID, 4, 0),()),
		"MacroType": ((936, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"NameLocal": ((937, LCID, 4, 0),()),
		"RefersTo": ((938, LCID, 4, 0),()),
		"RefersToLocal": ((939, LCID, 4, 0),()),
		"RefersToR1C1": ((940, LCID, 4, 0),()),
		"RefersToR1C1Local": ((941, LCID, 4, 0),()),
		"ShortcutKey": ((597, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"WorkbookParameter": ((2607, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (8, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class NamedSheetView(DispatchBaseClass):
	# This class is creatable by the name 'MSGraph.Application.8'
	CLSID = IID('{00024502-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Activate(self):
		return self._oleobj_.InvokeTypes(304, LCID, 1, (24, 0), (),)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	# Result is of type NamedSheetView
	def Duplicate(self, Name=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), ((12, 17),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', '{00024502-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"Name": ((110, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class NamedSheetViewCollection(DispatchBaseClass):
	CLSID = IID('{00024501-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type NamedSheetView
	def Add(self, Name=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00024502-0000-0000-C000-000000000046}')
		return ret

	# Result is of type NamedSheetView
	def EnterTemporary(self):
		ret = self._oleobj_.InvokeTypes(3360, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'EnterTemporary', '{00024502-0000-0000-C000-000000000046}')
		return ret

	def Exit(self):
		return self._oleobj_.InvokeTypes(3361, LCID, 1, (24, 0), (),)

	# Result is of type NamedSheetView
	def GetActive(self):
		ret = self._oleobj_.InvokeTypes(3362, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetActive', '{00024502-0000-0000-C000-000000000046}')
		return ret

	# Result is of type NamedSheetView
	def GetItem(self, Name=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(3363, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetItem', '{00024502-0000-0000-C000-000000000046}')
		return ret

	# Result is of type NamedSheetView
	def GetItemAt(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(3364, LCID, 1, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetItemAt', '{00024502-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Names(DispatchBaseClass):
	CLSID = IID('{000208B8-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Name
	def Add(self, Name=defaultNamedOptArg, RefersTo=defaultNamedOptArg, Visible=defaultNamedOptArg, MacroType=defaultNamedOptArg
			, ShortcutKey=defaultNamedOptArg, Category=defaultNamedOptArg, NameLocal=defaultNamedOptArg, RefersToLocal=defaultNamedOptArg, CategoryLocal=defaultNamedOptArg
			, RefersToR1C1=defaultNamedOptArg, RefersToR1C1Local=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Name
			, RefersTo, Visible, MacroType, ShortcutKey, Category
			, NameLocal, RefersToLocal, CategoryLocal, RefersToR1C1, RefersToR1C1Local
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{000208B9-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Name
	def Item(self, Index=defaultNamedOptArg, IndexLocal=defaultNamedOptArg, RefersTo=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17)),Index
			, IndexLocal, RefersTo)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000208B9-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Name
	def _Default(self, Index=defaultNamedOptArg, IndexLocal=defaultNamedOptArg, RefersTo=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17)),Index
			, IndexLocal, RefersTo)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000208B9-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedOptArg, IndexLocal=defaultNamedOptArg, RefersTo=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17)),Index
			, IndexLocal, RefersTo)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000208B9-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000208B9-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{000208B9-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class NegativeBarFormat(DispatchBaseClass):
	CLSID = IID('{000244BF-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"BorderColor": (2970, 2, (9, 0), (), "BorderColor", None),
		"BorderColorType": (2969, 2, (3, 0), (), "BorderColorType", None),
		"Color": (99, 2, (9, 0), (), "Color", None),
		"ColorType": (2195, 2, (3, 0), (), "ColorType", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"BorderColorType": ((2969, LCID, 4, 0),()),
		"ColorType": ((2195, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ODBCConnection(DispatchBaseClass):
	CLSID = IID('{0002448E-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def CancelRefresh(self):
		return self._oleobj_.InvokeTypes(1589, LCID, 1, (24, 0), (),)

	def Refresh(self):
		return self._oleobj_.InvokeTypes(1417, LCID, 1, (24, 0), (),)

	def SaveAsODC(self, ODCFileName=defaultNamedNotOptArg, Description=defaultNamedOptArg, Keywords=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2082, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17)),ODCFileName
			, Description, Keywords)

	_prop_map_get_ = {
		"AlwaysUseConnectionFile": (2706, 2, (11, 0), (), "AlwaysUseConnectionFile", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"BackgroundQuery": (1427, 2, (11, 0), (), "BackgroundQuery", None),
		"CommandText": (1829, 2, (12, 0), (), "CommandText", None),
		"CommandType": (1830, 2, (3, 0), (), "CommandType", None),
		"Connection": (1432, 2, (12, 0), (), "Connection", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"EnableRefresh": (1477, 2, (11, 0), (), "EnableRefresh", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"RefreshDate": (696, 2, (7, 0), (), "RefreshDate", None),
		"RefreshOnFileOpen": (1479, 2, (11, 0), (), "RefreshOnFileOpen", None),
		"RefreshPeriod": (1833, 2, (3, 0), (), "RefreshPeriod", None),
		"Refreshing": (1587, 2, (11, 0), (), "Refreshing", None),
		"RobustConnect": (2081, 2, (3, 0), (), "RobustConnect", None),
		"SavePassword": (1481, 2, (11, 0), (), "SavePassword", None),
		"ServerCredentialsMethod": (2704, 2, (3, 0), (), "ServerCredentialsMethod", None),
		"ServerSSOApplicationID": (2705, 2, (8, 0), (), "ServerSSOApplicationID", None),
		"SourceConnectionFile": (2079, 2, (8, 0), (), "SourceConnectionFile", None),
		"SourceData": (686, 2, (12, 0), (), "SourceData", None),
		"SourceDataFile": (2080, 2, (8, 0), (), "SourceDataFile", None),
	}
	_prop_map_put_ = {
		"AlwaysUseConnectionFile": ((2706, LCID, 4, 0),()),
		"BackgroundQuery": ((1427, LCID, 4, 0),()),
		"CommandText": ((1829, LCID, 4, 0),()),
		"CommandType": ((1830, LCID, 4, 0),()),
		"Connection": ((1432, LCID, 4, 0),()),
		"EnableRefresh": ((1477, LCID, 4, 0),()),
		"RefreshOnFileOpen": ((1479, LCID, 4, 0),()),
		"RefreshPeriod": ((1833, LCID, 4, 0),()),
		"RobustConnect": ((2081, LCID, 4, 0),()),
		"SavePassword": ((1481, LCID, 4, 0),()),
		"ServerCredentialsMethod": ((2704, LCID, 4, 0),()),
		"ServerSSOApplicationID": ((2705, LCID, 4, 0),()),
		"SourceConnectionFile": ((2079, LCID, 4, 0),()),
		"SourceData": ((686, LCID, 4, 0),()),
		"SourceDataFile": ((2080, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ODBCError(DispatchBaseClass):
	CLSID = IID('{0002442C-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"ErrorString": (1490, 2, (8, 0), (), "ErrorString", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"SqlState": (1603, 2, (8, 0), (), "SqlState", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ODBCErrors(DispatchBaseClass):
	CLSID = IID('{0002442D-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ODBCError
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0002442C-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ODBCError
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{0002442C-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0002442C-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0002442C-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{0002442C-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class OLEDBConnection(DispatchBaseClass):
	CLSID = IID('{0002448D-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def CancelRefresh(self):
		return self._oleobj_.InvokeTypes(1589, LCID, 1, (24, 0), (),)

	def MakeConnection(self):
		return self._oleobj_.InvokeTypes(2076, LCID, 1, (24, 0), (),)

	def Reconnect(self):
		return self._oleobj_.InvokeTypes(2939, LCID, 1, (24, 0), (),)

	def Refresh(self):
		return self._oleobj_.InvokeTypes(1417, LCID, 1, (24, 0), (),)

	def SaveAsODC(self, ODCFileName=defaultNamedNotOptArg, Description=defaultNamedOptArg, Keywords=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2082, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17)),ODCFileName
			, Description, Keywords)

	_prop_map_get_ = {
		"ADOConnection": (2074, 2, (9, 0), (), "ADOConnection", None),
		"AlwaysUseConnectionFile": (2706, 2, (11, 0), (), "AlwaysUseConnectionFile", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"BackgroundQuery": (1427, 2, (11, 0), (), "BackgroundQuery", None),
		# Method 'CalculatedMembers' returns object of type 'CalculatedMembers'
		"CalculatedMembers": (2125, 2, (9, 0), (), "CalculatedMembers", '{00024454-0000-0000-C000-000000000046}'),
		"CommandText": (1829, 2, (12, 0), (), "CommandText", None),
		"CommandType": (1830, 2, (3, 0), (), "CommandType", None),
		"Connection": (1432, 2, (12, 0), (), "Connection", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"EnableRefresh": (1477, 2, (11, 0), (), "EnableRefresh", None),
		"IsConnected": (2075, 2, (11, 0), (), "IsConnected", None),
		"LocalConnection": (1835, 2, (12, 0), (), "LocalConnection", None),
		"LocaleID": (2940, 2, (3, 0), (), "LocaleID", None),
		"MaintainConnection": (1832, 2, (11, 0), (), "MaintainConnection", None),
		"MaxDrillthroughRecords": (2703, 2, (3, 0), (), "MaxDrillthroughRecords", None),
		"OLAP": (2077, 2, (11, 0), (), "OLAP", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"RefreshDate": (696, 2, (7, 0), (), "RefreshDate", None),
		"RefreshOnFileOpen": (1479, 2, (11, 0), (), "RefreshOnFileOpen", None),
		"RefreshPeriod": (1833, 2, (3, 0), (), "RefreshPeriod", None),
		"Refreshing": (1587, 2, (11, 0), (), "Refreshing", None),
		"RetrieveInOfficeUILang": (2711, 2, (11, 0), (), "RetrieveInOfficeUILang", None),
		"RobustConnect": (2081, 2, (3, 0), (), "RobustConnect", None),
		"SavePassword": (1481, 2, (11, 0), (), "SavePassword", None),
		"ServerCredentialsMethod": (2704, 2, (3, 0), (), "ServerCredentialsMethod", None),
		"ServerFillColor": (2707, 2, (11, 0), (), "ServerFillColor", None),
		"ServerFontStyle": (2708, 2, (11, 0), (), "ServerFontStyle", None),
		"ServerNumberFormat": (2709, 2, (11, 0), (), "ServerNumberFormat", None),
		"ServerSSOApplicationID": (2705, 2, (8, 0), (), "ServerSSOApplicationID", None),
		"ServerTextColor": (2710, 2, (11, 0), (), "ServerTextColor", None),
		"SourceConnectionFile": (2079, 2, (8, 0), (), "SourceConnectionFile", None),
		"SourceDataFile": (2080, 2, (8, 0), (), "SourceDataFile", None),
		"UseLocalConnection": (1837, 2, (11, 0), (), "UseLocalConnection", None),
	}
	_prop_map_put_ = {
		"AlwaysUseConnectionFile": ((2706, LCID, 4, 0),()),
		"BackgroundQuery": ((1427, LCID, 4, 0),()),
		"CommandText": ((1829, LCID, 4, 0),()),
		"CommandType": ((1830, LCID, 4, 0),()),
		"Connection": ((1432, LCID, 4, 0),()),
		"EnableRefresh": ((1477, LCID, 4, 0),()),
		"LocalConnection": ((1835, LCID, 4, 0),()),
		"LocaleID": ((2940, LCID, 4, 0),()),
		"MaintainConnection": ((1832, LCID, 4, 0),()),
		"MaxDrillthroughRecords": ((2703, LCID, 4, 0),()),
		"RefreshOnFileOpen": ((1479, LCID, 4, 0),()),
		"RefreshPeriod": ((1833, LCID, 4, 0),()),
		"RetrieveInOfficeUILang": ((2711, LCID, 4, 0),()),
		"RobustConnect": ((2081, LCID, 4, 0),()),
		"SavePassword": ((1481, LCID, 4, 0),()),
		"ServerCredentialsMethod": ((2704, LCID, 4, 0),()),
		"ServerFillColor": ((2707, LCID, 4, 0),()),
		"ServerFontStyle": ((2708, LCID, 4, 0),()),
		"ServerNumberFormat": ((2709, LCID, 4, 0),()),
		"ServerSSOApplicationID": ((2705, LCID, 4, 0),()),
		"ServerTextColor": ((2710, LCID, 4, 0),()),
		"SourceConnectionFile": ((2079, LCID, 4, 0),()),
		"SourceDataFile": ((2080, LCID, 4, 0),()),
		"UseLocalConnection": ((1837, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class OLEDBError(DispatchBaseClass):
	CLSID = IID('{00024445-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"ErrorString": (1490, 2, (8, 0), (), "ErrorString", None),
		"Native": (1897, 2, (3, 0), (), "Native", None),
		"Number": (451, 2, (3, 0), (), "Number", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"SqlState": (1603, 2, (8, 0), (), "SqlState", None),
		"Stage": (1898, 2, (3, 0), (), "Stage", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class OLEDBErrors(DispatchBaseClass):
	CLSID = IID('{00024446-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type OLEDBError
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024445-0000-0000-C000-000000000046}')
		return ret

	# Result is of type OLEDBError
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024445-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024445-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024445-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{00024445-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class OLEFormat(DispatchBaseClass):
	CLSID = IID('{00024441-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Activate(self):
		return self._oleobj_.InvokeTypes(304, LCID, 1, (24, 0), (),)

	def Verb(self, Verb=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(606, LCID, 1, (24, 0), ((12, 17),),Verb
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Object": (1049, 2, (9, 0), (), "Object", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"progID": (1523, 2, (8, 0), (), "progID", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class OLEObjectEvents:
	CLSID = CLSID_Sink = IID('{00024410-0000-0000-C000-000000000046}')
	coclass_clsid = IID('{00020818-0000-0000-C000-000000000046}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		1610612736 : "OnQueryInterface",
		1610612737 : "OnAddRef",
		1610612738 : "OnRelease",
		1610678272 : "OnGetTypeInfoCount",
		1610678273 : "OnGetTypeInfo",
		1610678274 : "OnGetIDsOfNames",
		1610678275 : "OnInvoke",
		     1541 : "OnGotFocus",
		     1542 : "OnLostFocus",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnQueryInterface(self, riid=defaultNamedNotOptArg, ppvObj=pythoncom.Missing):
#	def OnAddRef(self):
#	def OnRelease(self):
#	def OnGetTypeInfoCount(self, pctinfo=pythoncom.Missing):
#	def OnGetTypeInfo(self, itinfo=defaultNamedNotOptArg, lcid=defaultNamedNotOptArg, pptinfo=pythoncom.Missing):
#	def OnGetIDsOfNames(self, riid=defaultNamedNotOptArg, rgszNames=defaultNamedNotOptArg, cNames=defaultNamedNotOptArg, lcid=defaultNamedNotOptArg
#			, rgdispid=pythoncom.Missing):
#	def OnInvoke(self, dispidMember=defaultNamedNotOptArg, riid=defaultNamedNotOptArg, lcid=defaultNamedNotOptArg, wFlags=defaultNamedNotOptArg
#			, pdispparams=defaultNamedNotOptArg, pvarResult=pythoncom.Missing, pexcepinfo=pythoncom.Missing, puArgErr=pythoncom.Missing):
#	def OnGotFocus(self):
#	def OnLostFocus(self):


class OLEObjects(DispatchBaseClass):
	CLSID = IID('{000208A3-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type OLEObject
	def Add(self, ClassType=defaultNamedOptArg, Filename=defaultNamedOptArg, Link=defaultNamedOptArg, DisplayAsIcon=defaultNamedOptArg
			, IconFileName=defaultNamedOptArg, IconIndex=defaultNamedOptArg, IconLabel=defaultNamedOptArg, Left=defaultNamedOptArg, Top=defaultNamedOptArg
			, Width=defaultNamedOptArg, Height=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (13, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),ClassType
			, Filename, Link, DisplayAsIcon, IconFileName, IconIndex
			, IconLabel, Left, Top, Width, Height
			)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, 'Add', '{00020818-0000-0000-C000-000000000046}')
		return ret

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type GroupObject
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00020898-0000-0000-C000-000000000046}')
		return ret

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoLoad": (1186, 2, (11, 0), (), "AutoLoad", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"SourceName": (721, 2, (8, 0), (), "SourceName", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AutoLoad": ((1186, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"SourceName": ((721, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class OptionButton(DispatchBaseClass):
	CLSID = IID('{00020881-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		"Accelerator": (846, 2, (12, 0), (), "Accelerator", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		# Method 'BottomRightCell' returns object of type 'Range'
		"BottomRightCell": (615, 2, (9, 0), (), "BottomRightCell", '{00020846-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Display3DShading": (1122, 2, (11, 0), (), "Display3DShading", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		# Method 'GroupBox' returns object of type 'GroupBox'
		"GroupBox": (833, 2, (9, 0), (), "GroupBox", '{00020889-0000-0000-C000-000000000046}'),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"LinkedCell": (1058, 2, (8, 0), (), "LinkedCell", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (12, 0), (), "PhoneticAccelerator", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		# Method 'TopLeftCell' returns object of type 'Range'
		"TopLeftCell": (620, 2, (9, 0), (), "TopLeftCell", '{00020846-0000-0000-C000-000000000046}'),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
		"_Default": (0, 2, (3, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class OptionButtons(DispatchBaseClass):
	CLSID = IID('{00020882-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type OptionButton
	def Add(self, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),Left
			, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00020881-0000-0000-C000-000000000046}')
		return ret

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	# Result is of type GroupObject
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00020898-0000-0000-C000-000000000046}')
		return ret

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		"Accelerator": (846, 2, (12, 0), (), "Accelerator", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Display3DShading": (1122, 2, (11, 0), (), "Display3DShading", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		# Method 'GroupBox' returns object of type 'GroupBox'
		"GroupBox": (833, 2, (9, 0), (), "GroupBox", '{00020889-0000-0000-C000-000000000046}'),
		"Height": (123, 2, (5, 0), (), "Height", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"LinkedCell": (1058, 2, (8, 0), (), "LinkedCell", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PhoneticAccelerator": (1121, 2, (12, 0), (), "PhoneticAccelerator", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
		"_Default": (0, 2, (3, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Accelerator": ((846, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"PhoneticAccelerator": ((1121, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Outline(DispatchBaseClass):
	CLSID = IID('{000208AB-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def ShowLevels(self, RowLevels=defaultNamedOptArg, ColumnLevels=defaultNamedOptArg):
		return self._ApplyTypes_(960, 1, (12, 0), ((12, 17), (12, 17)), 'ShowLevels', None,RowLevels
			, ColumnLevels)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutomaticStyles": (959, 2, (11, 0), (), "AutomaticStyles", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"SummaryColumn": (961, 2, (3, 0), (), "SummaryColumn", None),
		"SummaryRow": (902, 2, (3, 0), (), "SummaryRow", None),
	}
	_prop_map_put_ = {
		"AutomaticStyles": ((959, LCID, 4, 0),()),
		"SummaryColumn": ((961, LCID, 4, 0),()),
		"SummaryRow": ((902, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Oval(DispatchBaseClass):
	CLSID = IID('{0002089E-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (11, 0), (), "AddIndent", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		"AutoSize": (614, 2, (11, 0), (), "AutoSize", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		# Method 'BottomRightCell' returns object of type 'Range'
		"BottomRightCell": (615, 2, (9, 0), (), "BottomRightCell", '{00020846-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		# Method 'TopLeftCell' returns object of type 'Range'
		"TopLeftCell": (620, 2, (9, 0), (), "TopLeftCell", '{00020846-0000-0000-C000-000000000046}'),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Ovals(DispatchBaseClass):
	CLSID = IID('{0002089F-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Oval
	def Add(self, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),Left
			, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0002089E-0000-0000-C000-000000000046}')
		return ret

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	# Result is of type GroupObject
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00020898-0000-0000-C000-000000000046}')
		return ret

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (11, 0), (), "AddIndent", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		"AutoSize": (614, 2, (11, 0), (), "AutoSize", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Page(DispatchBaseClass):
	CLSID = IID('{000244A2-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'CenterFooter' returns object of type 'HeaderFooter'
		"CenterFooter": (1010, 2, (9, 0), (), "CenterFooter", '{000244A1-0000-0000-C000-000000000046}'),
		# Method 'CenterHeader' returns object of type 'HeaderFooter'
		"CenterHeader": (1011, 2, (9, 0), (), "CenterHeader", '{000244A1-0000-0000-C000-000000000046}'),
		# Method 'LeftFooter' returns object of type 'HeaderFooter'
		"LeftFooter": (1017, 2, (9, 0), (), "LeftFooter", '{000244A1-0000-0000-C000-000000000046}'),
		# Method 'LeftHeader' returns object of type 'HeaderFooter'
		"LeftHeader": (1018, 2, (9, 0), (), "LeftHeader", '{000244A1-0000-0000-C000-000000000046}'),
		# Method 'RightFooter' returns object of type 'HeaderFooter'
		"RightFooter": (1025, 2, (9, 0), (), "RightFooter", '{000244A1-0000-0000-C000-000000000046}'),
		# Method 'RightHeader' returns object of type 'HeaderFooter'
		"RightHeader": (1026, 2, (9, 0), (), "RightHeader", '{000244A1-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class PageSetup(DispatchBaseClass):
	CLSID = IID('{000208B4-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# The method GetPrintQuality is actually a property, but must be used as a method to correctly pass the arguments
	def GetPrintQuality(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(1022, 2, (12, 0), ((12, 17),), 'GetPrintQuality', None,Index
			)

	# The method SetPrintQuality is actually a property, but must be used as a method to correctly pass the arguments
	def SetPrintQuality(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(1022, LCID, 4, (24, 0), ((12, 17), (12, 1)),Index
			, arg1)

	_prop_map_get_ = {
		"AlignMarginsHeaderFooter": (2603, 2, (11, 0), (), "AlignMarginsHeaderFooter", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"BlackAndWhite": (1009, 2, (11, 0), (), "BlackAndWhite", None),
		"BottomMargin": (1002, 2, (5, 0), (), "BottomMargin", None),
		"CenterFooter": (1010, 2, (8, 0), (), "CenterFooter", None),
		# Method 'CenterFooterPicture' returns object of type 'Graphic'
		"CenterFooterPicture": (2151, 2, (9, 0), (), "CenterFooterPicture", '{00024459-0000-0000-C000-000000000046}'),
		"CenterHeader": (1011, 2, (8, 0), (), "CenterHeader", None),
		# Method 'CenterHeaderPicture' returns object of type 'Graphic'
		"CenterHeaderPicture": (2150, 2, (9, 0), (), "CenterHeaderPicture", '{00024459-0000-0000-C000-000000000046}'),
		"CenterHorizontally": (1005, 2, (11, 0), (), "CenterHorizontally", None),
		"CenterVertically": (1006, 2, (11, 0), (), "CenterVertically", None),
		"ChartSize": (1012, 2, (3, 0), (), "ChartSize", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DifferentFirstPageHeaderFooter": (2601, 2, (11, 0), (), "DifferentFirstPageHeaderFooter", None),
		"Draft": (1020, 2, (11, 0), (), "Draft", None),
		# Method 'EvenPage' returns object of type 'Page'
		"EvenPage": (2605, 2, (9, 0), (), "EvenPage", '{000244A2-0000-0000-C000-000000000046}'),
		# Method 'FirstPage' returns object of type 'Page'
		"FirstPage": (2606, 2, (9, 0), (), "FirstPage", '{000244A2-0000-0000-C000-000000000046}'),
		"FirstPageNumber": (1008, 2, (3, 0), (), "FirstPageNumber", None),
		"FitToPagesTall": (1013, 2, (12, 0), (), "FitToPagesTall", None),
		"FitToPagesWide": (1014, 2, (12, 0), (), "FitToPagesWide", None),
		"FooterMargin": (1015, 2, (5, 0), (), "FooterMargin", None),
		"HeaderMargin": (1016, 2, (5, 0), (), "HeaderMargin", None),
		"LeftFooter": (1017, 2, (8, 0), (), "LeftFooter", None),
		# Method 'LeftFooterPicture' returns object of type 'Graphic'
		"LeftFooterPicture": (2153, 2, (9, 0), (), "LeftFooterPicture", '{00024459-0000-0000-C000-000000000046}'),
		"LeftHeader": (1018, 2, (8, 0), (), "LeftHeader", None),
		# Method 'LeftHeaderPicture' returns object of type 'Graphic'
		"LeftHeaderPicture": (2152, 2, (9, 0), (), "LeftHeaderPicture", '{00024459-0000-0000-C000-000000000046}'),
		"LeftMargin": (999, 2, (5, 0), (), "LeftMargin", None),
		"OddAndEvenPagesHeaderFooter": (2600, 2, (11, 0), (), "OddAndEvenPagesHeaderFooter", None),
		"Order": (192, 2, (3, 0), (), "Order", None),
		"Orientation": (134, 2, (3, 0), (), "Orientation", None),
		# Method 'Pages' returns object of type 'Pages'
		"Pages": (2604, 2, (9, 0), (), "Pages", '{000244A3-0000-0000-C000-000000000046}'),
		"PaperSize": (1007, 2, (3, 0), (), "PaperSize", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PrintArea": (1019, 2, (8, 0), (), "PrintArea", None),
		"PrintComments": (1524, 2, (3, 0), (), "PrintComments", None),
		"PrintErrors": (2149, 2, (3, 0), (), "PrintErrors", None),
		"PrintGridlines": (1004, 2, (11, 0), (), "PrintGridlines", None),
		"PrintHeadings": (1003, 2, (11, 0), (), "PrintHeadings", None),
		"PrintNotes": (1021, 2, (11, 0), (), "PrintNotes", None),
		"PrintQuality": (1022, 2, (12, 0), ((12, 17),), "PrintQuality", None),
		"PrintTitleColumns": (1023, 2, (8, 0), (), "PrintTitleColumns", None),
		"PrintTitleRows": (1024, 2, (8, 0), (), "PrintTitleRows", None),
		"RightFooter": (1025, 2, (8, 0), (), "RightFooter", None),
		# Method 'RightFooterPicture' returns object of type 'Graphic'
		"RightFooterPicture": (2155, 2, (9, 0), (), "RightFooterPicture", '{00024459-0000-0000-C000-000000000046}'),
		"RightHeader": (1026, 2, (8, 0), (), "RightHeader", None),
		# Method 'RightHeaderPicture' returns object of type 'Graphic'
		"RightHeaderPicture": (2154, 2, (9, 0), (), "RightHeaderPicture", '{00024459-0000-0000-C000-000000000046}'),
		"RightMargin": (1000, 2, (5, 0), (), "RightMargin", None),
		"ScaleWithDocHeaderFooter": (2602, 2, (11, 0), (), "ScaleWithDocHeaderFooter", None),
		"TopMargin": (1001, 2, (5, 0), (), "TopMargin", None),
		"Zoom": (663, 2, (12, 0), (), "Zoom", None),
	}
	_prop_map_put_ = {
		"AlignMarginsHeaderFooter": ((2603, LCID, 4, 0),()),
		"BlackAndWhite": ((1009, LCID, 4, 0),()),
		"BottomMargin": ((1002, LCID, 4, 0),()),
		"CenterFooter": ((1010, LCID, 4, 0),()),
		"CenterHeader": ((1011, LCID, 4, 0),()),
		"CenterHorizontally": ((1005, LCID, 4, 0),()),
		"CenterVertically": ((1006, LCID, 4, 0),()),
		"ChartSize": ((1012, LCID, 4, 0),()),
		"DifferentFirstPageHeaderFooter": ((2601, LCID, 4, 0),()),
		"Draft": ((1020, LCID, 4, 0),()),
		"FirstPageNumber": ((1008, LCID, 4, 0),()),
		"FitToPagesTall": ((1013, LCID, 4, 0),()),
		"FitToPagesWide": ((1014, LCID, 4, 0),()),
		"FooterMargin": ((1015, LCID, 4, 0),()),
		"HeaderMargin": ((1016, LCID, 4, 0),()),
		"LeftFooter": ((1017, LCID, 4, 0),()),
		"LeftHeader": ((1018, LCID, 4, 0),()),
		"LeftMargin": ((999, LCID, 4, 0),()),
		"OddAndEvenPagesHeaderFooter": ((2600, LCID, 4, 0),()),
		"Order": ((192, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"PaperSize": ((1007, LCID, 4, 0),()),
		"PrintArea": ((1019, LCID, 4, 0),()),
		"PrintComments": ((1524, LCID, 4, 0),()),
		"PrintErrors": ((2149, LCID, 4, 0),()),
		"PrintGridlines": ((1004, LCID, 4, 0),()),
		"PrintHeadings": ((1003, LCID, 4, 0),()),
		"PrintNotes": ((1021, LCID, 4, 0),()),
		"PrintQuality": ((1022, LCID, 4, 0),()),
		"PrintTitleColumns": ((1023, LCID, 4, 0),()),
		"PrintTitleRows": ((1024, LCID, 4, 0),()),
		"RightFooter": ((1025, LCID, 4, 0),()),
		"RightHeader": ((1026, LCID, 4, 0),()),
		"RightMargin": ((1000, LCID, 4, 0),()),
		"ScaleWithDocHeaderFooter": ((2602, LCID, 4, 0),()),
		"TopMargin": ((1001, LCID, 4, 0),()),
		"Zoom": ((663, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Pages(DispatchBaseClass):
	CLSID = IID('{000244A3-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Page
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244A2-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Page
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244A2-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		"Count": (118, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244A2-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244A2-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{000244A2-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Pane(DispatchBaseClass):
	CLSID = IID('{00020895-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Activate(self):
		return self._oleobj_.InvokeTypes(304, LCID, 1, (11, 0), (),)

	def LargeScroll(self, Down=defaultNamedOptArg, Up=defaultNamedOptArg, ToRight=defaultNamedOptArg, ToLeft=defaultNamedOptArg):
		return self._ApplyTypes_(547, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'LargeScroll', None,Down
			, Up, ToRight, ToLeft)

	def PointsToScreenPixelsX(self, Points=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1776, LCID, 1, (3, 0), ((3, 1),),Points
			)

	def PointsToScreenPixelsY(self, Points=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1777, LCID, 1, (3, 0), ((3, 1),),Points
			)

	def ScrollIntoView(self, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg
			, Start=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1781, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 17)),Left
			, Top, Width, Height, Start)

	def SmallScroll(self, Down=defaultNamedOptArg, Up=defaultNamedOptArg, ToRight=defaultNamedOptArg, ToLeft=defaultNamedOptArg):
		return self._ApplyTypes_(548, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'SmallScroll', None,Down
			, Up, ToRight, ToLeft)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"ScrollColumn": (654, 2, (3, 0), (), "ScrollColumn", None),
		"ScrollRow": (655, 2, (3, 0), (), "ScrollRow", None),
		# Method 'VisibleRange' returns object of type 'Range'
		"VisibleRange": (1118, 2, (9, 0), (), "VisibleRange", '{00020846-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
		"ScrollColumn": ((654, LCID, 4, 0),()),
		"ScrollRow": ((655, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Panes(DispatchBaseClass):
	CLSID = IID('{00020894-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Pane
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00020895-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Pane
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00020895-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00020895-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00020895-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00020895-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Parameter(DispatchBaseClass):
	CLSID = IID('{0002442A-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def SetParam(self, Type=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1601, LCID, 1, (24, 0), ((3, 1), (12, 1)),Type
			, Value)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DataType": (722, 2, (3, 0), (), "DataType", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PromptString": (1599, 2, (8, 0), (), "PromptString", None),
		"RefreshOnChange": (1879, 2, (11, 0), (), "RefreshOnChange", None),
		# Method 'SourceRange' returns object of type 'Range'
		"SourceRange": (1600, 2, (9, 0), (), "SourceRange", '{00020846-0000-0000-C000-000000000046}'),
		"Type": (108, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
	}
	_prop_map_put_ = {
		"DataType": ((722, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"RefreshOnChange": ((1879, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Parameters(DispatchBaseClass):
	CLSID = IID('{0002442B-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Parameter
	def Add(self, Name=defaultNamedNotOptArg, iDataType=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1), (12, 17)),Name
			, iDataType)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0002442A-0000-0000-C000-000000000046}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	# Result is of type Parameter
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0002442A-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Parameter
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{0002442A-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0002442A-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0002442A-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{0002442A-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Phonetic(DispatchBaseClass):
	CLSID = IID('{00024438-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Alignment": (453, 2, (3, 0), (), "Alignment", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"CharacterType": (1674, 2, (3, 0), (), "CharacterType", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Alignment": ((453, LCID, 4, 0),()),
		"CharacterType": ((1674, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Phonetics(DispatchBaseClass):
	CLSID = IID('{00024447-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Add(self, Start=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, Text=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(181, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 1)),Start
			, Length, Text)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', None)
		return ret

	_prop_map_get_ = {
		"Alignment": (453, 2, (3, 0), (), "Alignment", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"CharacterType": (1674, 2, (3, 0), (), "CharacterType", None),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"Length": (609, 2, (3, 0), (), "Length", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Start": (608, 2, (3, 0), (), "Start", None),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Alignment": ((453, LCID, 4, 0),()),
		"CharacterType": ((1674, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', None)
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Picture(DispatchBaseClass):
	CLSID = IID('{000208A6-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		# Method 'BottomRightCell' returns object of type 'Range'
		"BottomRightCell": (615, 2, (9, 0), (), "BottomRightCell", '{00020846-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Top": (126, 2, (5, 0), (), "Top", None),
		# Method 'TopLeftCell' returns object of type 'Range'
		"TopLeftCell": (620, 2, (9, 0), (), "TopLeftCell", '{00020846-0000-0000-C000-000000000046}'),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class PictureFormat(DispatchBaseClass):
	CLSID = IID('{000C031A-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def IncrementBrightness(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def IncrementContrast(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	_prop_map_get_ = {
		"Application": (1610743808, 2, (9, 0), (), "Application", None),
		"Brightness": (100, 2, (4, 0), (), "Brightness", None),
		"ColorType": (101, 2, (3, 0), (), "ColorType", None),
		"Contrast": (102, 2, (4, 0), (), "Contrast", None),
		"Creator": (1610743809, 2, (3, 0), (), "Creator", None),
		# Method 'Crop' returns object of type 'Crop'
		"Crop": (109, 2, (9, 0), (), "Crop", '{000C03D3-0000-0000-C000-000000000046}'),
		"CropBottom": (103, 2, (4, 0), (), "CropBottom", None),
		"CropLeft": (104, 2, (4, 0), (), "CropLeft", None),
		"CropRight": (105, 2, (4, 0), (), "CropRight", None),
		"CropTop": (106, 2, (4, 0), (), "CropTop", None),
		"Parent": (1, 2, (9, 0), (), "Parent", None),
		"TransparencyColor": (107, 2, (3, 0), (), "TransparencyColor", None),
		"TransparentBackground": (108, 2, (3, 0), (), "TransparentBackground", None),
	}
	_prop_map_put_ = {
		"Brightness": ((100, LCID, 4, 0),()),
		"ColorType": ((101, LCID, 4, 0),()),
		"Contrast": ((102, LCID, 4, 0),()),
		"CropBottom": ((103, LCID, 4, 0),()),
		"CropLeft": ((104, LCID, 4, 0),()),
		"CropRight": ((105, LCID, 4, 0),()),
		"CropTop": ((106, LCID, 4, 0),()),
		"TransparencyColor": ((107, LCID, 4, 0),()),
		"TransparentBackground": ((108, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Pictures(DispatchBaseClass):
	CLSID = IID('{000208A7-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Picture
	def Add(self, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),Left
			, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{000208A6-0000-0000-C000-000000000046}')
		return ret

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type GroupObject
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00020898-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Picture
	def Insert(self, Filename=defaultNamedNotOptArg, Converter=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(252, LCID, 1, (9, 0), ((8, 1), (12, 17)),Filename
			, Converter)
		if ret is not None:
			ret = Dispatch(ret, 'Insert', '{000208A6-0000-0000-C000-000000000046}')
		return ret

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	# Result is of type Picture
	def Paste(self, Link=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(211, LCID, 1, (9, 0), ((12, 17),),Link
			)
		if ret is not None:
			ret = Dispatch(ret, 'Paste', '{000208A6-0000-0000-C000-000000000046}')
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class PivotAxis(DispatchBaseClass):
	CLSID = IID('{00024482-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'PivotLines' returns object of type 'PivotLines'
		"PivotLines": (2685, 2, (9, 0), (), "PivotLines", '{00024481-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class PivotCache(DispatchBaseClass):
	CLSID = IID('{0002441C-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Shape
	def CreatePivotChart(self, ChartDestination=defaultNamedNotOptArg, XlChartType=defaultNamedOptArg, Left=defaultNamedOptArg, Top=defaultNamedOptArg
			, Width=defaultNamedOptArg, Height=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3062, LCID, 1, (9, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),ChartDestination
			, XlChartType, Left, Top, Width, Height
			)
		if ret is not None:
			ret = Dispatch(ret, 'CreatePivotChart', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type PivotTable
	def CreatePivotTable(self, TableDestination=defaultNamedNotOptArg, TableName=defaultNamedOptArg, ReadData=defaultNamedOptArg, DefaultVersion=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1836, LCID, 1, (9, 0), ((12, 1), (12, 17), (12, 17), (12, 17)),TableDestination
			, TableName, ReadData, DefaultVersion)
		if ret is not None:
			ret = Dispatch(ret, 'CreatePivotTable', '{00020872-0000-0000-C000-000000000046}')
		return ret

	def MakeConnection(self):
		return self._oleobj_.InvokeTypes(2076, LCID, 1, (24, 0), (),)

	def Refresh(self):
		return self._oleobj_.InvokeTypes(1417, LCID, 1, (24, 0), (),)

	def ResetTimer(self):
		return self._oleobj_.InvokeTypes(1834, LCID, 1, (24, 0), (),)

	def SaveAsODC(self, ODCFileName=defaultNamedNotOptArg, Description=defaultNamedOptArg, Keywords=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2082, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17)),ODCFileName
			, Description, Keywords)

	_prop_map_get_ = {
		"ADOConnection": (2074, 2, (9, 0), (), "ADOConnection", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"BackgroundQuery": (1427, 2, (11, 0), (), "BackgroundQuery", None),
		"CommandText": (1829, 2, (12, 0), (), "CommandText", None),
		"CommandType": (1830, 2, (3, 0), (), "CommandType", None),
		"Connection": (1432, 2, (12, 0), (), "Connection", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"EnableRefresh": (1477, 2, (11, 0), (), "EnableRefresh", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"IsConnected": (2075, 2, (11, 0), (), "IsConnected", None),
		"LocalConnection": (1835, 2, (12, 0), (), "LocalConnection", None),
		"MaintainConnection": (1832, 2, (11, 0), (), "MaintainConnection", None),
		"MemoryUsed": (372, 2, (3, 0), (), "MemoryUsed", None),
		"MissingItemsLimit": (2078, 2, (3, 0), (), "MissingItemsLimit", None),
		"OLAP": (2077, 2, (11, 0), (), "OLAP", None),
		"OptimizeCache": (1428, 2, (11, 0), (), "OptimizeCache", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"QueryType": (1831, 2, (3, 0), (), "QueryType", None),
		"RecordCount": (1478, 2, (3, 0), (), "RecordCount", None),
		"Recordset": (1165, 2, (9, 0), (), "Recordset", None),
		"RefreshDate": (696, 2, (7, 0), (), "RefreshDate", None),
		"RefreshName": (697, 2, (8, 0), (), "RefreshName", None),
		"RefreshOnFileOpen": (1479, 2, (11, 0), (), "RefreshOnFileOpen", None),
		"RefreshPeriod": (1833, 2, (3, 0), (), "RefreshPeriod", None),
		"RobustConnect": (2081, 2, (3, 0), (), "RobustConnect", None),
		"SavePassword": (1481, 2, (11, 0), (), "SavePassword", None),
		"SourceConnectionFile": (2079, 2, (8, 0), (), "SourceConnectionFile", None),
		"SourceData": (686, 2, (12, 0), (), "SourceData", None),
		"SourceDataFile": (2080, 2, (8, 0), (), "SourceDataFile", None),
		"SourceType": (685, 2, (3, 0), (), "SourceType", None),
		"Sql": (1480, 2, (12, 0), (), "Sql", None),
		"UpgradeOnRefresh": (2545, 2, (11, 0), (), "UpgradeOnRefresh", None),
		"UseLocalConnection": (1837, 2, (11, 0), (), "UseLocalConnection", None),
		"Version": (392, 2, (3, 0), (), "Version", None),
		# Method 'WorkbookConnection' returns object of type 'WorkbookConnection'
		"WorkbookConnection": (2544, 2, (9, 0), (), "WorkbookConnection", '{00024485-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
		"BackgroundQuery": ((1427, LCID, 4, 0),()),
		"CommandText": ((1829, LCID, 4, 0),()),
		"CommandType": ((1830, LCID, 4, 0),()),
		"Connection": ((1432, LCID, 4, 0),()),
		"EnableRefresh": ((1477, LCID, 4, 0),()),
		"LocalConnection": ((1835, LCID, 4, 0),()),
		"MaintainConnection": ((1832, LCID, 4, 0),()),
		"MissingItemsLimit": ((2078, LCID, 4, 0),()),
		"OptimizeCache": ((1428, LCID, 4, 0),()),
		"Recordset": ((1165, LCID, 8, 0),()),
		"RefreshOnFileOpen": ((1479, LCID, 4, 0),()),
		"RefreshPeriod": ((1833, LCID, 4, 0),()),
		"RobustConnect": ((2081, LCID, 4, 0),()),
		"SavePassword": ((1481, LCID, 4, 0),()),
		"SourceConnectionFile": ((2079, LCID, 4, 0),()),
		"SourceData": ((686, LCID, 4, 0),()),
		"Sql": ((1480, LCID, 4, 0),()),
		"UpgradeOnRefresh": ((2545, LCID, 4, 0),()),
		"UseLocalConnection": ((1837, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class PivotCaches(DispatchBaseClass):
	CLSID = IID('{0002441D-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type PivotCache
	def Add(self, SourceType=defaultNamedNotOptArg, SourceData=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((3, 1), (12, 17)),SourceType
			, SourceData)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0002441C-0000-0000-C000-000000000046}')
		return ret

	# Result is of type PivotCache
	def Create(self, SourceType=defaultNamedNotOptArg, SourceData=defaultNamedOptArg, Version=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1896, LCID, 1, (9, 0), ((3, 1), (12, 17), (12, 17)),SourceType
			, SourceData, Version)
		if ret is not None:
			ret = Dispatch(ret, 'Create', '{0002441C-0000-0000-C000-000000000046}')
		return ret

	# Result is of type PivotCache
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0002441C-0000-0000-C000-000000000046}')
		return ret

	# Result is of type PivotCache
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{0002441C-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0002441C-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0002441C-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{0002441C-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class PivotCell(DispatchBaseClass):
	CLSID = IID('{00024458-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def AllocateChange(self):
		return self._oleobj_.InvokeTypes(2928, LCID, 1, (24, 0), (),)

	def DiscardChange(self):
		return self._oleobj_.InvokeTypes(2929, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"CellChanged": (2931, 2, (3, 0), (), "CellChanged", None),
		# Method 'ColumnItems' returns object of type 'PivotItemList'
		"ColumnItems": (2191, 2, (9, 0), (), "ColumnItems", '{00024468-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"CustomSubtotalFunction": (2193, 2, (3, 0), (), "CustomSubtotalFunction", None),
		# Method 'DataField' returns object of type 'PivotField'
		"DataField": (2091, 2, (9, 0), (), "DataField", '{00020874-0000-0000-C000-000000000046}'),
		"DataSourceValue": (2930, 2, (12, 0), (), "DataSourceValue", None),
		"Dummy18": (2295, 2, (8, 0), (), "Dummy18", None),
		"MDX": (2123, 2, (8, 0), (), "MDX", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PivotCellType": (2189, 2, (3, 0), (), "PivotCellType", None),
		# Method 'PivotColumnLine' returns object of type 'PivotLine'
		"PivotColumnLine": (2674, 2, (9, 0), (), "PivotColumnLine", '{00024480-0000-0000-C000-000000000046}'),
		# Method 'PivotField' returns object of type 'PivotField'
		"PivotField": (731, 2, (9, 0), (), "PivotField", '{00020874-0000-0000-C000-000000000046}'),
		# Method 'PivotItem' returns object of type 'PivotItem'
		"PivotItem": (740, 2, (9, 0), (), "PivotItem", '{00020876-0000-0000-C000-000000000046}'),
		# Method 'PivotRowLine' returns object of type 'PivotLine'
		"PivotRowLine": (2673, 2, (9, 0), (), "PivotRowLine", '{00024480-0000-0000-C000-000000000046}'),
		# Method 'PivotTable' returns object of type 'PivotTable'
		"PivotTable": (716, 2, (9, 0), (), "PivotTable", '{00020872-0000-0000-C000-000000000046}'),
		# Method 'Range' returns object of type 'Range'
		"Range": (197, 2, (9, 0), (), "Range", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'RowItems' returns object of type 'PivotItemList'
		"RowItems": (2190, 2, (9, 0), (), "RowItems", '{00024468-0000-0000-C000-000000000046}'),
		# Method 'ServerActions' returns object of type 'Actions'
		"ServerActions": (2491, 2, (9, 0), (), "ServerActions", '{00024490-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class PivotField(DispatchBaseClass):
	CLSID = IID('{00020874-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def AddPageItem(self, Item=defaultNamedNotOptArg, ClearList=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2146, LCID, 1, (24, 0), ((8, 1), (12, 17)),Item
			, ClearList)

	def AutoGroup(self):
		return self._oleobj_.InvokeTypes(3165, LCID, 1, (24, 0), (),)

	def AutoShow(self, Type=defaultNamedNotOptArg, Range=defaultNamedNotOptArg, Count=defaultNamedNotOptArg, Field=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1515, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (8, 1)),Type
			, Range, Count, Field)

	def AutoSort(self, Order=defaultNamedNotOptArg, Field=defaultNamedNotOptArg, PivotLine=defaultNamedOptArg, CustomSubtotal=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1514, LCID, 1, (24, 0), ((3, 1), (8, 1), (12, 17), (12, 17)),Order
			, Field, PivotLine, CustomSubtotal)

	# Result is of type CalculatedItems
	def CalculatedItems(self):
		ret = self._oleobj_.InvokeTypes(1507, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'CalculatedItems', '{00024421-0000-0000-C000-000000000046}')
		return ret

	def ClearAllFilters(self):
		return self._oleobj_.InvokeTypes(2561, LCID, 1, (24, 0), (),)

	def ClearLabelFilters(self):
		return self._oleobj_.InvokeTypes(2596, LCID, 1, (24, 0), (),)

	def ClearManualFilter(self):
		return self._oleobj_.InvokeTypes(2594, LCID, 1, (24, 0), (),)

	def ClearValueFilters(self):
		return self._oleobj_.InvokeTypes(2595, LCID, 1, (24, 0), (),)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def DrillTo(self, Field=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2580, LCID, 1, (24, 0), ((8, 1),),Field
			)

	# The method GetChildItems is actually a property, but must be used as a method to correctly pass the arguments
	def GetChildItems(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(730, 2, (12, 0), ((12, 17),), 'GetChildItems', None,Index
			)

	# The method GetHiddenItems is actually a property, but must be used as a method to correctly pass the arguments
	def GetHiddenItems(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(728, 2, (12, 0), ((12, 17),), 'GetHiddenItems', None,Index
			)

	# The method GetParentItems is actually a property, but must be used as a method to correctly pass the arguments
	def GetParentItems(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(729, 2, (12, 0), ((12, 17),), 'GetParentItems', None,Index
			)

	# The method GetSubtotals is actually a property, but must be used as a method to correctly pass the arguments
	def GetSubtotals(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(733, 2, (12, 0), ((12, 17),), 'GetSubtotals', None,Index
			)

	# The method GetVisibleItems is actually a property, but must be used as a method to correctly pass the arguments
	def GetVisibleItems(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(727, 2, (12, 0), ((12, 17),), 'GetVisibleItems', None,Index
			)

	def PivotItems(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(737, 1, (12, 0), ((12, 17),), 'PivotItems', None,Index
			)

	# The method SetSubtotals is actually a property, but must be used as a method to correctly pass the arguments
	def SetSubtotals(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(733, LCID, 4, (24, 0), ((12, 17), (12, 1)),Index
			, arg1)

	def _AutoSort(self, Order=defaultNamedNotOptArg, Field=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2579, LCID, 1, (24, 0), ((3, 1), (8, 1)),Order
			, Field)

	_prop_map_get_ = {
		"AllItemsVisible": (2593, 2, (11, 0), (), "AllItemsVisible", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoShowCount": (1520, 2, (3, 0), (), "AutoShowCount", None),
		"AutoShowField": (1521, 2, (8, 0), (), "AutoShowField", None),
		"AutoShowRange": (1519, 2, (3, 0), (), "AutoShowRange", None),
		"AutoShowType": (1518, 2, (3, 0), (), "AutoShowType", None),
		"AutoSortCustomSubtotal": (2591, 2, (3, 0), (), "AutoSortCustomSubtotal", None),
		"AutoSortField": (1517, 2, (8, 0), (), "AutoSortField", None),
		"AutoSortOrder": (1516, 2, (3, 0), (), "AutoSortOrder", None),
		# Method 'AutoSortPivotLine' returns object of type 'PivotLine'
		"AutoSortPivotLine": (2590, 2, (9, 0), (), "AutoSortPivotLine", '{00024480-0000-0000-C000-000000000046}'),
		"BaseField": (734, 2, (12, 0), (), "BaseField", None),
		"BaseItem": (735, 2, (12, 0), (), "BaseItem", None),
		"Calculation": (316, 2, (3, 0), (), "Calculation", None),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'ChildField' returns object of type 'PivotField'
		"ChildField": (736, 2, (9, 0), (), "ChildField", '{00020874-0000-0000-C000-000000000046}'),
		"ChildItems": (730, 2, (12, 0), ((12, 17),), "ChildItems", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'CubeField' returns object of type 'CubeField'
		"CubeField": (1851, 2, (9, 0), (), "CubeField", '{0002444C-0000-0000-C000-000000000046}'),
		"CurrentPage": (738, 2, (12, 0), (), "CurrentPage", None),
		"CurrentPageList": (2145, 2, (12, 0), (), "CurrentPageList", None),
		"CurrentPageName": (1852, 2, (8, 0), (), "CurrentPageName", None),
		# Method 'DataRange' returns object of type 'Range'
		"DataRange": (720, 2, (9, 0), (), "DataRange", '{00020846-0000-0000-C000-000000000046}'),
		"DataType": (722, 2, (3, 0), (), "DataType", None),
		"DatabaseSort": (2140, 2, (11, 0), (), "DatabaseSort", None),
		"DisplayAsCaption": (2585, 2, (11, 0), (), "DisplayAsCaption", None),
		"DisplayAsTooltip": (2583, 2, (11, 0), (), "DisplayAsTooltip", None),
		"DisplayInReport": (2584, 2, (11, 0), (), "DisplayInReport", None),
		"DragToColumn": (1508, 2, (11, 0), (), "DragToColumn", None),
		"DragToData": (1844, 2, (11, 0), (), "DragToData", None),
		"DragToHide": (1509, 2, (11, 0), (), "DragToHide", None),
		"DragToPage": (1510, 2, (11, 0), (), "DragToPage", None),
		"DragToRow": (1511, 2, (11, 0), (), "DragToRow", None),
		"DrilledDown": (1850, 2, (11, 0), (), "DrilledDown", None),
		"EnableItemSelection": (2144, 2, (11, 0), (), "EnableItemSelection", None),
		"EnableMultiplePageItems": (2184, 2, (11, 0), (), "EnableMultiplePageItems", None),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"Function": (899, 2, (3, 0), (), "Function", None),
		"GroupLevel": (723, 2, (12, 0), (), "GroupLevel", None),
		"Hidden": (268, 2, (11, 0), (), "Hidden", None),
		"HiddenItems": (728, 2, (12, 0), ((12, 17),), "HiddenItems", None),
		"HiddenItemsList": (2139, 2, (12, 0), (), "HiddenItemsList", None),
		"IncludeNewItemsInFilter": (2587, 2, (11, 0), (), "IncludeNewItemsInFilter", None),
		"IsCalculated": (1512, 2, (11, 0), (), "IsCalculated", None),
		"IsMemberProperty": (2141, 2, (11, 0), (), "IsMemberProperty", None),
		# Method 'LabelRange' returns object of type 'Range'
		"LabelRange": (719, 2, (9, 0), (), "LabelRange", '{00020846-0000-0000-C000-000000000046}'),
		"LayoutBlankLine": (1845, 2, (11, 0), (), "LayoutBlankLine", None),
		"LayoutCompactRow": (2586, 2, (11, 0), (), "LayoutCompactRow", None),
		"LayoutForm": (1848, 2, (3, 0), (), "LayoutForm", None),
		"LayoutPageBreak": (1847, 2, (11, 0), (), "LayoutPageBreak", None),
		"LayoutSubtotalLocation": (1846, 2, (3, 0), (), "LayoutSubtotalLocation", None),
		"MemberPropertyCaption": (2582, 2, (8, 0), (), "MemberPropertyCaption", None),
		"MemoryUsed": (372, 2, (3, 0), (), "MemoryUsed", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"NumberFormat": (193, 2, (8, 0), (), "NumberFormat", None),
		"Orientation": (134, 2, (3, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'ParentField' returns object of type 'PivotField'
		"ParentField": (732, 2, (9, 0), (), "ParentField", '{00020874-0000-0000-C000-000000000046}'),
		"ParentItems": (729, 2, (12, 0), ((12, 17),), "ParentItems", None),
		# Method 'PivotFilters' returns object of type 'PivotFilters'
		"PivotFilters": (2589, 2, (9, 0), (), "PivotFilters", '{00024484-0000-0000-C000-000000000046}'),
		"Position": (133, 2, (12, 0), (), "Position", None),
		"PropertyOrder": (2143, 2, (3, 0), (), "PropertyOrder", None),
		# Method 'PropertyParentField' returns object of type 'PivotField'
		"PropertyParentField": (2142, 2, (9, 0), (), "PropertyParentField", '{00020874-0000-0000-C000-000000000046}'),
		"RepeatLabels": (2885, 2, (11, 0), (), "RepeatLabels", None),
		"ServerBased": (1513, 2, (11, 0), (), "ServerBased", None),
		"ShowAllItems": (452, 2, (11, 0), (), "ShowAllItems", None),
		"ShowDetail": (585, 2, (11, 0), (), "ShowDetail", None),
		"ShowingInAxis": (2592, 2, (11, 0), (), "ShowingInAxis", None),
		"SourceCaption": (2599, 2, (8, 0), (), "SourceCaption", None),
		"SourceName": (721, 2, (8, 0), (), "SourceName", None),
		"StandardFormula": (2084, 2, (8, 0), (), "StandardFormula", None),
		"SubtotalName": (1849, 2, (8, 0), (), "SubtotalName", None),
		"Subtotals": (733, 2, (12, 0), ((12, 17),), "Subtotals", None),
		"TotalLevels": (724, 2, (12, 0), (), "TotalLevels", None),
		"UseMemberPropertyAsCaption": (2581, 2, (11, 0), (), "UseMemberPropertyAsCaption", None),
		"Value": (6, 2, (8, 0), (), "Value", None),
		"VisibleItems": (727, 2, (12, 0), ((12, 17),), "VisibleItems", None),
		"VisibleItemsList": (2588, 2, (12, 0), (), "VisibleItemsList", None),
		"_Default": (0, 2, (8, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"BaseField": ((734, LCID, 4, 0),()),
		"BaseItem": ((735, LCID, 4, 0),()),
		"Calculation": ((316, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"CurrentPage": ((738, LCID, 4, 0),()),
		"CurrentPageList": ((2145, LCID, 4, 0),()),
		"CurrentPageName": ((1852, LCID, 4, 0),()),
		"DatabaseSort": ((2140, LCID, 4, 0),()),
		"DisplayAsTooltip": ((2583, LCID, 4, 0),()),
		"DisplayInReport": ((2584, LCID, 4, 0),()),
		"DragToColumn": ((1508, LCID, 4, 0),()),
		"DragToData": ((1844, LCID, 4, 0),()),
		"DragToHide": ((1509, LCID, 4, 0),()),
		"DragToPage": ((1510, LCID, 4, 0),()),
		"DragToRow": ((1511, LCID, 4, 0),()),
		"DrilledDown": ((1850, LCID, 4, 0),()),
		"EnableItemSelection": ((2144, LCID, 4, 0),()),
		"EnableMultiplePageItems": ((2184, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Function": ((899, LCID, 4, 0),()),
		"Hidden": ((268, LCID, 4, 0),()),
		"HiddenItemsList": ((2139, LCID, 4, 0),()),
		"IncludeNewItemsInFilter": ((2587, LCID, 4, 0),()),
		"LayoutBlankLine": ((1845, LCID, 4, 0),()),
		"LayoutCompactRow": ((2586, LCID, 4, 0),()),
		"LayoutForm": ((1848, LCID, 4, 0),()),
		"LayoutPageBreak": ((1847, LCID, 4, 0),()),
		"LayoutSubtotalLocation": ((1846, LCID, 4, 0),()),
		"MemberPropertyCaption": ((2582, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"NumberFormat": ((193, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"PropertyOrder": ((2143, LCID, 4, 0),()),
		"RepeatLabels": ((2885, LCID, 4, 0),()),
		"ServerBased": ((1513, LCID, 4, 0),()),
		"ShowAllItems": ((452, LCID, 4, 0),()),
		"ShowDetail": ((585, LCID, 4, 0),()),
		"StandardFormula": ((2084, LCID, 4, 0),()),
		"SubtotalName": ((1849, LCID, 4, 0),()),
		"Subtotals": ((733, LCID, 4, 0),()),
		"UseMemberPropertyAsCaption": ((2581, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"VisibleItemsList": ((2588, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (8, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class PivotFields(DispatchBaseClass):
	CLSID = IID('{00020875-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Parent' returns object of type 'PivotTable'
		"Parent": (150, 2, (9, 0), (), "Parent", '{00020872-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class PivotFilter(DispatchBaseClass):
	CLSID = IID('{00024483-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Active": (2312, 2, (11, 0), (), "Active", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'DataCubeField' returns object of type 'CubeField'
		"DataCubeField": (2687, 2, (9, 0), (), "DataCubeField", '{0002444C-0000-0000-C000-000000000046}'),
		# Method 'DataField' returns object of type 'PivotField'
		"DataField": (2091, 2, (9, 0), (), "DataField", '{00020874-0000-0000-C000-000000000046}'),
		"Description": (218, 2, (8, 0), (), "Description", None),
		"FilterType": (2686, 2, (3, 0), (), "FilterType", None),
		"IsMemberPropertyFilter": (2690, 2, (11, 0), (), "IsMemberPropertyFilter", None),
		# Method 'MemberPropertyField' returns object of type 'PivotField'
		"MemberPropertyField": (2689, 2, (9, 0), (), "MemberPropertyField", '{00020874-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Order": (192, 2, (3, 0), (), "Order", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'PivotField' returns object of type 'PivotField'
		"PivotField": (731, 2, (9, 0), (), "PivotField", '{00020874-0000-0000-C000-000000000046}'),
		"Value1": (2688, 2, (12, 0), (), "Value1", None),
		"Value2": (1388, 2, (12, 0), (), "Value2", None),
		"WholeDayFilter": (3099, 2, (11, 0), (), "WholeDayFilter", None),
	}
	_prop_map_put_ = {
		"Order": ((192, LCID, 4, 0),()),
		"WholeDayFilter": ((3099, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class PivotFilters(DispatchBaseClass):
	CLSID = IID('{00024484-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type PivotFilter
	def Add(self, Type=defaultNamedNotOptArg, DataField=defaultNamedOptArg, Value1=defaultNamedOptArg, Value2=defaultNamedOptArg
			, Order=defaultNamedOptArg, Name=defaultNamedOptArg, Description=defaultNamedOptArg, MemberPropertyField=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((3, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Type
			, DataField, Value1, Value2, Order, Name
			, Description, MemberPropertyField)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00024483-0000-0000-C000-000000000046}')
		return ret

	# Result is of type PivotFilter
	def Add2(self, Type=defaultNamedNotOptArg, DataField=defaultNamedOptArg, Value1=defaultNamedOptArg, Value2=defaultNamedOptArg
			, Order=defaultNamedOptArg, Name=defaultNamedOptArg, Description=defaultNamedOptArg, MemberPropertyField=defaultNamedOptArg, WholeDayFilter=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3054, LCID, 1, (9, 0), ((3, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Type
			, DataField, Value1, Value2, Order, Name
			, Description, MemberPropertyField, WholeDayFilter)
		if ret is not None:
			ret = Dispatch(ret, 'Add2', '{00024483-0000-0000-C000-000000000046}')
		return ret

	# Result is of type PivotFilter
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024483-0000-0000-C000-000000000046}')
		return ret

	# Result is of type PivotFilter
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024483-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024483-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024483-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00024483-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class PivotFormula(DispatchBaseClass):
	CLSID = IID('{0002441E-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"StandardFormula": (2084, 2, (8, 0), (), "StandardFormula", None),
		"Value": (6, 2, (8, 0), (), "Value", None),
		"_Default": (0, 2, (8, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Formula": ((261, LCID, 4, 0),()),
		"Index": ((486, LCID, 4, 0),()),
		"StandardFormula": ((2084, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (8, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class PivotFormulas(DispatchBaseClass):
	CLSID = IID('{0002441F-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type PivotFormula
	def Add(self, Formula=defaultNamedNotOptArg, UseStandardFormula=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1), (12, 17)),Formula
			, UseStandardFormula)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0002441E-0000-0000-C000-000000000046}')
		return ret

	# Result is of type PivotFormula
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0002441E-0000-0000-C000-000000000046}')
		return ret

	# Result is of type PivotFormula
	def _Add(self, Formula=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2085, LCID, 1, (9, 0), ((8, 1),),Formula
			)
		if ret is not None:
			ret = Dispatch(ret, '_Add', '{0002441E-0000-0000-C000-000000000046}')
		return ret

	# Result is of type PivotFormula
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{0002441E-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0002441E-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0002441E-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{0002441E-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class PivotItem(DispatchBaseClass):
	CLSID = IID('{00020876-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def DrillTo(self, Field=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2580, LCID, 1, (24, 0), ((8, 1),),Field
			)

	# The method GetChildItems is actually a property, but must be used as a method to correctly pass the arguments
	def GetChildItems(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(730, 2, (12, 0), ((12, 17),), 'GetChildItems', None,Index
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		"ChildItems": (730, 2, (12, 0), ((12, 17),), "ChildItems", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'DataRange' returns object of type 'Range'
		"DataRange": (720, 2, (9, 0), (), "DataRange", '{00020846-0000-0000-C000-000000000046}'),
		"DrilledDown": (1850, 2, (11, 0), (), "DrilledDown", None),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"IsCalculated": (1512, 2, (11, 0), (), "IsCalculated", None),
		# Method 'LabelRange' returns object of type 'Range'
		"LabelRange": (719, 2, (9, 0), (), "LabelRange", '{00020846-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'PivotField'
		"Parent": (150, 2, (9, 0), (), "Parent", '{00020874-0000-0000-C000-000000000046}'),
		# Method 'ParentItem' returns object of type 'PivotItem'
		"ParentItem": (741, 2, (9, 0), (), "ParentItem", '{00020876-0000-0000-C000-000000000046}'),
		"ParentShowDetail": (739, 2, (11, 0), (), "ParentShowDetail", None),
		"Position": (133, 2, (3, 0), (), "Position", None),
		"RecordCount": (1478, 2, (3, 0), (), "RecordCount", None),
		"ShowDetail": (585, 2, (11, 0), (), "ShowDetail", None),
		"SourceName": (721, 2, (12, 0), (), "SourceName", None),
		"SourceNameStandard": (2148, 2, (8, 0), (), "SourceNameStandard", None),
		"StandardFormula": (2084, 2, (8, 0), (), "StandardFormula", None),
		"Value": (6, 2, (8, 0), (), "Value", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"_Default": (0, 2, (8, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"DrilledDown": ((1850, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"ShowDetail": ((585, LCID, 4, 0),()),
		"StandardFormula": ((2084, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (8, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class PivotItemList(DispatchBaseClass):
	CLSID = IID('{00024468-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type PivotItem
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00020876-0000-0000-C000-000000000046}')
		return ret

	# Result is of type PivotItem
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Field=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Field
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00020876-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Field=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Field
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00020876-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00020876-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{00020876-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class PivotItems(DispatchBaseClass):
	CLSID = IID('{00020877-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Add(self, Name=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(181, LCID, 1, (24, 0), ((8, 1),),Name
			)

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Parent' returns object of type 'PivotField'
		"Parent": (150, 2, (9, 0), (), "Parent", '{00020874-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class PivotLayout(DispatchBaseClass):
	CLSID = IID('{0002444A-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def AddFields(self, RowFields=defaultNamedOptArg, ColumnFields=defaultNamedOptArg, PageFields=defaultNamedOptArg, AppendField=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(708, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17)),RowFields
			, ColumnFields, PageFields, AppendField)

	# The method GetColumnFields is actually a property, but must be used as a method to correctly pass the arguments
	def GetColumnFields(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(713, LCID, 2, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetColumnFields', None)
		return ret

	# The method GetDataFields is actually a property, but must be used as a method to correctly pass the arguments
	def GetDataFields(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(715, LCID, 2, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetDataFields', None)
		return ret

	# The method GetHiddenFields is actually a property, but must be used as a method to correctly pass the arguments
	def GetHiddenFields(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(711, LCID, 2, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetHiddenFields', None)
		return ret

	# The method GetPageFields is actually a property, but must be used as a method to correctly pass the arguments
	def GetPageFields(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(714, LCID, 2, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetPageFields', None)
		return ret

	# The method GetPivotFields is actually a property, but must be used as a method to correctly pass the arguments
	def GetPivotFields(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(718, LCID, 2, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetPivotFields', None)
		return ret

	# The method GetRowFields is actually a property, but must be used as a method to correctly pass the arguments
	def GetRowFields(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(712, LCID, 2, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetRowFields', None)
		return ret

	# The method GetVisibleFields is actually a property, but must be used as a method to correctly pass the arguments
	def GetVisibleFields(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(710, LCID, 2, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetVisibleFields', None)
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"ColumnFields": (713, 2, (9, 0), ((12, 17),), "ColumnFields", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'CubeFields' returns object of type 'CubeFields'
		"CubeFields": (1839, 2, (9, 0), (), "CubeFields", '{0002444D-0000-0000-C000-000000000046}'),
		"DataFields": (715, 2, (9, 0), ((12, 17),), "DataFields", None),
		"HiddenFields": (711, 2, (9, 0), ((12, 17),), "HiddenFields", None),
		"InnerDetail": (698, 2, (8, 0), (), "InnerDetail", None),
		"PageFields": (714, 2, (9, 0), ((12, 17),), "PageFields", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'PivotCache' returns object of type 'PivotCache'
		"PivotCache": (1496, 2, (9, 0), (), "PivotCache", '{0002441C-0000-0000-C000-000000000046}'),
		"PivotFields": (718, 2, (9, 0), ((12, 17),), "PivotFields", None),
		# Method 'PivotTable' returns object of type 'PivotTable'
		"PivotTable": (716, 2, (9, 0), (), "PivotTable", '{00020872-0000-0000-C000-000000000046}'),
		"RowFields": (712, 2, (9, 0), ((12, 17),), "RowFields", None),
		"VisibleFields": (710, 2, (9, 0), ((12, 17),), "VisibleFields", None),
	}
	_prop_map_put_ = {
		"InnerDetail": ((698, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class PivotLine(DispatchBaseClass):
	CLSID = IID('{00024480-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"LineType": (2683, 2, (3, 0), (), "LineType", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'PivotLineCells' returns object of type 'PivotLineCells'
		"PivotLineCells": (2684, 2, (9, 0), (), "PivotLineCells", '{0002447F-0000-0000-C000-000000000046}'),
		# Method 'PivotLineCellsFull' returns object of type 'PivotLineCells'
		"PivotLineCellsFull": (3098, 2, (9, 0), (), "PivotLineCellsFull", '{0002447F-0000-0000-C000-000000000046}'),
		"Position": (133, 2, (3, 0), (), "Position", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class PivotLineCells(DispatchBaseClass):
	CLSID = IID('{0002447F-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type PivotCell
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024458-0000-0000-C000-000000000046}')
		return ret

	# Result is of type PivotCell
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024458-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Full": (3097, 2, (11, 0), (), "Full", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024458-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024458-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00024458-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class PivotLines(DispatchBaseClass):
	CLSID = IID('{00024481-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type PivotLine
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024480-0000-0000-C000-000000000046}')
		return ret

	# Result is of type PivotLine
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024480-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024480-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024480-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00024480-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class PivotTable(DispatchBaseClass):
	CLSID = IID('{00020872-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type PivotField
	def AddDataField(self, Field=defaultNamedNotOptArg, Caption=defaultNamedOptArg, Function=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(2122, LCID, 1, (9, 0), ((9, 1), (12, 17), (12, 17)),Field
			, Caption, Function)
		if ret is not None:
			ret = Dispatch(ret, 'AddDataField', '{00020874-0000-0000-C000-000000000046}')
		return ret

	def AddFields(self, RowFields=defaultNamedOptArg, ColumnFields=defaultNamedOptArg, PageFields=defaultNamedOptArg, AddToTable=defaultNamedOptArg):
		return self._ApplyTypes_(708, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'AddFields', None,RowFields
			, ColumnFields, PageFields, AddToTable)

	def AllocateChanges(self):
		return self._oleobj_.InvokeTypes(2855, LCID, 1, (24, 0), (),)

	def ApplyLayout(self):
		return self._oleobj_.InvokeTypes(2500, LCID, 1, (24, 0), (),)

	# Result is of type CalculatedFields
	def CalculatedFields(self):
		ret = self._oleobj_.InvokeTypes(1484, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'CalculatedFields', '{00024420-0000-0000-C000-000000000046}')
		return ret

	def ChangeConnection(self, conn=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2575, LCID, 1, (24, 0), ((9, 1),),conn
			)

	def ChangePivotCache(self, PivotCache=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2577, LCID, 1, (24, 0), ((12, 1),),PivotCache
			)

	def ClearAllFilters(self):
		return self._oleobj_.InvokeTypes(2561, LCID, 1, (24, 0), (),)

	def ClearTable(self):
		return self._oleobj_.InvokeTypes(2552, LCID, 1, (24, 0), (),)

	def CommitChanges(self):
		return self._oleobj_.InvokeTypes(2877, LCID, 1, (24, 0), (),)

	def ConvertToFormulas(self, ConvertFilters=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2568, LCID, 1, (24, 0), ((11, 1),),ConvertFilters
			)

	def CreateCubeFile(self, File=defaultNamedNotOptArg, Measures=defaultNamedOptArg, Levels=defaultNamedOptArg, Members=defaultNamedOptArg
			, Properties=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(2131, LCID, 1, (8, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (12, 17)),File
			, Measures, Levels, Members, Properties)

	def DiscardChanges(self):
		return self._oleobj_.InvokeTypes(2856, LCID, 1, (24, 0), (),)

	def DrillDown(self, PivotItem=defaultNamedNotOptArg, PivotLine=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(3068, LCID, 1, (24, 0), ((9, 1), (12, 17)),PivotItem
			, PivotLine)

	def DrillTo(self, PivotItem=defaultNamedNotOptArg, CubeField=defaultNamedNotOptArg, PivotLine=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2580, LCID, 1, (24, 0), ((9, 1), (9, 1), (12, 17)),PivotItem
			, CubeField, PivotLine)

	def DrillUp(self, PivotItem=defaultNamedNotOptArg, PivotLine=defaultNamedOptArg, LevelUniqueName=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(3069, LCID, 1, (24, 0), ((9, 1), (12, 17), (12, 17)),PivotItem
			, PivotLine, LevelUniqueName)

	def Dummy15(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._ApplyTypes_(2127, 1, (12, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'Dummy15', None,Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Dummy2(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg):
		return self._ApplyTypes_(1783, 1, (12, 0), ((12, 1), (12, 17), (12, 17), (12, 17)), 'Dummy2', None,Arg1
			, Arg2, Arg3, Arg4)

	def Format(self, Format=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(116, LCID, 1, (24, 0), ((3, 1),),Format
			)

	# The method GetColumnFields is actually a property, but must be used as a method to correctly pass the arguments
	def GetColumnFields(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(713, LCID, 2, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetColumnFields', None)
		return ret

	def GetData(self, Name=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1491, LCID, 1, (5, 0), ((8, 1),),Name
			)

	# The method GetDataFields is actually a property, but must be used as a method to correctly pass the arguments
	def GetDataFields(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(715, LCID, 2, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetDataFields', None)
		return ret

	# The method GetHiddenFields is actually a property, but must be used as a method to correctly pass the arguments
	def GetHiddenFields(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(711, LCID, 2, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetHiddenFields', None)
		return ret

	# The method GetPageFields is actually a property, but must be used as a method to correctly pass the arguments
	def GetPageFields(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(714, LCID, 2, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetPageFields', None)
		return ret

	# Result is of type Range
	def GetPivotData(self, DataField=defaultNamedOptArg, Field1=defaultNamedOptArg, Item1=defaultNamedOptArg, Field2=defaultNamedOptArg
			, Item2=defaultNamedOptArg, Field3=defaultNamedOptArg, Item3=defaultNamedOptArg, Field4=defaultNamedOptArg, Item4=defaultNamedOptArg
			, Field5=defaultNamedOptArg, Item5=defaultNamedOptArg, Field6=defaultNamedOptArg, Item6=defaultNamedOptArg, Field7=defaultNamedOptArg
			, Item7=defaultNamedOptArg, Field8=defaultNamedOptArg, Item8=defaultNamedOptArg, Field9=defaultNamedOptArg, Item9=defaultNamedOptArg
			, Field10=defaultNamedOptArg, Item10=defaultNamedOptArg, Field11=defaultNamedOptArg, Item11=defaultNamedOptArg, Field12=defaultNamedOptArg
			, Item12=defaultNamedOptArg, Field13=defaultNamedOptArg, Item13=defaultNamedOptArg, Field14=defaultNamedOptArg, Item14=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(2090, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),DataField
			, Field1, Item1, Field2, Item2, Field3
			, Item3, Field4, Item4, Field5, Item5
			, Field6, Item6, Field7, Item7, Field8
			, Item8, Field9, Item9, Field10, Item10
			, Field11, Item11, Field12, Item12, Field13
			, Item13, Field14, Item14)
		if ret is not None:
			ret = Dispatch(ret, 'GetPivotData', '{00020846-0000-0000-C000-000000000046}')
		return ret

	# The method GetRowFields is actually a property, but must be used as a method to correctly pass the arguments
	def GetRowFields(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(712, LCID, 2, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetRowFields', None)
		return ret

	# The method GetVisibleFields is actually a property, but must be used as a method to correctly pass the arguments
	def GetVisibleFields(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(710, LCID, 2, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetVisibleFields', None)
		return ret

	def ListFormulas(self):
		return self._oleobj_.InvokeTypes(1492, LCID, 1, (24, 0), (),)

	# Result is of type PivotCache
	def PivotCache(self):
		ret = self._oleobj_.InvokeTypes(1496, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'PivotCache', '{0002441C-0000-0000-C000-000000000046}')
		return ret

	def PivotFields(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(718, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'PivotFields', None)
		return ret

	def PivotSelect(self, Name=defaultNamedNotOptArg, Mode=0, UseStandardName=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1501, LCID, 1, (24, 0), ((8, 1), (3, 49), (12, 17)),Name
			, Mode, UseStandardName)

	def PivotTableWizard(self, SourceType=defaultNamedOptArg, SourceData=defaultNamedOptArg, TableDestination=defaultNamedOptArg, TableName=defaultNamedOptArg
			, RowGrand=defaultNamedOptArg, ColumnGrand=defaultNamedOptArg, SaveData=defaultNamedOptArg, HasAutoFormat=defaultNamedOptArg, AutoPage=defaultNamedOptArg
			, Reserved=defaultNamedOptArg, BackgroundQuery=defaultNamedOptArg, OptimizeCache=defaultNamedOptArg, PageFieldOrder=defaultNamedOptArg, PageFieldWrapCount=defaultNamedOptArg
			, ReadData=defaultNamedOptArg, Connection=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(684, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),SourceType
			, SourceData, TableDestination, TableName, RowGrand, ColumnGrand
			, SaveData, HasAutoFormat, AutoPage, Reserved, BackgroundQuery
			, OptimizeCache, PageFieldOrder, PageFieldWrapCount, ReadData, Connection
			)

	# Result is of type PivotValueCell
	def PivotValueCell(self, rowline=defaultNamedOptArg, columnline=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3064, LCID, 1, (9, 0), ((12, 17), (12, 17)),rowline
			, columnline)
		if ret is not None:
			ret = Dispatch(ret, 'PivotValueCell', '{000244CF-0000-0000-C000-000000000046}')
		return ret

	def RefreshDataSourceValues(self):
		return self._oleobj_.InvokeTypes(2878, LCID, 1, (24, 0), (),)

	def RefreshTable(self):
		return self._oleobj_.InvokeTypes(717, LCID, 1, (11, 0), (),)

	def RepeatAllLabels(self, Repeat=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2879, LCID, 1, (24, 0), ((3, 1),),Repeat
			)

	def RowAxisLayout(self, RowLayout=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2556, LCID, 1, (24, 0), ((3, 1),),RowLayout
			)

	def ShowPages(self, PageField=defaultNamedOptArg):
		return self._ApplyTypes_(706, 1, (12, 0), ((12, 17),), 'ShowPages', None,PageField
			)

	def SubtotalLocation(self, Location=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2558, LCID, 1, (24, 0), ((3, 1),),Location
			)

	def Update(self):
		return self._oleobj_.InvokeTypes(680, LCID, 1, (24, 0), (),)

	def _PivotSelect(self, Name=defaultNamedNotOptArg, Mode=0):
		return self._oleobj_.InvokeTypes(2087, LCID, 1, (24, 0), ((8, 1), (3, 49)),Name
			, Mode)

	_prop_map_get_ = {
		# Method 'ActiveFilters' returns object of type 'PivotFilters'
		"ActiveFilters": (2559, 2, (9, 0), (), "ActiveFilters", '{00024484-0000-0000-C000-000000000046}'),
		"Allocation": (2873, 2, (3, 0), (), "Allocation", None),
		"AllocationMethod": (2875, 2, (3, 0), (), "AllocationMethod", None),
		"AllocationValue": (2874, 2, (3, 0), (), "AllocationValue", None),
		"AllocationWeightExpression": (2876, 2, (8, 0), (), "AllocationWeightExpression", None),
		"AllowMultipleFilters": (2570, 2, (11, 0), (), "AllowMultipleFilters", None),
		"AlternativeText": (1891, 2, (8, 0), (), "AlternativeText", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"CacheIndex": (1483, 2, (3, 0), (), "CacheIndex", None),
		# Method 'CalculatedMembers' returns object of type 'CalculatedMembers'
		"CalculatedMembers": (2125, 2, (9, 0), (), "CalculatedMembers", '{00024454-0000-0000-C000-000000000046}'),
		"CalculatedMembersInFilters": (2884, 2, (11, 0), (), "CalculatedMembersInFilters", None),
		# Method 'ChangeList' returns object of type 'PivotTableChangeList'
		"ChangeList": (2880, 2, (9, 0), (), "ChangeList", '{000244C1-0000-0000-C000-000000000046}'),
		"ColumnFields": (713, 2, (9, 0), ((12, 17),), "ColumnFields", None),
		"ColumnGrand": (694, 2, (11, 0), (), "ColumnGrand", None),
		# Method 'ColumnRange' returns object of type 'Range'
		"ColumnRange": (702, 2, (9, 0), (), "ColumnRange", '{00020846-0000-0000-C000-000000000046}'),
		"CompactLayoutColumnHeader": (2572, 2, (8, 0), (), "CompactLayoutColumnHeader", None),
		"CompactLayoutRowHeader": (2571, 2, (8, 0), (), "CompactLayoutRowHeader", None),
		"CompactRowIndent": (2553, 2, (3, 0), (), "CompactRowIndent", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'CubeFields' returns object of type 'CubeFields'
		"CubeFields": (1839, 2, (9, 0), (), "CubeFields", '{0002444D-0000-0000-C000-000000000046}'),
		# Method 'DataBodyRange' returns object of type 'Range'
		"DataBodyRange": (705, 2, (9, 0), (), "DataBodyRange", '{00020846-0000-0000-C000-000000000046}'),
		"DataFields": (715, 2, (9, 0), ((12, 17),), "DataFields", None),
		# Method 'DataLabelRange' returns object of type 'Range'
		"DataLabelRange": (704, 2, (9, 0), (), "DataLabelRange", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'DataPivotField' returns object of type 'PivotField'
		"DataPivotField": (2120, 2, (9, 0), (), "DataPivotField", '{00020874-0000-0000-C000-000000000046}'),
		"DisplayContextTooltips": (2551, 2, (11, 0), (), "DisplayContextTooltips", None),
		"DisplayEmptyColumn": (2137, 2, (11, 0), (), "DisplayEmptyColumn", None),
		"DisplayEmptyRow": (2136, 2, (11, 0), (), "DisplayEmptyRow", None),
		"DisplayErrorString": (1485, 2, (11, 0), (), "DisplayErrorString", None),
		"DisplayFieldCaptions": (2555, 2, (11, 0), (), "DisplayFieldCaptions", None),
		"DisplayImmediateItems": (2126, 2, (11, 0), (), "DisplayImmediateItems", None),
		"DisplayMemberPropertyTooltips": (2550, 2, (11, 0), (), "DisplayMemberPropertyTooltips", None),
		"DisplayNullString": (1486, 2, (11, 0), (), "DisplayNullString", None),
		"EnableDataValueEditing": (2121, 2, (11, 0), (), "EnableDataValueEditing", None),
		"EnableDrilldown": (1487, 2, (11, 0), (), "EnableDrilldown", None),
		"EnableFieldDialog": (1488, 2, (11, 0), (), "EnableFieldDialog", None),
		"EnableFieldList": (2128, 2, (11, 0), (), "EnableFieldList", None),
		"EnableWizard": (1489, 2, (11, 0), (), "EnableWizard", None),
		"EnableWriteback": (2872, 2, (11, 0), (), "EnableWriteback", None),
		"ErrorString": (1490, 2, (8, 0), (), "ErrorString", None),
		"FieldListSortAscending": (2573, 2, (11, 0), (), "FieldListSortAscending", None),
		"GrandTotalName": (1840, 2, (8, 0), (), "GrandTotalName", None),
		"HasAutoFormat": (695, 2, (11, 0), (), "HasAutoFormat", None),
		"Hidden": (268, 2, (11, 0), (), "Hidden", None),
		"HiddenFields": (711, 2, (9, 0), ((12, 17),), "HiddenFields", None),
		"InGridDropZones": (2560, 2, (11, 0), (), "InGridDropZones", None),
		"InnerDetail": (698, 2, (8, 0), (), "InnerDetail", None),
		"LayoutRowDefault": (2554, 2, (3, 0), (), "LayoutRowDefault", None),
		"Location": (1397, 2, (8, 0), (), "Location", None),
		"MDX": (2123, 2, (8, 0), (), "MDX", None),
		"ManualUpdate": (1493, 2, (11, 0), (), "ManualUpdate", None),
		"MergeLabels": (1494, 2, (11, 0), (), "MergeLabels", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"NullString": (1495, 2, (8, 0), (), "NullString", None),
		"PageFieldOrder": (1429, 2, (3, 0), (), "PageFieldOrder", None),
		"PageFieldStyle": (1499, 2, (8, 0), (), "PageFieldStyle", None),
		"PageFieldWrapCount": (1430, 2, (3, 0), (), "PageFieldWrapCount", None),
		"PageFields": (714, 2, (9, 0), ((12, 17),), "PageFields", None),
		# Method 'PageRange' returns object of type 'Range'
		"PageRange": (703, 2, (9, 0), (), "PageRange", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'PageRangeCells' returns object of type 'Range'
		"PageRangeCells": (1482, 2, (9, 0), (), "PageRangeCells", '{00020846-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'PivotChart' returns object of type 'Shape'
		"PivotChart": (3067, 2, (9, 0), (), "PivotChart", '{00024439-0000-0000-C000-000000000046}'),
		# Method 'PivotColumnAxis' returns object of type 'PivotAxis'
		"PivotColumnAxis": (2546, 2, (9, 0), (), "PivotColumnAxis", '{00024482-0000-0000-C000-000000000046}'),
		# Method 'PivotFormulas' returns object of type 'PivotFormulas'
		"PivotFormulas": (1497, 2, (9, 0), (), "PivotFormulas", '{0002441F-0000-0000-C000-000000000046}'),
		# Method 'PivotRowAxis' returns object of type 'PivotAxis'
		"PivotRowAxis": (2547, 2, (9, 0), (), "PivotRowAxis", '{00024482-0000-0000-C000-000000000046}'),
		"PivotSelection": (1502, 2, (8, 0), (), "PivotSelection", None),
		"PivotSelectionStandard": (2089, 2, (8, 0), (), "PivotSelectionStandard", None),
		"PreserveFormatting": (1500, 2, (11, 0), (), "PreserveFormatting", None),
		"PrintDrillIndicators": (2549, 2, (11, 0), (), "PrintDrillIndicators", None),
		"PrintTitles": (1838, 2, (11, 0), (), "PrintTitles", None),
		"RefreshDate": (696, 2, (7, 0), (), "RefreshDate", None),
		"RefreshName": (697, 2, (8, 0), (), "RefreshName", None),
		"RepeatItemsOnEachPrintedPage": (1842, 2, (11, 0), (), "RepeatItemsOnEachPrintedPage", None),
		"RowFields": (712, 2, (9, 0), ((12, 17),), "RowFields", None),
		"RowGrand": (693, 2, (11, 0), (), "RowGrand", None),
		# Method 'RowRange' returns object of type 'Range'
		"RowRange": (701, 2, (9, 0), (), "RowRange", '{00020846-0000-0000-C000-000000000046}'),
		"SaveData": (692, 2, (11, 0), (), "SaveData", None),
		"SelectionMode": (1503, 2, (3, 0), (), "SelectionMode", None),
		"ShowCellBackgroundFromOLAP": (2138, 2, (11, 0), (), "ShowCellBackgroundFromOLAP", None),
		"ShowDrillIndicators": (2548, 2, (11, 0), (), "ShowDrillIndicators", None),
		"ShowPageMultipleItemLabel": (2130, 2, (11, 0), (), "ShowPageMultipleItemLabel", None),
		"ShowTableStyleColumnHeaders": (2567, 2, (11, 0), (), "ShowTableStyleColumnHeaders", None),
		"ShowTableStyleColumnStripes": (2565, 2, (11, 0), (), "ShowTableStyleColumnStripes", None),
		"ShowTableStyleLastColumn": (2563, 2, (11, 0), (), "ShowTableStyleLastColumn", None),
		"ShowTableStyleRowHeaders": (2566, 2, (11, 0), (), "ShowTableStyleRowHeaders", None),
		"ShowTableStyleRowStripes": (2564, 2, (11, 0), (), "ShowTableStyleRowStripes", None),
		"ShowValuesRow": (2883, 2, (11, 0), (), "ShowValuesRow", None),
		# Method 'Slicers' returns object of type 'Slicers'
		"Slicers": (2881, 2, (9, 0), (), "Slicers", '{000244C7-0000-0000-C000-000000000046}'),
		"SmallGrid": (1841, 2, (11, 0), (), "SmallGrid", None),
		"SortUsingCustomLists": (2574, 2, (11, 0), (), "SortUsingCustomLists", None),
		"SourceData": (686, 2, (12, 0), (), "SourceData", None),
		"SubtotalHiddenPageItems": (1498, 2, (11, 0), (), "SubtotalHiddenPageItems", None),
		"Summary": (273, 2, (8, 0), (), "Summary", None),
		# Method 'TableRange1' returns object of type 'Range'
		"TableRange1": (699, 2, (9, 0), (), "TableRange1", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'TableRange2' returns object of type 'Range'
		"TableRange2": (700, 2, (9, 0), (), "TableRange2", '{00020846-0000-0000-C000-000000000046}'),
		"TableStyle": (1504, 2, (8, 0), (), "TableStyle", None),
		"TableStyle2": (2562, 2, (12, 0), (), "TableStyle2", None),
		"Tag": (1505, 2, (8, 0), (), "Tag", None),
		"TotalsAnnotation": (1843, 2, (11, 0), (), "TotalsAnnotation", None),
		"VacatedStyle": (1506, 2, (8, 0), (), "VacatedStyle", None),
		"Value": (6, 2, (8, 0), (), "Value", None),
		"Version": (392, 2, (3, 0), (), "Version", None),
		"ViewCalculatedMembers": (2124, 2, (11, 0), (), "ViewCalculatedMembers", None),
		"VisibleFields": (710, 2, (9, 0), ((12, 17),), "VisibleFields", None),
		"VisualTotals": (2129, 2, (11, 0), (), "VisualTotals", None),
		"VisualTotalsForSets": (2882, 2, (11, 0), (), "VisualTotalsForSets", None),
		"_Default": (0, 2, (8, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Allocation": ((2873, LCID, 4, 0),()),
		"AllocationMethod": ((2875, LCID, 4, 0),()),
		"AllocationValue": ((2874, LCID, 4, 0),()),
		"AllocationWeightExpression": ((2876, LCID, 4, 0),()),
		"AllowMultipleFilters": ((2570, LCID, 4, 0),()),
		"AlternativeText": ((1891, LCID, 4, 0),()),
		"CacheIndex": ((1483, LCID, 4, 0),()),
		"CalculatedMembersInFilters": ((2884, LCID, 4, 0),()),
		"ColumnGrand": ((694, LCID, 4, 0),()),
		"CompactLayoutColumnHeader": ((2572, LCID, 4, 0),()),
		"CompactLayoutRowHeader": ((2571, LCID, 4, 0),()),
		"CompactRowIndent": ((2553, LCID, 4, 0),()),
		"DisplayContextTooltips": ((2551, LCID, 4, 0),()),
		"DisplayEmptyColumn": ((2137, LCID, 4, 0),()),
		"DisplayEmptyRow": ((2136, LCID, 4, 0),()),
		"DisplayErrorString": ((1485, LCID, 4, 0),()),
		"DisplayFieldCaptions": ((2555, LCID, 4, 0),()),
		"DisplayImmediateItems": ((2126, LCID, 4, 0),()),
		"DisplayMemberPropertyTooltips": ((2550, LCID, 4, 0),()),
		"DisplayNullString": ((1486, LCID, 4, 0),()),
		"EnableDataValueEditing": ((2121, LCID, 4, 0),()),
		"EnableDrilldown": ((1487, LCID, 4, 0),()),
		"EnableFieldDialog": ((1488, LCID, 4, 0),()),
		"EnableFieldList": ((2128, LCID, 4, 0),()),
		"EnableWizard": ((1489, LCID, 4, 0),()),
		"EnableWriteback": ((2872, LCID, 4, 0),()),
		"ErrorString": ((1490, LCID, 4, 0),()),
		"FieldListSortAscending": ((2573, LCID, 4, 0),()),
		"GrandTotalName": ((1840, LCID, 4, 0),()),
		"HasAutoFormat": ((695, LCID, 4, 0),()),
		"InGridDropZones": ((2560, LCID, 4, 0),()),
		"InnerDetail": ((698, LCID, 4, 0),()),
		"LayoutRowDefault": ((2554, LCID, 4, 0),()),
		"Location": ((1397, LCID, 4, 0),()),
		"ManualUpdate": ((1493, LCID, 4, 0),()),
		"MergeLabels": ((1494, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"NullString": ((1495, LCID, 4, 0),()),
		"PageFieldOrder": ((1429, LCID, 4, 0),()),
		"PageFieldStyle": ((1499, LCID, 4, 0),()),
		"PageFieldWrapCount": ((1430, LCID, 4, 0),()),
		"PivotSelection": ((1502, LCID, 4, 0),()),
		"PivotSelectionStandard": ((2089, LCID, 4, 0),()),
		"PreserveFormatting": ((1500, LCID, 4, 0),()),
		"PrintDrillIndicators": ((2549, LCID, 4, 0),()),
		"PrintTitles": ((1838, LCID, 4, 0),()),
		"RepeatItemsOnEachPrintedPage": ((1842, LCID, 4, 0),()),
		"RowGrand": ((693, LCID, 4, 0),()),
		"SaveData": ((692, LCID, 4, 0),()),
		"SelectionMode": ((1503, LCID, 4, 0),()),
		"ShowCellBackgroundFromOLAP": ((2138, LCID, 4, 0),()),
		"ShowDrillIndicators": ((2548, LCID, 4, 0),()),
		"ShowPageMultipleItemLabel": ((2130, LCID, 4, 0),()),
		"ShowTableStyleColumnHeaders": ((2567, LCID, 4, 0),()),
		"ShowTableStyleColumnStripes": ((2565, LCID, 4, 0),()),
		"ShowTableStyleLastColumn": ((2563, LCID, 4, 0),()),
		"ShowTableStyleRowHeaders": ((2566, LCID, 4, 0),()),
		"ShowTableStyleRowStripes": ((2564, LCID, 4, 0),()),
		"ShowValuesRow": ((2883, LCID, 4, 0),()),
		"SmallGrid": ((1841, LCID, 4, 0),()),
		"SortUsingCustomLists": ((2574, LCID, 4, 0),()),
		"SourceData": ((686, LCID, 4, 0),()),
		"SubtotalHiddenPageItems": ((1498, LCID, 4, 0),()),
		"Summary": ((273, LCID, 4, 0),()),
		"TableStyle": ((1504, LCID, 4, 0),()),
		"TableStyle2": ((2562, LCID, 4, 0),()),
		"Tag": ((1505, LCID, 4, 0),()),
		"TotalsAnnotation": ((1843, LCID, 4, 0),()),
		"VacatedStyle": ((1506, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"ViewCalculatedMembers": ((2124, LCID, 4, 0),()),
		"VisualTotals": ((2129, LCID, 4, 0),()),
		"VisualTotalsForSets": ((2882, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (8, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class PivotTableChangeList(DispatchBaseClass):
	CLSID = IID('{000244C1-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ValueChange
	def Add(self, Tuple=defaultNamedNotOptArg, Value=defaultNamedNotOptArg, AllocationValue=defaultNamedOptArg, AllocationMethod=defaultNamedOptArg
			, AllocationWeightExpression=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1), (5, 1), (12, 17), (12, 17), (12, 17)),Tuple
			, Value, AllocationValue, AllocationMethod, AllocationWeightExpression)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{000244C0-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ValueChange
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244C0-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ValueChange
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244C0-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244C0-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244C0-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{000244C0-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class PivotTables(DispatchBaseClass):
	CLSID = IID('{00020873-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type PivotTable
	def Add(self, PivotCache=defaultNamedNotOptArg, TableDestination=defaultNamedNotOptArg, TableName=defaultNamedOptArg, ReadData=defaultNamedOptArg
			, DefaultVersion=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((9, 1), (12, 1), (12, 17), (12, 17), (12, 17)),PivotCache
			, TableDestination, TableName, ReadData, DefaultVersion)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00020872-0000-0000-C000-000000000046}')
		return ret

	# Result is of type PivotTable
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00020872-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00020872-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{00020872-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class PivotValueCell(DispatchBaseClass):
	CLSID = IID('{000244CF-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def ShowDetail(self):
		return self._oleobj_.InvokeTypes(585, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'PivotCell' returns object of type 'PivotCell'
		"PivotCell": (2013, 2, (9, 0), (), "PivotCell", '{00024458-0000-0000-C000-000000000046}'),
		# Method 'ServerActions' returns object of type 'Actions'
		"ServerActions": (2491, 2, (9, 0), (), "ServerActions", '{00024490-0000-0000-C000-000000000046}'),
		"Value": (6, 2, (12, 0), (), "Value", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class PlotArea(DispatchBaseClass):
	CLSID = IID('{000208CB-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def ClearFormats(self):
		return self._ApplyTypes_(112, 1, (12, 0), (), 'ClearFormats', None,)

	def GetProperty(self, ID=defaultNamedNotOptArg):
		return self._ApplyTypes_(3256, 1, (12, 0), ((8, 1),), 'GetProperty', None,ID
			)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	def SetProperty(self, ID=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3253, LCID, 1, (24, 0), ((8, 1), (12, 1)),ID
			, Value)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Fill' returns object of type 'ChartFillFormat'
		"Fill": (1663, 2, (9, 0), (), "Fill", '{00024435-0000-0000-C000-000000000046}'),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"InsideHeight": (1670, 2, (5, 0), (), "InsideHeight", None),
		"InsideLeft": (1667, 2, (5, 0), (), "InsideLeft", None),
		"InsideTop": (1668, 2, (5, 0), (), "InsideTop", None),
		"InsideWidth": (1669, 2, (5, 0), (), "InsideWidth", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Position": (133, 2, (3, 0), (), "Position", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"_InsideHeight": (2657, 2, (5, 0), (), "_InsideHeight", None),
		"_InsideLeft": (2654, 2, (5, 0), (), "_InsideLeft", None),
		"_InsideTop": (2655, 2, (5, 0), (), "_InsideTop", None),
		"_InsideWidth": (2656, 2, (5, 0), (), "_InsideWidth", None),
	}
	_prop_map_put_ = {
		"Height": ((123, LCID, 4, 0),()),
		"InsideHeight": ((1670, LCID, 4, 0),()),
		"InsideLeft": ((1667, LCID, 4, 0),()),
		"InsideTop": ((1668, LCID, 4, 0),()),
		"InsideWidth": ((1669, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Point(DispatchBaseClass):
	CLSID = IID('{0002086A-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def ApplyDataLabels(self, Type=2, LegendKey=defaultNamedOptArg, AutoText=defaultNamedOptArg, HasLeaderLines=defaultNamedOptArg
			, ShowSeriesName=defaultNamedOptArg, ShowCategoryName=defaultNamedOptArg, ShowValue=defaultNamedOptArg, ShowPercentage=defaultNamedOptArg, ShowBubbleSize=defaultNamedOptArg
			, Separator=defaultNamedOptArg):
		return self._ApplyTypes_(1922, 1, (12, 0), ((3, 49), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'ApplyDataLabels', None,Type
			, LegendKey, AutoText, HasLeaderLines, ShowSeriesName, ShowCategoryName
			, ShowValue, ShowPercentage, ShowBubbleSize, Separator)

	def ClearFormats(self):
		return self._ApplyTypes_(112, 1, (12, 0), (), 'ClearFormats', None,)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def GetProperty(self, ID=defaultNamedNotOptArg):
		return self._ApplyTypes_(3256, 1, (12, 0), ((8, 1),), 'GetProperty', None,ID
			)

	def Paste(self):
		return self._ApplyTypes_(211, 1, (12, 0), (), 'Paste', None,)

	def PieSliceLocation(self, loc=defaultNamedNotOptArg, Index=2):
		return self._oleobj_.InvokeTypes(2913, LCID, 1, (5, 0), ((3, 1), (3, 49)),loc
			, Index)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	def SetProperty(self, ID=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3253, LCID, 1, (24, 0), ((8, 1), (12, 1)),ID
			, Value)

	def _ApplyDataLabels(self, Type=2, LegendKey=defaultNamedOptArg, AutoText=defaultNamedOptArg, HasLeaderLines=defaultNamedOptArg):
		return self._ApplyTypes_(151, 1, (12, 0), ((3, 49), (12, 17), (12, 17), (12, 17)), '_ApplyDataLabels', None,Type
			, LegendKey, AutoText, HasLeaderLines)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"ApplyPictToEnd": (1661, 2, (11, 0), (), "ApplyPictToEnd", None),
		"ApplyPictToFront": (1660, 2, (11, 0), (), "ApplyPictToFront", None),
		"ApplyPictToSides": (1659, 2, (11, 0), (), "ApplyPictToSides", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'DataLabel' returns object of type 'DataLabel'
		"DataLabel": (158, 2, (9, 0), (), "DataLabel", '{000208B2-0000-0000-C000-000000000046}'),
		"Explosion": (182, 2, (3, 0), (), "Explosion", None),
		# Method 'Fill' returns object of type 'ChartFillFormat'
		"Fill": (1663, 2, (9, 0), (), "Fill", '{00024435-0000-0000-C000-000000000046}'),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"Has3DEffect": (1665, 2, (11, 0), (), "Has3DEffect", None),
		"HasDataLabel": (77, 2, (11, 0), (), "HasDataLabel", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"InvertIfNegative": (132, 2, (11, 0), (), "InvertIfNegative", None),
		"IsTotal": (3203, 2, (11, 0), (), "IsTotal", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"MarkerBackgroundColor": (73, 2, (3, 0), (), "MarkerBackgroundColor", None),
		"MarkerBackgroundColorIndex": (74, 2, (3, 0), (), "MarkerBackgroundColorIndex", None),
		"MarkerForegroundColor": (75, 2, (3, 0), (), "MarkerForegroundColor", None),
		"MarkerForegroundColorIndex": (76, 2, (3, 0), (), "MarkerForegroundColorIndex", None),
		"MarkerSize": (231, 2, (3, 0), (), "MarkerSize", None),
		"MarkerStyle": (72, 2, (3, 0), (), "MarkerStyle", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PictureType": (161, 2, (3, 0), (), "PictureType", None),
		"PictureUnit": (162, 2, (3, 0), (), "PictureUnit", None),
		"PictureUnit2": (2649, 2, (5, 0), (), "PictureUnit2", None),
		"SecondaryPlot": (1662, 2, (11, 0), (), "SecondaryPlot", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"ApplyPictToEnd": ((1661, LCID, 4, 0),()),
		"ApplyPictToFront": ((1660, LCID, 4, 0),()),
		"ApplyPictToSides": ((1659, LCID, 4, 0),()),
		"Explosion": ((182, LCID, 4, 0),()),
		"Has3DEffect": ((1665, LCID, 4, 0),()),
		"HasDataLabel": ((77, LCID, 4, 0),()),
		"InvertIfNegative": ((132, LCID, 4, 0),()),
		"IsTotal": ((3203, LCID, 4, 0),()),
		"MarkerBackgroundColor": ((73, LCID, 4, 0),()),
		"MarkerBackgroundColorIndex": ((74, LCID, 4, 0),()),
		"MarkerForegroundColor": ((75, LCID, 4, 0),()),
		"MarkerForegroundColorIndex": ((76, LCID, 4, 0),()),
		"MarkerSize": ((231, LCID, 4, 0),()),
		"MarkerStyle": ((72, LCID, 4, 0),()),
		"PictureType": ((161, LCID, 4, 0),()),
		"PictureUnit": ((162, LCID, 4, 0),()),
		"PictureUnit2": ((2649, LCID, 4, 0),()),
		"SecondaryPlot": ((1662, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Points(DispatchBaseClass):
	CLSID = IID('{00020869-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Point
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0002086A-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Point
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{0002086A-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0002086A-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0002086A-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{0002086A-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ProtectedViewWindow(DispatchBaseClass):
	CLSID = IID('{000244CD-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Activate(self):
		return self._oleobj_.InvokeTypes(304, LCID, 1, (24, 0), (),)

	def Close(self):
		return self._oleobj_.InvokeTypes(277, LCID, 1, (11, 0), (),)

	# Result is of type Workbook
	def Edit(self, WriteResPassword=defaultNamedOptArg, UpdateLinks=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(562, LCID, 1, (13, 0), ((12, 17), (12, 17)),WriteResPassword
			, UpdateLinks)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, 'Edit', '{00020819-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		"EnableResize": (1192, 2, (11, 0), (), "EnableResize", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"SourceName": (721, 2, (8, 0), (), "SourceName", None),
		"SourcePath": (2993, 2, (8, 0), (), "SourcePath", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"WindowState": (396, 2, (3, 0), (), "WindowState", None),
		# Method 'Workbook' returns object of type 'Workbook'
		"Workbook": (752, 2, (13, 0), (), "Workbook", '{00020819-0000-0000-C000-000000000046}'),
		"_Default": (0, 2, (8, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"EnableResize": ((1192, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"WindowState": ((396, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ProtectedViewWindows(DispatchBaseClass):
	CLSID = IID('{000244CC-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ProtectedViewWindow
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244CD-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ProtectedViewWindow
	def Open(self, Filename=defaultNamedNotOptArg, Password=defaultNamedOptArg, AddToMru=defaultNamedOptArg, RepairMode=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1923, LCID, 1, (9, 0), ((8, 1), (12, 17), (12, 17), (12, 17)),Filename
			, Password, AddToMru, RepairMode)
		if ret is not None:
			ret = Dispatch(ret, 'Open', '{000244CD-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ProtectedViewWindow
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244CD-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244CD-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244CD-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{000244CD-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Protection(DispatchBaseClass):
	CLSID = IID('{00024467-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AllowDeletingColumns": (2038, 2, (11, 0), (), "AllowDeletingColumns", None),
		"AllowDeletingRows": (2039, 2, (11, 0), (), "AllowDeletingRows", None),
		# Method 'AllowEditRanges' returns object of type 'AllowEditRanges'
		"AllowEditRanges": (2236, 2, (9, 0), (), "AllowEditRanges", '{0002446A-0000-0000-C000-000000000046}'),
		"AllowFiltering": (2041, 2, (11, 0), (), "AllowFiltering", None),
		"AllowFormattingCells": (2032, 2, (11, 0), (), "AllowFormattingCells", None),
		"AllowFormattingColumns": (2033, 2, (11, 0), (), "AllowFormattingColumns", None),
		"AllowFormattingRows": (2034, 2, (11, 0), (), "AllowFormattingRows", None),
		"AllowInsertingColumns": (2035, 2, (11, 0), (), "AllowInsertingColumns", None),
		"AllowInsertingHyperlinks": (2037, 2, (11, 0), (), "AllowInsertingHyperlinks", None),
		"AllowInsertingRows": (2036, 2, (11, 0), (), "AllowInsertingRows", None),
		"AllowSorting": (2040, 2, (11, 0), (), "AllowSorting", None),
		"AllowUsingPivotTables": (2042, 2, (11, 0), (), "AllowUsingPivotTables", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class PublishObject(DispatchBaseClass):
	CLSID = IID('{00024444-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def Publish(self, Create=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1895, LCID, 1, (24, 0), ((12, 17),),Create
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoRepublish": (2178, 2, (11, 0), (), "AutoRepublish", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DivID": (1894, 2, (8, 0), (), "DivID", None),
		"Filename": (1415, 2, (8, 0), (), "Filename", None),
		"HtmlType": (1893, 2, (3, 0), (), "HtmlType", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Sheet": (751, 2, (8, 0), (), "Sheet", None),
		"Source": (222, 2, (8, 0), (), "Source", None),
		"SourceType": (685, 2, (3, 0), (), "SourceType", None),
		"Title": (199, 2, (8, 0), (), "Title", None),
	}
	_prop_map_put_ = {
		"AutoRepublish": ((2178, LCID, 4, 0),()),
		"Filename": ((1415, LCID, 4, 0),()),
		"HtmlType": ((1893, LCID, 4, 0),()),
		"Title": ((199, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class PublishObjects(DispatchBaseClass):
	CLSID = IID('{00024443-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type PublishObject
	def Add(self, SourceType=defaultNamedNotOptArg, Filename=defaultNamedNotOptArg, Sheet=defaultNamedOptArg, Source=defaultNamedOptArg
			, HtmlType=defaultNamedOptArg, DivID=defaultNamedOptArg, Title=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((3, 1), (8, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),SourceType
			, Filename, Sheet, Source, HtmlType, DivID
			, Title)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00024444-0000-0000-C000-000000000046}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	# Result is of type PublishObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024444-0000-0000-C000-000000000046}')
		return ret

	def Publish(self):
		return self._oleobj_.InvokeTypes(1895, LCID, 1, (24, 0), (),)

	# Result is of type PublishObject
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024444-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024444-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024444-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00024444-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class PublishedDoc(DispatchBaseClass):
	CLSID = IID('{000244F8-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DisclosureScope": (3195, 2, (3, 0), (), "DisclosureScope", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PublishedDate": (3230, 2, (7, 0), (), "PublishedDate", None),
		"Title": (199, 2, (8, 0), (), "Title", None),
		"Url": (2271, 2, (8, 0), (), "Url", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class PublishedDocs(DispatchBaseClass):
	CLSID = IID('{000244F7-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type PublishedDoc
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244F8-0000-0000-C000-000000000046}')
		return ret

	# Result is of type PublishedDoc
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244F8-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244F8-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244F8-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{000244F8-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Queries(DispatchBaseClass):
	CLSID = IID('{000244EC-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type WorkbookQuery
	def Add(self, Name=defaultNamedNotOptArg, Formula=defaultNamedNotOptArg, Description=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 17)),Name
			, Formula, Description)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{000244EB-0000-0000-C000-000000000046}')
		return ret

	# Result is of type WorkbookQuery
	def Item(self, NameOrIndex=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),NameOrIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244EB-0000-0000-C000-000000000046}')
		return ret

	# Result is of type WorkbookQuery
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, NameOrIndex=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),NameOrIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244EB-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"FastCombine": (3223, 2, (11, 0), (), "FastCombine", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"FastCombine": ((3223, LCID, 4, 0),()),
	}
	# Default method for this class is '_Default'
	def __call__(self, NameOrIndex=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),NameOrIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244EB-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244EB-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{000244EB-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class QueryTables(DispatchBaseClass):
	CLSID = IID('{00024429-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type QueryTable
	def Add(self, Connection=defaultNamedNotOptArg, Destination=defaultNamedNotOptArg, Sql=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (13, 0), ((12, 1), (9, 1), (12, 17)),Connection
			, Destination, Sql)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, 'Add', '{59191DA1-EA47-11CE-A51F-00AA0061507F}')
		return ret

	# Result is of type QueryTable
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (13, 0), ((12, 1),),Index
			)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, 'Item', '{59191DA1-EA47-11CE-A51F-00AA0061507F}')
		return ret

	# Result is of type QueryTable
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (13, 0), ((12, 1),),Index
			)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, '_Default', '{59191DA1-EA47-11CE-A51F-00AA0061507F}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (13, 0), ((12, 1),),Index
			)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, '__call__', '{59191DA1-EA47-11CE-A51F-00AA0061507F}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{59191DA1-EA47-11CE-A51F-00AA0061507F}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{59191DA1-EA47-11CE-A51F-00AA0061507F}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class QuickAnalysis(DispatchBaseClass):
	CLSID = IID('{000244D0-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Hide(self, XlQuickAnalysisMode=0):
		return self._oleobj_.InvokeTypes(813, LCID, 1, (24, 0), ((3, 49),),XlQuickAnalysisMode
			)

	def Show(self, XlQuickAnalysisMode=0):
		return self._oleobj_.InvokeTypes(496, LCID, 1, (24, 0), ((3, 49),),XlQuickAnalysisMode
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class RTD(DispatchBaseClass):
	CLSID = IID('{0002446E-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def RefreshData(self):
		return self._oleobj_.InvokeTypes(2241, LCID, 1, (24, 0), (),)

	def RestartServers(self):
		return self._oleobj_.InvokeTypes(2242, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"ThrottleInterval": (2240, 2, (3, 0), (), "ThrottleInterval", None),
	}
	_prop_map_put_ = {
		"ThrottleInterval": ((2240, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Range(DispatchBaseClass):
	CLSID = IID('{00020846-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Activate(self):
		return self._ApplyTypes_(304, 1, (12, 0), (), 'Activate', None,)

	# Result is of type Comment
	def AddComment(self, Text=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1389, LCID, 1, (9, 0), ((12, 17),),Text
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddComment', '{00024427-0000-0000-C000-000000000046}')
		return ret

	# Result is of type CommentThreaded
	def AddCommentThreaded(self, Text=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(3280, LCID, 1, (9, 0), ((8, 1),),Text
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddCommentThreaded', '{000244FD-0000-0000-C000-000000000046}')
		return ret

	def AdvancedFilter(self, Action=defaultNamedNotOptArg, CriteriaRange=defaultNamedOptArg, CopyToRange=defaultNamedOptArg, Unique=defaultNamedOptArg):
		return self._ApplyTypes_(876, 1, (12, 0), ((3, 1), (12, 17), (12, 17), (12, 17)), 'AdvancedFilter', None,Action
			, CriteriaRange, CopyToRange, Unique)

	def AllocateChanges(self):
		return self._oleobj_.InvokeTypes(2855, LCID, 1, (24, 0), (),)

	def ApplyNames(self, Names=defaultNamedNotOptArg, IgnoreRelativeAbsolute=defaultNamedNotOptArg, UseRowColumnNames=defaultNamedNotOptArg, OmitColumn=defaultNamedNotOptArg
			, OmitRow=defaultNamedNotOptArg, Order=1, AppendLast=defaultNamedOptArg):
		return self._ApplyTypes_(441, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (3, 49), (12, 17)), 'ApplyNames', None,Names
			, IgnoreRelativeAbsolute, UseRowColumnNames, OmitColumn, OmitRow, Order
			, AppendLast)

	def ApplyOutlineStyles(self):
		return self._ApplyTypes_(448, 1, (12, 0), (), 'ApplyOutlineStyles', None,)

	def AutoComplete(self, String=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(1185, LCID, 1, (8, 0), ((8, 1),),String
			)

	def AutoFill(self, Destination=defaultNamedNotOptArg, Type=0):
		return self._ApplyTypes_(449, 1, (12, 0), ((9, 1), (3, 49)), 'AutoFill', None,Destination
			, Type)

	def AutoFilter(self, Field=defaultNamedNotOptArg, Criteria1=defaultNamedNotOptArg, Operator=1, Criteria2=defaultNamedOptArg
			, VisibleDropDown=defaultNamedOptArg, SubField=defaultNamedOptArg):
		return self._ApplyTypes_(3289, 1, (12, 0), ((12, 17), (12, 17), (3, 49), (12, 17), (12, 17), (12, 17)), 'AutoFilter', None,Field
			, Criteria1, Operator, Criteria2, VisibleDropDown, SubField
			)

	def AutoFit(self):
		return self._ApplyTypes_(237, 1, (12, 0), (), 'AutoFit', None,)

	def AutoFormat(self, Format=1, Number=defaultNamedOptArg, Font=defaultNamedOptArg, Alignment=defaultNamedOptArg
			, Border=defaultNamedOptArg, Pattern=defaultNamedOptArg, Width=defaultNamedOptArg):
		return self._ApplyTypes_(114, 1, (12, 0), ((3, 49), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'AutoFormat', None,Format
			, Number, Font, Alignment, Border, Pattern
			, Width)

	def AutoOutline(self):
		return self._ApplyTypes_(1036, 1, (12, 0), (), 'AutoOutline', None,)

	def BorderAround(self, LineStyle=defaultNamedNotOptArg, Weight=2, ColorIndex=-4105, Color=defaultNamedOptArg
			, ThemeColor=defaultNamedOptArg):
		return self._ApplyTypes_(2771, 1, (12, 0), ((12, 17), (3, 49), (3, 49), (12, 17), (12, 17)), 'BorderAround', None,LineStyle
			, Weight, ColorIndex, Color, ThemeColor)

	def Calculate(self):
		return self._ApplyTypes_(279, 1, (12, 0), (), 'Calculate', None,)

	def CalculateRowMajorOrder(self):
		return self._ApplyTypes_(2364, 1, (12, 0), (), 'CalculateRowMajorOrder', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Clear(self):
		return self._ApplyTypes_(111, 1, (12, 0), (), 'Clear', None,)

	def ClearComments(self):
		return self._oleobj_.InvokeTypes(1390, LCID, 1, (24, 0), (),)

	def ClearContents(self, RemoveControls=defaultNamedOptArg):
		return self._ApplyTypes_(3413, 1, (12, 0), ((12, 17),), 'ClearContents', None,RemoveControls
			)

	def ClearFormats(self):
		return self._ApplyTypes_(112, 1, (12, 0), (), 'ClearFormats', None,)

	def ClearHyperlinks(self):
		return self._oleobj_.InvokeTypes(2854, LCID, 1, (24, 0), (),)

	def ClearNotes(self):
		return self._ApplyTypes_(239, 1, (12, 0), (), 'ClearNotes', None,)

	def ClearOutline(self):
		return self._ApplyTypes_(1037, 1, (12, 0), (), 'ClearOutline', None,)

	# Result is of type Range
	def ColumnDifferences(self, Comparison=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(510, LCID, 1, (9, 0), ((12, 1),),Comparison
			)
		if ret is not None:
			ret = Dispatch(ret, 'ColumnDifferences', '{00020846-0000-0000-C000-000000000046}')
		return ret

	def Consolidate(self, Sources=defaultNamedOptArg, Function=defaultNamedOptArg, TopRow=defaultNamedOptArg, LeftColumn=defaultNamedOptArg
			, CreateLinks=defaultNamedOptArg):
		return self._ApplyTypes_(482, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'Consolidate', None,Sources
			, Function, TopRow, LeftColumn, CreateLinks)

	def ConvertToLinkedDataType(self, ServiceID=defaultNamedNotOptArg, LanguageCulture=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3290, LCID, 1, (24, 0), ((3, 1), (8, 1)),ServiceID
			, LanguageCulture)

	def Copy(self, Destination=defaultNamedOptArg):
		return self._ApplyTypes_(551, 1, (12, 0), ((12, 17),), 'Copy', None,Destination
			)

	def CopyFromRecordset(self, Data=defaultNamedNotOptArg, MaxRows=defaultNamedOptArg, MaxColumns=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1152, LCID, 1, (3, 0), ((13, 1), (12, 17), (12, 17)),Data
			, MaxRows, MaxColumns)

	def CopyPicture(self, Appearance=1, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def CreateNames(self, Top=defaultNamedOptArg, Left=defaultNamedOptArg, Bottom=defaultNamedOptArg, Right=defaultNamedOptArg):
		return self._ApplyTypes_(457, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CreateNames', None,Top
			, Left, Bottom, Right)

	def CreatePublisher(self, Edition=defaultNamedNotOptArg, Appearance=1, ContainsPICT=defaultNamedOptArg, ContainsBIFF=defaultNamedOptArg
			, ContainsRTF=defaultNamedOptArg, ContainsVALU=defaultNamedOptArg):
		return self._ApplyTypes_(458, 1, (12, 0), ((12, 17), (3, 49), (12, 17), (12, 17), (12, 17), (12, 17)), 'CreatePublisher', None,Edition
			, Appearance, ContainsPICT, ContainsBIFF, ContainsRTF, ContainsVALU
			)

	def Cut(self, Destination=defaultNamedOptArg):
		return self._ApplyTypes_(565, 1, (12, 0), ((12, 17),), 'Cut', None,Destination
			)

	def DataSeries(self, Rowcol=defaultNamedNotOptArg, Type=-4132, Date=1, Step=defaultNamedOptArg
			, Stop=defaultNamedOptArg, Trend=defaultNamedOptArg):
		return self._ApplyTypes_(464, 1, (12, 0), ((12, 17), (3, 49), (3, 49), (12, 17), (12, 17), (12, 17)), 'DataSeries', None,Rowcol
			, Type, Date, Step, Stop, Trend
			)

	def DataTypeToText(self):
		return self._oleobj_.InvokeTypes(3294, LCID, 1, (24, 0), (),)

	def Delete(self, Shift=defaultNamedOptArg):
		return self._ApplyTypes_(117, 1, (12, 0), ((12, 17),), 'Delete', None,Shift
			)

	def DialogBox(self):
		return self._ApplyTypes_(245, 1, (12, 0), (), 'DialogBox', None,)

	def Dirty(self):
		return self._oleobj_.InvokeTypes(2014, LCID, 1, (24, 0), (),)

	def DiscardChanges(self):
		return self._oleobj_.InvokeTypes(2856, LCID, 1, (24, 0), (),)

	def EditionOptions(self, Type=defaultNamedNotOptArg, Option=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Reference=defaultNamedNotOptArg
			, Appearance=1, ChartSize=1, Format=defaultNamedOptArg):
		return self._ApplyTypes_(1131, 1, (12, 0), ((3, 1), (3, 1), (12, 17), (12, 17), (3, 49), (3, 49), (12, 17)), 'EditionOptions', None,Type
			, Option, Name, Reference, Appearance, ChartSize
			, Format)

	# Result is of type Range
	# The method End is actually a property, but must be used as a method to correctly pass the arguments
	def End(self, Direction=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(500, LCID, 2, (9, 0), ((3, 1),),Direction
			)
		if ret is not None:
			ret = Dispatch(ret, 'End', '{00020846-0000-0000-C000-000000000046}')
		return ret

	def ExportAsFixedFormat(self, Type=defaultNamedNotOptArg, Filename=defaultNamedOptArg, Quality=defaultNamedOptArg, IncludeDocProperties=defaultNamedOptArg
			, IgnorePrintAreas=defaultNamedOptArg, From=defaultNamedOptArg, To=defaultNamedOptArg, OpenAfterPublish=defaultNamedOptArg, FixedFormatExtClassPtr=defaultNamedOptArg
			, WorkIdentity=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(3175, LCID, 1, (24, 0), ((3, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Type
			, Filename, Quality, IncludeDocProperties, IgnorePrintAreas, From
			, To, OpenAfterPublish, FixedFormatExtClassPtr, WorkIdentity)

	def FillDown(self):
		return self._ApplyTypes_(248, 1, (12, 0), (), 'FillDown', None,)

	def FillLeft(self):
		return self._ApplyTypes_(249, 1, (12, 0), (), 'FillLeft', None,)

	def FillRight(self):
		return self._ApplyTypes_(250, 1, (12, 0), (), 'FillRight', None,)

	def FillUp(self):
		return self._ApplyTypes_(251, 1, (12, 0), (), 'FillUp', None,)

	# Result is of type Range
	def Find(self, What=defaultNamedNotOptArg, After=defaultNamedNotOptArg, LookIn=defaultNamedNotOptArg, LookAt=defaultNamedNotOptArg
			, SearchOrder=defaultNamedNotOptArg, SearchDirection=1, MatchCase=defaultNamedOptArg, MatchByte=defaultNamedOptArg, SearchFormat=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(398, LCID, 1, (9, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (3, 49), (12, 17), (12, 17), (12, 17)),What
			, After, LookIn, LookAt, SearchOrder, SearchDirection
			, MatchCase, MatchByte, SearchFormat)
		if ret is not None:
			ret = Dispatch(ret, 'Find', '{00020846-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Range
	def FindNext(self, After=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(399, LCID, 1, (9, 0), ((12, 17),),After
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindNext', '{00020846-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Range
	def FindPrevious(self, After=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(400, LCID, 1, (9, 0), ((12, 17),),After
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindPrevious', '{00020846-0000-0000-C000-000000000046}')
		return ret

	def FlashFill(self):
		return self._oleobj_.InvokeTypes(2996, LCID, 1, (24, 0), (),)

	def FunctionWizard(self):
		return self._ApplyTypes_(571, 1, (12, 0), (), 'FunctionWizard', None,)

	# The method GetAddress is actually a property, but must be used as a method to correctly pass the arguments
	def GetAddress(self, RowAbsolute=defaultNamedNotOptArg, ColumnAbsolute=defaultNamedNotOptArg, ReferenceStyle=1, External=defaultNamedOptArg
			, RelativeTo=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(236, LCID, 2, (8, 0), ((12, 17), (12, 17), (3, 49), (12, 17), (12, 17)),RowAbsolute
			, ColumnAbsolute, ReferenceStyle, External, RelativeTo)

	# The method GetAddressLocal is actually a property, but must be used as a method to correctly pass the arguments
	def GetAddressLocal(self, RowAbsolute=defaultNamedNotOptArg, ColumnAbsolute=defaultNamedNotOptArg, ReferenceStyle=1, External=defaultNamedOptArg
			, RelativeTo=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(437, LCID, 2, (8, 0), ((12, 17), (12, 17), (3, 49), (12, 17), (12, 17)),RowAbsolute
			, ColumnAbsolute, ReferenceStyle, External, RelativeTo)

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Range
	# The method GetOffset is actually a property, but must be used as a method to correctly pass the arguments
	def GetOffset(self, RowOffset=defaultNamedOptArg, ColumnOffset=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(254, LCID, 2, (9, 0), ((12, 17), (12, 17)),RowOffset
			, ColumnOffset)
		if ret is not None:
			ret = Dispatch(ret, 'GetOffset', '{00020846-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Range
	# The method GetResize is actually a property, but must be used as a method to correctly pass the arguments
	def GetResize(self, RowSize=defaultNamedOptArg, ColumnSize=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(256, LCID, 2, (9, 0), ((12, 17), (12, 17)),RowSize
			, ColumnSize)
		if ret is not None:
			ret = Dispatch(ret, 'GetResize', '{00020846-0000-0000-C000-000000000046}')
		return ret

	# The method GetValue is actually a property, but must be used as a method to correctly pass the arguments
	def GetValue(self, RangeValueDataType=defaultNamedOptArg):
		return self._ApplyTypes_(6, 2, (12, 0), ((12, 17),), 'GetValue', None,RangeValueDataType
			)

	# The method Get_Default is actually a property, but must be used as a method to correctly pass the arguments
	def Get_Default(self, RowIndex=defaultNamedOptArg, ColumnIndex=defaultNamedOptArg):
		return self._ApplyTypes_(0, 2, (12, 0), ((12, 17), (12, 17)), 'Get_Default', None,RowIndex
			, ColumnIndex)

	def GoalSeek(self, Goal=defaultNamedNotOptArg, ChangingCell=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(472, LCID, 1, (11, 0), ((12, 1), (9, 1)),Goal
			, ChangingCell)

	def Group(self, Start=defaultNamedOptArg, End=defaultNamedOptArg, By=defaultNamedOptArg, Periods=defaultNamedOptArg):
		return self._ApplyTypes_(46, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'Group', None,Start
			, End, By, Periods)

	def Insert(self, Shift=defaultNamedOptArg, CopyOrigin=defaultNamedOptArg):
		return self._ApplyTypes_(252, 1, (12, 0), ((12, 17), (12, 17)), 'Insert', None,Shift
			, CopyOrigin)

	def InsertIndent(self, InsertAmount=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1381, LCID, 1, (24, 0), ((3, 1),),InsertAmount
			)

	def InsertPictureInCell(self, PictureURI=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3402, LCID, 1, (24, 0), ((8, 1),),PictureURI
			)

	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, RowIndex=defaultNamedNotOptArg, ColumnIndex=defaultNamedOptArg):
		return self._ApplyTypes_(170, 2, (12, 0), ((12, 1), (12, 17)), 'Item', None,RowIndex
			, ColumnIndex)

	def Justify(self):
		return self._ApplyTypes_(495, 1, (12, 0), (), 'Justify', None,)

	def ListNames(self):
		return self._ApplyTypes_(253, 1, (12, 0), (), 'ListNames', None,)

	def Merge(self, Across=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(564, LCID, 1, (24, 0), ((12, 17),),Across
			)

	def NavigateArrow(self, TowardPrecedent=defaultNamedOptArg, ArrowNumber=defaultNamedOptArg, LinkNumber=defaultNamedOptArg):
		return self._ApplyTypes_(1032, 1, (12, 0), ((12, 17), (12, 17), (12, 17)), 'NavigateArrow', None,TowardPrecedent
			, ArrowNumber, LinkNumber)

	def NoteText(self, Text=defaultNamedOptArg, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(1127, LCID, 1, (8, 0), ((12, 17), (12, 17), (12, 17)),Text
			, Start, Length)

	def Parse(self, ParseLine=defaultNamedOptArg, Destination=defaultNamedOptArg):
		return self._ApplyTypes_(477, 1, (12, 0), ((12, 17), (12, 17)), 'Parse', None,ParseLine
			, Destination)

	def PastePictureInCell(self):
		return self._oleobj_.InvokeTypes(3405, LCID, 1, (24, 0), (),)

	def PasteSpecial(self, Paste=-4104, Operation=-4142, SkipBlanks=defaultNamedOptArg, Transpose=defaultNamedOptArg):
		return self._ApplyTypes_(1928, 1, (12, 0), ((3, 49), (3, 49), (12, 17), (12, 17)), 'PasteSpecial', None,Paste
			, Operation, SkipBlanks, Transpose)

	def PlacePictureOverCells(self, AsReference=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(3407, LCID, 1, (24, 0), ((12, 17),),AsReference
			)

	def PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg):
		return self._ApplyTypes_(2361, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'PrintOut', None,From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName)

	def PrintPreview(self, EnableChanges=defaultNamedOptArg):
		return self._ApplyTypes_(281, 1, (12, 0), ((12, 17),), 'PrintPreview', None,EnableChanges
			)

	# Result is of type Range
	# The method Range is actually a property, but must be used as a method to correctly pass the arguments
	def Range(self, Cell1=defaultNamedNotOptArg, Cell2=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(197, LCID, 2, (9, 0), ((12, 1), (12, 17)),Cell1
			, Cell2)
		if ret is not None:
			ret = Dispatch(ret, 'Range', '{00020846-0000-0000-C000-000000000046}')
		return ret

	def RefreshLinkedDataType(self, DomainID=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(3299, LCID, 1, (24, 0), ((12, 17),),DomainID
			)

	def RemoveControls(self):
		return self._oleobj_.InvokeTypes(3414, LCID, 1, (24, 0), (),)

	def RemoveDuplicates(self, Columns=defaultNamedNotOptArg, Header=2):
		return self._oleobj_.InvokeTypes(2492, LCID, 1, (24, 0), ((12, 17), (3, 49)),Columns
			, Header)

	def RemoveSubtotal(self):
		return self._ApplyTypes_(883, 1, (12, 0), (), 'RemoveSubtotal', None,)

	def Replace(self, What=defaultNamedNotOptArg, Replacement=defaultNamedNotOptArg, LookAt=defaultNamedOptArg, SearchOrder=defaultNamedOptArg
			, MatchCase=defaultNamedOptArg, MatchByte=defaultNamedOptArg, SearchFormat=defaultNamedOptArg, ReplaceFormat=defaultNamedOptArg, FormulaVersion=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(3305, LCID, 1, (11, 0), ((12, 1), (12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),What
			, Replacement, LookAt, SearchOrder, MatchCase, MatchByte
			, SearchFormat, ReplaceFormat, FormulaVersion)

	def ResetContents(self):
		return self._oleobj_.InvokeTypes(3415, LCID, 1, (24, 0), (),)

	# Result is of type Range
	def RowDifferences(self, Comparison=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(511, LCID, 1, (9, 0), ((12, 1),),Comparison
			)
		if ret is not None:
			ret = Dispatch(ret, 'RowDifferences', '{00020846-0000-0000-C000-000000000046}')
		return ret

	def Run(self, Arg1=defaultNamedOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._ApplyTypes_(259, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'Run', None,Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	def SetCellDataTypeFromCell(self, SourceCell=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3293, LCID, 1, (24, 0), ((9, 1),),SourceCell
			)

	# The method SetItem is actually a property, but must be used as a method to correctly pass the arguments
	def SetItem(self, RowIndex=defaultNamedNotOptArg, ColumnIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(170, LCID, 4, (24, 0), ((12, 1), (12, 17), (12, 1)),RowIndex
			, ColumnIndex, arg2)

	def SetPhonetic(self):
		return self._oleobj_.InvokeTypes(1812, LCID, 1, (24, 0), (),)

	# The method SetValue is actually a property, but must be used as a method to correctly pass the arguments
	def SetValue(self, RangeValueDataType=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((12, 17), (12, 1)),RangeValueDataType
			, arg1)

	# The method Set_Default is actually a property, but must be used as a method to correctly pass the arguments
	def Set_Default(self, RowIndex=defaultNamedNotOptArg, ColumnIndex=defaultNamedOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(0, LCID, 4, (24, 0), ((12, 17), (12, 17), (12, 1)),RowIndex
			, ColumnIndex, arg2)

	def Show(self):
		return self._ApplyTypes_(496, 1, (12, 0), (), 'Show', None,)

	def ShowCard(self):
		return self._oleobj_.InvokeTypes(3274, LCID, 1, (24, 0), (),)

	def ShowDependents(self, Remove=defaultNamedOptArg):
		return self._ApplyTypes_(877, 1, (12, 0), ((12, 17),), 'ShowDependents', None,Remove
			)

	def ShowErrors(self):
		return self._ApplyTypes_(878, 1, (12, 0), (), 'ShowErrors', None,)

	def ShowPrecedents(self, Remove=defaultNamedOptArg):
		return self._ApplyTypes_(879, 1, (12, 0), ((12, 17),), 'ShowPrecedents', None,Remove
			)

	def Sort(self, Key1=defaultNamedNotOptArg, Order1=1, Key2=defaultNamedNotOptArg, Type=defaultNamedNotOptArg
			, Order2=1, Key3=defaultNamedNotOptArg, Order3=1, Header=2, OrderCustom=defaultNamedNotOptArg
			, MatchCase=defaultNamedNotOptArg, Orientation=2, SortMethod=1, DataOption1=0, DataOption2=0
			, DataOption3=0, SubField1=defaultNamedOptArg):
		return self._ApplyTypes_(3288, 1, (12, 0), ((12, 17), (3, 49), (12, 17), (12, 17), (3, 49), (12, 17), (3, 49), (3, 49), (12, 17), (12, 17), (3, 49), (3, 49), (3, 49), (3, 49), (3, 49), (12, 17)), 'Sort', None,Key1
			, Order1, Key2, Type, Order2, Key3
			, Order3, Header, OrderCustom, MatchCase, Orientation
			, SortMethod, DataOption1, DataOption2, DataOption3, SubField1
			)

	def SortSpecial(self, SortMethod=1, Key1=defaultNamedNotOptArg, Order1=1, Type=defaultNamedNotOptArg
			, Key2=defaultNamedNotOptArg, Order2=1, Key3=defaultNamedNotOptArg, Order3=1, Header=2
			, OrderCustom=defaultNamedNotOptArg, MatchCase=defaultNamedNotOptArg, Orientation=2, DataOption1=0, DataOption2=0
			, DataOption3=0):
		return self._ApplyTypes_(881, 1, (12, 0), ((3, 49), (12, 17), (3, 49), (12, 17), (12, 17), (3, 49), (12, 17), (3, 49), (3, 49), (12, 17), (12, 17), (3, 49), (3, 49), (3, 49), (3, 49)), 'SortSpecial', None,SortMethod
			, Key1, Order1, Type, Key2, Order2
			, Key3, Order3, Header, OrderCustom, MatchCase
			, Orientation, DataOption1, DataOption2, DataOption3)

	def Speak(self, SpeakDirection=defaultNamedOptArg, SpeakFormulas=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2017, LCID, 1, (24, 0), ((12, 17), (12, 17)),SpeakDirection
			, SpeakFormulas)

	# Result is of type Range
	def SpecialCells(self, Type=defaultNamedNotOptArg, Value=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(410, LCID, 1, (9, 0), ((3, 1), (12, 17)),Type
			, Value)
		if ret is not None:
			ret = Dispatch(ret, 'SpecialCells', '{00020846-0000-0000-C000-000000000046}')
		return ret

	def SubscribeTo(self, Edition=defaultNamedNotOptArg, Format=-4158):
		return self._ApplyTypes_(481, 1, (12, 0), ((8, 1), (3, 49)), 'SubscribeTo', None,Edition
			, Format)

	def Subtotal(self, GroupBy=defaultNamedNotOptArg, Function=defaultNamedNotOptArg, TotalList=defaultNamedNotOptArg, Replace=defaultNamedNotOptArg
			, PageBreaks=defaultNamedNotOptArg, SummaryBelowData=1):
		return self._ApplyTypes_(882, 1, (12, 0), ((3, 1), (3, 1), (12, 1), (12, 17), (12, 17), (3, 49)), 'Subtotal', None,GroupBy
			, Function, TotalList, Replace, PageBreaks, SummaryBelowData
			)

	def Table(self, RowInput=defaultNamedOptArg, ColumnInput=defaultNamedOptArg):
		return self._ApplyTypes_(497, 1, (12, 0), ((12, 17), (12, 17)), 'Table', None,RowInput
			, ColumnInput)

	def TextToColumns(self, Destination=defaultNamedNotOptArg, DataType=1, TextQualifier=1, ConsecutiveDelimiter=defaultNamedOptArg
			, Tab=defaultNamedOptArg, Semicolon=defaultNamedOptArg, Comma=defaultNamedOptArg, Space=defaultNamedOptArg, Other=defaultNamedOptArg
			, OtherChar=defaultNamedOptArg, FieldInfo=defaultNamedOptArg, DecimalSeparator=defaultNamedOptArg, ThousandsSeparator=defaultNamedOptArg, TrailingMinusNumbers=defaultNamedOptArg):
		return self._ApplyTypes_(1040, 1, (12, 0), ((12, 17), (3, 49), (3, 49), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'TextToColumns', None,Destination
			, DataType, TextQualifier, ConsecutiveDelimiter, Tab, Semicolon
			, Comma, Space, Other, OtherChar, FieldInfo
			, DecimalSeparator, ThousandsSeparator, TrailingMinusNumbers)

	def UnMerge(self):
		return self._oleobj_.InvokeTypes(1384, LCID, 1, (24, 0), (),)

	def Ungroup(self):
		return self._ApplyTypes_(244, 1, (12, 0), (), 'Ungroup', None,)

	def UpdatePictureInCellAlternativeText(self, AlternativeText=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3410, LCID, 1, (24, 0), ((8, 1),),AlternativeText
			)

	def _AutoFilter(self, Field=defaultNamedNotOptArg, Criteria1=defaultNamedNotOptArg, Operator=1, Criteria2=defaultNamedOptArg
			, VisibleDropDown=defaultNamedOptArg):
		return self._ApplyTypes_(793, 1, (12, 0), ((12, 17), (12, 17), (3, 49), (12, 17), (12, 17)), '_AutoFilter', None,Field
			, Criteria1, Operator, Criteria2, VisibleDropDown)

	def _BorderAround(self, LineStyle=defaultNamedNotOptArg, Weight=2, ColorIndex=-4105, Color=defaultNamedOptArg):
		return self._ApplyTypes_(1067, 1, (12, 0), ((12, 17), (3, 49), (3, 49), (12, 17)), '_BorderAround', None,LineStyle
			, Weight, ColorIndex, Color)

	def _ClearContents(self):
		return self._ApplyTypes_(113, 1, (12, 0), (), '_ClearContents', None,)

	def _ExportAsFixedFormat(self, Type=defaultNamedNotOptArg, Filename=defaultNamedOptArg, Quality=defaultNamedOptArg, IncludeDocProperties=defaultNamedOptArg
			, IgnorePrintAreas=defaultNamedOptArg, From=defaultNamedOptArg, To=defaultNamedOptArg, OpenAfterPublish=defaultNamedOptArg, FixedFormatExtClassPtr=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2493, LCID, 1, (24, 0), ((3, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Type
			, Filename, Quality, IncludeDocProperties, IgnorePrintAreas, From
			, To, OpenAfterPublish, FixedFormatExtClassPtr)

	def _PasteSpecial(self, Paste=-4104, Operation=-4142, SkipBlanks=defaultNamedOptArg, Transpose=defaultNamedOptArg):
		return self._ApplyTypes_(1027, 1, (12, 0), ((3, 49), (3, 49), (12, 17), (12, 17)), '_PasteSpecial', None,Paste
			, Operation, SkipBlanks, Transpose)

	def _PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg):
		return self._ApplyTypes_(1772, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), '_PrintOut', None,From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName)

	def _Replace(self, What=defaultNamedNotOptArg, Replacement=defaultNamedNotOptArg, LookAt=defaultNamedOptArg, SearchOrder=defaultNamedOptArg
			, MatchCase=defaultNamedOptArg, MatchByte=defaultNamedOptArg, SearchFormat=defaultNamedOptArg, ReplaceFormat=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(226, LCID, 1, (11, 0), ((12, 1), (12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),What
			, Replacement, LookAt, SearchOrder, MatchCase, MatchByte
			, SearchFormat, ReplaceFormat)

	def _Sort(self, Key1=defaultNamedNotOptArg, Order1=1, Key2=defaultNamedNotOptArg, Type=defaultNamedNotOptArg
			, Order2=1, Key3=defaultNamedNotOptArg, Order3=1, Header=2, OrderCustom=defaultNamedNotOptArg
			, MatchCase=defaultNamedNotOptArg, Orientation=2, SortMethod=1, DataOption1=0, DataOption2=0
			, DataOption3=0):
		return self._ApplyTypes_(880, 1, (12, 0), ((12, 17), (3, 49), (12, 17), (12, 17), (3, 49), (12, 17), (3, 49), (3, 49), (12, 17), (12, 17), (3, 49), (3, 49), (3, 49), (3, 49), (3, 49)), '_Sort', None,Key1
			, Order1, Key2, Type, Order2, Key3
			, Order3, Header, OrderCustom, MatchCase, Orientation
			, SortMethod, DataOption1, DataOption2, DataOption3)

	def _PrintOut_(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg):
		return self._ApplyTypes_(905, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), '_PrintOut_', None,From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate)

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (12, 0), (), "AddIndent", None),
		"Address": (236, 2, (8, 0), ((12, 17), (12, 17), (3, 49), (12, 17), (12, 17)), "Address", None),
		"AddressLocal": (437, 2, (8, 0), ((12, 17), (12, 17), (3, 49), (12, 17), (12, 17)), "AddressLocal", None),
		"AllowEdit": (2020, 2, (11, 0), (), "AllowEdit", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Areas' returns object of type 'Areas'
		"Areas": (568, 2, (9, 0), (), "Areas", '{00020860-0000-0000-C000-000000000046}'),
		# Method 'Borders' returns object of type 'Borders'
		"Borders": (435, 2, (9, 0), (), "Borders", '{00020855-0000-0000-C000-000000000046}'),
		# Method 'CellControl' returns object of type 'CellControl'
		"CellControl": (3411, 2, (9, 0), (), "CellControl", '{00024503-0000-0000-C000-000000000046}'),
		# Method 'Cells' returns object of type 'Range'
		"Cells": (238, 2, (9, 0), (), "Cells", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Column": (240, 2, (3, 0), (), "Column", None),
		"ColumnWidth": (242, 2, (12, 0), (), "ColumnWidth", None),
		# Method 'Columns' returns object of type 'Range'
		"Columns": (241, 2, (9, 0), (), "Columns", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'Comment' returns object of type 'Comment'
		"Comment": (910, 2, (9, 0), (), "Comment", '{00024427-0000-0000-C000-000000000046}'),
		# Method 'CommentThreaded' returns object of type 'CommentThreaded'
		"CommentThreaded": (3281, 2, (9, 0), (), "CommentThreaded", '{000244FD-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"CountLarge": (2499, 2, (12, 0), (), "CountLarge", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'CurrentArray' returns object of type 'Range'
		"CurrentArray": (501, 2, (9, 0), (), "CurrentArray", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'CurrentRegion' returns object of type 'Range'
		"CurrentRegion": (243, 2, (9, 0), (), "CurrentRegion", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'Dependents' returns object of type 'Range'
		"Dependents": (543, 2, (9, 0), (), "Dependents", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'DirectDependents' returns object of type 'Range'
		"DirectDependents": (545, 2, (9, 0), (), "DirectDependents", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'DirectPrecedents' returns object of type 'Range'
		"DirectPrecedents": (546, 2, (9, 0), (), "DirectPrecedents", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'DisplayFormat' returns object of type 'DisplayFormat'
		"DisplayFormat": (666, 2, (9, 0), (), "DisplayFormat", '{000244C2-0000-0000-C000-000000000046}'),
		# Method 'EntireColumn' returns object of type 'Range'
		"EntireColumn": (246, 2, (9, 0), (), "EntireColumn", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'EntireRow' returns object of type 'Range'
		"EntireRow": (247, 2, (9, 0), (), "EntireRow", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'Errors' returns object of type 'Errors'
		"Errors": (2015, 2, (9, 0), (), "Errors", '{0002445C-0000-0000-C000-000000000046}'),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		# Method 'FormatConditions' returns object of type 'FormatConditions'
		"FormatConditions": (1392, 2, (9, 0), (), "FormatConditions", '{00024424-0000-0000-C000-000000000046}'),
		"Formula": (261, 2, (12, 0), (), "Formula", None),
		"Formula2": (1580, 2, (12, 0), (), "Formula2", None),
		"Formula2Local": (3300, 2, (12, 0), (), "Formula2Local", None),
		"Formula2R1C1": (3301, 2, (12, 0), (), "Formula2R1C1", None),
		"Formula2R1C1Local": (3302, 2, (12, 0), (), "Formula2R1C1Local", None),
		"FormulaArray": (586, 2, (12, 0), (), "FormulaArray", None),
		"FormulaHidden": (262, 2, (12, 0), (), "FormulaHidden", None),
		"FormulaLabel": (1380, 2, (3, 0), (), "FormulaLabel", None),
		"FormulaLocal": (263, 2, (12, 0), (), "FormulaLocal", None),
		"FormulaR1C1": (264, 2, (12, 0), (), "FormulaR1C1", None),
		"FormulaR1C1Local": (265, 2, (12, 0), (), "FormulaR1C1Local", None),
		"HasArray": (266, 2, (12, 0), (), "HasArray", None),
		"HasFormula": (267, 2, (12, 0), (), "HasFormula", None),
		"HasRichDataType": (3326, 2, (12, 0), (), "HasRichDataType", None),
		"HasSpill": (3295, 2, (12, 0), (), "HasSpill", None),
		"Height": (123, 2, (12, 0), (), "Height", None),
		"Hidden": (268, 2, (12, 0), (), "Hidden", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		# Method 'Hyperlinks' returns object of type 'Hyperlinks'
		"Hyperlinks": (1393, 2, (9, 0), (), "Hyperlinks", '{00024430-0000-0000-C000-000000000046}'),
		"ID": (1813, 2, (8, 0), (), "ID", None),
		"IndentLevel": (201, 2, (12, 0), (), "IndentLevel", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (12, 0), (), "Left", None),
		"LinkedDataTypeState": (3291, 2, (12, 0), (), "LinkedDataTypeState", None),
		"ListHeaderRows": (1187, 2, (3, 0), (), "ListHeaderRows", None),
		# Method 'ListObject' returns object of type 'ListObject'
		"ListObject": (2257, 2, (9, 0), (), "ListObject", '{00024471-0000-0000-C000-000000000046}'),
		"LocationInTable": (691, 2, (3, 0), (), "LocationInTable", None),
		"Locked": (269, 2, (12, 0), (), "Locked", None),
		"MDX": (2123, 2, (8, 0), (), "MDX", None),
		# Method 'MergeArea' returns object of type 'Range'
		"MergeArea": (1385, 2, (9, 0), (), "MergeArea", '{00020846-0000-0000-C000-000000000046}'),
		"MergeCells": (208, 2, (12, 0), (), "MergeCells", None),
		"Name": (110, 2, (12, 0), (), "Name", None),
		# Method 'Next' returns object of type 'Range'
		"Next": (502, 2, (9, 0), (), "Next", '{00020846-0000-0000-C000-000000000046}'),
		"NumberFormat": (193, 2, (12, 0), (), "NumberFormat", None),
		"NumberFormatLocal": (1097, 2, (12, 0), (), "NumberFormatLocal", None),
		# Method 'Offset' returns object of type 'Range'
		"Offset": (254, 2, (9, 0), ((12, 17), (12, 17)), "Offset", '{00020846-0000-0000-C000-000000000046}'),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"OutlineLevel": (271, 2, (12, 0), (), "OutlineLevel", None),
		"PageBreak": (255, 2, (3, 0), (), "PageBreak", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'Phonetic' returns object of type 'Phonetic'
		"Phonetic": (1391, 2, (9, 0), (), "Phonetic", '{00024438-0000-0000-C000-000000000046}'),
		# Method 'Phonetics' returns object of type 'Phonetics'
		"Phonetics": (1811, 2, (9, 0), (), "Phonetics", '{00024447-0000-0000-C000-000000000046}'),
		# Method 'PivotCell' returns object of type 'PivotCell'
		"PivotCell": (2013, 2, (9, 0), (), "PivotCell", '{00024458-0000-0000-C000-000000000046}'),
		# Method 'PivotField' returns object of type 'PivotField'
		"PivotField": (731, 2, (9, 0), (), "PivotField", '{00020874-0000-0000-C000-000000000046}'),
		# Method 'PivotItem' returns object of type 'PivotItem'
		"PivotItem": (740, 2, (9, 0), (), "PivotItem", '{00020876-0000-0000-C000-000000000046}'),
		# Method 'PivotTable' returns object of type 'PivotTable'
		"PivotTable": (716, 2, (9, 0), (), "PivotTable", '{00020872-0000-0000-C000-000000000046}'),
		# Method 'Precedents' returns object of type 'Range'
		"Precedents": (544, 2, (9, 0), (), "Precedents", '{00020846-0000-0000-C000-000000000046}'),
		"PrefixCharacter": (504, 2, (12, 0), (), "PrefixCharacter", None),
		# Method 'Previous' returns object of type 'Range'
		"Previous": (503, 2, (9, 0), (), "Previous", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'QueryTable' returns object of type 'QueryTable'
		"QueryTable": (1386, 2, (13, 0), (), "QueryTable", '{59191DA1-EA47-11CE-A51F-00AA0061507F}'),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		# Method 'Resize' returns object of type 'Range'
		"Resize": (256, 2, (9, 0), ((12, 17), (12, 17)), "Resize", '{00020846-0000-0000-C000-000000000046}'),
		"Row": (257, 2, (3, 0), (), "Row", None),
		"RowHeight": (272, 2, (12, 0), (), "RowHeight", None),
		# Method 'Rows' returns object of type 'Range'
		"Rows": (258, 2, (9, 0), (), "Rows", '{00020846-0000-0000-C000-000000000046}'),
		"SavedAsArray": (3303, 2, (12, 0), (), "SavedAsArray", None),
		# Method 'ServerActions' returns object of type 'Actions'
		"ServerActions": (2491, 2, (9, 0), (), "ServerActions", '{00024490-0000-0000-C000-000000000046}'),
		"ShowDetail": (585, 2, (12, 0), (), "ShowDetail", None),
		"ShrinkToFit": (209, 2, (12, 0), (), "ShrinkToFit", None),
		# Method 'SmartTags' returns object of type 'SmartTags'
		"SmartTags": (2016, 2, (9, 0), (), "SmartTags", '{00024461-0000-0000-C000-000000000046}'),
		# Method 'SoundNote' returns object of type 'SoundNote'
		"SoundNote": (916, 2, (9, 0), (), "SoundNote", '{0002087B-0000-0000-C000-000000000046}'),
		# Method 'SparklineGroups' returns object of type 'SparklineGroups'
		"SparklineGroups": (2853, 2, (9, 0), (), "SparklineGroups", '{000244B6-0000-0000-C000-000000000046}'),
		# Method 'SpillParent' returns object of type 'Range'
		"SpillParent": (3297, 2, (9, 0), (), "SpillParent", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'SpillingToRange' returns object of type 'Range'
		"SpillingToRange": (3296, 2, (9, 0), (), "SpillingToRange", '{00020846-0000-0000-C000-000000000046}'),
		"Style": (260, 2, (12, 0), (), "Style", None),
		"Summary": (273, 2, (12, 0), (), "Summary", None),
		"Text": (138, 2, (12, 0), (), "Text", None),
		"Top": (126, 2, (12, 0), (), "Top", None),
		"UseStandardHeight": (274, 2, (12, 0), (), "UseStandardHeight", None),
		"UseStandardWidth": (275, 2, (12, 0), (), "UseStandardWidth", None),
		# Method 'Validation' returns object of type 'Validation'
		"Validation": (1387, 2, (9, 0), (), "Validation", '{0002442F-0000-0000-C000-000000000046}'),
		"Value": (6, 2, (12, 0), ((12, 17),), "Value", None),
		"Value2": (1388, 2, (12, 0), (), "Value2", None),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"Width": (122, 2, (12, 0), (), "Width", None),
		# Method 'Worksheet' returns object of type 'Worksheet'
		"Worksheet": (348, 2, (13, 0), (), "Worksheet", '{00020820-0000-0000-C000-000000000046}'),
		"WrapText": (276, 2, (12, 0), (), "WrapText", None),
		# Method 'XPath' returns object of type 'XPath'
		"XPath": (2258, 2, (9, 0), (), "XPath", '{0002447E-0000-0000-C000-000000000046}'),
		"_Default": (0, 2, (12, 0), ((12, 17), (12, 17)), "_Default", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"ColumnWidth": ((242, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Formula2": ((1580, LCID, 4, 0),()),
		"Formula2Local": ((3300, LCID, 4, 0),()),
		"Formula2R1C1": ((3301, LCID, 4, 0),()),
		"Formula2R1C1Local": ((3302, LCID, 4, 0),()),
		"FormulaArray": ((586, LCID, 4, 0),()),
		"FormulaHidden": ((262, LCID, 4, 0),()),
		"FormulaLabel": ((1380, LCID, 4, 0),()),
		"FormulaLocal": ((263, LCID, 4, 0),()),
		"FormulaR1C1": ((264, LCID, 4, 0),()),
		"FormulaR1C1Local": ((265, LCID, 4, 0),()),
		"Hidden": ((268, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"ID": ((1813, LCID, 4, 0),()),
		"IndentLevel": ((201, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"MergeCells": ((208, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"NumberFormat": ((193, LCID, 4, 0),()),
		"NumberFormatLocal": ((1097, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"OutlineLevel": ((271, LCID, 4, 0),()),
		"PageBreak": ((255, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"RowHeight": ((272, LCID, 4, 0),()),
		"ShowDetail": ((585, LCID, 4, 0),()),
		"ShrinkToFit": ((209, LCID, 4, 0),()),
		"Style": ((260, LCID, 4, 0),()),
		"UseStandardHeight": ((274, LCID, 4, 0),()),
		"UseStandardWidth": ((275, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Value2": ((1388, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"WrapText": ((276, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default method for this class is '_Default'
	def __call__(self, RowIndex=defaultNamedOptArg, ColumnIndex=defaultNamedOptArg):
		return self._ApplyTypes_(0, 2, (12, 0), ((12, 17), (12, 17)), '__call__', None,RowIndex
			, ColumnIndex)

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Ranges(DispatchBaseClass):
	CLSID = IID('{000244A0-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Range
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00020846-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Range
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00020846-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00020846-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00020846-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00020846-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class RecentFile(DispatchBaseClass):
	CLSID = IID('{00024407-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	# Result is of type Workbook
	def Open(self):
		ret = self._oleobj_.InvokeTypes(1923, LCID, 1, (13, 0), (),)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, 'Open', '{00020819-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Path": (291, 2, (8, 0), (), "Path", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class RecentFiles(DispatchBaseClass):
	CLSID = IID('{00024406-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type RecentFile
	def Add(self, Name=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00024407-0000-0000-C000-000000000046}')
		return ret

	# Result is of type RecentFile
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024407-0000-0000-C000-000000000046}')
		return ret

	# Result is of type RecentFile
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024407-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Maximum": (1423, 2, (3, 0), (), "Maximum", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"Maximum": ((1423, LCID, 4, 0),()),
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024407-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024407-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00024407-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Rectangle(DispatchBaseClass):
	CLSID = IID('{0002089C-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (11, 0), (), "AddIndent", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		"AutoSize": (614, 2, (11, 0), (), "AutoSize", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		# Method 'BottomRightCell' returns object of type 'Range'
		"BottomRightCell": (615, 2, (9, 0), (), "BottomRightCell", '{00020846-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		"RoundedCorners": (619, 2, (11, 0), (), "RoundedCorners", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		# Method 'TopLeftCell' returns object of type 'Range'
		"TopLeftCell": (620, 2, (9, 0), (), "TopLeftCell", '{00020846-0000-0000-C000-000000000046}'),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"RoundedCorners": ((619, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Rectangles(DispatchBaseClass):
	CLSID = IID('{0002089D-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Rectangle
	def Add(self, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),Left
			, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0002089C-0000-0000-C000-000000000046}')
		return ret

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	# Result is of type GroupObject
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00020898-0000-0000-C000-000000000046}')
		return ret

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (11, 0), (), "AddIndent", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		"AutoSize": (614, 2, (11, 0), (), "AutoSize", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		"RoundedCorners": (619, 2, (11, 0), (), "RoundedCorners", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"RoundedCorners": ((619, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class RectangularGradient(DispatchBaseClass):
	CLSID = IID('{000244B0-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'ColorStops' returns object of type 'ColorStops'
		"ColorStops": (2761, 2, (9, 0), (), "ColorStops", '{000244AE-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"RectangleBottom": (2763, 2, (5, 0), (), "RectangleBottom", None),
		"RectangleLeft": (2764, 2, (5, 0), (), "RectangleLeft", None),
		"RectangleRight": (2765, 2, (5, 0), (), "RectangleRight", None),
		"RectangleTop": (2762, 2, (5, 0), (), "RectangleTop", None),
	}
	_prop_map_put_ = {
		"RectangleBottom": ((2763, LCID, 4, 0),()),
		"RectangleLeft": ((2764, LCID, 4, 0),()),
		"RectangleRight": ((2765, LCID, 4, 0),()),
		"RectangleTop": ((2762, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class RefreshEvents:
	CLSID = CLSID_Sink = IID('{0002441B-0000-0000-C000-000000000046}')
	coclass_clsid = IID('{59191DA1-EA47-11CE-A51F-00AA0061507F}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		1610612736 : "OnQueryInterface",
		1610612737 : "OnAddRef",
		1610612738 : "OnRelease",
		1610678272 : "OnGetTypeInfoCount",
		1610678273 : "OnGetTypeInfo",
		1610678274 : "OnGetIDsOfNames",
		1610678275 : "OnInvoke",
		     1596 : "OnBeforeRefresh",
		     1597 : "OnAfterRefresh",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnQueryInterface(self, riid=defaultNamedNotOptArg, ppvObj=pythoncom.Missing):
#	def OnAddRef(self):
#	def OnRelease(self):
#	def OnGetTypeInfoCount(self, pctinfo=pythoncom.Missing):
#	def OnGetTypeInfo(self, itinfo=defaultNamedNotOptArg, lcid=defaultNamedNotOptArg, pptinfo=pythoncom.Missing):
#	def OnGetIDsOfNames(self, riid=defaultNamedNotOptArg, rgszNames=defaultNamedNotOptArg, cNames=defaultNamedNotOptArg, lcid=defaultNamedNotOptArg
#			, rgdispid=pythoncom.Missing):
#	def OnInvoke(self, dispidMember=defaultNamedNotOptArg, riid=defaultNamedNotOptArg, lcid=defaultNamedNotOptArg, wFlags=defaultNamedNotOptArg
#			, pdispparams=defaultNamedNotOptArg, pvarResult=pythoncom.Missing, pexcepinfo=pythoncom.Missing, puArgErr=pythoncom.Missing):
#	def OnBeforeRefresh(self, Cancel=defaultNamedNotOptArg):
#	def OnAfterRefresh(self, Success=defaultNamedNotOptArg):


class Research(DispatchBaseClass):
	CLSID = IID('{000244AC-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def IsResearchService(self, ServiceID=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2757, LCID, 1, (11, 0), ((8, 1),),ServiceID
			)

	def Query(self, ServiceID=defaultNamedNotOptArg, QueryString=defaultNamedOptArg, QueryLanguage=defaultNamedOptArg, UseSelection=defaultNamedOptArg
			, LaunchQuery=defaultNamedOptArg):
		return self._ApplyTypes_(2751, 1, (12, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (12, 17)), 'Query', None,ServiceID
			, QueryString, QueryLanguage, UseSelection, LaunchQuery)

	def SetLanguagePair(self, LanguageFrom=defaultNamedNotOptArg, LanguageTo=defaultNamedNotOptArg):
		return self._ApplyTypes_(2758, 1, (12, 0), ((3, 1), (3, 1)), 'SetLanguagePair', None,LanguageFrom
			, LanguageTo)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class RoutingSlip(DispatchBaseClass):
	CLSID = IID('{000208AA-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# The method GetRecipients is actually a property, but must be used as a method to correctly pass the arguments
	def GetRecipients(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(952, 2, (12, 0), ((12, 17),), 'GetRecipients', None,Index
			)

	def Reset(self):
		return self._ApplyTypes_(555, 1, (12, 0), (), 'Reset', None,)

	# The method SetRecipients is actually a property, but must be used as a method to correctly pass the arguments
	def SetRecipients(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(952, LCID, 4, (24, 0), ((12, 17), (12, 1)),Index
			, arg1)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Delivery": (955, 2, (3, 0), (), "Delivery", None),
		"Message": (954, 2, (12, 0), (), "Message", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Recipients": (952, 2, (12, 0), ((12, 17),), "Recipients", None),
		"ReturnWhenDone": (956, 2, (11, 0), (), "ReturnWhenDone", None),
		"Status": (958, 2, (3, 0), (), "Status", None),
		"Subject": (953, 2, (12, 0), (), "Subject", None),
		"TrackStatus": (957, 2, (11, 0), (), "TrackStatus", None),
	}
	_prop_map_put_ = {
		"Delivery": ((955, LCID, 4, 0),()),
		"Message": ((954, LCID, 4, 0),()),
		"Recipients": ((952, LCID, 4, 0),()),
		"ReturnWhenDone": ((956, LCID, 4, 0),()),
		"Subject": ((953, LCID, 4, 0),()),
		"TrackStatus": ((957, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Scenario(DispatchBaseClass):
	CLSID = IID('{00020897-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def ChangeScenario(self, ChangingCells=defaultNamedNotOptArg, Values=defaultNamedOptArg):
		return self._ApplyTypes_(912, 1, (12, 0), ((12, 1), (12, 17)), 'ChangeScenario', None,ChangingCells
			, Values)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	# The method GetValues is actually a property, but must be used as a method to correctly pass the arguments
	def GetValues(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(164, 2, (12, 0), ((12, 17),), 'GetValues', None,Index
			)

	def Show(self):
		return self._ApplyTypes_(496, 1, (12, 0), (), 'Show', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'ChangingCells' returns object of type 'Range'
		"ChangingCells": (911, 2, (9, 0), (), "ChangingCells", '{00020846-0000-0000-C000-000000000046}'),
		"Comment": (910, 2, (8, 0), (), "Comment", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Hidden": (268, 2, (11, 0), (), "Hidden", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Values": (164, 2, (12, 0), ((12, 17),), "Values", None),
	}
	_prop_map_put_ = {
		"Comment": ((910, LCID, 4, 0),()),
		"Hidden": ((268, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Scenarios(DispatchBaseClass):
	CLSID = IID('{00020896-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Scenario
	def Add(self, Name=defaultNamedNotOptArg, ChangingCells=defaultNamedNotOptArg, Values=defaultNamedOptArg, Comment=defaultNamedOptArg
			, Locked=defaultNamedOptArg, Hidden=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1), (12, 1), (12, 17), (12, 17), (12, 17), (12, 17)),Name
			, ChangingCells, Values, Comment, Locked, Hidden
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00020897-0000-0000-C000-000000000046}')
		return ret

	def CreateSummary(self, ReportType=1, ResultCells=defaultNamedOptArg):
		return self._ApplyTypes_(913, 1, (12, 0), ((3, 49), (12, 17)), 'CreateSummary', None,ReportType
			, ResultCells)

	# Result is of type Scenario
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00020897-0000-0000-C000-000000000046}')
		return ret

	def Merge(self, Source=defaultNamedNotOptArg):
		return self._ApplyTypes_(564, 1, (12, 0), ((12, 1),), 'Merge', None,Source
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00020897-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{00020897-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ScrollBar(DispatchBaseClass):
	CLSID = IID('{00020885-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'BottomRightCell' returns object of type 'Range'
		"BottomRightCell": (615, 2, (9, 0), (), "BottomRightCell", '{00020846-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Display3DShading": (1122, 2, (11, 0), (), "Display3DShading", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"LargeChange": (845, 2, (3, 0), (), "LargeChange", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"LinkedCell": (1058, 2, (8, 0), (), "LinkedCell", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"Max": (842, 2, (3, 0), (), "Max", None),
		"Min": (843, 2, (3, 0), (), "Min", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"SmallChange": (844, 2, (3, 0), (), "SmallChange", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		# Method 'TopLeftCell' returns object of type 'Range'
		"TopLeftCell": (620, 2, (9, 0), (), "TopLeftCell", '{00020846-0000-0000-C000-000000000046}'),
		"Value": (6, 2, (3, 0), (), "Value", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
		"_Default": (0, 2, (3, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"LargeChange": ((845, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Max": ((842, LCID, 4, 0),()),
		"Min": ((843, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"SmallChange": ((844, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ScrollBars(DispatchBaseClass):
	CLSID = IID('{00020886-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ScrollBar
	def Add(self, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),Left
			, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00020885-0000-0000-C000-000000000046}')
		return ret

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type GroupObject
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00020898-0000-0000-C000-000000000046}')
		return ret

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Display3DShading": (1122, 2, (11, 0), (), "Display3DShading", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"LargeChange": (845, 2, (3, 0), (), "LargeChange", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"LinkedCell": (1058, 2, (8, 0), (), "LinkedCell", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"Max": (842, 2, (3, 0), (), "Max", None),
		"Min": (843, 2, (3, 0), (), "Min", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"SmallChange": (844, 2, (3, 0), (), "SmallChange", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Value": (6, 2, (3, 0), (), "Value", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
		"_Default": (0, 2, (3, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"LargeChange": ((845, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Max": ((842, LCID, 4, 0),()),
		"Min": ((843, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"SmallChange": ((844, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Series(DispatchBaseClass):
	CLSID = IID('{0002086B-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def ApplyCustomType(self, ChartType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1401, LCID, 1, (24, 0), ((3, 1),),ChartType
			)

	def ApplyDataLabels(self, Type=2, LegendKey=defaultNamedOptArg, AutoText=defaultNamedOptArg, HasLeaderLines=defaultNamedOptArg
			, ShowSeriesName=defaultNamedOptArg, ShowCategoryName=defaultNamedOptArg, ShowValue=defaultNamedOptArg, ShowPercentage=defaultNamedOptArg, ShowBubbleSize=defaultNamedOptArg
			, Separator=defaultNamedOptArg):
		return self._ApplyTypes_(1922, 1, (12, 0), ((3, 49), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'ApplyDataLabels', None,Type
			, LegendKey, AutoText, HasLeaderLines, ShowSeriesName, ShowCategoryName
			, ShowValue, ShowPercentage, ShowBubbleSize, Separator)

	def ClearFormats(self):
		return self._ApplyTypes_(112, 1, (12, 0), (), 'ClearFormats', None,)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def DataLabels(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(157, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'DataLabels', None)
		return ret

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def ErrorBar(self, Direction=defaultNamedNotOptArg, Include=defaultNamedNotOptArg, Type=defaultNamedNotOptArg, Amount=defaultNamedOptArg
			, MinusValues=defaultNamedOptArg):
		return self._ApplyTypes_(152, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (12, 17), (12, 17)), 'ErrorBar', None,Direction
			, Include, Type, Amount, MinusValues)

	def GetProperty(self, ID=defaultNamedNotOptArg):
		return self._ApplyTypes_(3256, 1, (12, 0), ((8, 1),), 'GetProperty', None,ID
			)

	def Paste(self):
		return self._ApplyTypes_(211, 1, (12, 0), (), 'Paste', None,)

	def Points(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(70, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Points', None)
		return ret

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	def SetProperty(self, ID=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3253, LCID, 1, (24, 0), ((8, 1), (12, 1)),ID
			, Value)

	def Trendlines(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(154, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Trendlines', None)
		return ret

	def _ApplyDataLabels(self, Type=2, LegendKey=defaultNamedOptArg, AutoText=defaultNamedOptArg, HasLeaderLines=defaultNamedOptArg):
		return self._ApplyTypes_(151, 1, (12, 0), ((3, 49), (12, 17), (12, 17), (12, 17)), '_ApplyDataLabels', None,Type
			, LegendKey, AutoText, HasLeaderLines)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"ApplyPictToEnd": (1661, 2, (11, 0), (), "ApplyPictToEnd", None),
		"ApplyPictToFront": (1660, 2, (11, 0), (), "ApplyPictToFront", None),
		"ApplyPictToSides": (1659, 2, (11, 0), (), "ApplyPictToSides", None),
		"AxisGroup": (47, 2, (3, 0), (), "AxisGroup", None),
		"BarShape": (1403, 2, (3, 0), (), "BarShape", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"BubbleSizes": (1664, 2, (12, 0), (), "BubbleSizes", None),
		"ChartType": (1400, 2, (3, 0), (), "ChartType", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'ErrorBars' returns object of type 'ErrorBars'
		"ErrorBars": (159, 2, (9, 0), (), "ErrorBars", '{000208CE-0000-0000-C000-000000000046}'),
		"Explosion": (182, 2, (3, 0), (), "Explosion", None),
		# Method 'Fill' returns object of type 'ChartFillFormat'
		"Fill": (1663, 2, (9, 0), (), "Fill", '{00024435-0000-0000-C000-000000000046}'),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"FormulaLocal": (263, 2, (8, 0), (), "FormulaLocal", None),
		"FormulaR1C1": (264, 2, (8, 0), (), "FormulaR1C1", None),
		"FormulaR1C1Local": (265, 2, (8, 0), (), "FormulaR1C1Local", None),
		"GeoMappingLevel": (3251, 2, (3, 0), (), "GeoMappingLevel", None),
		"GeoProjectionType": (3250, 2, (3, 0), (), "GeoProjectionType", None),
		"Has3DEffect": (1665, 2, (11, 0), (), "Has3DEffect", None),
		"HasDataLabels": (78, 2, (11, 0), (), "HasDataLabels", None),
		"HasErrorBars": (160, 2, (11, 0), (), "HasErrorBars", None),
		"HasLeaderLines": (1394, 2, (11, 0), (), "HasLeaderLines", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"InvertColor": (2916, 2, (3, 0), (), "InvertColor", None),
		"InvertColorIndex": (2917, 2, (3, 0), (), "InvertColorIndex", None),
		"InvertIfNegative": (132, 2, (11, 0), (), "InvertIfNegative", None),
		"IsFiltered": (3083, 2, (11, 0), (), "IsFiltered", None),
		# Method 'LeaderLines' returns object of type 'LeaderLines'
		"LeaderLines": (1666, 2, (9, 0), (), "LeaderLines", '{00024437-0000-0000-C000-000000000046}'),
		"MarkerBackgroundColor": (73, 2, (3, 0), (), "MarkerBackgroundColor", None),
		"MarkerBackgroundColorIndex": (74, 2, (3, 0), (), "MarkerBackgroundColorIndex", None),
		"MarkerForegroundColor": (75, 2, (3, 0), (), "MarkerForegroundColor", None),
		"MarkerForegroundColorIndex": (76, 2, (3, 0), (), "MarkerForegroundColorIndex", None),
		"MarkerSize": (231, 2, (3, 0), (), "MarkerSize", None),
		"MarkerStyle": (72, 2, (3, 0), (), "MarkerStyle", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"ParentDataLabelOption": (3204, 2, (3, 0), (), "ParentDataLabelOption", None),
		"PictureType": (161, 2, (3, 0), (), "PictureType", None),
		"PictureUnit": (162, 2, (3, 0), (), "PictureUnit", None),
		"PictureUnit2": (2649, 2, (5, 0), (), "PictureUnit2", None),
		"PlotColorIndex": (2915, 2, (3, 0), (), "PlotColorIndex", None),
		"PlotOrder": (228, 2, (3, 0), (), "PlotOrder", None),
		"QuartileCalculationInclusiveMedian": (3205, 2, (11, 0), (), "QuartileCalculationInclusiveMedian", None),
		"RegionLabelOption": (3252, 2, (3, 0), (), "RegionLabelOption", None),
		"SeriesColorGradientStyle": (3261, 2, (3, 0), (), "SeriesColorGradientStyle", None),
		# Method 'SeriesColorMaxGradientStop' returns object of type 'ChartSeriesGradientStopData'
		"SeriesColorMaxGradientStop": (3264, 2, (9, 0), (), "SeriesColorMaxGradientStop", '{000244FA-0000-0000-C000-000000000046}'),
		# Method 'SeriesColorMidGradientStop' returns object of type 'ChartSeriesGradientStopData'
		"SeriesColorMidGradientStop": (3263, 2, (9, 0), (), "SeriesColorMidGradientStop", '{000244FA-0000-0000-C000-000000000046}'),
		# Method 'SeriesColorMinGradientStop' returns object of type 'ChartSeriesGradientStopData'
		"SeriesColorMinGradientStop": (3262, 2, (9, 0), (), "SeriesColorMinGradientStop", '{000244FA-0000-0000-C000-000000000046}'),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		"Smooth": (163, 2, (11, 0), (), "Smooth", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
		"ValueSortOrder": (3229, 2, (3, 0), (), "ValueSortOrder", None),
		"Values": (164, 2, (12, 0), (), "Values", None),
		"XValues": (1111, 2, (12, 0), (), "XValues", None),
	}
	_prop_map_put_ = {
		"ApplyPictToEnd": ((1661, LCID, 4, 0),()),
		"ApplyPictToFront": ((1660, LCID, 4, 0),()),
		"ApplyPictToSides": ((1659, LCID, 4, 0),()),
		"AxisGroup": ((47, LCID, 4, 0),()),
		"BarShape": ((1403, LCID, 4, 0),()),
		"BubbleSizes": ((1664, LCID, 4, 0),()),
		"ChartType": ((1400, LCID, 4, 0),()),
		"Explosion": ((182, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"FormulaLocal": ((263, LCID, 4, 0),()),
		"FormulaR1C1": ((264, LCID, 4, 0),()),
		"FormulaR1C1Local": ((265, LCID, 4, 0),()),
		"GeoMappingLevel": ((3251, LCID, 4, 0),()),
		"GeoProjectionType": ((3250, LCID, 4, 0),()),
		"Has3DEffect": ((1665, LCID, 4, 0),()),
		"HasDataLabels": ((78, LCID, 4, 0),()),
		"HasErrorBars": ((160, LCID, 4, 0),()),
		"HasLeaderLines": ((1394, LCID, 4, 0),()),
		"InvertColor": ((2916, LCID, 4, 0),()),
		"InvertColorIndex": ((2917, LCID, 4, 0),()),
		"InvertIfNegative": ((132, LCID, 4, 0),()),
		"IsFiltered": ((3083, LCID, 4, 0),()),
		"MarkerBackgroundColor": ((73, LCID, 4, 0),()),
		"MarkerBackgroundColorIndex": ((74, LCID, 4, 0),()),
		"MarkerForegroundColor": ((75, LCID, 4, 0),()),
		"MarkerForegroundColorIndex": ((76, LCID, 4, 0),()),
		"MarkerSize": ((231, LCID, 4, 0),()),
		"MarkerStyle": ((72, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"ParentDataLabelOption": ((3204, LCID, 4, 0),()),
		"PictureType": ((161, LCID, 4, 0),()),
		"PictureUnit": ((162, LCID, 4, 0),()),
		"PictureUnit2": ((2649, LCID, 4, 0),()),
		"PlotOrder": ((228, LCID, 4, 0),()),
		"QuartileCalculationInclusiveMedian": ((3205, LCID, 4, 0),()),
		"RegionLabelOption": ((3252, LCID, 4, 0),()),
		"SeriesColorGradientStyle": ((3261, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Smooth": ((163, LCID, 4, 0),()),
		"Type": ((108, LCID, 4, 0),()),
		"ValueSortOrder": ((3229, LCID, 4, 0),()),
		"Values": ((164, LCID, 4, 0),()),
		"XValues": ((1111, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class SeriesCollection(DispatchBaseClass):
	CLSID = IID('{0002086C-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Series
	def Add(self, Source=defaultNamedNotOptArg, Rowcol=-4105, SeriesLabels=defaultNamedOptArg, CategoryLabels=defaultNamedOptArg
			, Replace=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((12, 1), (3, 49), (12, 17), (12, 17), (12, 17)),Source
			, Rowcol, SeriesLabels, CategoryLabels, Replace)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0002086B-0000-0000-C000-000000000046}')
		return ret

	def Extend(self, Source=defaultNamedNotOptArg, Rowcol=defaultNamedOptArg, CategoryLabels=defaultNamedOptArg):
		return self._ApplyTypes_(227, 1, (12, 0), ((12, 1), (12, 17), (12, 17)), 'Extend', None,Source
			, Rowcol, CategoryLabels)

	# Result is of type Series
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0002086B-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Series
	def NewSeries(self):
		ret = self._oleobj_.InvokeTypes(1117, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'NewSeries', '{0002086B-0000-0000-C000-000000000046}')
		return ret

	def Paste(self, Rowcol=-4105, SeriesLabels=defaultNamedOptArg, CategoryLabels=defaultNamedOptArg, Replace=defaultNamedOptArg
			, NewSeries=defaultNamedOptArg):
		return self._ApplyTypes_(211, 1, (12, 0), ((3, 49), (12, 17), (12, 17), (12, 17), (12, 17)), 'Paste', None,Rowcol
			, SeriesLabels, CategoryLabels, Replace, NewSeries)

	# Result is of type Series
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{0002086B-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0002086B-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0002086B-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{0002086B-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class SeriesGradientStopColorFormat(DispatchBaseClass):
	CLSID = IID('{000244F9-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"ObjectThemeColor": (3265, 2, (3, 0), (), "ObjectThemeColor", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"RGB": (1055, 2, (3, 0), (), "RGB", None),
		"TintAndShade": (2366, 2, (4, 0), (), "TintAndShade", None),
		"Transparency": (3266, 2, (4, 0), (), "Transparency", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"ObjectThemeColor": ((3265, LCID, 4, 0),()),
		"RGB": ((1055, LCID, 4, 0),()),
		"TintAndShade": ((2366, LCID, 4, 0),()),
		"Transparency": ((3266, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class SeriesLines(DispatchBaseClass):
	CLSID = IID('{000208C1-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def GetProperty(self, ID=defaultNamedNotOptArg):
		return self._ApplyTypes_(3256, 1, (12, 0), ((8, 1),), 'GetProperty', None,ID
			)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	def SetProperty(self, ID=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3253, LCID, 1, (24, 0), ((8, 1), (12, 1)),ID
			, Value)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ServerViewableItems(DispatchBaseClass):
	CLSID = IID('{000244A4-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Add(self, Obj=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((12, 1),),Obj
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', None)
		return ret

	def Delete(self, Index=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), ((12, 1),),Index
			)

	def DeleteAll(self):
		return self._oleobj_.InvokeTypes(2239, LCID, 1, (24, 0), (),)

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', None)
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', None)
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ShadowFormat(DispatchBaseClass):
	CLSID = IID('{000C031B-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def IncrementOffsetX(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def IncrementOffsetY(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	_prop_map_get_ = {
		"Application": (1610743808, 2, (9, 0), (), "Application", None),
		"Blur": (108, 2, (4, 0), (), "Blur", None),
		"Creator": (1610743809, 2, (3, 0), (), "Creator", None),
		# Method 'ForeColor' returns object of type 'ColorFormat'
		"ForeColor": (100, 2, (9, 0), (), "ForeColor", '{000C0312-0000-0000-C000-000000000046}'),
		"Obscured": (101, 2, (3, 0), (), "Obscured", None),
		"OffsetX": (102, 2, (4, 0), (), "OffsetX", None),
		"OffsetY": (103, 2, (4, 0), (), "OffsetY", None),
		"Parent": (1, 2, (9, 0), (), "Parent", None),
		"RotateWithShape": (110, 2, (3, 0), (), "RotateWithShape", None),
		"Size": (109, 2, (4, 0), (), "Size", None),
		"Style": (107, 2, (3, 0), (), "Style", None),
		"Transparency": (104, 2, (4, 0), (), "Transparency", None),
		"Type": (105, 2, (3, 0), (), "Type", None),
		"Visible": (106, 2, (3, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Blur": ((108, LCID, 4, 0),()),
		"ForeColor": ((100, LCID, 4, 0),()),
		"Obscured": ((101, LCID, 4, 0),()),
		"OffsetX": ((102, LCID, 4, 0),()),
		"OffsetY": ((103, LCID, 4, 0),()),
		"RotateWithShape": ((110, LCID, 4, 0),()),
		"Size": ((109, LCID, 4, 0),()),
		"Style": ((107, LCID, 4, 0),()),
		"Transparency": ((104, LCID, 4, 0),()),
		"Type": ((105, LCID, 4, 0),()),
		"Visible": ((106, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Shape(DispatchBaseClass):
	CLSID = IID('{00024439-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Apply(self):
		return self._oleobj_.InvokeTypes(1675, LCID, 1, (24, 0), (),)

	def CanvasCropBottom(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2175, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def CanvasCropLeft(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2172, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def CanvasCropRight(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2174, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def CanvasCropTop(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2173, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def Copy(self):
		return self._oleobj_.InvokeTypes(551, LCID, 1, (24, 0), (),)

	def CopyPicture(self, Appearance=defaultNamedOptArg, Format=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(213, LCID, 1, (24, 0), ((12, 17), (12, 17)),Appearance
			, Format)

	def Cut(self):
		return self._oleobj_.InvokeTypes(565, LCID, 1, (24, 0), (),)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	# Result is of type Shape
	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', '{00024439-0000-0000-C000-000000000046}')
		return ret

	def Flip(self, FlipCmd=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1676, LCID, 1, (24, 0), ((3, 1),),FlipCmd
			)

	def IncrementLeft(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1678, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def IncrementRotation(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1680, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def IncrementTop(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1681, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def PickUp(self):
		return self._oleobj_.InvokeTypes(1682, LCID, 1, (24, 0), (),)

	def PlacePictureInCell(self):
		return self._oleobj_.InvokeTypes(3409, LCID, 1, (24, 0), (),)

	def RerouteConnections(self):
		return self._oleobj_.InvokeTypes(1683, LCID, 1, (24, 0), (),)

	def ScaleHeight(self, Factor=defaultNamedNotOptArg, RelativeToOriginalSize=defaultNamedNotOptArg, Scale=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1684, LCID, 1, (24, 0), ((4, 1), (3, 1), (12, 17)),Factor
			, RelativeToOriginalSize, Scale)

	def ScaleWidth(self, Factor=defaultNamedNotOptArg, RelativeToOriginalSize=defaultNamedNotOptArg, Scale=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1688, LCID, 1, (24, 0), ((4, 1), (3, 1), (12, 17)),Factor
			, RelativeToOriginalSize, Scale)

	def Select(self, Replace=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(235, LCID, 1, (24, 0), ((12, 17),),Replace
			)

	def SetShapesDefaultProperties(self):
		return self._oleobj_.InvokeTypes(1689, LCID, 1, (24, 0), (),)

	# Result is of type ShapeRange
	def Ungroup(self):
		ret = self._oleobj_.InvokeTypes(244, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Ungroup', '{0002443B-0000-0000-C000-000000000046}')
		return ret

	def ZOrder(self, ZOrderCmd=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(622, LCID, 1, (24, 0), ((3, 1),),ZOrderCmd
			)

	_prop_map_get_ = {
		# Method 'Adjustments' returns object of type 'Adjustments'
		"Adjustments": (1691, 2, (9, 0), (), "Adjustments", '{000C0310-0000-0000-C000-000000000046}'),
		"AlternativeText": (1891, 2, (8, 0), (), "AlternativeText", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoShapeType": (1693, 2, (3, 0), (), "AutoShapeType", None),
		"BackgroundStyle": (2661, 2, (3, 0), (), "BackgroundStyle", None),
		"BlackWhiteMode": (1707, 2, (3, 0), (), "BlackWhiteMode", None),
		# Method 'BottomRightCell' returns object of type 'Range'
		"BottomRightCell": (615, 2, (9, 0), (), "BottomRightCell", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'Callout' returns object of type 'CalloutFormat'
		"Callout": (1694, 2, (9, 0), (), "Callout", '{000C0311-0000-0000-C000-000000000046}'),
		# Method 'CanvasItems' returns object of type 'CanvasShapes'
		"CanvasItems": (2171, 2, (9, 0), (), "CanvasItems", '{000C0371-0000-0000-C000-000000000046}'),
		# Method 'Chart' returns object of type 'Chart'
		"Chart": (7, 2, (13, 0), (), "Chart", '{00020821-0000-0000-C000-000000000046}'),
		"Child": (2169, 2, (3, 0), (), "Child", None),
		"ConnectionSiteCount": (1695, 2, (3, 0), (), "ConnectionSiteCount", None),
		"Connector": (1696, 2, (3, 0), (), "Connector", None),
		# Method 'ConnectorFormat' returns object of type 'ConnectorFormat'
		"ConnectorFormat": (1697, 2, (9, 0), (), "ConnectorFormat", '{0002443E-0000-0000-C000-000000000046}'),
		# Method 'ControlFormat' returns object of type 'ControlFormat'
		"ControlFormat": (1709, 2, (9, 0), (), "ControlFormat", '{00024440-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Decorative": (3358, 2, (3, 0), (), "Decorative", None),
		# Method 'Diagram' returns object of type 'Diagram'
		"Diagram": (2167, 2, (9, 0), (), "Diagram", '{0002446F-0000-0000-C000-000000000046}'),
		# Method 'DiagramNode' returns object of type 'DiagramNode'
		"DiagramNode": (2165, 2, (9, 0), (), "DiagramNode", '{000C0370-0000-0000-C000-000000000046}'),
		"DrawingObject": (1708, 2, (9, 0), (), "DrawingObject", None),
		# Method 'Fill' returns object of type 'FillFormat'
		"Fill": (1663, 2, (9, 0), (), "Fill", '{000C0314-0000-0000-C000-000000000046}'),
		"FormControlType": (1712, 2, (3, 0), (), "FormControlType", None),
		# Method 'Glow' returns object of type 'GlowFormat'
		"Glow": (2663, 2, (9, 0), (), "Glow", '{000C03BD-0000-0000-C000-000000000046}'),
		"GraphicStyle": (3272, 2, (3, 0), (), "GraphicStyle", None),
		# Method 'GroupItems' returns object of type 'GroupShapes'
		"GroupItems": (1698, 2, (9, 0), (), "GroupItems", '{0002443C-0000-0000-C000-000000000046}'),
		"HasChart": (2658, 2, (3, 0), (), "HasChart", None),
		"HasDiagram": (2168, 2, (3, 0), (), "HasDiagram", None),
		"HasDiagramNode": (2166, 2, (3, 0), (), "HasDiagramNode", None),
		"HasSmartArt": (2918, 2, (3, 0), (), "HasSmartArt", None),
		"Height": (123, 2, (4, 0), (), "Height", None),
		"HorizontalFlip": (1699, 2, (3, 0), (), "HorizontalFlip", None),
		# Method 'Hyperlink' returns object of type 'Hyperlink'
		"Hyperlink": (1706, 2, (9, 0), (), "Hyperlink", '{00024431-0000-0000-C000-000000000046}'),
		"ID": (570, 2, (3, 0), (), "ID", None),
		"Left": (127, 2, (4, 0), (), "Left", None),
		# Method 'Line' returns object of type 'LineFormat'
		"Line": (817, 2, (9, 0), (), "Line", '{000C0317-0000-0000-C000-000000000046}'),
		# Method 'LinkFormat' returns object of type 'LinkFormat'
		"LinkFormat": (1710, 2, (9, 0), (), "LinkFormat", '{00024442-0000-0000-C000-000000000046}'),
		"LockAspectRatio": (1700, 2, (3, 0), (), "LockAspectRatio", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		# Method 'Model3D' returns object of type 'Model3DFormat'
		"Model3D": (3357, 2, (9, 0), (), "Model3D", '{000C03D8-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		# Method 'Nodes' returns object of type 'ShapeNodes'
		"Nodes": (1701, 2, (9, 0), (), "Nodes", '{000C0319-0000-0000-C000-000000000046}'),
		# Method 'OLEFormat' returns object of type 'OLEFormat'
		"OLEFormat": (1711, 2, (9, 0), (), "OLEFormat", '{00024441-0000-0000-C000-000000000046}'),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'ParentGroup' returns object of type 'Shape'
		"ParentGroup": (2170, 2, (9, 0), (), "ParentGroup", '{00024439-0000-0000-C000-000000000046}'),
		# Method 'PictureFormat' returns object of type 'PictureFormat'
		"PictureFormat": (1631, 2, (9, 0), (), "PictureFormat", '{000C031A-0000-0000-C000-000000000046}'),
		"Placement": (617, 2, (3, 0), (), "Placement", None),
		# Method 'Reflection' returns object of type 'ReflectionFormat'
		"Reflection": (2664, 2, (9, 0), (), "Reflection", '{000C03BE-0000-0000-C000-000000000046}'),
		"Rotation": (59, 2, (4, 0), (), "Rotation", None),
		# Method 'Script' returns object of type 'Script'
		"Script": (1892, 2, (9, 0), (), "Script", '{000C0341-0000-0000-C000-000000000046}'),
		# Method 'Shadow' returns object of type 'ShadowFormat'
		"Shadow": (103, 2, (9, 0), (), "Shadow", '{000C031B-0000-0000-C000-000000000046}'),
		"ShapeStyle": (2660, 2, (3, 0), (), "ShapeStyle", None),
		# Method 'SmartArt' returns object of type 'SmartArt'
		"SmartArt": (2919, 2, (9, 0), (), "SmartArt", '{000C03C6-0000-0000-C000-000000000046}'),
		# Method 'SoftEdge' returns object of type 'SoftEdgeFormat'
		"SoftEdge": (2662, 2, (9, 0), (), "SoftEdge", '{000C03BC-0000-0000-C000-000000000046}'),
		# Method 'TextEffect' returns object of type 'TextEffectFormat'
		"TextEffect": (1702, 2, (9, 0), (), "TextEffect", '{000C031F-0000-0000-C000-000000000046}'),
		# Method 'TextFrame' returns object of type 'TextFrame'
		"TextFrame": (1692, 2, (9, 0), (), "TextFrame", '{0002443D-0000-0000-C000-000000000046}'),
		# Method 'TextFrame2' returns object of type 'TextFrame2'
		"TextFrame2": (2659, 2, (9, 0), (), "TextFrame2", '{000C0398-0000-0000-C000-000000000046}'),
		# Method 'ThreeD' returns object of type 'ThreeDFormat'
		"ThreeD": (1703, 2, (9, 0), (), "ThreeD", '{000C0321-0000-0000-C000-000000000046}'),
		"Title": (199, 2, (8, 0), (), "Title", None),
		"Top": (126, 2, (4, 0), (), "Top", None),
		# Method 'TopLeftCell' returns object of type 'Range'
		"TopLeftCell": (620, 2, (9, 0), (), "TopLeftCell", '{00020846-0000-0000-C000-000000000046}'),
		"Type": (108, 2, (3, 0), (), "Type", None),
		"VerticalFlip": (1704, 2, (3, 0), (), "VerticalFlip", None),
		"Vertices": (621, 2, (12, 0), (), "Vertices", None),
		"Visible": (558, 2, (3, 0), (), "Visible", None),
		"Width": (122, 2, (4, 0), (), "Width", None),
		"ZOrderPosition": (1705, 2, (3, 0), (), "ZOrderPosition", None),
	}
	_prop_map_put_ = {
		"AlternativeText": ((1891, LCID, 4, 0),()),
		"AutoShapeType": ((1693, LCID, 4, 0),()),
		"BackgroundStyle": ((2661, LCID, 4, 0),()),
		"BlackWhiteMode": ((1707, LCID, 4, 0),()),
		"Decorative": ((3358, LCID, 4, 0),()),
		"GraphicStyle": ((3272, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LockAspectRatio": ((1700, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"Rotation": ((59, LCID, 4, 0),()),
		"ShapeStyle": ((2660, LCID, 4, 0),()),
		"Title": ((199, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ShapeNode(DispatchBaseClass):
	CLSID = IID('{000C0318-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1610743808, 2, (9, 0), (), "Application", None),
		"Creator": (1610743809, 2, (3, 0), (), "Creator", None),
		"EditingType": (100, 2, (3, 0), (), "EditingType", None),
		"Parent": (1, 2, (9, 0), (), "Parent", None),
		"Points": (101, 2, (12, 0), (), "Points", None),
		"SegmentType": (102, 2, (3, 0), (), "SegmentType", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ShapeNodes(DispatchBaseClass):
	CLSID = IID('{000C0319-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self, Index=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((3, 1),),Index
			)

	def Insert(self, Index=defaultNamedNotOptArg, SegmentType=defaultNamedNotOptArg, EditingType=defaultNamedNotOptArg, X1=defaultNamedNotOptArg
			, Y1=defaultNamedNotOptArg, X2=0.0, Y2=0.0, X3=0.0, Y3=0.0):
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (4, 1), (4, 1), (4, 49), (4, 49), (4, 49), (4, 49)),Index
			, SegmentType, EditingType, X1, Y1, X2
			, Y2, X3, Y3)

	# Result is of type ShapeNode
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000C0318-0000-0000-C000-000000000046}')
		return ret

	def SetEditingType(self, Index=defaultNamedNotOptArg, EditingType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((3, 1), (3, 1)),Index
			, EditingType)

	def SetPosition(self, Index=defaultNamedNotOptArg, X1=defaultNamedNotOptArg, Y1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((3, 1), (4, 1), (4, 1)),Index
			, X1, Y1)

	def SetSegmentType(self, Index=defaultNamedNotOptArg, SegmentType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((3, 1), (3, 1)),Index
			, SegmentType)

	_prop_map_get_ = {
		"Application": (1610743808, 2, (9, 0), (), "Application", None),
		"Count": (2, 2, (3, 0), (), "Count", None),
		"Creator": (1610743809, 2, (3, 0), (), "Creator", None),
		"Parent": (1, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000C0318-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000C0318-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class ShapeRange(DispatchBaseClass):
	CLSID = IID('{0002443B-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Align(self, AlignCmd=defaultNamedNotOptArg, RelativeTo=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1740, LCID, 1, (24, 0), ((3, 1), (3, 1)),AlignCmd
			, RelativeTo)

	def Apply(self):
		return self._oleobj_.InvokeTypes(1675, LCID, 1, (24, 0), (),)

	def CanvasCropBottom(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2175, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def CanvasCropLeft(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2172, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def CanvasCropRight(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2174, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def CanvasCropTop(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2173, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def Distribute(self, DistributeCmd=defaultNamedNotOptArg, RelativeTo=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1742, LCID, 1, (24, 0), ((3, 1), (3, 1)),DistributeCmd
			, RelativeTo)

	# Result is of type ShapeRange
	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', '{0002443B-0000-0000-C000-000000000046}')
		return ret

	def Flip(self, FlipCmd=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1676, LCID, 1, (24, 0), ((3, 1),),FlipCmd
			)

	# Result is of type Shape
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00024439-0000-0000-C000-000000000046}')
		return ret

	def IncrementLeft(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1678, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def IncrementRotation(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1680, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def IncrementTop(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1681, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	# Result is of type Shape
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024439-0000-0000-C000-000000000046}')
		return ret

	def PickUp(self):
		return self._oleobj_.InvokeTypes(1682, LCID, 1, (24, 0), (),)

	# Result is of type Shape
	def Regroup(self):
		ret = self._oleobj_.InvokeTypes(1744, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Regroup', '{00024439-0000-0000-C000-000000000046}')
		return ret

	def RerouteConnections(self):
		return self._oleobj_.InvokeTypes(1683, LCID, 1, (24, 0), (),)

	def ScaleHeight(self, Factor=defaultNamedNotOptArg, RelativeToOriginalSize=defaultNamedNotOptArg, Scale=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1684, LCID, 1, (24, 0), ((4, 1), (3, 1), (12, 17)),Factor
			, RelativeToOriginalSize, Scale)

	def ScaleWidth(self, Factor=defaultNamedNotOptArg, RelativeToOriginalSize=defaultNamedNotOptArg, Scale=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1688, LCID, 1, (24, 0), ((4, 1), (3, 1), (12, 17)),Factor
			, RelativeToOriginalSize, Scale)

	def Select(self, Replace=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(235, LCID, 1, (24, 0), ((12, 17),),Replace
			)

	def SetShapesDefaultProperties(self):
		return self._oleobj_.InvokeTypes(1689, LCID, 1, (24, 0), (),)

	# Result is of type ShapeRange
	def Ungroup(self):
		ret = self._oleobj_.InvokeTypes(244, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Ungroup', '{0002443B-0000-0000-C000-000000000046}')
		return ret

	def ZOrder(self, ZOrderCmd=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(622, LCID, 1, (24, 0), ((3, 1),),ZOrderCmd
			)

	# Result is of type Shape
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024439-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Adjustments' returns object of type 'Adjustments'
		"Adjustments": (1691, 2, (9, 0), (), "Adjustments", '{000C0310-0000-0000-C000-000000000046}'),
		"AlternativeText": (1891, 2, (8, 0), (), "AlternativeText", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoShapeType": (1693, 2, (3, 0), (), "AutoShapeType", None),
		"BackgroundStyle": (2661, 2, (3, 0), (), "BackgroundStyle", None),
		"BlackWhiteMode": (1707, 2, (3, 0), (), "BlackWhiteMode", None),
		# Method 'Callout' returns object of type 'CalloutFormat'
		"Callout": (1694, 2, (9, 0), (), "Callout", '{000C0311-0000-0000-C000-000000000046}'),
		# Method 'CanvasItems' returns object of type 'CanvasShapes'
		"CanvasItems": (2171, 2, (9, 0), (), "CanvasItems", '{000C0371-0000-0000-C000-000000000046}'),
		# Method 'Chart' returns object of type 'Chart'
		"Chart": (7, 2, (13, 0), (), "Chart", '{00020821-0000-0000-C000-000000000046}'),
		"Child": (2169, 2, (3, 0), (), "Child", None),
		"ConnectionSiteCount": (1695, 2, (3, 0), (), "ConnectionSiteCount", None),
		"Connector": (1696, 2, (3, 0), (), "Connector", None),
		# Method 'ConnectorFormat' returns object of type 'ConnectorFormat'
		"ConnectorFormat": (1697, 2, (9, 0), (), "ConnectorFormat", '{0002443E-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Decorative": (3358, 2, (3, 0), (), "Decorative", None),
		# Method 'Diagram' returns object of type 'Diagram'
		"Diagram": (2167, 2, (9, 0), (), "Diagram", '{0002446F-0000-0000-C000-000000000046}'),
		# Method 'DiagramNode' returns object of type 'DiagramNode'
		"DiagramNode": (2165, 2, (9, 0), (), "DiagramNode", '{000C0370-0000-0000-C000-000000000046}'),
		# Method 'Fill' returns object of type 'FillFormat'
		"Fill": (1663, 2, (9, 0), (), "Fill", '{000C0314-0000-0000-C000-000000000046}'),
		# Method 'Glow' returns object of type 'GlowFormat'
		"Glow": (2663, 2, (9, 0), (), "Glow", '{000C03BD-0000-0000-C000-000000000046}'),
		"GraphicStyle": (3272, 2, (3, 0), (), "GraphicStyle", None),
		# Method 'GroupItems' returns object of type 'GroupShapes'
		"GroupItems": (1698, 2, (9, 0), (), "GroupItems", '{0002443C-0000-0000-C000-000000000046}'),
		"HasChart": (2658, 2, (3, 0), (), "HasChart", None),
		"HasDiagram": (2168, 2, (3, 0), (), "HasDiagram", None),
		"HasDiagramNode": (2166, 2, (3, 0), (), "HasDiagramNode", None),
		"Height": (123, 2, (4, 0), (), "Height", None),
		"HorizontalFlip": (1699, 2, (3, 0), (), "HorizontalFlip", None),
		"ID": (570, 2, (3, 0), (), "ID", None),
		"Left": (127, 2, (4, 0), (), "Left", None),
		# Method 'Line' returns object of type 'LineFormat'
		"Line": (817, 2, (9, 0), (), "Line", '{000C0317-0000-0000-C000-000000000046}'),
		"LockAspectRatio": (1700, 2, (3, 0), (), "LockAspectRatio", None),
		# Method 'Model3D' returns object of type 'Model3DFormat'
		"Model3D": (3357, 2, (9, 0), (), "Model3D", '{000C03D8-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		# Method 'Nodes' returns object of type 'ShapeNodes'
		"Nodes": (1701, 2, (9, 0), (), "Nodes", '{000C0319-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'ParentGroup' returns object of type 'Shape'
		"ParentGroup": (2170, 2, (9, 0), (), "ParentGroup", '{00024439-0000-0000-C000-000000000046}'),
		# Method 'PictureFormat' returns object of type 'PictureFormat'
		"PictureFormat": (1631, 2, (9, 0), (), "PictureFormat", '{000C031A-0000-0000-C000-000000000046}'),
		# Method 'Reflection' returns object of type 'ReflectionFormat'
		"Reflection": (2664, 2, (9, 0), (), "Reflection", '{000C03BE-0000-0000-C000-000000000046}'),
		"Rotation": (59, 2, (4, 0), (), "Rotation", None),
		# Method 'Shadow' returns object of type 'ShadowFormat'
		"Shadow": (103, 2, (9, 0), (), "Shadow", '{000C031B-0000-0000-C000-000000000046}'),
		"ShapeStyle": (2660, 2, (3, 0), (), "ShapeStyle", None),
		# Method 'SoftEdge' returns object of type 'SoftEdgeFormat'
		"SoftEdge": (2662, 2, (9, 0), (), "SoftEdge", '{000C03BC-0000-0000-C000-000000000046}'),
		# Method 'TextEffect' returns object of type 'TextEffectFormat'
		"TextEffect": (1702, 2, (9, 0), (), "TextEffect", '{000C031F-0000-0000-C000-000000000046}'),
		# Method 'TextFrame' returns object of type 'TextFrame'
		"TextFrame": (1692, 2, (9, 0), (), "TextFrame", '{0002443D-0000-0000-C000-000000000046}'),
		# Method 'TextFrame2' returns object of type 'TextFrame2'
		"TextFrame2": (2659, 2, (9, 0), (), "TextFrame2", '{000C0398-0000-0000-C000-000000000046}'),
		# Method 'ThreeD' returns object of type 'ThreeDFormat'
		"ThreeD": (1703, 2, (9, 0), (), "ThreeD", '{000C0321-0000-0000-C000-000000000046}'),
		"Title": (199, 2, (8, 0), (), "Title", None),
		"Top": (126, 2, (4, 0), (), "Top", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
		"VerticalFlip": (1704, 2, (3, 0), (), "VerticalFlip", None),
		"Vertices": (621, 2, (12, 0), (), "Vertices", None),
		"Visible": (558, 2, (3, 0), (), "Visible", None),
		"Width": (122, 2, (4, 0), (), "Width", None),
		"ZOrderPosition": (1705, 2, (3, 0), (), "ZOrderPosition", None),
	}
	_prop_map_put_ = {
		"AlternativeText": ((1891, LCID, 4, 0),()),
		"AutoShapeType": ((1693, LCID, 4, 0),()),
		"BackgroundStyle": ((2661, LCID, 4, 0),()),
		"BlackWhiteMode": ((1707, LCID, 4, 0),()),
		"Decorative": ((3358, LCID, 4, 0),()),
		"GraphicStyle": ((3272, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LockAspectRatio": ((1700, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"Rotation": ((59, LCID, 4, 0),()),
		"ShapeStyle": ((2660, LCID, 4, 0),()),
		"Title": ((199, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024439-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024439-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{00024439-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Shapes(DispatchBaseClass):
	CLSID = IID('{0002443A-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Shape
	def Add3DModel(self, Filename=defaultNamedNotOptArg, LinkToFile=defaultNamedOptArg, SaveWithDocument=defaultNamedOptArg, Left=defaultNamedOptArg
			, Top=defaultNamedOptArg, Width=defaultNamedOptArg, Height=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3359, LCID, 1, (9, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, LinkToFile, SaveWithDocument, Left, Top, Width
			, Height)
		if ret is not None:
			ret = Dispatch(ret, 'Add3DModel', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Shape
	def AddCallout(self, Type=defaultNamedNotOptArg, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg
			, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1713, LCID, 1, (9, 0), ((3, 1), (4, 1), (4, 1), (4, 1), (4, 1)),Type
			, Left, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddCallout', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Shape
	def AddCanvas(self, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2177, LCID, 1, (9, 0), ((4, 1), (4, 1), (4, 1), (4, 1)),Left
			, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddCanvas', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Shape
	def AddChart(self, XlChartType=defaultNamedOptArg, Left=defaultNamedOptArg, Top=defaultNamedOptArg, Width=defaultNamedOptArg
			, Height=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(2665, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),XlChartType
			, Left, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddChart', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Shape
	def AddChart2(self, Style=defaultNamedOptArg, XlChartType=defaultNamedOptArg, Left=defaultNamedOptArg, Top=defaultNamedOptArg
			, Width=defaultNamedOptArg, Height=defaultNamedOptArg, NewLayout=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3088, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Style
			, XlChartType, Left, Top, Width, Height
			, NewLayout)
		if ret is not None:
			ret = Dispatch(ret, 'AddChart2', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Shape
	def AddConnector(self, Type=defaultNamedNotOptArg, BeginX=defaultNamedNotOptArg, BeginY=defaultNamedNotOptArg, EndX=defaultNamedNotOptArg
			, EndY=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1714, LCID, 1, (9, 0), ((3, 1), (4, 1), (4, 1), (4, 1), (4, 1)),Type
			, BeginX, BeginY, EndX, EndY)
		if ret is not None:
			ret = Dispatch(ret, 'AddConnector', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Shape
	def AddCurve(self, SafeArrayOfPoints=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1719, LCID, 1, (9, 0), ((12, 1),),SafeArrayOfPoints
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddCurve', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Shape
	def AddDiagram(self, Type=defaultNamedNotOptArg, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg
			, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(2176, LCID, 1, (9, 0), ((3, 1), (4, 1), (4, 1), (4, 1), (4, 1)),Type
			, Left, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddDiagram', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Shape
	def AddFormControl(self, Type=defaultNamedNotOptArg, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg
			, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1738, LCID, 1, (9, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1)),Type
			, Left, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddFormControl', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Shape
	def AddLabel(self, Orientation=defaultNamedNotOptArg, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg
			, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1721, LCID, 1, (9, 0), ((3, 1), (4, 1), (4, 1), (4, 1), (4, 1)),Orientation
			, Left, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddLabel', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Shape
	def AddLine(self, BeginX=defaultNamedNotOptArg, BeginY=defaultNamedNotOptArg, EndX=defaultNamedNotOptArg, EndY=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1722, LCID, 1, (9, 0), ((4, 1), (4, 1), (4, 1), (4, 1)),BeginX
			, BeginY, EndX, EndY)
		if ret is not None:
			ret = Dispatch(ret, 'AddLine', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Shape
	def AddOLEObject(self, ClassType=defaultNamedOptArg, Filename=defaultNamedOptArg, Link=defaultNamedOptArg, DisplayAsIcon=defaultNamedOptArg
			, IconFileName=defaultNamedOptArg, IconIndex=defaultNamedOptArg, IconLabel=defaultNamedOptArg, Left=defaultNamedOptArg, Top=defaultNamedOptArg
			, Width=defaultNamedOptArg, Height=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1739, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),ClassType
			, Filename, Link, DisplayAsIcon, IconFileName, IconIndex
			, IconLabel, Left, Top, Width, Height
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddOLEObject', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Shape
	def AddPicture(self, Filename=defaultNamedNotOptArg, LinkToFile=defaultNamedNotOptArg, SaveWithDocument=defaultNamedNotOptArg, Left=defaultNamedNotOptArg
			, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1723, LCID, 1, (9, 0), ((8, 1), (3, 1), (3, 1), (4, 1), (4, 1), (4, 1), (4, 1)),Filename
			, LinkToFile, SaveWithDocument, Left, Top, Width
			, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddPicture', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Shape
	def AddPicture2(self, Filename=defaultNamedNotOptArg, LinkToFile=defaultNamedNotOptArg, SaveWithDocument=defaultNamedNotOptArg, Left=defaultNamedNotOptArg
			, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg, Compress=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(3159, LCID, 1, (9, 0), ((8, 1), (3, 1), (3, 1), (4, 1), (4, 1), (4, 1), (4, 1), (3, 1)),Filename
			, LinkToFile, SaveWithDocument, Left, Top, Width
			, Height, Compress)
		if ret is not None:
			ret = Dispatch(ret, 'AddPicture2', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Shape
	def AddPolyline(self, SafeArrayOfPoints=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1726, LCID, 1, (9, 0), ((12, 1),),SafeArrayOfPoints
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddPolyline', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Shape
	def AddShape(self, Type=defaultNamedNotOptArg, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg
			, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1727, LCID, 1, (9, 0), ((3, 1), (4, 1), (4, 1), (4, 1), (4, 1)),Type
			, Left, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddShape', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Shape
	def AddSmartArt(self, Layout=defaultNamedNotOptArg, Left=defaultNamedOptArg, Top=defaultNamedOptArg, Width=defaultNamedOptArg
			, Height=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(2920, LCID, 1, (9, 0), ((9, 1), (12, 17), (12, 17), (12, 17), (12, 17)),Layout
			, Left, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddSmartArt', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Shape
	def AddTextEffect(self, PresetTextEffect=defaultNamedNotOptArg, Text=defaultNamedNotOptArg, FontName=defaultNamedNotOptArg, FontSize=defaultNamedNotOptArg
			, FontBold=defaultNamedNotOptArg, FontItalic=defaultNamedNotOptArg, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1728, LCID, 1, (9, 0), ((3, 1), (8, 1), (8, 1), (4, 1), (3, 1), (3, 1), (4, 1), (4, 1)),PresetTextEffect
			, Text, FontName, FontSize, FontBold, FontItalic
			, Left, Top)
		if ret is not None:
			ret = Dispatch(ret, 'AddTextEffect', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Shape
	def AddTextbox(self, Orientation=defaultNamedNotOptArg, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg
			, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1734, LCID, 1, (9, 0), ((3, 1), (4, 1), (4, 1), (4, 1), (4, 1)),Orientation
			, Left, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'AddTextbox', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type FreeformBuilder
	def BuildFreeform(self, EditingType=defaultNamedNotOptArg, X1=defaultNamedNotOptArg, Y1=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1735, LCID, 1, (9, 0), ((3, 1), (4, 1), (4, 1)),EditingType
			, X1, Y1)
		if ret is not None:
			ret = Dispatch(ret, 'BuildFreeform', '{0002443F-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Shape
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024439-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ShapeRange
	# The method Range is actually a property, but must be used as a method to correctly pass the arguments
	def Range(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(197, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Range', '{0002443B-0000-0000-C000-000000000046}')
		return ret

	def SelectAll(self):
		return self._oleobj_.InvokeTypes(1737, LCID, 1, (24, 0), (),)

	# Result is of type Shape
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024439-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024439-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024439-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{00024439-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class SheetViews(DispatchBaseClass):
	CLSID = IID('{0002448C-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', None)
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', None)
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Sheets(DispatchBaseClass):
	CLSID = IID('{000208D7-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Add(self, Before=defaultNamedOptArg, After=defaultNamedOptArg, Count=defaultNamedOptArg, Type=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17), (12, 17)),Before
			, After, Count, Type)
		if ret is not None:
			ret = Dispatch(ret, 'Add', None)
		return ret

	def Add2(self, Before=defaultNamedOptArg, After=defaultNamedOptArg, Count=defaultNamedOptArg, NewLayout=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3054, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17), (12, 17)),Before
			, After, Count, NewLayout)
		if ret is not None:
			ret = Dispatch(ret, 'Add2', None)
		return ret

	def Copy(self, Before=defaultNamedOptArg, After=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(551, LCID, 1, (24, 0), ((12, 17), (12, 17)),Before
			, After)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def FillAcrossSheets(self, Range=defaultNamedNotOptArg, Type=-4104):
		return self._oleobj_.InvokeTypes(469, LCID, 1, (24, 0), ((9, 1), (3, 49)),Range
			, Type)

	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Move(self, Before=defaultNamedOptArg, After=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(637, LCID, 1, (24, 0), ((12, 17), (12, 17)),Before
			, After)

	def PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg, IgnorePrintAreas=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2361, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName, IgnorePrintAreas)

	def PrintPreview(self, EnableChanges=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(281, LCID, 1, (24, 0), ((12, 17),),EnableChanges
			)

	def Select(self, Replace=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(235, LCID, 1, (24, 0), ((12, 17),),Replace
			)

	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', None)
		return ret

	def _PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1772, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName)

	def _PrintOut_(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(905, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'HPageBreaks' returns object of type 'HPageBreaks'
		"HPageBreaks": (1418, 2, (9, 0), (), "HPageBreaks", '{00024404-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'VPageBreaks' returns object of type 'VPageBreaks'
		"VPageBreaks": (1419, 2, (9, 0), (), "VPageBreaks", '{00024405-0000-0000-C000-000000000046}'),
		"Visible": (558, 2, (12, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Visible": ((558, LCID, 4, 0),()),
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', None)
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Slicer(DispatchBaseClass):
	CLSID = IID('{000244C8-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Copy(self):
		return self._oleobj_.InvokeTypes(551, LCID, 1, (24, 0), (),)

	def Cut(self):
		return self._oleobj_.InvokeTypes(565, LCID, 1, (24, 0), (),)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'ActiveItem' returns object of type 'SlicerItem'
		"ActiveItem": (2988, 2, (9, 0), (), "ActiveItem", '{000244C9-0000-0000-C000-000000000046}'),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		"ColumnWidth": (242, 2, (5, 0), (), "ColumnWidth", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DisableMoveResizeUI": (2983, 2, (11, 0), (), "DisableMoveResizeUI", None),
		"DisplayHeader": (2985, 2, (11, 0), (), "DisplayHeader", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"NumberOfColumns": (2984, 2, (3, 0), (), "NumberOfColumns", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"RowHeight": (272, 2, (5, 0), (), "RowHeight", None),
		# Method 'Shape' returns object of type 'Shape'
		"Shape": (1582, 2, (9, 0), (), "Shape", '{00024439-0000-0000-C000-000000000046}'),
		# Method 'SlicerCache' returns object of type 'SlicerCache'
		"SlicerCache": (2986, 2, (9, 0), (), "SlicerCache", '{000244C4-0000-0000-C000-000000000046}'),
		# Method 'SlicerCacheLevel' returns object of type 'SlicerCacheLevel'
		"SlicerCacheLevel": (2987, 2, (9, 0), (), "SlicerCacheLevel", '{000244C6-0000-0000-C000-000000000046}'),
		"SlicerCacheType": (3111, 2, (3, 0), (), "SlicerCacheType", None),
		"Style": (260, 2, (12, 0), (), "Style", None),
		# Method 'TimelineViewState' returns object of type 'TimelineViewState'
		"TimelineViewState": (3116, 2, (9, 0), (), "TimelineViewState", '{000244E0-0000-0000-C000-000000000046}'),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"Caption": ((139, LCID, 4, 0),()),
		"ColumnWidth": ((242, LCID, 4, 0),()),
		"DisableMoveResizeUI": ((2983, LCID, 4, 0),()),
		"DisplayHeader": ((2985, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"NumberOfColumns": ((2984, LCID, 4, 0),()),
		"RowHeight": ((272, LCID, 4, 0),()),
		"Style": ((260, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class SlicerCache(DispatchBaseClass):
	CLSID = IID('{000244C4-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def ClearAllFilters(self):
		return self._oleobj_.InvokeTypes(2561, LCID, 1, (24, 0), (),)

	def ClearDateFilter(self):
		return self._oleobj_.InvokeTypes(3115, LCID, 1, (24, 0), (),)

	def ClearManualFilter(self):
		return self._oleobj_.InvokeTypes(2594, LCID, 1, (24, 0), (),)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"CrossFilterType": (2978, 2, (3, 0), (), "CrossFilterType", None),
		"FilterCleared": (3113, 2, (11, 0), (), "FilterCleared", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"List": (861, 2, (11, 0), (), "List", None),
		# Method 'ListObject' returns object of type 'ListObject'
		"ListObject": (2257, 2, (9, 0), (), "ListObject", '{00024471-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OLAP": (2077, 2, (11, 0), (), "OLAP", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'PivotTables' returns object of type 'SlicerPivotTables'
		"PivotTables": (690, 2, (9, 0), (), "PivotTables", '{000244CB-0000-0000-C000-000000000046}'),
		"RequireManualUpdate": (3114, 2, (11, 0), (), "RequireManualUpdate", None),
		"ShowAllItems": (452, 2, (11, 0), (), "ShowAllItems", None),
		# Method 'SlicerCacheLevels' returns object of type 'SlicerCacheLevels'
		"SlicerCacheLevels": (2974, 2, (9, 0), (), "SlicerCacheLevels", '{000244C5-0000-0000-C000-000000000046}'),
		"SlicerCacheType": (3111, 2, (3, 0), (), "SlicerCacheType", None),
		# Method 'SlicerItems' returns object of type 'SlicerItems'
		"SlicerItems": (2977, 2, (9, 0), (), "SlicerItems", '{000244CA-0000-0000-C000-000000000046}'),
		# Method 'Slicers' returns object of type 'Slicers'
		"Slicers": (2881, 2, (9, 0), (), "Slicers", '{000244C7-0000-0000-C000-000000000046}'),
		"SortItems": (2979, 2, (3, 0), (), "SortItems", None),
		"SortUsingCustomLists": (2574, 2, (11, 0), (), "SortUsingCustomLists", None),
		"SourceName": (721, 2, (8, 0), (), "SourceName", None),
		"SourceType": (685, 2, (3, 0), (), "SourceType", None),
		# Method 'TimelineState' returns object of type 'TimelineState'
		"TimelineState": (3112, 2, (9, 0), (), "TimelineState", '{000244DF-0000-0000-C000-000000000046}'),
		# Method 'VisibleSlicerItems' returns object of type 'SlicerItems'
		"VisibleSlicerItems": (2975, 2, (9, 0), (), "VisibleSlicerItems", '{000244CA-0000-0000-C000-000000000046}'),
		"VisibleSlicerItemsList": (2976, 2, (12, 0), (), "VisibleSlicerItemsList", None),
		# Method 'WorkbookConnection' returns object of type 'WorkbookConnection'
		"WorkbookConnection": (2544, 2, (9, 0), (), "WorkbookConnection", '{00024485-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
		"CrossFilterType": ((2978, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"RequireManualUpdate": ((3114, LCID, 4, 0),()),
		"ShowAllItems": ((452, LCID, 4, 0),()),
		"SortItems": ((2979, LCID, 4, 0),()),
		"SortUsingCustomLists": ((2574, LCID, 4, 0),()),
		"VisibleSlicerItemsList": ((2976, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class SlicerCacheLevel(DispatchBaseClass):
	CLSID = IID('{000244C6-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"CrossFilterType": (2978, 2, (3, 0), (), "CrossFilterType", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Ordinal": (2981, 2, (3, 0), (), "Ordinal", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'SlicerItems' returns object of type 'SlicerItems'
		"SlicerItems": (2977, 2, (9, 0), (), "SlicerItems", '{000244CA-0000-0000-C000-000000000046}'),
		"SortItems": (2979, 2, (3, 0), (), "SortItems", None),
		"VisibleSlicerItemsList": (2976, 2, (12, 0), (), "VisibleSlicerItemsList", None),
	}
	_prop_map_put_ = {
		"CrossFilterType": ((2978, LCID, 4, 0),()),
		"SortItems": ((2979, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class SlicerCacheLevels(DispatchBaseClass):
	CLSID = IID('{000244C5-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type SlicerCacheLevel
	# The method GetItem is actually a property, but must be used as a method to correctly pass the arguments
	def GetItem(self, Level=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 17),),Level
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetItem', '{000244C6-0000-0000-C000-000000000046}')
		return ret

	# Result is of type SlicerCacheLevel
	# The method Get_Default is actually a property, but must be used as a method to correctly pass the arguments
	def Get_Default(self, Level=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 17),),Level
			)
		if ret is not None:
			ret = Dispatch(ret, 'Get_Default', '{000244C6-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Item' returns object of type 'SlicerCacheLevel'
		"Item": (170, 2, (9, 0), ((12, 17),), "Item", '{000244C6-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method '_Default' returns object of type 'SlicerCacheLevel'
		"_Default": (0, 2, (9, 0), ((12, 17),), "_Default", '{000244C6-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Level=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 17),),Level
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244C6-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{000244C6-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class SlicerCaches(DispatchBaseClass):
	CLSID = IID('{000244C3-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type SlicerCache
	def Add(self, Source=defaultNamedNotOptArg, SourceField=defaultNamedNotOptArg, Name=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 17)),Source
			, SourceField, Name)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{000244C4-0000-0000-C000-000000000046}')
		return ret

	# Result is of type SlicerCache
	def Add2(self, Source=defaultNamedNotOptArg, SourceField=defaultNamedNotOptArg, Name=defaultNamedOptArg, SlicerCacheType=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3054, LCID, 1, (9, 0), ((12, 1), (12, 1), (12, 17), (12, 17)),Source
			, SourceField, Name, SlicerCacheType)
		if ret is not None:
			ret = Dispatch(ret, 'Add2', '{000244C4-0000-0000-C000-000000000046}')
		return ret

	# Result is of type SlicerCache
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244C4-0000-0000-C000-000000000046}')
		return ret

	# Result is of type SlicerCache
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244C4-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244C4-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244C4-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{000244C4-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class SlicerItem(DispatchBaseClass):
	CLSID = IID('{000244C9-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"HasData": (2989, 2, (11, 0), (), "HasData", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'SlicerCache'
		"Parent": (150, 2, (9, 0), (), "Parent", '{000244C4-0000-0000-C000-000000000046}'),
		"Selected": (1123, 2, (11, 0), (), "Selected", None),
		"SourceName": (721, 2, (12, 0), (), "SourceName", None),
		"SourceNameStandard": (2148, 2, (8, 0), (), "SourceNameStandard", None),
		"Value": (6, 2, (8, 0), (), "Value", None),
	}
	_prop_map_put_ = {
		"Selected": ((1123, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (8, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class SlicerItems(DispatchBaseClass):
	CLSID = IID('{000244CA-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type SlicerItem
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244C9-0000-0000-C000-000000000046}')
		return ret

	# Result is of type SlicerItem
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244C9-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244C9-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244C9-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{000244C9-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class SlicerPivotTables(DispatchBaseClass):
	CLSID = IID('{000244CB-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def AddPivotTable(self, PivotTable=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2990, LCID, 1, (24, 0), ((9, 1),),PivotTable
			)

	# Result is of type PivotTable
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00020872-0000-0000-C000-000000000046}')
		return ret

	def RemovePivotTable(self, PivotTable=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2991, LCID, 1, (24, 0), ((12, 1),),PivotTable
			)

	# Result is of type PivotTable
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00020872-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00020872-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00020872-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00020872-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Slicers(DispatchBaseClass):
	CLSID = IID('{000244C7-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Slicer
	def Add(self, SlicerDestination=defaultNamedNotOptArg, Level=defaultNamedOptArg, Name=defaultNamedOptArg, Caption=defaultNamedOptArg
			, Top=defaultNamedOptArg, Left=defaultNamedOptArg, Width=defaultNamedOptArg, Height=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),SlicerDestination
			, Level, Name, Caption, Top, Left
			, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{000244C8-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Slicer
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244C8-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Slicer
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244C8-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244C8-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244C8-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{000244C8-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class SmartTag(DispatchBaseClass):
	CLSID = IID('{00024460-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DownloadURL": (2212, 2, (8, 0), (), "DownloadURL", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'CustomProperties'
		"Properties": (2135, 2, (9, 0), (), "Properties", '{00024452-0000-0000-C000-000000000046}'),
		# Method 'Range' returns object of type 'Range'
		"Range": (197, 2, (9, 0), (), "Range", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'SmartTagActions' returns object of type 'SmartTagActions'
		"SmartTagActions": (2214, 2, (9, 0), (), "SmartTagActions", '{0002445F-0000-0000-C000-000000000046}'),
		"XML": (2213, 2, (8, 0), (), "XML", None),
		"_Default": (0, 2, (8, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class SmartTagAction(DispatchBaseClass):
	CLSID = IID('{0002445E-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Execute(self):
		return self._oleobj_.InvokeTypes(2211, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"ActiveXControl": (2303, 2, (9, 0), (), "ActiveXControl", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"CheckboxState": (2299, 2, (11, 0), (), "CheckboxState", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"ExpandHelp": (2298, 2, (11, 0), (), "ExpandHelp", None),
		"ListSelection": (2301, 2, (3, 0), (), "ListSelection", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PresentInPane": (2297, 2, (11, 0), (), "PresentInPane", None),
		"RadioGroupSelection": (2302, 2, (3, 0), (), "RadioGroupSelection", None),
		"TextboxText": (2300, 2, (8, 0), (), "TextboxText", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
		"_Default": (0, 2, (8, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"CheckboxState": ((2299, LCID, 4, 0),()),
		"ExpandHelp": ((2298, LCID, 4, 0),()),
		"ListSelection": ((2301, LCID, 4, 0),()),
		"RadioGroupSelection": ((2302, LCID, 4, 0),()),
		"TextboxText": ((2300, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class SmartTagActions(DispatchBaseClass):
	CLSID = IID('{0002445F-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type SmartTagAction
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0002445E-0000-0000-C000-000000000046}')
		return ret

	# Result is of type SmartTagAction
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{0002445E-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0002445E-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0002445E-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{0002445E-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class SmartTagOptions(DispatchBaseClass):
	CLSID = IID('{00024464-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DisplaySmartTags": (2218, 2, (3, 0), (), "DisplaySmartTags", None),
		"EmbedSmartTags": (2219, 2, (11, 0), (), "EmbedSmartTags", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"DisplaySmartTags": ((2218, LCID, 4, 0),()),
		"EmbedSmartTags": ((2219, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class SmartTagRecognizer(DispatchBaseClass):
	CLSID = IID('{00024462-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"FullName": (289, 2, (8, 0), (), "FullName", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"_Default": (0, 2, (8, 0), (), "_Default", None),
		"progID": (2216, 2, (8, 0), (), "progID", None),
	}
	_prop_map_put_ = {
		"Enabled": ((600, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class SmartTagRecognizers(DispatchBaseClass):
	CLSID = IID('{00024463-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type SmartTagRecognizer
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024462-0000-0000-C000-000000000046}')
		return ret

	# Result is of type SmartTagRecognizer
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024462-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Recognize": (2217, 2, (11, 0), (), "Recognize", None),
	}
	_prop_map_put_ = {
		"Recognize": ((2217, LCID, 4, 0),()),
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024462-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024462-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00024462-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class SmartTags(DispatchBaseClass):
	CLSID = IID('{00024461-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type SmartTag
	def Add(self, SmartTagType=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1),),SmartTagType
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00024460-0000-0000-C000-000000000046}')
		return ret

	# Result is of type SmartTag
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024460-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024460-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Sort(DispatchBaseClass):
	CLSID = IID('{000244AB-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Apply(self):
		return self._oleobj_.InvokeTypes(1675, LCID, 1, (24, 0), (),)

	def SetRange(self, Rng=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2750, LCID, 1, (24, 0), ((9, 1),),Rng
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Header": (895, 2, (3, 0), (), "Header", None),
		"MatchCase": (426, 2, (11, 0), (), "MatchCase", None),
		"Orientation": (134, 2, (3, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'Rng' returns object of type 'Range'
		"Rng": (2748, 2, (9, 0), (), "Rng", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'SortFields' returns object of type 'SortFields'
		"SortFields": (2749, 2, (9, 0), (), "SortFields", '{000244AA-0000-0000-C000-000000000046}'),
		"SortMethod": (897, 2, (3, 0), (), "SortMethod", None),
	}
	_prop_map_put_ = {
		"Header": ((895, LCID, 4, 0),()),
		"MatchCase": ((426, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"SortMethod": ((897, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class SortField(DispatchBaseClass):
	CLSID = IID('{000244A9-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def ModifyKey(self, Key=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2745, LCID, 1, (24, 0), ((9, 1),),Key
			)

	def SetIcon(self, Icon=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2746, LCID, 1, (24, 0), ((9, 1),),Icon
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"CustomOrder": (2743, 2, (12, 0), (), "CustomOrder", None),
		"DataOption": (2744, 2, (3, 0), (), "DataOption", None),
		# Method 'Key' returns object of type 'Range'
		"Key": (155, 2, (9, 0), (), "Key", '{00020846-0000-0000-C000-000000000046}'),
		"Order": (192, 2, (3, 0), (), "Order", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Priority": (985, 2, (3, 0), (), "Priority", None),
		"SortOn": (2741, 2, (3, 0), (), "SortOn", None),
		"SortOnValue": (2742, 2, (9, 0), (), "SortOnValue", None),
		"SubField": (3328, 2, (12, 0), (), "SubField", None),
	}
	_prop_map_put_ = {
		"CustomOrder": ((2743, LCID, 4, 0),()),
		"DataOption": ((2744, LCID, 4, 0),()),
		"Order": ((192, LCID, 4, 0),()),
		"Priority": ((985, LCID, 4, 0),()),
		"SortOn": ((2741, LCID, 4, 0),()),
		"SubField": ((3328, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class SortFields(DispatchBaseClass):
	CLSID = IID('{000244AA-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type SortField
	def Add(self, Key=defaultNamedNotOptArg, SortOn=defaultNamedOptArg, Order=defaultNamedOptArg, CustomOrder=defaultNamedOptArg
			, DataOption=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((9, 1), (12, 17), (12, 17), (12, 17), (12, 17)),Key
			, SortOn, Order, CustomOrder, DataOption)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{000244A9-0000-0000-C000-000000000046}')
		return ret

	# Result is of type SortField
	def Add2(self, Key=defaultNamedNotOptArg, SortOn=defaultNamedOptArg, Order=defaultNamedOptArg, CustomOrder=defaultNamedOptArg
			, DataOption=defaultNamedOptArg, SubField=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3054, LCID, 1, (9, 0), ((9, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Key
			, SortOn, Order, CustomOrder, DataOption, SubField
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add2', '{000244A9-0000-0000-C000-000000000046}')
		return ret

	def Clear(self):
		return self._oleobj_.InvokeTypes(111, LCID, 1, (24, 0), (),)

	# Result is of type SortField
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244A9-0000-0000-C000-000000000046}')
		return ret

	# Result is of type SortField
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244A9-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244A9-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244A9-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{000244A9-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class SoundNote(DispatchBaseClass):
	CLSID = IID('{0002087B-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Import(self, Filename=defaultNamedNotOptArg):
		return self._ApplyTypes_(917, 1, (12, 0), ((8, 1),), 'Import', None,Filename
			)

	def Play(self):
		return self._ApplyTypes_(918, 1, (12, 0), (), 'Play', None,)

	def Record(self):
		return self._ApplyTypes_(919, 1, (12, 0), (), 'Record', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class SparkAxes(DispatchBaseClass):
	CLSID = IID('{000244BA-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Horizontal' returns object of type 'SparkHorizontalAxis'
		"Horizontal": (2962, 2, (9, 0), (), "Horizontal", '{000244BB-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'Vertical' returns object of type 'SparkVerticalAxis'
		"Vertical": (2961, 2, (9, 0), (), "Vertical", '{000244BC-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class SparkColor(DispatchBaseClass):
	CLSID = IID('{000244BD-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Color' returns object of type 'FormatColor'
		"Color": (99, 2, (9, 0), (), "Color", '{00024491-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Visible": ((558, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class SparkHorizontalAxis(DispatchBaseClass):
	CLSID = IID('{000244BB-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Axis' returns object of type 'SparkColor'
		"Axis": (67, 2, (9, 0), (), "Axis", '{000244BD-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"IsDateAxis": (2963, 2, (11, 0), (), "IsDateAxis", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"RightToLeftPlotOrder": (2964, 2, (11, 0), (), "RightToLeftPlotOrder", None),
	}
	_prop_map_put_ = {
		"RightToLeftPlotOrder": ((2964, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class SparkPoints(DispatchBaseClass):
	CLSID = IID('{000244B8-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Firstpoint' returns object of type 'SparkColor'
		"Firstpoint": (2959, 2, (9, 0), (), "Firstpoint", '{000244BD-0000-0000-C000-000000000046}'),
		# Method 'Highpoint' returns object of type 'SparkColor'
		"Highpoint": (2957, 2, (9, 0), (), "Highpoint", '{000244BD-0000-0000-C000-000000000046}'),
		# Method 'Lastpoint' returns object of type 'SparkColor'
		"Lastpoint": (2960, 2, (9, 0), (), "Lastpoint", '{000244BD-0000-0000-C000-000000000046}'),
		# Method 'Lowpoint' returns object of type 'SparkColor'
		"Lowpoint": (2958, 2, (9, 0), (), "Lowpoint", '{000244BD-0000-0000-C000-000000000046}'),
		# Method 'Markers' returns object of type 'SparkColor'
		"Markers": (2956, 2, (9, 0), (), "Markers", '{000244BD-0000-0000-C000-000000000046}'),
		# Method 'Negative' returns object of type 'SparkColor'
		"Negative": (2955, 2, (9, 0), (), "Negative", '{000244BD-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class SparkVerticalAxis(DispatchBaseClass):
	CLSID = IID('{000244BC-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"CustomMaxScaleValue": (2968, 2, (12, 0), (), "CustomMaxScaleValue", None),
		"CustomMinScaleValue": (2966, 2, (12, 0), (), "CustomMinScaleValue", None),
		"MaxScaleType": (2967, 2, (3, 0), (), "MaxScaleType", None),
		"MinScaleType": (2965, 2, (3, 0), (), "MinScaleType", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"CustomMaxScaleValue": ((2968, LCID, 4, 0),()),
		"CustomMinScaleValue": ((2966, LCID, 4, 0),()),
		"MaxScaleType": ((2967, LCID, 4, 0),()),
		"MinScaleType": ((2965, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Sparkline(DispatchBaseClass):
	CLSID = IID('{000244B9-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def ModifyLocation(self, Range=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2949, LCID, 1, (24, 0), ((9, 1),),Range
			)

	def ModifySourceData(self, Formula=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2950, LCID, 1, (24, 0), ((8, 1),),Formula
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Location' returns object of type 'Range'
		"Location": (1397, 2, (9, 0), (), "Location", '{00020846-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"SourceData": (686, 2, (8, 0), (), "SourceData", None),
	}
	_prop_map_put_ = {
		"Location": ((1397, LCID, 8, 0),()),
		"SourceData": ((686, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class SparklineGroup(DispatchBaseClass):
	CLSID = IID('{000244B7-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	# Result is of type Sparkline
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244B9-0000-0000-C000-000000000046}')
		return ret

	def Modify(self, Location=defaultNamedNotOptArg, SourceData=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1581, LCID, 1, (24, 0), ((9, 1), (8, 1)),Location
			, SourceData)

	def ModifyDateRange(self, DateRange=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2951, LCID, 1, (24, 0), ((8, 1),),DateRange
			)

	def ModifyLocation(self, Location=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2949, LCID, 1, (24, 0), ((9, 1),),Location
			)

	def ModifySourceData(self, SourceData=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2950, LCID, 1, (24, 0), ((8, 1),),SourceData
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Axes' returns object of type 'SparkAxes'
		"Axes": (23, 2, (9, 0), (), "Axes", '{000244BA-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DateRange": (2948, 2, (8, 0), (), "DateRange", None),
		"DisplayBlanksAs": (93, 2, (3, 0), (), "DisplayBlanksAs", None),
		"DisplayHidden": (2953, 2, (11, 0), (), "DisplayHidden", None),
		"LineWeight": (2954, 2, (12, 0), (), "LineWeight", None),
		# Method 'Location' returns object of type 'Range'
		"Location": (1397, 2, (9, 0), (), "Location", '{00020846-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PlotBy": (202, 2, (3, 0), (), "PlotBy", None),
		# Method 'Points' returns object of type 'SparkPoints'
		"Points": (70, 2, (9, 0), (), "Points", '{000244B8-0000-0000-C000-000000000046}'),
		# Method 'SeriesColor' returns object of type 'FormatColor'
		"SeriesColor": (2952, 2, (9, 0), (), "SeriesColor", '{00024491-0000-0000-C000-000000000046}'),
		"SourceData": (686, 2, (8, 0), (), "SourceData", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"DateRange": ((2948, LCID, 4, 0),()),
		"DisplayBlanksAs": ((93, LCID, 4, 0),()),
		"DisplayHidden": ((2953, LCID, 4, 0),()),
		"LineWeight": ((2954, LCID, 4, 0),()),
		"Location": ((1397, LCID, 8, 0),()),
		"PlotBy": ((202, LCID, 4, 0),()),
		"SourceData": ((686, LCID, 4, 0),()),
		"Type": ((108, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244B9-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{000244B9-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class SparklineGroups(DispatchBaseClass):
	CLSID = IID('{000244B6-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type SparklineGroup
	def Add(self, Type=defaultNamedNotOptArg, SourceData=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((3, 1), (8, 1)),Type
			, SourceData)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{000244B7-0000-0000-C000-000000000046}')
		return ret

	def Clear(self):
		return self._oleobj_.InvokeTypes(111, LCID, 1, (24, 0), (),)

	def ClearGroups(self):
		return self._oleobj_.InvokeTypes(2947, LCID, 1, (24, 0), (),)

	def Group(self, Location=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(46, LCID, 1, (24, 0), ((9, 1),),Location
			)

	# Result is of type SparklineGroup
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244B7-0000-0000-C000-000000000046}')
		return ret

	def Ungroup(self):
		return self._oleobj_.InvokeTypes(244, LCID, 1, (24, 0), (),)

	# Result is of type SparklineGroup
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244B7-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244B7-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244B7-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{000244B7-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Speech(DispatchBaseClass):
	CLSID = IID('{00024466-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Speak(self, Text=defaultNamedNotOptArg, SpeakAsync=defaultNamedOptArg, SpeakXML=defaultNamedOptArg, Purge=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2017, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17), (12, 17)),Text
			, SpeakAsync, SpeakXML, Purge)

	_prop_map_get_ = {
		"Direction": (168, 2, (3, 0), (), "Direction", None),
		"SpeakCellOnEnter": (2235, 2, (11, 0), (), "SpeakCellOnEnter", None),
	}
	_prop_map_put_ = {
		"Direction": ((168, LCID, 4, 0),()),
		"SpeakCellOnEnter": ((2235, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class SpellingOptions(DispatchBaseClass):
	CLSID = IID('{00024465-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"ArabicModes": (2231, 2, (3, 0), (), "ArabicModes", None),
		"ArabicStrictAlefHamza": (2932, 2, (11, 0), (), "ArabicStrictAlefHamza", None),
		"ArabicStrictFinalYaa": (2933, 2, (11, 0), (), "ArabicStrictFinalYaa", None),
		"ArabicStrictTaaMarboota": (2934, 2, (11, 0), (), "ArabicStrictTaaMarboota", None),
		"BrazilReform": (2938, 2, (3, 0), (), "BrazilReform", None),
		"DictLang": (2220, 2, (3, 0), (), "DictLang", None),
		"GermanPostReform": (2226, 2, (11, 0), (), "GermanPostReform", None),
		"HebrewModes": (2230, 2, (3, 0), (), "HebrewModes", None),
		"IgnoreCaps": (2222, 2, (11, 0), (), "IgnoreCaps", None),
		"IgnoreFileNames": (2225, 2, (11, 0), (), "IgnoreFileNames", None),
		"IgnoreMixedDigits": (2224, 2, (11, 0), (), "IgnoreMixedDigits", None),
		"KoreanCombineAux": (2227, 2, (11, 0), (), "KoreanCombineAux", None),
		"KoreanProcessCompound": (2229, 2, (11, 0), (), "KoreanProcessCompound", None),
		"KoreanUseAutoChangeList": (2228, 2, (11, 0), (), "KoreanUseAutoChangeList", None),
		"PortugalReform": (2937, 2, (3, 0), (), "PortugalReform", None),
		"RussianStrictE": (2935, 2, (11, 0), (), "RussianStrictE", None),
		"SpanishModes": (2936, 2, (3, 0), (), "SpanishModes", None),
		"SuggestMainOnly": (2223, 2, (11, 0), (), "SuggestMainOnly", None),
		"UserDict": (2221, 2, (8, 0), (), "UserDict", None),
	}
	_prop_map_put_ = {
		"ArabicModes": ((2231, LCID, 4, 0),()),
		"ArabicStrictAlefHamza": ((2932, LCID, 4, 0),()),
		"ArabicStrictFinalYaa": ((2933, LCID, 4, 0),()),
		"ArabicStrictTaaMarboota": ((2934, LCID, 4, 0),()),
		"BrazilReform": ((2938, LCID, 4, 0),()),
		"DictLang": ((2220, LCID, 4, 0),()),
		"GermanPostReform": ((2226, LCID, 4, 0),()),
		"HebrewModes": ((2230, LCID, 4, 0),()),
		"IgnoreCaps": ((2222, LCID, 4, 0),()),
		"IgnoreFileNames": ((2225, LCID, 4, 0),()),
		"IgnoreMixedDigits": ((2224, LCID, 4, 0),()),
		"KoreanCombineAux": ((2227, LCID, 4, 0),()),
		"KoreanProcessCompound": ((2229, LCID, 4, 0),()),
		"KoreanUseAutoChangeList": ((2228, LCID, 4, 0),()),
		"PortugalReform": ((2937, LCID, 4, 0),()),
		"RussianStrictE": ((2935, LCID, 4, 0),()),
		"SpanishModes": ((2936, LCID, 4, 0),()),
		"SuggestMainOnly": ((2223, LCID, 4, 0),()),
		"UserDict": ((2221, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Spinner(DispatchBaseClass):
	CLSID = IID('{0002088D-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'BottomRightCell' returns object of type 'Range'
		"BottomRightCell": (615, 2, (9, 0), (), "BottomRightCell", '{00020846-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Display3DShading": (1122, 2, (11, 0), (), "Display3DShading", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"LinkedCell": (1058, 2, (8, 0), (), "LinkedCell", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"Max": (842, 2, (3, 0), (), "Max", None),
		"Min": (843, 2, (3, 0), (), "Min", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"SmallChange": (844, 2, (3, 0), (), "SmallChange", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		# Method 'TopLeftCell' returns object of type 'Range'
		"TopLeftCell": (620, 2, (9, 0), (), "TopLeftCell", '{00020846-0000-0000-C000-000000000046}'),
		"Value": (6, 2, (3, 0), (), "Value", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
		"_Default": (0, 2, (3, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Max": ((842, LCID, 4, 0),()),
		"Min": ((843, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"SmallChange": ((844, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Spinners(DispatchBaseClass):
	CLSID = IID('{0002088E-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Spinner
	def Add(self, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),Left
			, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0002088D-0000-0000-C000-000000000046}')
		return ret

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type GroupObject
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00020898-0000-0000-C000-000000000046}')
		return ret

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Display3DShading": (1122, 2, (11, 0), (), "Display3DShading", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"LinkedCell": (1058, 2, (8, 0), (), "LinkedCell", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"Max": (842, 2, (3, 0), (), "Max", None),
		"Min": (843, 2, (3, 0), (), "Min", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"SmallChange": (844, 2, (3, 0), (), "SmallChange", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Value": (6, 2, (3, 0), (), "Value", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
		"_Default": (0, 2, (3, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Display3DShading": ((1122, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"LinkedCell": ((1058, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"Max": ((842, LCID, 4, 0),()),
		"Min": ((843, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"SmallChange": ((844, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (3, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Style(DispatchBaseClass):
	CLSID = IID('{00020852-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (11, 0), (), "AddIndent", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Borders' returns object of type 'Borders'
		"Borders": (435, 2, (9, 0), (), "Borders", '{00020855-0000-0000-C000-000000000046}'),
		"BuiltIn": (553, 2, (11, 0), (), "BuiltIn", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"FormulaHidden": (262, 2, (11, 0), (), "FormulaHidden", None),
		"HorizontalAlignment": (136, 2, (3, 0), (), "HorizontalAlignment", None),
		"IncludeAlignment": (413, 2, (11, 0), (), "IncludeAlignment", None),
		"IncludeBorder": (414, 2, (11, 0), (), "IncludeBorder", None),
		"IncludeFont": (415, 2, (11, 0), (), "IncludeFont", None),
		"IncludeNumber": (416, 2, (11, 0), (), "IncludeNumber", None),
		"IncludePatterns": (417, 2, (11, 0), (), "IncludePatterns", None),
		"IncludeProtection": (418, 2, (11, 0), (), "IncludeProtection", None),
		"IndentLevel": (201, 2, (3, 0), (), "IndentLevel", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"MergeCells": (208, 2, (12, 0), (), "MergeCells", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"NameLocal": (937, 2, (8, 0), (), "NameLocal", None),
		"NumberFormat": (193, 2, (8, 0), (), "NumberFormat", None),
		"NumberFormatLocal": (1097, 2, (8, 0), (), "NumberFormatLocal", None),
		"Orientation": (134, 2, (3, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		"ShrinkToFit": (209, 2, (11, 0), (), "ShrinkToFit", None),
		"Value": (6, 2, (8, 0), (), "Value", None),
		"VerticalAlignment": (137, 2, (3, 0), (), "VerticalAlignment", None),
		"WrapText": (276, 2, (11, 0), (), "WrapText", None),
		"_Default": (0, 2, (8, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"FormulaHidden": ((262, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"IncludeAlignment": ((413, LCID, 4, 0),()),
		"IncludeBorder": ((414, LCID, 4, 0),()),
		"IncludeFont": ((415, LCID, 4, 0),()),
		"IncludeNumber": ((416, LCID, 4, 0),()),
		"IncludePatterns": ((417, LCID, 4, 0),()),
		"IncludeProtection": ((418, LCID, 4, 0),()),
		"IndentLevel": ((201, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"MergeCells": ((208, LCID, 4, 0),()),
		"NumberFormat": ((193, LCID, 4, 0),()),
		"NumberFormatLocal": ((1097, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"ShrinkToFit": ((209, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"WrapText": ((276, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (8, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Styles(DispatchBaseClass):
	CLSID = IID('{00020853-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Style
	def Add(self, Name=defaultNamedNotOptArg, BasedOn=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1), (12, 17)),Name
			, BasedOn)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00020852-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Style
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00020852-0000-0000-C000-000000000046}')
		return ret

	def Merge(self, Workbook=defaultNamedNotOptArg):
		return self._ApplyTypes_(564, 1, (12, 0), ((12, 1),), 'Merge', None,Workbook
			)

	# Result is of type Style
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00020852-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00020852-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00020852-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00020852-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Tab(DispatchBaseClass):
	CLSID = IID('{00024469-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Color": (99, 2, (12, 0), (), "Color", None),
		"ColorIndex": (97, 2, (3, 0), (), "ColorIndex", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"ThemeColor": (2365, 2, (3, 0), (), "ThemeColor", None),
		"TintAndShade": (2366, 2, (12, 0), (), "TintAndShade", None),
	}
	_prop_map_put_ = {
		"Color": ((99, LCID, 4, 0),()),
		"ColorIndex": ((97, LCID, 4, 0),()),
		"ThemeColor": ((2365, LCID, 4, 0),()),
		"TintAndShade": ((2366, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class TableObject(DispatchBaseClass):
	CLSID = IID('{000244CE-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def Refresh(self):
		return self._oleobj_.InvokeTypes(1417, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"AdjustColumnWidth": (1868, 2, (11, 0), (), "AdjustColumnWidth", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Destination' returns object of type 'Range'
		"Destination": (681, 2, (9, 0), (), "Destination", '{00020846-0000-0000-C000-000000000046}'),
		"EnableEditing": (1595, 2, (11, 0), (), "EnableEditing", None),
		"EnableRefresh": (1477, 2, (11, 0), (), "EnableRefresh", None),
		"FetchedRowOverflow": (1588, 2, (11, 0), (), "FetchedRowOverflow", None),
		# Method 'ListObject' returns object of type 'ListObject'
		"ListObject": (2257, 2, (9, 0), (), "ListObject", '{00024471-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PreserveColumnInfo": (1867, 2, (11, 0), (), "PreserveColumnInfo", None),
		"PreserveFormatting": (1500, 2, (11, 0), (), "PreserveFormatting", None),
		"RefreshStyle": (1590, 2, (3, 0), (), "RefreshStyle", None),
		# Method 'ResultRange' returns object of type 'Range'
		"ResultRange": (1592, 2, (9, 0), (), "ResultRange", '{00020846-0000-0000-C000-000000000046}'),
		"RowNumbers": (1585, 2, (11, 0), (), "RowNumbers", None),
		# Method 'WorkbookConnection' returns object of type 'WorkbookConnection'
		"WorkbookConnection": (2544, 2, (9, 0), (), "WorkbookConnection", '{00024485-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
		"AdjustColumnWidth": ((1868, LCID, 4, 0),()),
		"EnableEditing": ((1595, LCID, 4, 0),()),
		"EnableRefresh": ((1477, LCID, 4, 0),()),
		"PreserveColumnInfo": ((1867, LCID, 4, 0),()),
		"PreserveFormatting": ((1500, LCID, 4, 0),()),
		"RefreshStyle": ((1590, LCID, 4, 0),()),
		"RowNumbers": ((1585, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class TableStyle(DispatchBaseClass):
	CLSID = IID('{000244A7-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	# Result is of type TableStyle
	def Duplicate(self, NewTableStyleName=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), ((12, 17),),NewTableStyleName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', '{000244A7-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"BuiltIn": (553, 2, (11, 0), (), "BuiltIn", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"NameLocal": (937, 2, (8, 0), (), "NameLocal", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"ShowAsAvailablePivotTableStyle": (2739, 2, (11, 0), (), "ShowAsAvailablePivotTableStyle", None),
		"ShowAsAvailableSlicerStyle": (2946, 2, (11, 0), (), "ShowAsAvailableSlicerStyle", None),
		"ShowAsAvailableTableStyle": (2738, 2, (11, 0), (), "ShowAsAvailableTableStyle", None),
		"ShowAsAvailableTimelineStyle": (3110, 2, (11, 0), (), "ShowAsAvailableTimelineStyle", None),
		# Method 'TableStyleElements' returns object of type 'TableStyleElements'
		"TableStyleElements": (2737, 2, (9, 0), (), "TableStyleElements", '{000244A6-0000-0000-C000-000000000046}'),
		"_Default": (0, 2, (8, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"ShowAsAvailablePivotTableStyle": ((2739, LCID, 4, 0),()),
		"ShowAsAvailableSlicerStyle": ((2946, LCID, 4, 0),()),
		"ShowAsAvailableTableStyle": ((2738, LCID, 4, 0),()),
		"ShowAsAvailableTimelineStyle": ((3110, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class TableStyleElement(DispatchBaseClass):
	CLSID = IID('{000244A5-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Clear(self):
		return self._oleobj_.InvokeTypes(111, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Borders' returns object of type 'Borders'
		"Borders": (435, 2, (9, 0), (), "Borders", '{00020855-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"HasFormat": (2735, 2, (11, 0), (), "HasFormat", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"StripeSize": (2736, 2, (3, 0), (), "StripeSize", None),
	}
	_prop_map_put_ = {
		"StripeSize": ((2736, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class TableStyleElements(DispatchBaseClass):
	CLSID = IID('{000244A6-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type TableStyleElement
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244A5-0000-0000-C000-000000000046}')
		return ret

	# Result is of type TableStyleElement
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244A5-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244A5-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244A5-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{000244A5-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class TableStyles(DispatchBaseClass):
	CLSID = IID('{000244A8-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type TableStyle
	def Add(self, TableStyleName=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1),),TableStyleName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{000244A7-0000-0000-C000-000000000046}')
		return ret

	# Result is of type TableStyle
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000244A7-0000-0000-C000-000000000046}')
		return ret

	# Result is of type TableStyle
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000244A7-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000244A7-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000244A7-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{000244A7-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class TextBox(DispatchBaseClass):
	CLSID = IID('{000208A4-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (11, 0), (), "AddIndent", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		"AutoSize": (614, 2, (11, 0), (), "AutoSize", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		# Method 'BottomRightCell' returns object of type 'Range'
		"BottomRightCell": (615, 2, (9, 0), (), "BottomRightCell", '{00020846-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		"RoundedCorners": (619, 2, (11, 0), (), "RoundedCorners", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		# Method 'TopLeftCell' returns object of type 'Range'
		"TopLeftCell": (620, 2, (9, 0), (), "TopLeftCell", '{00020846-0000-0000-C000-000000000046}'),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"RoundedCorners": ((619, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class TextBoxes(DispatchBaseClass):
	CLSID = IID('{000208A5-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type TextBox
	def Add(self, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),Left
			, Top, Width, Height)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{000208A4-0000-0000-C000-000000000046}')
		return ret

	def BringToFront(self):
		return self._ApplyTypes_(602, 1, (12, 0), (), 'BringToFront', None,)

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._ApplyTypes_(505, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'CheckSpelling', None,CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def Copy(self):
		return self._ApplyTypes_(551, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(213, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(565, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(1039, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	# Result is of type Characters
	# The method GetCharacters is actually a property, but must be used as a method to correctly pass the arguments
	def GetCharacters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 2, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'GetCharacters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	# Result is of type GroupObject
	def Group(self):
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Group', '{00020898-0000-0000-C000-000000000046}')
		return ret

	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(235, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(605, 1, (12, 0), (), 'SendToBack', None,)

	_prop_map_get_ = {
		"AddIndent": (1063, 2, (11, 0), (), "AddIndent", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		"AutoSize": (614, 2, (11, 0), (), "AutoSize", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		# Method 'Characters' returns object of type 'Characters'
		"Characters": (603, 2, (9, 0), ((12, 17), (12, 17)), "Characters", '{00020878-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"HorizontalAlignment": (136, 2, (12, 0), (), "HorizontalAlignment", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"Locked": (269, 2, (11, 0), (), "Locked", None),
		"LockedText": (616, 2, (11, 0), (), "LockedText", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Orientation": (134, 2, (12, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Placement": (617, 2, (12, 0), (), "Placement", None),
		"PrintObject": (618, 2, (11, 0), (), "PrintObject", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		"RoundedCorners": (619, 2, (11, 0), (), "RoundedCorners", None),
		"Shadow": (103, 2, (11, 0), (), "Shadow", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (1528, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"Text": (138, 2, (8, 0), (), "Text", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"VerticalAlignment": (137, 2, (12, 0), (), "VerticalAlignment", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"ZOrder": (622, 2, (3, 0), (), "ZOrder", None),
	}
	_prop_map_put_ = {
		"AddIndent": ((1063, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Locked": ((269, LCID, 4, 0),()),
		"LockedText": ((616, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"Placement": ((617, LCID, 4, 0),()),
		"PrintObject": ((618, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"RoundedCorners": ((619, LCID, 4, 0),()),
		"Shadow": ((103, LCID, 4, 0),()),
		"Text": ((138, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class TextConnection(DispatchBaseClass):
	CLSID = IID('{000244D3-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Connection": (1432, 2, (12, 0), (), "Connection", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"TextFileColumnDataTypes": (1865, 2, (12, 0), (), "TextFileColumnDataTypes", None),
		"TextFileCommaDelimiter": (1862, 2, (11, 0), (), "TextFileCommaDelimiter", None),
		"TextFileConsecutiveDelimiter": (1859, 2, (11, 0), (), "TextFileConsecutiveDelimiter", None),
		"TextFileDecimalSeparator": (1870, 2, (8, 0), (), "TextFileDecimalSeparator", None),
		"TextFileFixedColumnWidths": (1866, 2, (12, 0), (), "TextFileFixedColumnWidths", None),
		"TextFileHeaderRow": (3118, 2, (11, 0), (), "TextFileHeaderRow", None),
		"TextFileOtherDelimiter": (1864, 2, (8, 0), (), "TextFileOtherDelimiter", None),
		"TextFileParseType": (1857, 2, (3, 0), (), "TextFileParseType", None),
		"TextFilePlatform": (1855, 2, (3, 0), (), "TextFilePlatform", None),
		"TextFilePromptOnRefresh": (1869, 2, (11, 0), (), "TextFilePromptOnRefresh", None),
		"TextFileSemicolonDelimiter": (1861, 2, (11, 0), (), "TextFileSemicolonDelimiter", None),
		"TextFileSpaceDelimiter": (1863, 2, (11, 0), (), "TextFileSpaceDelimiter", None),
		"TextFileStartRow": (1856, 2, (3, 0), (), "TextFileStartRow", None),
		"TextFileTabDelimiter": (1860, 2, (11, 0), (), "TextFileTabDelimiter", None),
		"TextFileTextQualifier": (1858, 2, (3, 0), (), "TextFileTextQualifier", None),
		"TextFileThousandsSeparator": (1871, 2, (8, 0), (), "TextFileThousandsSeparator", None),
		"TextFileTrailingMinusNumbers": (2164, 2, (11, 0), (), "TextFileTrailingMinusNumbers", None),
		"TextFileVisualLayout": (2245, 2, (3, 0), (), "TextFileVisualLayout", None),
	}
	_prop_map_put_ = {
		"Connection": ((1432, LCID, 4, 0),()),
		"TextFileColumnDataTypes": ((1865, LCID, 4, 0),()),
		"TextFileCommaDelimiter": ((1862, LCID, 4, 0),()),
		"TextFileConsecutiveDelimiter": ((1859, LCID, 4, 0),()),
		"TextFileDecimalSeparator": ((1870, LCID, 4, 0),()),
		"TextFileFixedColumnWidths": ((1866, LCID, 4, 0),()),
		"TextFileHeaderRow": ((3118, LCID, 4, 0),()),
		"TextFileOtherDelimiter": ((1864, LCID, 4, 0),()),
		"TextFileParseType": ((1857, LCID, 4, 0),()),
		"TextFilePlatform": ((1855, LCID, 4, 0),()),
		"TextFilePromptOnRefresh": ((1869, LCID, 4, 0),()),
		"TextFileSemicolonDelimiter": ((1861, LCID, 4, 0),()),
		"TextFileSpaceDelimiter": ((1863, LCID, 4, 0),()),
		"TextFileStartRow": ((1856, LCID, 4, 0),()),
		"TextFileTabDelimiter": ((1860, LCID, 4, 0),()),
		"TextFileTextQualifier": ((1858, LCID, 4, 0),()),
		"TextFileThousandsSeparator": ((1871, LCID, 4, 0),()),
		"TextFileTrailingMinusNumbers": ((2164, LCID, 4, 0),()),
		"TextFileVisualLayout": ((2245, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class TextEffectFormat(DispatchBaseClass):
	CLSID = IID('{000C031F-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def ToggleVerticalText(self):
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Alignment": (100, 2, (3, 0), (), "Alignment", None),
		"Application": (1610743808, 2, (9, 0), (), "Application", None),
		"Creator": (1610743809, 2, (3, 0), (), "Creator", None),
		"FontBold": (101, 2, (3, 0), (), "FontBold", None),
		"FontItalic": (102, 2, (3, 0), (), "FontItalic", None),
		"FontName": (103, 2, (8, 0), (), "FontName", None),
		"FontSize": (104, 2, (4, 0), (), "FontSize", None),
		"KernedPairs": (105, 2, (3, 0), (), "KernedPairs", None),
		"NormalizedHeight": (106, 2, (3, 0), (), "NormalizedHeight", None),
		"Parent": (1, 2, (9, 0), (), "Parent", None),
		"PresetShape": (107, 2, (3, 0), (), "PresetShape", None),
		"PresetTextEffect": (108, 2, (3, 0), (), "PresetTextEffect", None),
		"RotatedChars": (109, 2, (3, 0), (), "RotatedChars", None),
		"Text": (110, 2, (8, 0), (), "Text", None),
		"Tracking": (111, 2, (4, 0), (), "Tracking", None),
	}
	_prop_map_put_ = {
		"Alignment": ((100, LCID, 4, 0),()),
		"FontBold": ((101, LCID, 4, 0),()),
		"FontItalic": ((102, LCID, 4, 0),()),
		"FontName": ((103, LCID, 4, 0),()),
		"FontSize": ((104, LCID, 4, 0),()),
		"KernedPairs": ((105, LCID, 4, 0),()),
		"NormalizedHeight": ((106, LCID, 4, 0),()),
		"PresetShape": ((107, LCID, 4, 0),()),
		"PresetTextEffect": ((108, LCID, 4, 0),()),
		"RotatedChars": ((109, LCID, 4, 0),()),
		"Text": ((110, LCID, 4, 0),()),
		"Tracking": ((111, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class TextFrame(DispatchBaseClass):
	CLSID = IID('{0002443D-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Characters
	def Characters(self, Start=defaultNamedOptArg, Length=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(603, LCID, 1, (9, 0), ((12, 17), (12, 17)),Start
			, Length)
		if ret is not None:
			ret = Dispatch(ret, 'Characters', '{00020878-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoMargins": (1749, 2, (11, 0), (), "AutoMargins", None),
		"AutoSize": (614, 2, (11, 0), (), "AutoSize", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"HorizontalAlignment": (136, 2, (3, 0), (), "HorizontalAlignment", None),
		"HorizontalOverflow": (2923, 2, (3, 0), (), "HorizontalOverflow", None),
		"MarginBottom": (1745, 2, (4, 0), (), "MarginBottom", None),
		"MarginLeft": (1746, 2, (4, 0), (), "MarginLeft", None),
		"MarginRight": (1747, 2, (4, 0), (), "MarginRight", None),
		"MarginTop": (1748, 2, (4, 0), (), "MarginTop", None),
		"Orientation": (134, 2, (3, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
		"VerticalAlignment": (137, 2, (3, 0), (), "VerticalAlignment", None),
		"VerticalOverflow": (2922, 2, (3, 0), (), "VerticalOverflow", None),
	}
	_prop_map_put_ = {
		"AutoMargins": ((1749, LCID, 4, 0),()),
		"AutoSize": ((614, LCID, 4, 0),()),
		"HorizontalAlignment": ((136, LCID, 4, 0),()),
		"HorizontalOverflow": ((2923, LCID, 4, 0),()),
		"MarginBottom": ((1745, LCID, 4, 0),()),
		"MarginLeft": ((1746, LCID, 4, 0),()),
		"MarginRight": ((1747, LCID, 4, 0),()),
		"MarginTop": ((1748, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
		"VerticalAlignment": ((137, LCID, 4, 0),()),
		"VerticalOverflow": ((2922, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class TextFrame2(DispatchBaseClass):
	CLSID = IID('{000C0398-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def DeleteText(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1610743808, 2, (9, 0), (), "Application", None),
		"AutoSize": (111, 2, (3, 0), (), "AutoSize", None),
		# Method 'Column' returns object of type 'TextColumn2'
		"Column": (115, 2, (9, 0), (), "Column", '{000C03B2-0000-0000-C000-000000000046}'),
		"Creator": (1610743809, 2, (3, 0), (), "Creator", None),
		"HasText": (113, 2, (3, 0), (), "HasText", None),
		"HorizontalAnchor": (105, 2, (3, 0), (), "HorizontalAnchor", None),
		"MarginBottom": (100, 2, (4, 0), (), "MarginBottom", None),
		"MarginLeft": (101, 2, (4, 0), (), "MarginLeft", None),
		"MarginRight": (102, 2, (4, 0), (), "MarginRight", None),
		"MarginTop": (103, 2, (4, 0), (), "MarginTop", None),
		"NoTextRotation": (118, 2, (3, 0), (), "NoTextRotation", None),
		"Orientation": (104, 2, (3, 0), (), "Orientation", None),
		"Parent": (1, 2, (9, 0), (), "Parent", None),
		"PathFormat": (107, 2, (3, 0), (), "PathFormat", None),
		# Method 'Ruler' returns object of type 'Ruler2'
		"Ruler": (116, 2, (9, 0), (), "Ruler", '{000C03C1-0000-0000-C000-000000000046}'),
		# Method 'TextRange' returns object of type 'TextRange2'
		"TextRange": (114, 2, (9, 0), (), "TextRange", '{000C0397-0000-0000-C000-000000000046}'),
		# Method 'ThreeD' returns object of type 'ThreeDFormat'
		"ThreeD": (112, 2, (9, 0), (), "ThreeD", '{000C0321-0000-0000-C000-000000000046}'),
		"VerticalAnchor": (106, 2, (3, 0), (), "VerticalAnchor", None),
		"WarpFormat": (108, 2, (3, 0), (), "WarpFormat", None),
		"WordArtformat": (109, 2, (3, 0), (), "WordArtformat", None),
		"WordWrap": (110, 2, (3, 0), (), "WordWrap", None),
	}
	_prop_map_put_ = {
		"AutoSize": ((111, LCID, 4, 0),()),
		"HorizontalAnchor": ((105, LCID, 4, 0),()),
		"MarginBottom": ((100, LCID, 4, 0),()),
		"MarginLeft": ((101, LCID, 4, 0),()),
		"MarginRight": ((102, LCID, 4, 0),()),
		"MarginTop": ((103, LCID, 4, 0),()),
		"NoTextRotation": ((118, LCID, 4, 0),()),
		"Orientation": ((104, LCID, 4, 0),()),
		"PathFormat": ((107, LCID, 4, 0),()),
		"VerticalAnchor": ((106, LCID, 4, 0),()),
		"WarpFormat": ((108, LCID, 4, 0),()),
		"WordArtformat": ((109, LCID, 4, 0),()),
		"WordWrap": ((110, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ThreeDFormat(DispatchBaseClass):
	CLSID = IID('{000C0321-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def IncrementRotationHorizontal(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def IncrementRotationVertical(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def IncrementRotationX(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def IncrementRotationY(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def IncrementRotationZ(self, Increment=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((4, 1),),Increment
			)

	def ResetRotation(self):
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), (),)

	def SetExtrusionDirection(self, PresetExtrusionDirection=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((3, 1),),PresetExtrusionDirection
			)

	def SetPresetCamera(self, PresetCamera=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((3, 1),),PresetCamera
			)

	def SetThreeDFormat(self, PresetThreeDFormat=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((3, 1),),PresetThreeDFormat
			)

	_prop_map_get_ = {
		"Application": (1610743808, 2, (9, 0), (), "Application", None),
		"BevelBottomDepth": (119, 2, (4, 0), (), "BevelBottomDepth", None),
		"BevelBottomInset": (118, 2, (4, 0), (), "BevelBottomInset", None),
		"BevelBottomType": (117, 2, (3, 0), (), "BevelBottomType", None),
		"BevelTopDepth": (116, 2, (4, 0), (), "BevelTopDepth", None),
		"BevelTopInset": (115, 2, (4, 0), (), "BevelTopInset", None),
		"BevelTopType": (114, 2, (3, 0), (), "BevelTopType", None),
		# Method 'ContourColor' returns object of type 'ColorFormat'
		"ContourColor": (123, 2, (9, 0), (), "ContourColor", '{000C0312-0000-0000-C000-000000000046}'),
		"ContourWidth": (122, 2, (4, 0), (), "ContourWidth", None),
		"Creator": (1610743809, 2, (3, 0), (), "Creator", None),
		"Depth": (100, 2, (4, 0), (), "Depth", None),
		# Method 'ExtrusionColor' returns object of type 'ColorFormat'
		"ExtrusionColor": (101, 2, (9, 0), (), "ExtrusionColor", '{000C0312-0000-0000-C000-000000000046}'),
		"ExtrusionColorType": (102, 2, (3, 0), (), "ExtrusionColorType", None),
		"FieldOfView": (124, 2, (4, 0), (), "FieldOfView", None),
		"LightAngle": (126, 2, (4, 0), (), "LightAngle", None),
		"Parent": (1, 2, (9, 0), (), "Parent", None),
		"Perspective": (103, 2, (3, 0), (), "Perspective", None),
		"PresetCamera": (120, 2, (3, 0), (), "PresetCamera", None),
		"PresetExtrusionDirection": (104, 2, (3, 0), (), "PresetExtrusionDirection", None),
		"PresetLighting": (112, 2, (3, 0), (), "PresetLighting", None),
		"PresetLightingDirection": (105, 2, (3, 0), (), "PresetLightingDirection", None),
		"PresetLightingSoftness": (106, 2, (3, 0), (), "PresetLightingSoftness", None),
		"PresetMaterial": (107, 2, (3, 0), (), "PresetMaterial", None),
		"PresetThreeDFormat": (108, 2, (3, 0), (), "PresetThreeDFormat", None),
		"ProjectText": (125, 2, (3, 0), (), "ProjectText", None),
		"RotationX": (109, 2, (4, 0), (), "RotationX", None),
		"RotationY": (110, 2, (4, 0), (), "RotationY", None),
		"RotationZ": (121, 2, (4, 0), (), "RotationZ", None),
		"Visible": (111, 2, (3, 0), (), "Visible", None),
		"Z": (113, 2, (4, 0), (), "Z", None),
	}
	_prop_map_put_ = {
		"BevelBottomDepth": ((119, LCID, 4, 0),()),
		"BevelBottomInset": ((118, LCID, 4, 0),()),
		"BevelBottomType": ((117, LCID, 4, 0),()),
		"BevelTopDepth": ((116, LCID, 4, 0),()),
		"BevelTopInset": ((115, LCID, 4, 0),()),
		"BevelTopType": ((114, LCID, 4, 0),()),
		"ContourWidth": ((122, LCID, 4, 0),()),
		"Depth": ((100, LCID, 4, 0),()),
		"ExtrusionColorType": ((102, LCID, 4, 0),()),
		"FieldOfView": ((124, LCID, 4, 0),()),
		"LightAngle": ((126, LCID, 4, 0),()),
		"Perspective": ((103, LCID, 4, 0),()),
		"PresetLighting": ((112, LCID, 4, 0),()),
		"PresetLightingDirection": ((105, LCID, 4, 0),()),
		"PresetLightingSoftness": ((106, LCID, 4, 0),()),
		"PresetMaterial": ((107, LCID, 4, 0),()),
		"ProjectText": ((125, LCID, 4, 0),()),
		"RotationX": ((109, LCID, 4, 0),()),
		"RotationY": ((110, LCID, 4, 0),()),
		"RotationZ": ((121, LCID, 4, 0),()),
		"Visible": ((111, LCID, 4, 0),()),
		"Z": ((113, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class TickLabels(DispatchBaseClass):
	CLSID = IID('{000208C9-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	_prop_map_get_ = {
		"Alignment": (453, 2, (3, 0), (), "Alignment", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoScaleFont": (1525, 2, (12, 0), (), "AutoScaleFont", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Depth": (1890, 2, (3, 0), (), "Depth", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"MultiLevel": (2653, 2, (11, 0), (), "MultiLevel", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"NumberFormat": (193, 2, (8, 0), (), "NumberFormat", None),
		"NumberFormatLinked": (194, 2, (11, 0), (), "NumberFormatLinked", None),
		"NumberFormatLocal": (1097, 2, (12, 0), (), "NumberFormatLocal", None),
		"Offset": (254, 2, (3, 0), (), "Offset", None),
		"Orientation": (134, 2, (3, 0), (), "Orientation", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"ReadingOrder": (975, 2, (3, 0), (), "ReadingOrder", None),
	}
	_prop_map_put_ = {
		"Alignment": ((453, LCID, 4, 0),()),
		"AutoScaleFont": ((1525, LCID, 4, 0),()),
		"MultiLevel": ((2653, LCID, 4, 0),()),
		"NumberFormat": ((193, LCID, 4, 0),()),
		"NumberFormatLinked": ((194, LCID, 4, 0),()),
		"NumberFormatLocal": ((1097, LCID, 4, 0),()),
		"Offset": ((254, LCID, 4, 0),()),
		"Orientation": ((134, LCID, 4, 0),()),
		"ReadingOrder": ((975, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class TimelineState(DispatchBaseClass):
	CLSID = IID('{000244DF-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def SetFilterDateRange(self, StartDate=defaultNamedNotOptArg, EndDate=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3138, LCID, 1, (3, 0), ((12, 1), (12, 1)),StartDate
			, EndDate)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"EndDate": (3134, 2, (12, 0), (), "EndDate", None),
		"FilterType": (2686, 2, (3, 0), (), "FilterType", None),
		"FilterValue1": (3135, 2, (12, 0), (), "FilterValue1", None),
		"FilterValue2": (3136, 2, (12, 0), (), "FilterValue2", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"SingleRangeFilterState": (3137, 2, (11, 0), (), "SingleRangeFilterState", None),
		"StartDate": (3133, 2, (12, 0), (), "StartDate", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class TimelineViewState(DispatchBaseClass):
	CLSID = IID('{000244E0-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Level": (2980, 2, (3, 0), (), "Level", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"ShowHeader": (3139, 2, (11, 0), (), "ShowHeader", None),
		"ShowHorizontalScrollbar": (3142, 2, (11, 0), (), "ShowHorizontalScrollbar", None),
		"ShowSelectionLabel": (3140, 2, (11, 0), (), "ShowSelectionLabel", None),
		"ShowTimeLevel": (3141, 2, (11, 0), (), "ShowTimeLevel", None),
	}
	_prop_map_put_ = {
		"Level": ((2980, LCID, 4, 0),()),
		"ShowHeader": ((3139, LCID, 4, 0),()),
		"ShowHorizontalScrollbar": ((3142, LCID, 4, 0),()),
		"ShowSelectionLabel": ((3140, LCID, 4, 0),()),
		"ShowTimeLevel": ((3141, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Toolbar(DispatchBaseClass):
	CLSID = IID('{0002085C-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def Reset(self):
		return self._oleobj_.InvokeTypes(555, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"BuiltIn": (553, 2, (11, 0), (), "BuiltIn", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Height": (123, 2, (3, 0), (), "Height", None),
		"Left": (127, 2, (3, 0), (), "Left", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Position": (133, 2, (3, 0), (), "Position", None),
		"Protection": (176, 2, (3, 0), (), "Protection", None),
		# Method 'ToolbarButtons' returns object of type 'ToolbarButtons'
		"ToolbarButtons": (964, 2, (9, 0), (), "ToolbarButtons", '{0002085F-0000-0000-C000-000000000046}'),
		"Top": (126, 2, (3, 0), (), "Top", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"Width": (122, 2, (3, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"Position": ((133, LCID, 4, 0),()),
		"Protection": ((176, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ToolbarButton(DispatchBaseClass):
	CLSID = IID('{0002085E-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Copy(self, Toolbar=defaultNamedNotOptArg, Before=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(551, LCID, 1, (24, 0), ((9, 1), (3, 1)),Toolbar
			, Before)

	def CopyFace(self):
		return self._oleobj_.InvokeTypes(966, LCID, 1, (24, 0), (),)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def Edit(self):
		return self._oleobj_.InvokeTypes(562, LCID, 1, (24, 0), (),)

	def Move(self, Toolbar=defaultNamedNotOptArg, Before=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(637, LCID, 1, (24, 0), ((9, 1), (3, 1)),Toolbar
			, Before)

	def PasteFace(self):
		return self._oleobj_.InvokeTypes(967, LCID, 1, (24, 0), (),)

	def Reset(self):
		return self._oleobj_.InvokeTypes(555, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"BuiltIn": (553, 2, (11, 0), (), "BuiltIn", None),
		"BuiltInFace": (554, 2, (11, 0), (), "BuiltInFace", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Enabled": (600, 2, (11, 0), (), "Enabled", None),
		"HelpContextID": (355, 2, (3, 0), (), "HelpContextID", None),
		"HelpFile": (360, 2, (8, 0), (), "HelpFile", None),
		"ID": (570, 2, (3, 0), (), "ID", None),
		"IsGap": (561, 2, (11, 0), (), "IsGap", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"OnAction": (596, 2, (8, 0), (), "OnAction", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Pushed": (560, 2, (11, 0), (), "Pushed", None),
		"StatusBar": (386, 2, (8, 0), (), "StatusBar", None),
		"Width": (122, 2, (3, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"BuiltInFace": ((554, LCID, 4, 0),()),
		"Enabled": ((600, LCID, 4, 0),()),
		"HelpContextID": ((355, LCID, 4, 0),()),
		"HelpFile": ((360, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnAction": ((596, LCID, 4, 0),()),
		"Pushed": ((560, LCID, 4, 0),()),
		"StatusBar": ((386, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ToolbarButtons(DispatchBaseClass):
	CLSID = IID('{0002085F-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type ToolbarButton
	def Add(self, Button=defaultNamedOptArg, Before=defaultNamedOptArg, OnAction=defaultNamedOptArg, Pushed=defaultNamedOptArg
			, Enabled=defaultNamedOptArg, StatusBar=defaultNamedOptArg, HelpFile=defaultNamedOptArg, HelpContextID=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Button
			, Before, OnAction, Pushed, Enabled, StatusBar
			, HelpFile, HelpContextID)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0002085E-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ToolbarButton
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0002085E-0000-0000-C000-000000000046}')
		return ret

	# Result is of type ToolbarButton
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{0002085E-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0002085E-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0002085E-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{0002085E-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Toolbars(DispatchBaseClass):
	CLSID = IID('{0002085D-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Toolbar
	def Add(self, Name=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((12, 17),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0002085C-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Toolbar
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0002085C-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Toolbar
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{0002085C-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0002085C-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0002085C-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{0002085C-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Top10(DispatchBaseClass):
	CLSID = IID('{0002449D-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def ModifyAppliesToRange(self, Range=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2627, LCID, 1, (24, 0), ((9, 1),),Range
			)

	def SetFirstPriority(self):
		return self._oleobj_.InvokeTypes(2629, LCID, 1, (24, 0), (),)

	def SetLastPriority(self):
		return self._oleobj_.InvokeTypes(2630, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'AppliesTo' returns object of type 'Range'
		"AppliesTo": (2626, 2, (9, 0), (), "AppliesTo", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'Borders' returns object of type 'Borders'
		"Borders": (435, 2, (9, 0), (), "Borders", '{00020855-0000-0000-C000-000000000046}'),
		"CalcFor": (2730, 2, (3, 0), (), "CalcFor", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"NumberFormat": (193, 2, (12, 0), (), "NumberFormat", None),
		"PTCondition": (2631, 2, (11, 0), (), "PTCondition", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Percent": (2729, 2, (11, 0), (), "Percent", None),
		"Priority": (985, 2, (3, 0), (), "Priority", None),
		"Rank": (1290, 2, (3, 0), (), "Rank", None),
		"ScopeType": (2615, 2, (3, 0), (), "ScopeType", None),
		"StopIfTrue": (2625, 2, (11, 0), (), "StopIfTrue", None),
		"TopBottom": (2728, 2, (3, 0), (), "TopBottom", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"CalcFor": ((2730, LCID, 4, 0),()),
		"NumberFormat": ((193, LCID, 4, 0),()),
		"Percent": ((2729, LCID, 4, 0),()),
		"Priority": ((985, LCID, 4, 0),()),
		"Rank": ((1290, LCID, 4, 0),()),
		"ScopeType": ((2615, LCID, 4, 0),()),
		"StopIfTrue": ((2625, LCID, 4, 0),()),
		"TopBottom": ((2728, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class TreeviewControl(DispatchBaseClass):
	CLSID = IID('{0002444B-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Drilled": (1917, 2, (12, 0), (), "Drilled", None),
		"Hidden": (268, 2, (12, 0), (), "Hidden", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"Drilled": ((1917, LCID, 4, 0),()),
		"Hidden": ((268, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Trendline(DispatchBaseClass):
	CLSID = IID('{000208BE-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def ClearFormats(self):
		return self._ApplyTypes_(112, 1, (12, 0), (), 'ClearFormats', None,)

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def GetProperty(self, ID=defaultNamedNotOptArg):
		return self._ApplyTypes_(3256, 1, (12, 0), ((8, 1),), 'GetProperty', None,ID
			)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	def SetProperty(self, ID=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3253, LCID, 1, (24, 0), ((8, 1), (12, 1)),ID
			, Value)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Backward": (185, 2, (3, 0), (), "Backward", None),
		"Backward2": (2650, 2, (5, 0), (), "Backward2", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'DataLabel' returns object of type 'DataLabel'
		"DataLabel": (158, 2, (9, 0), (), "DataLabel", '{000208B2-0000-0000-C000-000000000046}'),
		"DisplayEquation": (190, 2, (11, 0), (), "DisplayEquation", None),
		"DisplayRSquared": (189, 2, (11, 0), (), "DisplayRSquared", None),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		"Forward": (191, 2, (3, 0), (), "Forward", None),
		"Forward2": (2651, 2, (5, 0), (), "Forward2", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"Intercept": (186, 2, (5, 0), (), "Intercept", None),
		"InterceptIsAuto": (187, 2, (11, 0), (), "InterceptIsAuto", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"NameIsAuto": (188, 2, (11, 0), (), "NameIsAuto", None),
		"Order": (192, 2, (3, 0), (), "Order", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Period": (184, 2, (3, 0), (), "Period", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Backward": ((185, LCID, 4, 0),()),
		"Backward2": ((2650, LCID, 4, 0),()),
		"DisplayEquation": ((190, LCID, 4, 0),()),
		"DisplayRSquared": ((189, LCID, 4, 0),()),
		"Forward": ((191, LCID, 4, 0),()),
		"Forward2": ((2651, LCID, 4, 0),()),
		"Intercept": ((186, LCID, 4, 0),()),
		"InterceptIsAuto": ((187, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"NameIsAuto": ((188, LCID, 4, 0),()),
		"Order": ((192, LCID, 4, 0),()),
		"Period": ((184, LCID, 4, 0),()),
		"Type": ((108, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Trendlines(DispatchBaseClass):
	CLSID = IID('{000208BD-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Trendline
	def Add(self, Type=-4132, Order=defaultNamedOptArg, Period=defaultNamedOptArg, Forward=defaultNamedOptArg
			, Backward=defaultNamedOptArg, Intercept=defaultNamedOptArg, DisplayEquation=defaultNamedOptArg, DisplayRSquared=defaultNamedOptArg, Name=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((3, 49), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Type
			, Order, Period, Forward, Backward, Intercept
			, DisplayEquation, DisplayRSquared, Name)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{000208BE-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Trendline
	def Item(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{000208BE-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Trendline
	def _Default(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{000208BE-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{000208BE-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,1,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{000208BE-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 1, 1, key)), "Item", '{000208BE-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class UniqueValues(DispatchBaseClass):
	CLSID = IID('{0002449F-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def ModifyAppliesToRange(self, Range=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2627, LCID, 1, (24, 0), ((9, 1),),Range
			)

	def SetFirstPriority(self):
		return self._oleobj_.InvokeTypes(2629, LCID, 1, (24, 0), (),)

	def SetLastPriority(self):
		return self._oleobj_.InvokeTypes(2630, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'AppliesTo' returns object of type 'Range'
		"AppliesTo": (2626, 2, (9, 0), (), "AppliesTo", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'Borders' returns object of type 'Borders'
		"Borders": (435, 2, (9, 0), (), "Borders", '{00020855-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DupeUnique": (2733, 2, (3, 0), (), "DupeUnique", None),
		# Method 'Font' returns object of type 'Font'
		"Font": (146, 2, (9, 0), (), "Font", '{0002084D-0000-0000-C000-000000000046}'),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"NumberFormat": (193, 2, (12, 0), (), "NumberFormat", None),
		"PTCondition": (2631, 2, (11, 0), (), "PTCondition", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Priority": (985, 2, (3, 0), (), "Priority", None),
		"ScopeType": (2615, 2, (3, 0), (), "ScopeType", None),
		"StopIfTrue": (2625, 2, (11, 0), (), "StopIfTrue", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"DupeUnique": ((2733, LCID, 4, 0),()),
		"NumberFormat": ((193, LCID, 4, 0),()),
		"Priority": ((985, LCID, 4, 0),()),
		"ScopeType": ((2615, LCID, 4, 0),()),
		"StopIfTrue": ((2625, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class UpBars(DispatchBaseClass):
	CLSID = IID('{000208C5-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._ApplyTypes_(117, 1, (12, 0), (), 'Delete', None,)

	def GetProperty(self, ID=defaultNamedNotOptArg):
		return self._ApplyTypes_(3256, 1, (12, 0), ((8, 1),), 'GetProperty', None,ID
			)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	def SetProperty(self, ID=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3253, LCID, 1, (24, 0), ((8, 1), (12, 1)),ID
			, Value)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Fill' returns object of type 'ChartFillFormat'
		"Fill": (1663, 2, (9, 0), (), "Fill", '{00024435-0000-0000-C000-000000000046}'),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class UsedObjects(DispatchBaseClass):
	CLSID = IID('{00024451-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', None)
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', None)
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class UserAccess(DispatchBaseClass):
	CLSID = IID('{0002446D-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AllowEdit": (2020, 2, (11, 0), (), "AllowEdit", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
	}
	_prop_map_put_ = {
		"AllowEdit": ((2020, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class UserAccessList(DispatchBaseClass):
	CLSID = IID('{0002446C-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type UserAccess
	def Add(self, Name=defaultNamedNotOptArg, AllowEdit=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1), (11, 1)),Name
			, AllowEdit)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0002446D-0000-0000-C000-000000000046}')
		return ret

	def DeleteAll(self):
		return self._oleobj_.InvokeTypes(2239, LCID, 1, (24, 0), (),)

	# Result is of type UserAccess
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0002446D-0000-0000-C000-000000000046}')
		return ret

	# Result is of type UserAccess
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{0002446D-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		"Count": (118, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0002446D-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0002446D-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{0002446D-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class VPageBreak(DispatchBaseClass):
	CLSID = IID('{00024402-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def DragOff(self, Direction=defaultNamedNotOptArg, RegionIndex=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1420, LCID, 1, (24, 0), ((3, 1), (3, 1)),Direction
			, RegionIndex)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Extent": (1422, 2, (3, 0), (), "Extent", None),
		# Method 'Location' returns object of type 'Range'
		"Location": (1397, 2, (9, 0), (), "Location", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'Parent' returns object of type 'Worksheet'
		"Parent": (150, 2, (13, 0), (), "Parent", '{00020820-0000-0000-C000-000000000046}'),
		"Type": (108, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Location": ((1397, LCID, 8, 0),()),
		"Type": ((108, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class VPageBreaks(DispatchBaseClass):
	CLSID = IID('{00024405-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type VPageBreak
	def Add(self, Before=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((9, 1),),Before
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00024402-0000-0000-C000-000000000046}')
		return ret

	# Result is of type VPageBreak
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024402-0000-0000-C000-000000000046}')
		return ret

	# Result is of type VPageBreak
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024402-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024402-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024402-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00024402-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class Validation(DispatchBaseClass):
	CLSID = IID('{0002442F-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Add(self, Type=defaultNamedNotOptArg, AlertStyle=defaultNamedOptArg, Operator=defaultNamedOptArg, Formula1=defaultNamedOptArg
			, Formula2=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(181, LCID, 1, (24, 0), ((3, 1), (12, 17), (12, 17), (12, 17), (12, 17)),Type
			, AlertStyle, Operator, Formula1, Formula2)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def Modify(self, Type=defaultNamedOptArg, AlertStyle=defaultNamedOptArg, Operator=defaultNamedOptArg, Formula1=defaultNamedOptArg
			, Formula2=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1581, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Type
			, AlertStyle, Operator, Formula1, Formula2)

	_prop_map_get_ = {
		"AlertStyle": (1605, 2, (3, 0), (), "AlertStyle", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"ErrorMessage": (1609, 2, (8, 0), (), "ErrorMessage", None),
		"ErrorTitle": (1610, 2, (8, 0), (), "ErrorTitle", None),
		"Formula1": (1579, 2, (8, 0), (), "Formula1", None),
		"Formula2": (1580, 2, (8, 0), (), "Formula2", None),
		"IMEMode": (1607, 2, (3, 0), (), "IMEMode", None),
		"IgnoreBlank": (1606, 2, (11, 0), (), "IgnoreBlank", None),
		"InCellDropdown": (1608, 2, (11, 0), (), "InCellDropdown", None),
		"InputMessage": (1611, 2, (8, 0), (), "InputMessage", None),
		"InputTitle": (1612, 2, (8, 0), (), "InputTitle", None),
		"Operator": (797, 2, (3, 0), (), "Operator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"ShowError": (1613, 2, (11, 0), (), "ShowError", None),
		"ShowInput": (1614, 2, (11, 0), (), "ShowInput", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (11, 0), (), "Value", None),
	}
	_prop_map_put_ = {
		"ErrorMessage": ((1609, LCID, 4, 0),()),
		"ErrorTitle": ((1610, LCID, 4, 0),()),
		"IMEMode": ((1607, LCID, 4, 0),()),
		"IgnoreBlank": ((1606, LCID, 4, 0),()),
		"InCellDropdown": ((1608, LCID, 4, 0),()),
		"InputMessage": ((1611, LCID, 4, 0),()),
		"InputTitle": ((1612, LCID, 4, 0),()),
		"ShowError": ((1613, LCID, 4, 0),()),
		"ShowInput": ((1614, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (11, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ValueChange(DispatchBaseClass):
	CLSID = IID('{000244C0-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AllocationMethod": (2875, 2, (3, 0), (), "AllocationMethod", None),
		"AllocationValue": (2874, 2, (3, 0), (), "AllocationValue", None),
		"AllocationWeightExpression": (2876, 2, (8, 0), (), "AllocationWeightExpression", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Order": (192, 2, (3, 0), (), "Order", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'PivotCell' returns object of type 'PivotCell'
		"PivotCell": (2013, 2, (9, 0), (), "PivotCell", '{00024458-0000-0000-C000-000000000046}'),
		"Tuple": (2972, 2, (8, 0), (), "Tuple", None),
		"Value": (6, 2, (5, 0), (), "Value", None),
		"VisibleInPivotTable": (2971, 2, (11, 0), (), "VisibleInPivotTable", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (5, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Walls(DispatchBaseClass):
	CLSID = IID('{000208C8-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def ClearFormats(self):
		return self._ApplyTypes_(112, 1, (12, 0), (), 'ClearFormats', None,)

	def Paste(self):
		return self._oleobj_.InvokeTypes(211, LCID, 1, (24, 0), (),)

	def Select(self):
		return self._ApplyTypes_(235, 1, (12, 0), (), 'Select', None,)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Border' returns object of type 'Border'
		"Border": (128, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Fill' returns object of type 'ChartFillFormat'
		"Fill": (1663, 2, (9, 0), (), "Fill", '{00024435-0000-0000-C000-000000000046}'),
		# Method 'Format' returns object of type 'ChartFormat'
		"Format": (116, 2, (9, 0), (), "Format", '{000244B2-0000-0000-C000-000000000046}'),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (129, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PictureType": (161, 2, (12, 0), (), "PictureType", None),
		"PictureUnit": (162, 2, (12, 0), (), "PictureUnit", None),
		"Thickness": (2652, 2, (3, 0), (), "Thickness", None),
	}
	_prop_map_put_ = {
		"PictureType": ((161, LCID, 4, 0),()),
		"PictureUnit": ((162, LCID, 4, 0),()),
		"Thickness": ((2652, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Watch(DispatchBaseClass):
	CLSID = IID('{00024457-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Source": (222, 2, (12, 0), (), "Source", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Watches(DispatchBaseClass):
	CLSID = IID('{00024456-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Watch
	def Add(self, Source=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((12, 1),),Source
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{00024457-0000-0000-C000-000000000046}')
		return ret

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	# Result is of type Watch
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024457-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Watch
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024457-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024457-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024457-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00024457-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class WebOptions(DispatchBaseClass):
	CLSID = IID('{00024449-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def UseDefaultFolderSuffix(self):
		return self._oleobj_.InvokeTypes(1915, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AllowPNG": (1908, 2, (11, 0), (), "AllowPNG", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DownloadComponents": (1906, 2, (11, 0), (), "DownloadComponents", None),
		"Encoding": (1822, 2, (3, 0), (), "Encoding", None),
		"FolderSuffix": (1914, 2, (8, 0), (), "FolderSuffix", None),
		"LocationOfComponents": (1911, 2, (8, 0), (), "LocationOfComponents", None),
		"OrganizeInFolder": (1902, 2, (11, 0), (), "OrganizeInFolder", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PixelsPerInch": (1910, 2, (3, 0), (), "PixelsPerInch", None),
		"RelyOnCSS": (1899, 2, (11, 0), (), "RelyOnCSS", None),
		"RelyOnVML": (1907, 2, (11, 0), (), "RelyOnVML", None),
		"ScreenSize": (1909, 2, (3, 0), (), "ScreenSize", None),
		"TargetBrowser": (2179, 2, (3, 0), (), "TargetBrowser", None),
		"UseLongFileNames": (1904, 2, (11, 0), (), "UseLongFileNames", None),
	}
	_prop_map_put_ = {
		"AllowPNG": ((1908, LCID, 4, 0),()),
		"DownloadComponents": ((1906, LCID, 4, 0),()),
		"Encoding": ((1822, LCID, 4, 0),()),
		"LocationOfComponents": ((1911, LCID, 4, 0),()),
		"OrganizeInFolder": ((1902, LCID, 4, 0),()),
		"PixelsPerInch": ((1910, LCID, 4, 0),()),
		"RelyOnCSS": ((1899, LCID, 4, 0),()),
		"RelyOnVML": ((1907, LCID, 4, 0),()),
		"ScreenSize": ((1909, LCID, 4, 0),()),
		"TargetBrowser": ((2179, LCID, 4, 0),()),
		"UseLongFileNames": ((1904, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Window(DispatchBaseClass):
	CLSID = IID('{00020893-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Activate(self):
		return self._ApplyTypes_(304, 1, (12, 0), (), 'Activate', None,)

	def ActivateNext(self):
		return self._ApplyTypes_(1115, 1, (12, 0), (), 'ActivateNext', None,)

	def ActivatePrevious(self):
		return self._ApplyTypes_(1116, 1, (12, 0), (), 'ActivatePrevious', None,)

	def Close(self, SaveChanges=defaultNamedOptArg, Filename=defaultNamedOptArg, RouteWorkbook=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(277, LCID, 1, (11, 0), ((12, 17), (12, 17), (12, 17)),SaveChanges
			, Filename, RouteWorkbook)

	def LargeScroll(self, Down=defaultNamedOptArg, Up=defaultNamedOptArg, ToRight=defaultNamedOptArg, ToLeft=defaultNamedOptArg):
		return self._ApplyTypes_(547, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'LargeScroll', None,Down
			, Up, ToRight, ToLeft)

	# Result is of type Window
	def NewWindow(self):
		ret = self._oleobj_.InvokeTypes(280, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'NewWindow', '{00020893-0000-0000-C000-000000000046}')
		return ret

	def PointsToScreenPixelsX(self, Points=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1776, LCID, 1, (3, 0), ((3, 1),),Points
			)

	def PointsToScreenPixelsY(self, Points=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1777, LCID, 1, (3, 0), ((3, 1),),Points
			)

	def PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg):
		return self._ApplyTypes_(2361, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'PrintOut', None,From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName)

	def PrintPreview(self, EnableChanges=defaultNamedOptArg):
		return self._ApplyTypes_(281, 1, (12, 0), ((12, 17),), 'PrintPreview', None,EnableChanges
			)

	def RangeFromPoint(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1778, LCID, 1, (9, 0), ((3, 1), (3, 1)),x
			, y)
		if ret is not None:
			ret = Dispatch(ret, 'RangeFromPoint', None)
		return ret

	def ScrollIntoView(self, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Width=defaultNamedNotOptArg, Height=defaultNamedNotOptArg
			, Start=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1781, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (12, 17)),Left
			, Top, Width, Height, Start)

	def ScrollWorkbookTabs(self, Sheets=defaultNamedOptArg, Position=defaultNamedOptArg):
		return self._ApplyTypes_(662, 1, (12, 0), ((12, 17), (12, 17)), 'ScrollWorkbookTabs', None,Sheets
			, Position)

	def SmallScroll(self, Down=defaultNamedOptArg, Up=defaultNamedOptArg, ToRight=defaultNamedOptArg, ToLeft=defaultNamedOptArg):
		return self._ApplyTypes_(548, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'SmallScroll', None,Down
			, Up, ToRight, ToLeft)

	def _PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg):
		return self._ApplyTypes_(1772, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), '_PrintOut', None,From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName)

	_prop_map_get_ = {
		# Method 'ActiveCell' returns object of type 'Range'
		"ActiveCell": (305, 2, (9, 0), (), "ActiveCell", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'ActiveChart' returns object of type 'Chart'
		"ActiveChart": (183, 2, (13, 0), (), "ActiveChart", '{00020821-0000-0000-C000-000000000046}'),
		# Method 'ActivePane' returns object of type 'Pane'
		"ActivePane": (642, 2, (9, 0), (), "ActivePane", '{00020895-0000-0000-C000-000000000046}'),
		"ActiveSheet": (307, 2, (9, 0), (), "ActiveSheet", None),
		"ActiveSheetView": (2369, 2, (9, 0), (), "ActiveSheetView", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoFilterDateGrouping": (2371, 2, (11, 0), (), "AutoFilterDateGrouping", None),
		"Caption": (139, 2, (12, 0), (), "Caption", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DisplayFormulas": (644, 2, (11, 0), (), "DisplayFormulas", None),
		"DisplayGridlines": (645, 2, (11, 0), (), "DisplayGridlines", None),
		"DisplayHeadings": (646, 2, (11, 0), (), "DisplayHeadings", None),
		"DisplayHorizontalScrollBar": (921, 2, (11, 0), (), "DisplayHorizontalScrollBar", None),
		"DisplayOutline": (647, 2, (11, 0), (), "DisplayOutline", None),
		"DisplayRightToLeft": (1774, 2, (11, 0), (), "DisplayRightToLeft", None),
		"DisplayRuler": (2370, 2, (11, 0), (), "DisplayRuler", None),
		"DisplayVerticalScrollBar": (922, 2, (11, 0), (), "DisplayVerticalScrollBar", None),
		"DisplayWhitespace": (2372, 2, (11, 0), (), "DisplayWhitespace", None),
		"DisplayWorkbookTabs": (923, 2, (11, 0), (), "DisplayWorkbookTabs", None),
		"DisplayZeros": (649, 2, (11, 0), (), "DisplayZeros", None),
		"EnableResize": (1192, 2, (11, 0), (), "EnableResize", None),
		"FreezePanes": (650, 2, (11, 0), (), "FreezePanes", None),
		"GridlineColor": (651, 2, (3, 0), (), "GridlineColor", None),
		"GridlineColorIndex": (652, 2, (3, 0), (), "GridlineColorIndex", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"Hwnd": (1950, 2, (3, 0), (), "Hwnd", None),
		"Index": (486, 2, (3, 0), (), "Index", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"OnWindow": (623, 2, (8, 0), (), "OnWindow", None),
		# Method 'Panes' returns object of type 'Panes'
		"Panes": (653, 2, (9, 0), (), "Panes", '{00020894-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'RangeSelection' returns object of type 'Range'
		"RangeSelection": (1189, 2, (9, 0), (), "RangeSelection", '{00020846-0000-0000-C000-000000000046}'),
		"ScrollColumn": (654, 2, (3, 0), (), "ScrollColumn", None),
		"ScrollRow": (655, 2, (3, 0), (), "ScrollRow", None),
		# Method 'SelectedSheets' returns object of type 'Sheets'
		"SelectedSheets": (656, 2, (9, 0), (), "SelectedSheets", '{000208D7-0000-0000-C000-000000000046}'),
		"Selection": (147, 2, (9, 0), (), "Selection", None),
		# Method 'SheetViews' returns object of type 'SheetViews'
		"SheetViews": (2368, 2, (9, 0), (), "SheetViews", '{0002448C-0000-0000-C000-000000000046}'),
		"Split": (657, 2, (11, 0), (), "Split", None),
		"SplitColumn": (658, 2, (3, 0), (), "SplitColumn", None),
		"SplitHorizontal": (659, 2, (5, 0), (), "SplitHorizontal", None),
		"SplitRow": (660, 2, (3, 0), (), "SplitRow", None),
		"SplitVertical": (661, 2, (5, 0), (), "SplitVertical", None),
		"TabRatio": (673, 2, (5, 0), (), "TabRatio", None),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
		"UsableHeight": (389, 2, (5, 0), (), "UsableHeight", None),
		"UsableWidth": (390, 2, (5, 0), (), "UsableWidth", None),
		"View": (1194, 2, (3, 0), (), "View", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		# Method 'VisibleRange' returns object of type 'Range'
		"VisibleRange": (1118, 2, (9, 0), (), "VisibleRange", '{00020846-0000-0000-C000-000000000046}'),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"WindowNumber": (1119, 2, (3, 0), (), "WindowNumber", None),
		"WindowState": (396, 2, (3, 0), (), "WindowState", None),
		"Zoom": (663, 2, (12, 0), (), "Zoom", None),
		"_DisplayRightToLeft": (648, 2, (11, 0), (), "_DisplayRightToLeft", None),
	}
	_prop_map_put_ = {
		"AutoFilterDateGrouping": ((2371, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"DisplayFormulas": ((644, LCID, 4, 0),()),
		"DisplayGridlines": ((645, LCID, 4, 0),()),
		"DisplayHeadings": ((646, LCID, 4, 0),()),
		"DisplayHorizontalScrollBar": ((921, LCID, 4, 0),()),
		"DisplayOutline": ((647, LCID, 4, 0),()),
		"DisplayRightToLeft": ((1774, LCID, 4, 0),()),
		"DisplayRuler": ((2370, LCID, 4, 0),()),
		"DisplayVerticalScrollBar": ((922, LCID, 4, 0),()),
		"DisplayWhitespace": ((2372, LCID, 4, 0),()),
		"DisplayWorkbookTabs": ((923, LCID, 4, 0),()),
		"DisplayZeros": ((649, LCID, 4, 0),()),
		"EnableResize": ((1192, LCID, 4, 0),()),
		"FreezePanes": ((650, LCID, 4, 0),()),
		"GridlineColor": ((651, LCID, 4, 0),()),
		"GridlineColorIndex": ((652, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"OnWindow": ((623, LCID, 4, 0),()),
		"ScrollColumn": ((654, LCID, 4, 0),()),
		"ScrollRow": ((655, LCID, 4, 0),()),
		"Split": ((657, LCID, 4, 0),()),
		"SplitColumn": ((658, LCID, 4, 0),()),
		"SplitHorizontal": ((659, LCID, 4, 0),()),
		"SplitRow": ((660, LCID, 4, 0),()),
		"SplitVertical": ((661, LCID, 4, 0),()),
		"TabRatio": ((673, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"View": ((1194, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"WindowState": ((396, LCID, 4, 0),()),
		"Zoom": ((663, LCID, 4, 0),()),
		"_DisplayRightToLeft": ((648, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Windows(DispatchBaseClass):
	CLSID = IID('{00020892-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Arrange(self, ArrangeStyle=1, ActiveWorkbook=defaultNamedOptArg, SyncHorizontal=defaultNamedOptArg, SyncVertical=defaultNamedOptArg):
		return self._ApplyTypes_(638, 1, (12, 0), ((3, 49), (12, 17), (12, 17), (12, 17)), 'Arrange', None,ArrangeStyle
			, ActiveWorkbook, SyncHorizontal, SyncVertical)

	def BreakSideBySide(self):
		return self._oleobj_.InvokeTypes(2248, LCID, 1, (11, 0), (),)

	def CompareSideBySideWith(self, WindowName=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2246, LCID, 1, (11, 0), ((12, 1),),WindowName
			)

	# Result is of type Window
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00020893-0000-0000-C000-000000000046}')
		return ret

	def ResetPositionsSideBySide(self):
		return self._oleobj_.InvokeTypes(2250, LCID, 1, (24, 0), (),)

	# Result is of type Window
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00020893-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"SyncScrollingSideBySide": (2249, 2, (11, 0), (), "SyncScrollingSideBySide", None),
	}
	_prop_map_put_ = {
		"SyncScrollingSideBySide": ((2249, LCID, 4, 0),()),
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00020893-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00020893-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00020893-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class WorkbookConnection(DispatchBaseClass):
	CLSID = IID('{00024485-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def Refresh(self):
		return self._oleobj_.InvokeTypes(1417, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'DataFeedConnection' returns object of type 'DataFeedConnection'
		"DataFeedConnection": (3104, 2, (9, 0), (), "DataFeedConnection", '{000244D4-0000-0000-C000-000000000046}'),
		"Description": (218, 2, (8, 0), (), "Description", None),
		"InModel": (3105, 2, (11, 0), (), "InModel", None),
		# Method 'ModelConnection' returns object of type 'ModelConnection'
		"ModelConnection": (3100, 2, (9, 0), (), "ModelConnection", '{000244D1-0000-0000-C000-000000000046}'),
		# Method 'ModelTables' returns object of type 'ModelTables'
		"ModelTables": (3106, 2, (9, 0), (), "ModelTables", '{000244D8-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		# Method 'ODBCConnection' returns object of type 'ODBCConnection'
		"ODBCConnection": (2698, 2, (9, 0), (), "ODBCConnection", '{0002448E-0000-0000-C000-000000000046}'),
		# Method 'OLEDBConnection' returns object of type 'OLEDBConnection'
		"OLEDBConnection": (2697, 2, (9, 0), (), "OLEDBConnection", '{0002448D-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'Ranges' returns object of type 'Ranges'
		"Ranges": (2699, 2, (9, 0), (), "Ranges", '{000244A0-0000-0000-C000-000000000046}'),
		"RefreshWithRefreshAll": (3102, 2, (11, 0), (), "RefreshWithRefreshAll", None),
		# Method 'TextConnection' returns object of type 'TextConnection'
		"TextConnection": (3103, 2, (9, 0), (), "TextConnection", '{000244D3-0000-0000-C000-000000000046}'),
		"Type": (108, 2, (3, 0), (), "Type", None),
		# Method 'WorksheetDataConnection' returns object of type 'WorksheetDataConnection'
		"WorksheetDataConnection": (3101, 2, (9, 0), (), "WorksheetDataConnection", '{000244D2-0000-0000-C000-000000000046}'),
		"_Default": (0, 2, (8, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Description": ((218, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"RefreshWithRefreshAll": ((3102, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class WorkbookEvents:
	CLSID = CLSID_Sink = IID('{00024412-0000-0000-C000-000000000046}')
	coclass_clsid = IID('{00020819-0000-0000-C000-000000000046}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		1610612736 : "OnQueryInterface",
		1610612737 : "OnAddRef",
		1610612738 : "OnRelease",
		1610678272 : "OnGetTypeInfoCount",
		1610678273 : "OnGetTypeInfo",
		1610678274 : "OnGetIDsOfNames",
		1610678275 : "OnInvoke",
		     1923 : "OnOpen",
		      304 : "OnActivate",
		     1530 : "OnDeactivate",
		     1546 : "OnBeforeClose",
		     1547 : "OnBeforeSave",
		     1549 : "OnBeforePrint",
		     1550 : "OnNewSheet",
		     1552 : "OnAddinInstall",
		     1553 : "OnAddinUninstall",
		     1554 : "OnWindowResize",
		     1556 : "OnWindowActivate",
		     1557 : "OnWindowDeactivate",
		     1558 : "OnSheetSelectionChange",
		     1559 : "OnSheetBeforeDoubleClick",
		     1560 : "OnSheetBeforeRightClick",
		     1561 : "OnSheetActivate",
		     1562 : "OnSheetDeactivate",
		     1563 : "OnSheetCalculate",
		     1564 : "OnSheetChange",
		     1854 : "OnSheetFollowHyperlink",
		     2157 : "OnSheetPivotTableUpdate",
		     2158 : "OnPivotTableCloseConnection",
		     2159 : "OnPivotTableOpenConnection",
		     2266 : "OnSync",
		     2283 : "OnBeforeXmlImport",
		     2285 : "OnAfterXmlImport",
		     2287 : "OnBeforeXmlExport",
		     2288 : "OnAfterXmlExport",
		     2610 : "OnRowsetComplete",
		     2895 : "OnSheetPivotTableAfterValueChange",
		     2896 : "OnSheetPivotTableBeforeAllocateChanges",
		     2897 : "OnSheetPivotTableBeforeCommitChanges",
		     2898 : "OnSheetPivotTableBeforeDiscardChanges",
		     2899 : "OnSheetPivotTableChangeSync",
		     2900 : "OnAfterSave",
		     2901 : "OnNewChart",
		     3075 : "OnSheetLensGalleryRenderComplete",
		     3076 : "OnSheetTableUpdate",
		     3077 : "OnModelChange",
		     3079 : "OnSheetBeforeDelete",
		     3342 : "OnBeforeRemoteChange",
		     3343 : "OnAfterRemoteChange",
		     3344 : "OnRemoteSheetChange",
		     3345 : "OnRemoteNewSheet",
		     3346 : "OnRemoteNewChart",
		     3347 : "OnRemoteSheetBeforeDelete",
		     3348 : "OnRemoteSheetPivotTableUpdate",
		     3349 : "OnRemoteSheetPivotTableChangeSync",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnQueryInterface(self, riid=defaultNamedNotOptArg, ppvObj=pythoncom.Missing):
#	def OnAddRef(self):
#	def OnRelease(self):
#	def OnGetTypeInfoCount(self, pctinfo=pythoncom.Missing):
#	def OnGetTypeInfo(self, itinfo=defaultNamedNotOptArg, lcid=defaultNamedNotOptArg, pptinfo=pythoncom.Missing):
#	def OnGetIDsOfNames(self, riid=defaultNamedNotOptArg, rgszNames=defaultNamedNotOptArg, cNames=defaultNamedNotOptArg, lcid=defaultNamedNotOptArg
#			, rgdispid=pythoncom.Missing):
#	def OnInvoke(self, dispidMember=defaultNamedNotOptArg, riid=defaultNamedNotOptArg, lcid=defaultNamedNotOptArg, wFlags=defaultNamedNotOptArg
#			, pdispparams=defaultNamedNotOptArg, pvarResult=pythoncom.Missing, pexcepinfo=pythoncom.Missing, puArgErr=pythoncom.Missing):
#	def OnOpen(self):
#	def OnActivate(self):
#	def OnDeactivate(self):
#	def OnBeforeClose(self, Cancel=defaultNamedNotOptArg):
#	def OnBeforeSave(self, SaveAsUI=defaultNamedNotOptArg, Cancel=defaultNamedNotOptArg):
#	def OnBeforePrint(self, Cancel=defaultNamedNotOptArg):
#	def OnNewSheet(self, Sh=defaultNamedNotOptArg):
#	def OnAddinInstall(self):
#	def OnAddinUninstall(self):
#	def OnWindowResize(self, Wn=defaultNamedNotOptArg):
#	def OnWindowActivate(self, Wn=defaultNamedNotOptArg):
#	def OnWindowDeactivate(self, Wn=defaultNamedNotOptArg):
#	def OnSheetSelectionChange(self, Sh=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
#	def OnSheetBeforeDoubleClick(self, Sh=defaultNamedNotOptArg, Target=defaultNamedNotOptArg, Cancel=defaultNamedNotOptArg):
#	def OnSheetBeforeRightClick(self, Sh=defaultNamedNotOptArg, Target=defaultNamedNotOptArg, Cancel=defaultNamedNotOptArg):
#	def OnSheetActivate(self, Sh=defaultNamedNotOptArg):
#	def OnSheetDeactivate(self, Sh=defaultNamedNotOptArg):
#	def OnSheetCalculate(self, Sh=defaultNamedNotOptArg):
#	def OnSheetChange(self, Sh=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
#	def OnSheetFollowHyperlink(self, Sh=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
#	def OnSheetPivotTableUpdate(self, Sh=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
#	def OnPivotTableCloseConnection(self, Target=defaultNamedNotOptArg):
#	def OnPivotTableOpenConnection(self, Target=defaultNamedNotOptArg):
#	def OnSync(self, SyncEventType=defaultNamedNotOptArg):
#	def OnBeforeXmlImport(self, Map=defaultNamedNotOptArg, Url=defaultNamedNotOptArg, IsRefresh=defaultNamedNotOptArg, Cancel=defaultNamedNotOptArg):
#	def OnAfterXmlImport(self, Map=defaultNamedNotOptArg, IsRefresh=defaultNamedNotOptArg, Result=defaultNamedNotOptArg):
#	def OnBeforeXmlExport(self, Map=defaultNamedNotOptArg, Url=defaultNamedNotOptArg, Cancel=defaultNamedNotOptArg):
#	def OnAfterXmlExport(self, Map=defaultNamedNotOptArg, Url=defaultNamedNotOptArg, Result=defaultNamedNotOptArg):
#	def OnRowsetComplete(self, Description=defaultNamedNotOptArg, Sheet=defaultNamedNotOptArg, Success=defaultNamedNotOptArg):
#	def OnSheetPivotTableAfterValueChange(self, Sh=defaultNamedNotOptArg, TargetPivotTable=defaultNamedNotOptArg, TargetRange=defaultNamedNotOptArg):
#	def OnSheetPivotTableBeforeAllocateChanges(self, Sh=defaultNamedNotOptArg, TargetPivotTable=defaultNamedNotOptArg, ValueChangeStart=defaultNamedNotOptArg, ValueChangeEnd=defaultNamedNotOptArg
#			, Cancel=defaultNamedNotOptArg):
#	def OnSheetPivotTableBeforeCommitChanges(self, Sh=defaultNamedNotOptArg, TargetPivotTable=defaultNamedNotOptArg, ValueChangeStart=defaultNamedNotOptArg, ValueChangeEnd=defaultNamedNotOptArg
#			, Cancel=defaultNamedNotOptArg):
#	def OnSheetPivotTableBeforeDiscardChanges(self, Sh=defaultNamedNotOptArg, TargetPivotTable=defaultNamedNotOptArg, ValueChangeStart=defaultNamedNotOptArg, ValueChangeEnd=defaultNamedNotOptArg):
#	def OnSheetPivotTableChangeSync(self, Sh=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
#	def OnAfterSave(self, Success=defaultNamedNotOptArg):
#	def OnNewChart(self, Ch=defaultNamedNotOptArg):
#	def OnSheetLensGalleryRenderComplete(self, Sh=defaultNamedNotOptArg):
#	def OnSheetTableUpdate(self, Sh=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
#	def OnModelChange(self, Changes=defaultNamedNotOptArg):
#	def OnSheetBeforeDelete(self, Sh=defaultNamedNotOptArg):
#	def OnBeforeRemoteChange(self):
#	def OnAfterRemoteChange(self):
#	def OnRemoteSheetChange(self, Sh=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
#	def OnRemoteNewSheet(self, Sh=defaultNamedNotOptArg):
#	def OnRemoteNewChart(self, Ch=defaultNamedNotOptArg):
#	def OnRemoteSheetBeforeDelete(self, Sh=defaultNamedNotOptArg):
#	def OnRemoteSheetPivotTableUpdate(self, Sh=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):
#	def OnRemoteSheetPivotTableChangeSync(self, Sh=defaultNamedNotOptArg, Target=defaultNamedNotOptArg):


class WorkbookQuery(DispatchBaseClass):
	CLSID = IID('{000244EB-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self, DeleteConnection=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), ((12, 17),),DeleteConnection
			)

	def Refresh(self):
		return self._oleobj_.InvokeTypes(1417, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Description": (218, 2, (8, 0), (), "Description", None),
		"Formula": (261, 2, (8, 0), (), "Formula", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"_Default": (0, 2, (8, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"Description": ((218, LCID, 4, 0),()),
		"Formula": ((261, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"_Default": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Workbooks(DispatchBaseClass):
	CLSID = IID('{000208DB-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type Workbook
	def Add(self, Template=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (13, 0), ((12, 17),),Template
			)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, 'Add', '{00020819-0000-0000-C000-000000000046}')
		return ret

	def CanCheckOut(self, Filename=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2070, LCID, 1, (11, 0), ((8, 1),),Filename
			)

	def CheckOut(self, Filename=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2069, LCID, 1, (24, 0), ((8, 1),),Filename
			)

	def Close(self):
		return self._oleobj_.InvokeTypes(277, LCID, 1, (24, 0), (),)

	# Result is of type Workbook
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (13, 0), ((12, 1),),Index
			)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, 'Item', '{00020819-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Workbook
	def Open(self, Filename=defaultNamedNotOptArg, UpdateLinks=defaultNamedOptArg, ReadOnly=defaultNamedOptArg, Format=defaultNamedOptArg
			, Password=defaultNamedOptArg, WriteResPassword=defaultNamedOptArg, IgnoreReadOnlyRecommended=defaultNamedOptArg, Origin=defaultNamedOptArg, Delimiter=defaultNamedOptArg
			, Editable=defaultNamedOptArg, Notify=defaultNamedOptArg, Converter=defaultNamedOptArg, AddToMru=defaultNamedOptArg, Local=defaultNamedOptArg
			, CorruptLoad=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1923, LCID, 1, (13, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, UpdateLinks, ReadOnly, Format, Password, WriteResPassword
			, IgnoreReadOnlyRecommended, Origin, Delimiter, Editable, Notify
			, Converter, AddToMru, Local, CorruptLoad)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, 'Open', '{00020819-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Workbook
	def OpenDatabase(self, Filename=defaultNamedNotOptArg, CommandText=defaultNamedOptArg, CommandType=defaultNamedOptArg, BackgroundQuery=defaultNamedOptArg
			, ImportDataAs=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(2067, LCID, 1, (13, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, CommandText, CommandType, BackgroundQuery, ImportDataAs)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, 'OpenDatabase', '{00020819-0000-0000-C000-000000000046}')
		return ret

	def OpenText(self, Filename=defaultNamedNotOptArg, Origin=defaultNamedNotOptArg, StartRow=defaultNamedNotOptArg, DataType=defaultNamedNotOptArg
			, TextQualifier=1, ConsecutiveDelimiter=defaultNamedOptArg, Tab=defaultNamedOptArg, Semicolon=defaultNamedOptArg, Comma=defaultNamedOptArg
			, Space=defaultNamedOptArg, Other=defaultNamedOptArg, OtherChar=defaultNamedOptArg, FieldInfo=defaultNamedOptArg, TextVisualLayout=defaultNamedOptArg
			, DecimalSeparator=defaultNamedOptArg, ThousandsSeparator=defaultNamedOptArg, TrailingMinusNumbers=defaultNamedOptArg, Local=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1924, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (3, 49), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, Origin, StartRow, DataType, TextQualifier, ConsecutiveDelimiter
			, Tab, Semicolon, Comma, Space, Other
			, OtherChar, FieldInfo, TextVisualLayout, DecimalSeparator, ThousandsSeparator
			, TrailingMinusNumbers, Local)

	# Result is of type Workbook
	def OpenXML(self, Filename=defaultNamedNotOptArg, Stylesheets=defaultNamedOptArg, LoadOption=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(2280, LCID, 1, (13, 0), ((8, 1), (12, 17), (12, 17)),Filename
			, Stylesheets, LoadOption)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, 'OpenXML', '{00020819-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Workbook
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (13, 0), ((12, 1),),Index
			)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, '_Default', '{00020819-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Workbook
	def _Open(self, Filename=defaultNamedNotOptArg, UpdateLinks=defaultNamedOptArg, ReadOnly=defaultNamedOptArg, Format=defaultNamedOptArg
			, Password=defaultNamedOptArg, WriteResPassword=defaultNamedOptArg, IgnoreReadOnlyRecommended=defaultNamedOptArg, Origin=defaultNamedOptArg, Delimiter=defaultNamedOptArg
			, Editable=defaultNamedOptArg, Notify=defaultNamedOptArg, Converter=defaultNamedOptArg, AddToMru=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(682, LCID, 1, (13, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, UpdateLinks, ReadOnly, Format, Password, WriteResPassword
			, IgnoreReadOnlyRecommended, Origin, Delimiter, Editable, Notify
			, Converter, AddToMru)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, '_Open', '{00020819-0000-0000-C000-000000000046}')
		return ret

	def _OpenText(self, Filename=defaultNamedNotOptArg, Origin=defaultNamedNotOptArg, StartRow=defaultNamedNotOptArg, DataType=defaultNamedNotOptArg
			, TextQualifier=1, ConsecutiveDelimiter=defaultNamedOptArg, Tab=defaultNamedOptArg, Semicolon=defaultNamedOptArg, Comma=defaultNamedOptArg
			, Space=defaultNamedOptArg, Other=defaultNamedOptArg, OtherChar=defaultNamedOptArg, FieldInfo=defaultNamedOptArg, TextVisualLayout=defaultNamedOptArg
			, DecimalSeparator=defaultNamedOptArg, ThousandsSeparator=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1773, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (3, 49), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, Origin, StartRow, DataType, TextQualifier, ConsecutiveDelimiter
			, Tab, Semicolon, Comma, Space, Other
			, OtherChar, FieldInfo, TextVisualLayout, DecimalSeparator, ThousandsSeparator
			)

	# Result is of type Workbook
	def _OpenXML(self, Filename=defaultNamedNotOptArg, Stylesheets=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(2071, LCID, 1, (13, 0), ((8, 1), (12, 17)),Filename
			, Stylesheets)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, '_OpenXML', '{00020819-0000-0000-C000-000000000046}')
		return ret

	def _OpenText_(self, Filename=defaultNamedNotOptArg, Origin=defaultNamedNotOptArg, StartRow=defaultNamedNotOptArg, DataType=defaultNamedNotOptArg
			, TextQualifier=1, ConsecutiveDelimiter=defaultNamedOptArg, Tab=defaultNamedOptArg, Semicolon=defaultNamedOptArg, Comma=defaultNamedOptArg
			, Space=defaultNamedOptArg, Other=defaultNamedOptArg, OtherChar=defaultNamedOptArg, FieldInfo=defaultNamedOptArg, TextVisualLayout=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(683, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (3, 49), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, Origin, StartRow, DataType, TextQualifier, ConsecutiveDelimiter
			, Tab, Semicolon, Comma, Space, Other
			, OtherChar, FieldInfo, TextVisualLayout)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (13, 0), ((12, 1),),Index
			)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, '__call__', '{00020819-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00020819-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00020819-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class WorksheetDataConnection(DispatchBaseClass):
	CLSID = IID('{000244D2-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"CommandText": (1829, 2, (12, 0), (), "CommandText", None),
		"CommandType": (1830, 2, (3, 0), (), "CommandType", None),
		"Connection": (1432, 2, (12, 0), (), "Connection", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"CommandText": ((1829, LCID, 4, 0),()),
		"CommandType": ((1830, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class WorksheetFunction(DispatchBaseClass):
	CLSID = IID('{00020845-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def AccrInt(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedNotOptArg, Arg6=defaultNamedNotOptArg, Arg7=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16853, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7)

	def AccrIntM(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16854, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5)

	def Acos(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16483, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Acosh(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16617, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Acot(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16932, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Acoth(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16933, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Aggregate(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16869, LCID, 1, (5, 0), ((5, 1), (5, 1), (9, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def AmorDegrc(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedNotOptArg, Arg6=defaultNamedNotOptArg, Arg7=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16850, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7)

	def AmorLinc(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedNotOptArg, Arg6=defaultNamedNotOptArg, Arg7=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16851, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7)

	def And(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16420, LCID, 1, (11, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Arabic(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16967, LCID, 1, (5, 0), ((8, 1),),Arg1
			)

	def ArrayToText(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(17032, LCID, 1, (8, 0), ((12, 1), (12, 17)),Arg1
			, Arg2)

	def Asc(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16598, LCID, 1, (8, 0), ((8, 1),),Arg1
			)

	def Asin(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16482, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Asinh(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16616, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Atan2(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16481, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def Atanh(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16618, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def AveDev(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16653, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Average(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16389, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def AverageIf(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16867, LCID, 1, (5, 0), ((9, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def AverageIfs(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16868, LCID, 1, (5, 0), ((9, 1), (9, 1), (12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29)

	def BahtText(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16752, LCID, 1, (8, 0), ((5, 1),),Arg1
			)

	def Base(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16955, LCID, 1, (8, 0), ((5, 1), (5, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def BesselI(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16812, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def BesselJ(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16809, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def BesselK(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16810, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def BesselY(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16811, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def BetaDist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16654, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5)

	def BetaInv(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16656, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5)

	def Beta_Dist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16909, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (11, 1), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			)

	def Beta_Inv(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16910, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5)

	def Bin2Dec(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16777, LCID, 1, (8, 0), ((12, 1),),Arg1
			)

	def Bin2Hex(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16779, LCID, 1, (8, 0), ((12, 1), (12, 17)),Arg1
			, Arg2)

	def Bin2Oct(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16778, LCID, 1, (8, 0), ((12, 1), (12, 17)),Arg1
			, Arg2)

	def BinomDist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16657, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (11, 1)),Arg1
			, Arg2, Arg3, Arg4)

	def Binom_Dist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16870, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (11, 1)),Arg1
			, Arg2, Arg3, Arg4)

	def Binom_Dist_Range(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16958, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4)

	def Binom_Inv(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16871, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def Bitand(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16946, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def Bitlshift(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16949, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def Bitor(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16947, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def Bitrshift(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16950, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def Bitxor(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16948, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def Ceiling(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16672, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def Ceiling_Math(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16975, LCID, 1, (5, 0), ((5, 1), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3)

	def Ceiling_Precise(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16930, LCID, 1, (5, 0), ((5, 1), (12, 17)),Arg1
			, Arg2)

	def ChiDist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16658, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def ChiInv(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16659, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def ChiSq_Dist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16911, LCID, 1, (5, 0), ((5, 1), (5, 1), (11, 1)),Arg1
			, Arg2, Arg3)

	def ChiSq_Dist_RT(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16912, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def ChiSq_Inv(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16913, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def ChiSq_Inv_RT(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16914, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def ChiSq_Test(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16874, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def ChiTest(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16690, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def Choose(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._ApplyTypes_(16484, 1, (12, 0), ((12, 1), (12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'Choose', None,Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Clean(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16546, LCID, 1, (8, 0), ((8, 1),),Arg1
			)

	def Combin(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16660, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def Combina(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16952, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def Complex(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16795, LCID, 1, (8, 0), ((12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def Concat(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16990, LCID, 1, (8, 0), ((16392, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29)

	def Confidence(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16661, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def Confidence_Norm(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16872, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def Confidence_T(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16873, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def Convert(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16852, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1)),Arg1
			, Arg2, Arg3)

	def Correl(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16691, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def Cosh(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16614, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Cot(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16934, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Coth(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16935, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Count(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16384, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def CountA(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16553, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def CountBlank(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16731, LCID, 1, (5, 0), ((9, 1),),Arg1
			)

	def CountIf(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16730, LCID, 1, (5, 0), ((9, 1), (12, 1)),Arg1
			, Arg2)

	def CountIfs(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16865, LCID, 1, (5, 0), ((9, 1), (12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def CoupDayBs(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16836, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4)

	def CoupDays(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16837, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4)

	def CoupDaysNc(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16838, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4)

	def CoupNcd(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16839, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4)

	def CoupNum(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16840, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4)

	def CoupPcd(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16841, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4)

	def Covar(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16692, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def Covariance_P(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16876, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def Covariance_S(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16877, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def CritBinom(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16662, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def Csc(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16936, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Csch(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16937, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def CumIPmt(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedNotOptArg, Arg6=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16832, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			)

	def CumPrinc(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedNotOptArg, Arg6=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16831, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			)

	def DAverage(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16426, LCID, 1, (5, 0), ((9, 1), (12, 1), (12, 1)),Arg1
			, Arg2, Arg3)

	def DCount(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16424, LCID, 1, (5, 0), ((9, 1), (12, 1), (12, 1)),Arg1
			, Arg2, Arg3)

	def DCountA(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16583, LCID, 1, (5, 0), ((9, 1), (12, 1), (12, 1)),Arg1
			, Arg2, Arg3)

	def DGet(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._ApplyTypes_(16619, 1, (12, 0), ((9, 1), (12, 1), (12, 1)), 'DGet', None,Arg1
			, Arg2, Arg3)

	def DMax(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16428, LCID, 1, (5, 0), ((9, 1), (12, 1), (12, 1)),Arg1
			, Arg2, Arg3)

	def DMin(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16427, LCID, 1, (5, 0), ((9, 1), (12, 1), (12, 1)),Arg1
			, Arg2, Arg3)

	def DProduct(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16573, LCID, 1, (5, 0), ((9, 1), (12, 1), (12, 1)),Arg1
			, Arg2, Arg3)

	def DStDev(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16429, LCID, 1, (5, 0), ((9, 1), (12, 1), (12, 1)),Arg1
			, Arg2, Arg3)

	def DStDevP(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16579, LCID, 1, (5, 0), ((9, 1), (12, 1), (12, 1)),Arg1
			, Arg2, Arg3)

	def DSum(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16425, LCID, 1, (5, 0), ((9, 1), (12, 1), (12, 1)),Arg1
			, Arg2, Arg3)

	def DVar(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16431, LCID, 1, (5, 0), ((9, 1), (12, 1), (12, 1)),Arg1
			, Arg2, Arg3)

	def DVarP(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16580, LCID, 1, (5, 0), ((9, 1), (12, 1), (12, 1)),Arg1
			, Arg2, Arg3)

	def Days(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16957, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def Days360(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16604, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def Db(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16631, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5)

	def Dbcs(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16599, LCID, 1, (8, 0), ((8, 1),),Arg1
			)

	def Ddb(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16528, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5)

	def Dec2Bin(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16771, LCID, 1, (8, 0), ((12, 1), (12, 17)),Arg1
			, Arg2)

	def Dec2Hex(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16772, LCID, 1, (8, 0), ((12, 1), (12, 17)),Arg1
			, Arg2)

	def Dec2Oct(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16773, LCID, 1, (8, 0), ((12, 1), (12, 17)),Arg1
			, Arg2)

	def Decimal(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16956, LCID, 1, (5, 0), ((8, 1), (5, 1)),Arg1
			, Arg2)

	def Degrees(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16727, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Delta(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16802, LCID, 1, (5, 0), ((12, 1), (12, 17)),Arg1
			, Arg2)

	def DevSq(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16702, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Disc(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16819, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5)

	def Dollar(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16397, LCID, 1, (8, 0), ((5, 1), (12, 17)),Arg1
			, Arg2)

	def DollarDe(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16827, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def DollarFr(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16828, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def Dummy19(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._ApplyTypes_(2827, 1, (12, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'Dummy19', None,Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Dummy21(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2826, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def Duration(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedNotOptArg, Arg6=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16842, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			)

	def EDate(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16833, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def Effect(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16830, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def EncodeURL(self, Arg1=defaultNamedNotOptArg):
		return self._ApplyTypes_(16981, 1, (12, 0), ((8, 1),), 'EncodeURL', None,Arg1
			)

	def EoMonth(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16834, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def Erf(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16807, LCID, 1, (5, 0), ((12, 1), (12, 17)),Arg1
			, Arg2)

	def ErfC(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16808, LCID, 1, (5, 0), ((12, 1),),Arg1
			)

	def ErfC_Precise(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16928, LCID, 1, (5, 0), ((12, 1),),Arg1
			)

	def Erf_Precise(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16927, LCID, 1, (5, 0), ((12, 1),),Arg1
			)

	def Even(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16663, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def ExponDist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16664, LCID, 1, (5, 0), ((5, 1), (5, 1), (11, 1)),Arg1
			, Arg2, Arg3)

	def Expon_Dist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16878, LCID, 1, (5, 0), ((5, 1), (5, 1), (11, 1)),Arg1
			, Arg2, Arg3)

	def FDist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16665, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def FInv(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16666, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def FTest(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16694, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def FVSchedule(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16860, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def F_Dist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16915, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (11, 1)),Arg1
			, Arg2, Arg3, Arg4)

	def F_Dist_RT(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16916, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def F_Inv(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16917, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def F_Inv_RT(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16918, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def F_Test(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16875, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def Fact(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16568, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def FactDouble(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16799, LCID, 1, (5, 0), ((12, 1),),Arg1
			)

	def FieldValue(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._ApplyTypes_(16997, 1, (12, 0), ((12, 1), (8, 1)), 'FieldValue', None,Arg1
			, Arg2)

	def Filter(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._ApplyTypes_(16998, 1, (12, 0), ((12, 1), (12, 1), (12, 17)), 'Filter', None,Arg1
			, Arg2, Arg3)

	def FilterXML(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._ApplyTypes_(16979, 1, (12, 0), ((8, 1), (8, 1)), 'FilterXML', None,Arg1
			, Arg2)

	def Find(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16508, LCID, 1, (5, 0), ((8, 1), (8, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def FindB(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16589, LCID, 1, (5, 0), ((8, 1), (8, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def Fisher(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16667, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def FisherInv(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16668, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Fixed(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16398, LCID, 1, (8, 0), ((5, 1), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3)

	def Floor(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16669, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def Floor_Math(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16976, LCID, 1, (5, 0), ((5, 1), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3)

	def Floor_Precise(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16931, LCID, 1, (5, 0), ((5, 1), (12, 17)),Arg1
			, Arg2)

	def Forecast(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16693, LCID, 1, (5, 0), ((5, 1), (12, 1), (12, 1)),Arg1
			, Arg2, Arg3)

	def Forecast_ETS(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16982, LCID, 1, (5, 0), ((5, 1), (12, 1), (12, 1), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			)

	def Forecast_ETS_ConfInt(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16983, LCID, 1, (5, 0), ((5, 1), (12, 1), (12, 1), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7)

	def Forecast_ETS_STAT(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16986, LCID, 1, (5, 0), ((12, 1), (12, 1), (5, 1), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			)

	def Forecast_ETS_Seasonality(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16984, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4)

	def Forecast_Linear(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16985, LCID, 1, (5, 0), ((5, 1), (12, 1), (12, 1)),Arg1
			, Arg2, Arg3)

	def Frequency(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._ApplyTypes_(16636, 1, (12, 0), ((12, 1), (12, 1)), 'Frequency', None,Arg1
			, Arg2)

	def Fv(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16441, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5)

	def Gamma(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16959, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def GammaDist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16670, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (11, 1)),Arg1
			, Arg2, Arg3, Arg4)

	def GammaInv(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16671, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def GammaLn(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16655, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def GammaLn_Precise(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16929, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Gamma_Dist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16879, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (11, 1)),Arg1
			, Arg2, Arg3, Arg4)

	def Gamma_Inv(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16880, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def Gauss(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16961, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Gcd(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16857, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def GeStep(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16803, LCID, 1, (5, 0), ((12, 1), (12, 17)),Arg1
			, Arg2)

	def GeoMean(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16703, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Growth(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg):
		return self._ApplyTypes_(16436, 1, (12, 0), ((12, 1), (12, 17), (12, 17), (12, 17)), 'Growth', None,Arg1
			, Arg2, Arg3, Arg4)

	def HLookup(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg):
		return self._ApplyTypes_(16485, 1, (12, 0), ((12, 1), (12, 1), (12, 1), (12, 17)), 'HLookup', None,Arg1
			, Arg2, Arg3, Arg4)

	def HarMean(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16704, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Hex2Bin(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16768, LCID, 1, (8, 0), ((12, 1), (12, 17)),Arg1
			, Arg2)

	def Hex2Dec(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16769, LCID, 1, (8, 0), ((12, 1),),Arg1
			)

	def Hex2Oct(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16770, LCID, 1, (8, 0), ((12, 1), (12, 17)),Arg1
			, Arg2)

	def HypGeomDist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16673, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3, Arg4)

	def HypGeom_Dist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16919, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (11, 1)),Arg1
			, Arg2, Arg3, Arg4, Arg5)

	def ISO_Ceiling(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16907, LCID, 1, (5, 0), ((5, 1), (12, 17)),Arg1
			, Arg2)

	def IfError(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._ApplyTypes_(16864, 1, (12, 0), ((12, 1), (12, 1)), 'IfError', None,Arg1
			, Arg2)

	def IfNa(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._ApplyTypes_(16974, 1, (12, 0), ((12, 1), (12, 1)), 'IfNa', None,Arg1
			, Arg2)

	def ImAbs(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16783, LCID, 1, (8, 0), ((12, 1),),Arg1
			)

	def ImArgument(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16791, LCID, 1, (8, 0), ((12, 1),),Arg1
			)

	def ImConjugate(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16792, LCID, 1, (8, 0), ((12, 1),),Arg1
			)

	def ImCos(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16789, LCID, 1, (8, 0), ((12, 1),),Arg1
			)

	def ImCosh(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16978, LCID, 1, (8, 0), ((12, 1),),Arg1
			)

	def ImCot(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16941, LCID, 1, (8, 0), ((12, 1),),Arg1
			)

	def ImCsc(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16942, LCID, 1, (8, 0), ((12, 1),),Arg1
			)

	def ImCsch(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16943, LCID, 1, (8, 0), ((12, 1),),Arg1
			)

	def ImDiv(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16781, LCID, 1, (8, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def ImExp(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16790, LCID, 1, (8, 0), ((12, 1),),Arg1
			)

	def ImLn(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16785, LCID, 1, (8, 0), ((12, 1),),Arg1
			)

	def ImLog10(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16787, LCID, 1, (8, 0), ((12, 1),),Arg1
			)

	def ImLog2(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16786, LCID, 1, (8, 0), ((12, 1),),Arg1
			)

	def ImPower(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16782, LCID, 1, (8, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def ImProduct(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16797, LCID, 1, (8, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def ImReal(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16794, LCID, 1, (5, 0), ((12, 1),),Arg1
			)

	def ImSec(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16944, LCID, 1, (8, 0), ((12, 1),),Arg1
			)

	def ImSech(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16945, LCID, 1, (8, 0), ((12, 1),),Arg1
			)

	def ImSin(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16788, LCID, 1, (8, 0), ((12, 1),),Arg1
			)

	def ImSinh(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16977, LCID, 1, (8, 0), ((12, 1),),Arg1
			)

	def ImSqrt(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16784, LCID, 1, (8, 0), ((12, 1),),Arg1
			)

	def ImSub(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16780, LCID, 1, (8, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def ImSum(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16796, LCID, 1, (8, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def ImTan(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16940, LCID, 1, (8, 0), ((12, 1),),Arg1
			)

	def Imaginary(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16793, LCID, 1, (5, 0), ((12, 1),),Arg1
			)

	def Index(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg):
		return self._ApplyTypes_(16413, 1, (12, 0), ((12, 1), (5, 1), (12, 17), (12, 17)), 'Index', None,Arg1
			, Arg2, Arg3, Arg4)

	def IntRate(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16817, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5)

	def Intercept(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16695, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def Ipmt(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16551, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			)

	def Irr(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16446, LCID, 1, (5, 0), ((12, 1), (12, 17)),Arg1
			, Arg2)

	def IsErr(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16510, LCID, 1, (11, 0), ((12, 1),),Arg1
			)

	def IsError(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16387, LCID, 1, (11, 0), ((12, 1),),Arg1
			)

	def IsEven(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16804, LCID, 1, (11, 0), ((12, 1),),Arg1
			)

	def IsFormula(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16973, LCID, 1, (11, 0), ((9, 1),),Arg1
			)

	def IsLogical(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16582, LCID, 1, (11, 0), ((12, 1),),Arg1
			)

	def IsNA(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16386, LCID, 1, (11, 0), ((12, 1),),Arg1
			)

	def IsNonText(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16574, LCID, 1, (11, 0), ((12, 1),),Arg1
			)

	def IsNumber(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16512, LCID, 1, (11, 0), ((12, 1),),Arg1
			)

	def IsOdd(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16805, LCID, 1, (11, 0), ((12, 1),),Arg1
			)

	def IsText(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16511, LCID, 1, (11, 0), ((12, 1),),Arg1
			)

	def IsThaiDigit(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16759, LCID, 1, (11, 0), ((8, 1),),Arg1
			)

	def IsoWeekNum(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16968, LCID, 1, (5, 0), ((5, 1), (12, 17)),Arg1
			, Arg2)

	def Ispmt(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16734, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3, Arg4)

	def Kurt(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16706, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Large(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16709, LCID, 1, (5, 0), ((12, 1), (5, 1)),Arg1
			, Arg2)

	def Lcm(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16859, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def LinEst(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg):
		return self._ApplyTypes_(16433, 1, (12, 0), ((12, 1), (12, 17), (12, 17), (12, 17)), 'LinEst', None,Arg1
			, Arg2, Arg3, Arg4)

	def Ln(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16406, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Log(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16493, LCID, 1, (5, 0), ((5, 1), (12, 17)),Arg1
			, Arg2)

	def Log10(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16407, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def LogEst(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg):
		return self._ApplyTypes_(16435, 1, (12, 0), ((12, 1), (12, 17), (12, 17), (12, 17)), 'LogEst', None,Arg1
			, Arg2, Arg3, Arg4)

	def LogInv(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16675, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def LogNormDist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16674, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def LogNorm_Dist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16920, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (11, 1)),Arg1
			, Arg2, Arg3, Arg4)

	def LogNorm_Inv(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16921, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def Lookup(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._ApplyTypes_(16412, 1, (12, 0), ((12, 1), (12, 1), (12, 17)), 'Lookup', None,Arg1
			, Arg2, Arg3)

	def MDeterm(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16547, LCID, 1, (5, 0), ((12, 1),),Arg1
			)

	def MDuration(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedNotOptArg, Arg6=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16843, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			)

	def MInverse(self, Arg1=defaultNamedNotOptArg):
		return self._ApplyTypes_(16548, 1, (12, 0), ((12, 1),), 'MInverse', None,Arg1
			)

	def MIrr(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16445, LCID, 1, (5, 0), ((12, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def MMult(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._ApplyTypes_(16549, 1, (12, 0), ((12, 1), (12, 1)), 'MMult', None,Arg1
			, Arg2)

	def MRound(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16806, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def Match(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16448, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def Max(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16391, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def MaxIfs(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16987, LCID, 1, (5, 0), ((9, 1), (9, 1), (12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29)

	def Median(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16611, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Min(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16390, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def MinIfs(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16988, LCID, 1, (5, 0), ((9, 1), (9, 1), (12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29)

	def Mode(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16714, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Mode_Mult(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._ApplyTypes_(16881, 1, (12, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'Mode_Mult', None,Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Mode_Sngl(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16882, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def MultiNomial(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16858, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Munit(self, Arg1=defaultNamedNotOptArg):
		return self._ApplyTypes_(16966, 1, (12, 0), ((5, 1),), 'Munit', None,Arg1
			)

	def NPer(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16442, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5)

	def NegBinomDist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16676, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def NegBinom_Dist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16922, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (11, 1)),Arg1
			, Arg2, Arg3, Arg4)

	def NetworkDays(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16856, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def NetworkDays_Intl(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16904, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4)

	def Nominal(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16829, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def NormDist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16677, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (11, 1)),Arg1
			, Arg2, Arg3, Arg4)

	def NormInv(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16679, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def NormSDist(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16678, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def NormSInv(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16680, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Norm_Dist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16883, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (11, 1)),Arg1
			, Arg2, Arg3, Arg4)

	def Norm_Inv(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16884, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def Norm_S_Dist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16923, LCID, 1, (5, 0), ((5, 1), (11, 1)),Arg1
			, Arg2)

	def Norm_S_Inv(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16924, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Npv(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16395, LCID, 1, (5, 0), ((5, 1), (12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def NumberValue(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16969, LCID, 1, (5, 0), ((8, 1), (8, 1), (8, 1)),Arg1
			, Arg2, Arg3)

	def Oct2Bin(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16774, LCID, 1, (8, 0), ((12, 1), (12, 17)),Arg1
			, Arg2)

	def Oct2Dec(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16776, LCID, 1, (8, 0), ((12, 1),),Arg1
			)

	def Oct2Hex(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16775, LCID, 1, (8, 0), ((12, 1), (12, 17)),Arg1
			, Arg2)

	def Odd(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16682, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def OddFPrice(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedNotOptArg, Arg6=defaultNamedNotOptArg, Arg7=defaultNamedNotOptArg, Arg8=defaultNamedNotOptArg, Arg9=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16846, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9)

	def OddFYield(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedNotOptArg, Arg6=defaultNamedNotOptArg, Arg7=defaultNamedNotOptArg, Arg8=defaultNamedNotOptArg, Arg9=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16847, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9)

	def OddLPrice(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedNotOptArg, Arg6=defaultNamedNotOptArg, Arg7=defaultNamedNotOptArg, Arg8=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16844, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8)

	def OddLYield(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedNotOptArg, Arg6=defaultNamedNotOptArg, Arg7=defaultNamedNotOptArg, Arg8=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16845, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8)

	def Or(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16421, LCID, 1, (11, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def PDuration(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16954, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def Pearson(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16696, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def PercentRank(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16713, LCID, 1, (5, 0), ((12, 1), (5, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def PercentRank_Exc(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16887, LCID, 1, (5, 0), ((12, 1), (5, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def PercentRank_Inc(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16888, LCID, 1, (5, 0), ((12, 1), (5, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def Percentile(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16712, LCID, 1, (5, 0), ((12, 1), (5, 1)),Arg1
			, Arg2)

	def Percentile_Exc(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16885, LCID, 1, (5, 0), ((12, 1), (5, 1)),Arg1
			, Arg2)

	def Percentile_Inc(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16886, LCID, 1, (5, 0), ((12, 1), (5, 1)),Arg1
			, Arg2)

	def Permut(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16683, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def Permutationa(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16951, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def Phi(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16962, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Phonetic(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16744, LCID, 1, (8, 0), ((9, 1),),Arg1
			)

	def Pi(self):
		return self._oleobj_.InvokeTypes(16403, LCID, 1, (5, 0), (),)

	def Pmt(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16443, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5)

	def Poisson(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16684, LCID, 1, (5, 0), ((5, 1), (5, 1), (11, 1)),Arg1
			, Arg2, Arg3)

	def Poisson_Dist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16889, LCID, 1, (5, 0), ((5, 1), (5, 1), (11, 1)),Arg1
			, Arg2, Arg3)

	def Power(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16721, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def Ppmt(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16552, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			)

	def Price(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedNotOptArg, Arg6=defaultNamedNotOptArg, Arg7=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16825, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7)

	def PriceDisc(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16820, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5)

	def PriceMat(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedNotOptArg, Arg6=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16815, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			)

	def Prob(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16701, LCID, 1, (5, 0), ((12, 1), (12, 1), (5, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4)

	def Product(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16567, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Proper(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16498, LCID, 1, (8, 0), ((8, 1),),Arg1
			)

	def Pv(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16440, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5)

	def Quartile(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16711, LCID, 1, (5, 0), ((12, 1), (5, 1)),Arg1
			, Arg2)

	def Quartile_Exc(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16890, LCID, 1, (5, 0), ((12, 1), (5, 1)),Arg1
			, Arg2)

	def Quartile_Inc(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16891, LCID, 1, (5, 0), ((12, 1), (5, 1)),Arg1
			, Arg2)

	def Quotient(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16801, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def RSq(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16697, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def RTD(self, progID=defaultNamedNotOptArg, server=defaultNamedNotOptArg, topic1=defaultNamedNotOptArg, topic2=defaultNamedOptArg
			, topic3=defaultNamedOptArg, topic4=defaultNamedOptArg, topic5=defaultNamedOptArg, topic6=defaultNamedOptArg, topic7=defaultNamedOptArg
			, topic8=defaultNamedOptArg, topic9=defaultNamedOptArg, topic10=defaultNamedOptArg, topic11=defaultNamedOptArg, topic12=defaultNamedOptArg
			, topic13=defaultNamedOptArg, topic14=defaultNamedOptArg, topic15=defaultNamedOptArg, topic16=defaultNamedOptArg, topic17=defaultNamedOptArg
			, topic18=defaultNamedOptArg, topic19=defaultNamedOptArg, topic20=defaultNamedOptArg, topic21=defaultNamedOptArg, topic22=defaultNamedOptArg
			, topic23=defaultNamedOptArg, topic24=defaultNamedOptArg, topic25=defaultNamedOptArg, topic26=defaultNamedOptArg, topic27=defaultNamedOptArg
			, topic28=defaultNamedOptArg):
		return self._ApplyTypes_(16763, 1, (12, 0), ((12, 1), (12, 1), (12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'RTD', None,progID
			, server, topic1, topic2, topic3, topic4
			, topic5, topic6, topic7, topic8, topic9
			, topic10, topic11, topic12, topic13, topic14
			, topic15, topic16, topic17, topic18, topic19
			, topic20, topic21, topic22, topic23, topic24
			, topic25, topic26, topic27, topic28)

	def Radians(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16726, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def RandArray(self, Arg1=defaultNamedOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg):
		return self._ApplyTypes_(17015, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'RandArray', None,Arg1
			, Arg2, Arg3, Arg4, Arg5)

	def RandBetween(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16848, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def Rank(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16600, LCID, 1, (5, 0), ((5, 1), (9, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def Rank_Avg(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16892, LCID, 1, (5, 0), ((5, 1), (9, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def Rank_Eq(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16893, LCID, 1, (5, 0), ((5, 1), (9, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def Rate(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16444, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			)

	def Received(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16818, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5)

	def Replace(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16503, LCID, 1, (8, 0), ((8, 1), (5, 1), (5, 1), (8, 1)),Arg1
			, Arg2, Arg3, Arg4)

	def ReplaceB(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16591, LCID, 1, (8, 0), ((8, 1), (5, 1), (5, 1), (8, 1)),Arg1
			, Arg2, Arg3, Arg4)

	def Rept(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16414, LCID, 1, (8, 0), ((8, 1), (5, 1)),Arg1
			, Arg2)

	def Roman(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16738, LCID, 1, (8, 0), ((5, 1), (12, 17)),Arg1
			, Arg2)

	def Round(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16411, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def RoundBahtDown(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16760, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def RoundBahtUp(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16761, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def RoundDown(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16597, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def RoundUp(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16596, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def Rri(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16963, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def Search(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16466, LCID, 1, (5, 0), ((8, 1), (8, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def SearchB(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16590, LCID, 1, (5, 0), ((8, 1), (8, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def Sec(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16938, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Sech(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16939, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Sequence(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg):
		return self._ApplyTypes_(17016, 1, (12, 0), ((12, 1), (12, 17), (12, 17), (12, 17)), 'Sequence', None,Arg1
			, Arg2, Arg3, Arg4)

	def SeriesSum(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16798, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Arg1
			, Arg2, Arg3, Arg4)

	def Single(self, Arg1=defaultNamedNotOptArg):
		return self._ApplyTypes_(16993, 1, (12, 0), ((12, 1),), 'Single', None,Arg1
			)

	def Sinh(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16613, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Skew(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16707, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Skew_p(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16960, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Sln(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16526, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def Slope(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16699, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def Small(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16710, LCID, 1, (5, 0), ((12, 1), (5, 1)),Arg1
			, Arg2)

	def Sort(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg):
		return self._ApplyTypes_(16999, 1, (12, 0), ((12, 1), (12, 17), (12, 17), (12, 17)), 'Sort', None,Arg1
			, Arg2, Arg3, Arg4)

	def SortBy(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._ApplyTypes_(17014, 1, (12, 0), ((12, 1), (12, 1), (12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'SortBy', None,Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def SqrtPi(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16800, LCID, 1, (5, 0), ((12, 1),),Arg1
			)

	def StDev(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16396, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def StDevP(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16577, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def StDev_P(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16895, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def StDev_S(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16894, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def StEyx(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16698, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def Standardize(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16681, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def StockHistory(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg):
		return self._ApplyTypes_(17017, 1, (12, 0), ((12, 1), (12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'StockHistory', None,Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29)

	def Substitute(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16504, LCID, 1, (8, 0), ((8, 1), (8, 1), (8, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4)

	def Subtotal(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16728, LCID, 1, (5, 0), ((5, 1), (9, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Sum(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16388, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def SumIf(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16729, LCID, 1, (5, 0), ((9, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def SumIfs(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16866, LCID, 1, (5, 0), ((9, 1), (9, 1), (12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29)

	def SumProduct(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16612, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def SumSq(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16705, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def SumX2MY2(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16688, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def SumX2PY2(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16689, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def SumXMY2(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16687, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def Syd(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16527, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3, Arg4)

	def TBillEq(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16822, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def TBillPrice(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16823, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def TBillYield(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16824, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def TDist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16685, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3)

	def TInv(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16716, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def TTest(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16700, LCID, 1, (5, 0), ((12, 1), (12, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3, Arg4)

	def T_Dist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16896, LCID, 1, (5, 0), ((5, 1), (5, 1), (11, 1)),Arg1
			, Arg2, Arg3)

	def T_Dist_2T(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16897, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def T_Dist_RT(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16898, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def T_Inv(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16899, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def T_Inv_2T(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16900, LCID, 1, (5, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def T_Test(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16925, LCID, 1, (5, 0), ((12, 1), (12, 1), (5, 1), (5, 1)),Arg1
			, Arg2, Arg3, Arg4)

	def Tanh(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16615, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Text(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16432, LCID, 1, (8, 0), ((12, 1), (8, 1)),Arg1
			, Arg2)

	def TextJoin(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16989, LCID, 1, (8, 0), ((16392, 1), (11, 1), (16392, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29)

	def ThaiDayOfWeek(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16753, LCID, 1, (8, 0), ((5, 1),),Arg1
			)

	def ThaiDigit(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16754, LCID, 1, (8, 0), ((8, 1),),Arg1
			)

	def ThaiMonthOfYear(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16755, LCID, 1, (8, 0), ((5, 1),),Arg1
			)

	def ThaiNumSound(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16756, LCID, 1, (8, 0), ((5, 1),),Arg1
			)

	def ThaiNumString(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16757, LCID, 1, (8, 0), ((5, 1),),Arg1
			)

	def ThaiStringLength(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16758, LCID, 1, (5, 0), ((8, 1),),Arg1
			)

	def ThaiYear(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16762, LCID, 1, (5, 0), ((5, 1),),Arg1
			)

	def Transpose(self, Arg1=defaultNamedNotOptArg):
		return self._ApplyTypes_(16467, 1, (12, 0), ((12, 1),), 'Transpose', None,Arg1
			)

	def Trend(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg):
		return self._ApplyTypes_(16434, 1, (12, 0), ((12, 1), (12, 17), (12, 17), (12, 17)), 'Trend', None,Arg1
			, Arg2, Arg3, Arg4)

	def Trim(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16502, LCID, 1, (8, 0), ((8, 1),),Arg1
			)

	def TrimMean(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16715, LCID, 1, (5, 0), ((12, 1), (5, 1)),Arg1
			, Arg2)

	def USDollar(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16588, LCID, 1, (8, 0), ((5, 1), (5, 1)),Arg1
			, Arg2)

	def Unichar(self, Arg1=defaultNamedNotOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(16964, LCID, 1, (8, 0), ((5, 1),),Arg1
			)

	def Unicode(self, Arg1=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16965, LCID, 1, (5, 0), ((8, 1),),Arg1
			)

	def Unique(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg):
		return self._ApplyTypes_(17000, 1, (12, 0), ((12, 1), (12, 17), (12, 17)), 'Unique', None,Arg1
			, Arg2, Arg3)

	def VLookup(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg):
		return self._ApplyTypes_(16486, 1, (12, 0), ((12, 1), (12, 1), (12, 1), (12, 17)), 'VLookup', None,Arg1
			, Arg2, Arg3, Arg4)

	def ValueToText(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(17031, LCID, 1, (8, 0), ((12, 1), (12, 17)),Arg1
			, Arg2)

	def Var(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16430, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def VarP(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16578, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Var_P(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16902, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Var_S(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16901, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Vdb(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedNotOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16606, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7)

	def WebService(self, Arg1=defaultNamedNotOptArg):
		return self._ApplyTypes_(16980, 1, (12, 0), ((8, 1),), 'WebService', None,Arg1
			)

	def WeekNum(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16849, LCID, 1, (5, 0), ((12, 1), (12, 17)),Arg1
			, Arg2)

	def Weekday(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16454, LCID, 1, (5, 0), ((12, 1), (12, 17)),Arg1
			, Arg2)

	def Weibull(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16686, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (11, 1)),Arg1
			, Arg2, Arg3, Arg4)

	def Weibull_Dist(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16903, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (11, 1)),Arg1
			, Arg2, Arg3, Arg4)

	def WorkDay(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16855, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def WorkDay_Intl(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16905, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4)

	def XLookup(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg):
		return self._ApplyTypes_(17013, 1, (12, 0), ((12, 1), (12, 1), (12, 1), (12, 17), (12, 17), (12, 17)), 'XLookup', None,Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			)

	def XMatch(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(17012, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4)

	def Xirr(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16813, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def Xnpv(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(16814, LCID, 1, (5, 0), ((12, 1), (12, 1)),Arg1
			, Arg2)

	def Xor(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16953, LCID, 1, (11, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def YearFrac(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16835, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def YieldDisc(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16821, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5)

	def YieldMat(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedNotOptArg, Arg4=defaultNamedNotOptArg
			, Arg5=defaultNamedNotOptArg, Arg6=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16816, LCID, 1, (5, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (12, 1), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			)

	def ZTest(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16708, LCID, 1, (5, 0), ((12, 1), (5, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def Z_Test(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16926, LCID, 1, (5, 0), ((12, 1), (5, 1), (12, 17)),Arg1
			, Arg2, Arg3)

	def _WSFunction(self, Arg1=defaultNamedOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._ApplyTypes_(169, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), '_WSFunction', None,Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() method - allow len(ob) to provide this
	def __len__(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(16384, LCID, 1, (5, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class WorksheetView(DispatchBaseClass):
	CLSID = IID('{00024487-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DisplayFormulas": (644, 2, (11, 0), (), "DisplayFormulas", None),
		"DisplayGridlines": (645, 2, (11, 0), (), "DisplayGridlines", None),
		"DisplayHeadings": (646, 2, (11, 0), (), "DisplayHeadings", None),
		"DisplayOutline": (647, 2, (11, 0), (), "DisplayOutline", None),
		"DisplayZeros": (649, 2, (11, 0), (), "DisplayZeros", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Sheet": (751, 2, (9, 0), (), "Sheet", None),
	}
	_prop_map_put_ = {
		"DisplayFormulas": ((644, LCID, 4, 0),()),
		"DisplayGridlines": ((645, LCID, 4, 0),()),
		"DisplayHeadings": ((646, LCID, 4, 0),()),
		"DisplayOutline": ((647, LCID, 4, 0),()),
		"DisplayZeros": ((649, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class Worksheets(DispatchBaseClass):
	CLSID = IID('{000208B1-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Add(self, Before=defaultNamedOptArg, After=defaultNamedOptArg, Count=defaultNamedOptArg, Type=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17), (12, 17)),Before
			, After, Count, Type)
		if ret is not None:
			ret = Dispatch(ret, 'Add', None)
		return ret

	def Add2(self, Before=defaultNamedOptArg, After=defaultNamedOptArg, Count=defaultNamedOptArg, NewLayout=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3054, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17), (12, 17)),Before
			, After, Count, NewLayout)
		if ret is not None:
			ret = Dispatch(ret, 'Add2', None)
		return ret

	def Copy(self, Before=defaultNamedOptArg, After=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(551, LCID, 1, (24, 0), ((12, 17), (12, 17)),Before
			, After)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def FillAcrossSheets(self, Range=defaultNamedNotOptArg, Type=-4104):
		return self._oleobj_.InvokeTypes(469, LCID, 1, (24, 0), ((9, 1), (3, 49)),Range
			, Type)

	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Move(self, Before=defaultNamedOptArg, After=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(637, LCID, 1, (24, 0), ((12, 17), (12, 17)),Before
			, After)

	def PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg, IgnorePrintAreas=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2361, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName, IgnorePrintAreas)

	def PrintPreview(self, EnableChanges=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(281, LCID, 1, (24, 0), ((12, 17),),EnableChanges
			)

	def Select(self, Replace=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(235, LCID, 1, (24, 0), ((12, 17),),Replace
			)

	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', None)
		return ret

	def _PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1772, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName)

	def _PrintOut_(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(905, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'HPageBreaks' returns object of type 'HPageBreaks'
		"HPageBreaks": (1418, 2, (9, 0), (), "HPageBreaks", '{00024404-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		# Method 'VPageBreaks' returns object of type 'VPageBreaks'
		"VPageBreaks": (1419, 2, (9, 0), (), "VPageBreaks", '{00024405-0000-0000-C000-000000000046}'),
		"Visible": (558, 2, (12, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Visible": ((558, LCID, 4, 0),()),
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', None)
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class XPath(DispatchBaseClass):
	CLSID = IID('{0002447E-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Clear(self):
		return self._oleobj_.InvokeTypes(111, LCID, 1, (24, 0), (),)

	def SetValue(self, Map=defaultNamedNotOptArg, XPath=defaultNamedNotOptArg, SelectionNamespace=defaultNamedOptArg, Repeating=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2358, LCID, 1, (24, 0), ((9, 1), (8, 1), (12, 17), (12, 17)),Map
			, XPath, SelectionNamespace, Repeating)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Map' returns object of type 'XmlMap'
		"Map": (2262, 2, (9, 0), (), "Map", '{0002447B-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Repeating": (2360, 2, (11, 0), (), "Repeating", None),
		"Value": (6, 2, (8, 0), (), "Value", None),
		"_Default": (0, 2, (8, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (8, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class XmlDataBinding(DispatchBaseClass):
	CLSID = IID('{00024478-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def ClearSettings(self):
		return self._oleobj_.InvokeTypes(2330, LCID, 1, (24, 0), (),)

	def LoadSettings(self, Url=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2329, LCID, 1, (24, 0), ((8, 1),),Url
			)

	def Refresh(self):
		return self._oleobj_.InvokeTypes(1417, LCID, 1, (3, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"SourceUrl": (2331, 2, (8, 0), (), "SourceUrl", None),
		"_Default": (0, 2, (8, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class XmlMap(DispatchBaseClass):
	CLSID = IID('{0002447B-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def Export(self, Url=defaultNamedNotOptArg, Overwrite=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1414, LCID, 1, (3, 0), ((8, 1), (12, 17)),Url
			, Overwrite)

	def ExportXml(self, Data=pythoncom.Missing):
		return self._ApplyTypes_(2346, 1, (3, 0), ((16392, 2),), 'ExportXml', None,Data
			)

	def Import(self, Url=defaultNamedNotOptArg, Overwrite=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(917, LCID, 1, (3, 0), ((8, 1), (12, 17)),Url
			, Overwrite)

	def ImportXml(self, XmlData=defaultNamedNotOptArg, Overwrite=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2344, LCID, 1, (3, 0), ((8, 1), (12, 17)),XmlData
			, Overwrite)

	_prop_map_get_ = {
		"AdjustColumnWidth": (1868, 2, (11, 0), (), "AdjustColumnWidth", None),
		"AppendOnImport": (2339, 2, (11, 0), (), "AppendOnImport", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'DataBinding' returns object of type 'XmlDataBinding'
		"DataBinding": (2343, 2, (9, 0), (), "DataBinding", '{00024478-0000-0000-C000-000000000046}'),
		"IsExportable": (2334, 2, (11, 0), (), "IsExportable", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PreserveColumnFilter": (2337, 2, (11, 0), (), "PreserveColumnFilter", None),
		"PreserveNumberFormatting": (2338, 2, (11, 0), (), "PreserveNumberFormatting", None),
		"RootElementName": (2340, 2, (8, 0), (), "RootElementName", None),
		# Method 'RootElementNamespace' returns object of type 'XmlNamespace'
		"RootElementNamespace": (2341, 2, (9, 0), (), "RootElementNamespace", '{00024476-0000-0000-C000-000000000046}'),
		"SaveDataSourceDefinition": (2336, 2, (11, 0), (), "SaveDataSourceDefinition", None),
		# Method 'Schemas' returns object of type 'XmlSchemas'
		"Schemas": (2342, 2, (9, 0), (), "Schemas", '{0002447A-0000-0000-C000-000000000046}'),
		"ShowImportExportValidationErrors": (2335, 2, (11, 0), (), "ShowImportExportValidationErrors", None),
		# Method 'WorkbookConnection' returns object of type 'WorkbookConnection'
		"WorkbookConnection": (2544, 2, (9, 0), (), "WorkbookConnection", '{00024485-0000-0000-C000-000000000046}'),
		"_Default": (0, 2, (8, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"AdjustColumnWidth": ((1868, LCID, 4, 0),()),
		"AppendOnImport": ((2339, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"PreserveColumnFilter": ((2337, LCID, 4, 0),()),
		"PreserveNumberFormatting": ((2338, LCID, 4, 0),()),
		"SaveDataSourceDefinition": ((2336, LCID, 4, 0),()),
		"ShowImportExportValidationErrors": ((2335, LCID, 4, 0),()),
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class XmlMaps(DispatchBaseClass):
	CLSID = IID('{0002447C-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type XmlMap
	def Add(self, Schema=defaultNamedNotOptArg, RootElementName=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((8, 1), (12, 17)),Schema
			, RootElementName)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0002447B-0000-0000-C000-000000000046}')
		return ret

	# Result is of type XmlMap
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0002447B-0000-0000-C000-000000000046}')
		return ret

	# Result is of type XmlMap
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{0002447B-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0002447B-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0002447B-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{0002447B-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class XmlNamespace(DispatchBaseClass):
	CLSID = IID('{00024476-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Prefix": (2326, 2, (8, 0), (), "Prefix", None),
		"Uri": (2325, 2, (8, 0), (), "Uri", None),
		"_Default": (0, 2, (8, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is '_Default'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "_Default", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class XmlNamespaces(DispatchBaseClass):
	CLSID = IID('{00024477-0000-0000-C000-000000000046}')
	coclass_clsid = None

	def InstallManifest(self, Path=defaultNamedNotOptArg, InstallForAllUsers=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2327, LCID, 1, (24, 0), ((8, 1), (12, 17)),Path
			, InstallForAllUsers)

	# Result is of type XmlNamespace
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024476-0000-0000-C000-000000000046}')
		return ret

	# Result is of type XmlNamespace
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024476-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Value": (6, 2, (8, 0), (), "Value", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024476-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024476-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00024476-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class XmlSchema(DispatchBaseClass):
	CLSID = IID('{00024479-0000-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		# Method 'Namespace' returns object of type 'XmlNamespace'
		"Namespace": (2332, 2, (9, 0), (), "Namespace", '{00024476-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"XML": (2333, 2, (8, 0), (), "XML", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class XmlSchemas(DispatchBaseClass):
	CLSID = IID('{0002447A-0000-0000-C000-000000000046}')
	coclass_clsid = None

	# Result is of type XmlSchema
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(170, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{00024479-0000-0000-C000-000000000046}')
		return ret

	# Result is of type XmlSchema
	# The method _Default is actually a property, but must be used as a method to correctly pass the arguments
	def _Default(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '_Default', '{00024479-0000-0000-C000-000000000046}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Count": (118, 2, (3, 0), (), "Count", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is '_Default'
	def __call__(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{00024479-0000-0000-C000-000000000046}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{00024479-0000-0000-C000-000000000046}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(170, LCID, 2, 1, key)), "Item", '{00024479-0000-0000-C000-000000000046}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(118, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

class _Application(DispatchBaseClass):
	CLSID = IID('{000208D5-0000-0000-C000-000000000046}')
	coclass_clsid = IID('{00024500-0000-0000-C000-000000000046}')

	def ActivateMicrosoftApp(self, Index=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1095, LCID, 1, (24, 0), ((3, 1),),Index
			)

	def AddChartAutoFormat(self, Chart=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Description=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(216, LCID, 1, (24, 0), ((12, 1), (8, 1), (12, 17)),Chart
			, Name, Description)

	def AddCustomList(self, ListArray=defaultNamedNotOptArg, ByRow=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(780, LCID, 1, (24, 0), ((12, 1), (12, 17)),ListArray
			, ByRow)

	def Calculate(self):
		return self._oleobj_.InvokeTypes(279, LCID, 1, (24, 0), (),)

	def CalculateFull(self):
		return self._oleobj_.InvokeTypes(1805, LCID, 1, (24, 0), (),)

	def CalculateFullRebuild(self):
		return self._oleobj_.InvokeTypes(1945, LCID, 1, (24, 0), (),)

	def CalculateUntilAsyncQueriesDone(self):
		return self._oleobj_.InvokeTypes(2387, LCID, 1, (24, 0), (),)

	def CentimetersToPoints(self, Centimeters=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1086, LCID, 1, (5, 0), ((5, 1),),Centimeters
			)

	def CheckAbort(self, KeepAbort=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1952, LCID, 1, (24, 0), ((12, 17),),KeepAbort
			)

	def CheckSpelling(self, Word=defaultNamedNotOptArg, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(505, LCID, 1, (11, 0), ((8, 1), (12, 17), (12, 17)),Word
			, CustomDictionary, IgnoreUppercase)

	def ConvertFormula(self, Formula=defaultNamedNotOptArg, FromReferenceStyle=defaultNamedNotOptArg, ToReferenceStyle=defaultNamedOptArg, ToAbsolute=defaultNamedOptArg
			, RelativeTo=defaultNamedOptArg):
		return self._ApplyTypes_(325, 1, (12, 0), ((12, 1), (3, 1), (12, 17), (12, 17), (12, 17)), 'ConvertFormula', None,Formula
			, FromReferenceStyle, ToReferenceStyle, ToAbsolute, RelativeTo)

	def DDEExecute(self, Channel=defaultNamedNotOptArg, String=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(333, LCID, 1, (24, 0), ((3, 1), (8, 1)),Channel
			, String)

	def DDEInitiate(self, App=defaultNamedNotOptArg, Topic=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(334, LCID, 1, (3, 0), ((8, 1), (8, 1)),App
			, Topic)

	def DDEPoke(self, Channel=defaultNamedNotOptArg, Item=defaultNamedNotOptArg, Data=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(335, LCID, 1, (24, 0), ((3, 1), (12, 1), (12, 1)),Channel
			, Item, Data)

	def DDERequest(self, Channel=defaultNamedNotOptArg, Item=defaultNamedNotOptArg):
		return self._ApplyTypes_(336, 1, (12, 0), ((3, 1), (8, 1)), 'DDERequest', None,Channel
			, Item)

	def DDETerminate(self, Channel=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(337, LCID, 1, (24, 0), ((3, 1),),Channel
			)

	def DeleteChartAutoFormat(self, Name=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(217, LCID, 1, (24, 0), ((8, 1),),Name
			)

	def DeleteCustomList(self, ListNum=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(783, LCID, 1, (24, 0), ((3, 1),),ListNum
			)

	def DisplayXMLSourcePane(self, XmlMap=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2252, LCID, 1, (24, 0), ((12, 17),),XmlMap
			)

	def DoubleClick(self):
		return self._oleobj_.InvokeTypes(349, LCID, 1, (24, 0), (),)

	def Dummy1(self, Arg1=defaultNamedOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg):
		return self._ApplyTypes_(1782, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17)), 'Dummy1', None,Arg1
			, Arg2, Arg3, Arg4)

	def Dummy10(self, arg=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1791, LCID, 1, (11, 0), ((12, 17),),arg
			)

	def Dummy11(self):
		return self._oleobj_.InvokeTypes(1792, LCID, 1, (24, 0), (),)

	def Dummy12(self, p1=defaultNamedNotOptArg, p2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1803, LCID, 1, (24, 0), ((9, 1), (9, 1)),p1
			, p2)

	def Dummy13(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._ApplyTypes_(1933, 1, (12, 0), ((12, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'Dummy13', None,Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def Dummy14(self):
		return self._oleobj_.InvokeTypes(1944, LCID, 1, (24, 0), (),)

	def Dummy2(self, Arg1=defaultNamedOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg):
		return self._ApplyTypes_(1783, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'Dummy2', None,Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8)

	def Dummy20(self, grfCompareFunctions=defaultNamedNotOptArg):
		return self._ApplyTypes_(2373, 1, (12, 0), ((3, 1),), 'Dummy20', None,grfCompareFunctions
			)

	def Dummy3(self):
		return self._ApplyTypes_(1784, 1, (12, 0), (), 'Dummy3', None,)

	def Dummy4(self, Arg1=defaultNamedOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg):
		return self._ApplyTypes_(1785, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'Dummy4', None,Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15)

	def Dummy5(self, Arg1=defaultNamedOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg):
		return self._ApplyTypes_(1786, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'Dummy5', None,Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13)

	def Dummy6(self):
		return self._ApplyTypes_(1787, 1, (12, 0), (), 'Dummy6', None,)

	def Dummy7(self):
		return self._ApplyTypes_(1788, 1, (12, 0), (), 'Dummy7', None,)

	def Dummy8(self, Arg1=defaultNamedOptArg):
		return self._ApplyTypes_(1789, 1, (12, 0), ((12, 17),), 'Dummy8', None,Arg1
			)

	def Dummy9(self):
		return self._ApplyTypes_(1790, 1, (12, 0), (), 'Dummy9', None,)

	def Evaluate(self, Name=defaultNamedNotOptArg):
		return self._ApplyTypes_(1, 1, (12, 0), ((12, 1),), 'Evaluate', None,Name
			)

	def ExecuteExcel4Macro(self, String=defaultNamedNotOptArg):
		return self._ApplyTypes_(350, 1, (12, 0), ((8, 1),), 'ExecuteExcel4Macro', None,String
			)

	# Result is of type FileDialog
	# The method FileDialog is actually a property, but must be used as a method to correctly pass the arguments
	def FileDialog(self, fileDialogType=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(1942, LCID, 2, (9, 0), ((3, 1),),fileDialogType
			)
		if ret is not None:
			ret = Dispatch(ret, 'FileDialog', '{000C0362-0000-0000-C000-000000000046}')
		return ret

	def FindFile(self):
		return self._oleobj_.InvokeTypes(1771, LCID, 1, (11, 0), (),)

	# The method GetCaller is actually a property, but must be used as a method to correctly pass the arguments
	def GetCaller(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(317, 2, (12, 0), ((12, 17),), 'GetCaller', None,Index
			)

	# The method GetClipboardFormats is actually a property, but must be used as a method to correctly pass the arguments
	def GetClipboardFormats(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(321, 2, (12, 0), ((12, 17),), 'GetClipboardFormats', None,Index
			)

	def GetCustomListContents(self, ListNum=defaultNamedNotOptArg):
		return self._ApplyTypes_(786, 1, (12, 0), ((3, 1),), 'GetCustomListContents', None,ListNum
			)

	def GetCustomListNum(self, ListArray=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(785, LCID, 1, (3, 0), ((12, 1),),ListArray
			)

	# The method GetFileConverters is actually a property, but must be used as a method to correctly pass the arguments
	def GetFileConverters(self, Index1=defaultNamedOptArg, Index2=defaultNamedOptArg):
		return self._ApplyTypes_(931, 2, (12, 0), ((12, 17), (12, 17)), 'GetFileConverters', None,Index1
			, Index2)

	# The method GetInternational is actually a property, but must be used as a method to correctly pass the arguments
	def GetInternational(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(362, 2, (12, 0), ((12, 17),), 'GetInternational', None,Index
			)

	def GetOpenFilename(self, FileFilter=defaultNamedOptArg, FilterIndex=defaultNamedOptArg, Title=defaultNamedOptArg, ButtonText=defaultNamedOptArg
			, MultiSelect=defaultNamedOptArg):
		return self._ApplyTypes_(1075, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'GetOpenFilename', None,FileFilter
			, FilterIndex, Title, ButtonText, MultiSelect)

	def GetPhonetic(self, Text=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(1795, LCID, 1, (8, 0), ((12, 17),),Text
			)

	# The method GetPreviousSelections is actually a property, but must be used as a method to correctly pass the arguments
	def GetPreviousSelections(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(378, 2, (12, 0), ((12, 17),), 'GetPreviousSelections', None,Index
			)

	# The method GetRegisteredFunctions is actually a property, but must be used as a method to correctly pass the arguments
	def GetRegisteredFunctions(self, Index1=defaultNamedOptArg, Index2=defaultNamedOptArg):
		return self._ApplyTypes_(775, 2, (12, 0), ((12, 17), (12, 17)), 'GetRegisteredFunctions', None,Index1
			, Index2)

	def GetSaveAsFilename(self, InitialFilename=defaultNamedOptArg, FileFilter=defaultNamedOptArg, FilterIndex=defaultNamedOptArg, Title=defaultNamedOptArg
			, ButtonText=defaultNamedOptArg):
		return self._ApplyTypes_(1076, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'GetSaveAsFilename', None,InitialFilename
			, FileFilter, FilterIndex, Title, ButtonText)

	def Goto(self, Reference=defaultNamedOptArg, Scroll=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(475, LCID, 1, (24, 0), ((12, 17), (12, 17)),Reference
			, Scroll)

	def Help(self, HelpFile=defaultNamedOptArg, HelpContextID=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(354, LCID, 1, (24, 0), ((12, 17), (12, 17)),HelpFile
			, HelpContextID)

	def InchesToPoints(self, Inches=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1087, LCID, 1, (5, 0), ((5, 1),),Inches
			)

	def InputBox(self, Prompt=defaultNamedNotOptArg, Title=defaultNamedOptArg, Default=defaultNamedOptArg, Left=defaultNamedOptArg
			, Top=defaultNamedOptArg, HelpFile=defaultNamedOptArg, HelpContextID=defaultNamedOptArg, Type=defaultNamedOptArg):
		return self._ApplyTypes_(357, 1, (12, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'InputBox', None,Prompt
			, Title, Default, Left, Top, HelpFile
			, HelpContextID, Type)

	# Result is of type Range
	def Intersect(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(766, LCID, 1, (9, 0), ((9, 1), (9, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)
		if ret is not None:
			ret = Dispatch(ret, 'Intersect', '{00020846-0000-0000-C000-000000000046}')
		return ret

	def MacroOptions(self, Macro=defaultNamedOptArg, Description=defaultNamedOptArg, HasMenu=defaultNamedOptArg, MenuText=defaultNamedOptArg
			, HasShortcutKey=defaultNamedOptArg, ShortcutKey=defaultNamedOptArg, Category=defaultNamedOptArg, StatusBar=defaultNamedOptArg, HelpContextID=defaultNamedOptArg
			, HelpFile=defaultNamedOptArg, ArgumentDescriptions=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2770, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Macro
			, Description, HasMenu, MenuText, HasShortcutKey, ShortcutKey
			, Category, StatusBar, HelpContextID, HelpFile, ArgumentDescriptions
			)

	def MailLogoff(self):
		return self._oleobj_.InvokeTypes(945, LCID, 1, (24, 0), (),)

	def MailLogon(self, Name=defaultNamedOptArg, Password=defaultNamedOptArg, DownloadNewMail=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(943, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17)),Name
			, Password, DownloadNewMail)

	# Result is of type Workbook
	def NextLetter(self):
		ret = self._oleobj_.InvokeTypes(972, LCID, 1, (13, 0), (),)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, 'NextLetter', '{00020819-0000-0000-C000-000000000046}')
		return ret

	def OnKey(self, Key=defaultNamedNotOptArg, Procedure=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(626, LCID, 1, (24, 0), ((8, 1), (12, 17)),Key
			, Procedure)

	def OnRepeat(self, Text=defaultNamedNotOptArg, Procedure=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(769, LCID, 1, (24, 0), ((8, 1), (8, 1)),Text
			, Procedure)

	def OnTime(self, EarliestTime=defaultNamedNotOptArg, Procedure=defaultNamedNotOptArg, LatestTime=defaultNamedOptArg, Schedule=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(624, LCID, 1, (24, 0), ((12, 1), (8, 1), (12, 17), (12, 17)),EarliestTime
			, Procedure, LatestTime, Schedule)

	def OnUndo(self, Text=defaultNamedNotOptArg, Procedure=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(770, LCID, 1, (24, 0), ((8, 1), (8, 1)),Text
			, Procedure)

	def Quit(self):
		return self._oleobj_.InvokeTypes(302, LCID, 1, (24, 0), (),)

	# Result is of type Range
	# The method Range is actually a property, but must be used as a method to correctly pass the arguments
	def Range(self, Cell1=defaultNamedNotOptArg, Cell2=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(197, LCID, 2, (9, 0), ((12, 1), (12, 17)),Cell1
			, Cell2)
		if ret is not None:
			ret = Dispatch(ret, 'Range', '{00020846-0000-0000-C000-000000000046}')
		return ret

	def RecordMacro(self, BasicCode=defaultNamedOptArg, XlmCode=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(773, LCID, 1, (24, 0), ((12, 17), (12, 17)),BasicCode
			, XlmCode)

	def RegisterXLL(self, Filename=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(30, LCID, 1, (11, 0), ((8, 1),),Filename
			)

	def Repeat(self):
		return self._oleobj_.InvokeTypes(301, LCID, 1, (24, 0), (),)

	def ResetTipWizard(self):
		return self._oleobj_.InvokeTypes(928, LCID, 1, (24, 0), (),)

	def Run(self, Macro=defaultNamedOptArg, Arg1=defaultNamedOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg
			, Arg4=defaultNamedOptArg, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg
			, Arg9=defaultNamedOptArg, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg
			, Arg14=defaultNamedOptArg, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg
			, Arg19=defaultNamedOptArg, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg
			, Arg24=defaultNamedOptArg, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg
			, Arg29=defaultNamedOptArg, Arg30=defaultNamedOptArg):
		return self._ApplyTypes_(259, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'Run', None,Macro
			, Arg1, Arg2, Arg3, Arg4, Arg5
			, Arg6, Arg7, Arg8, Arg9, Arg10
			, Arg11, Arg12, Arg13, Arg14, Arg15
			, Arg16, Arg17, Arg18, Arg19, Arg20
			, Arg21, Arg22, Arg23, Arg24, Arg25
			, Arg26, Arg27, Arg28, Arg29, Arg30
			)

	def Save(self, Filename=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(283, LCID, 1, (24, 0), ((12, 17),),Filename
			)

	def SaveWorkspace(self, Filename=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(212, LCID, 1, (24, 0), ((12, 17),),Filename
			)

	def SendKeys(self, Keys=defaultNamedNotOptArg, Wait=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(383, LCID, 1, (24, 0), ((12, 1), (12, 17)),Keys
			, Wait)

	def SetDefaultChart(self, FormatName=defaultNamedOptArg, Gallery=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(219, LCID, 1, (24, 0), ((12, 17), (12, 17)),FormatName
			, Gallery)

	def SharePointVersion(self, bstrUrl=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2392, LCID, 1, (3, 0), ((8, 1),),bstrUrl
			)

	# Result is of type Menu
	# The method ShortcutMenus is actually a property, but must be used as a method to correctly pass the arguments
	def ShortcutMenus(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(776, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ShortcutMenus', '{00020866-0000-0000-C000-000000000046}')
		return ret

	def Support(self, Object=defaultNamedNotOptArg, ID=defaultNamedNotOptArg, arg=defaultNamedOptArg):
		return self._ApplyTypes_(2255, 1, (12, 0), ((9, 1), (3, 1), (12, 17)), 'Support', None,Object
			, ID, arg)

	def Undo(self):
		return self._oleobj_.InvokeTypes(303, LCID, 1, (24, 0), (),)

	# Result is of type Range
	def Union(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(779, LCID, 1, (9, 0), ((9, 1), (9, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)
		if ret is not None:
			ret = Dispatch(ret, 'Union', '{00020846-0000-0000-C000-000000000046}')
		return ret

	def Volatile(self, Volatile=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(788, LCID, 1, (24, 0), ((12, 17),),Volatile
			)

	def Wait(self, Time=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1770, LCID, 1, (11, 0), ((12, 1),),Time
			)

	def _Evaluate(self, Name=defaultNamedNotOptArg):
		return self._ApplyTypes_(-5, 1, (12, 0), ((12, 1),), '_Evaluate', None,Name
			)

	def _FindFile(self):
		return self._oleobj_.InvokeTypes(1068, LCID, 1, (24, 0), (),)

	def _MacroOptions(self, Macro=defaultNamedOptArg, Description=defaultNamedOptArg, HasMenu=defaultNamedOptArg, MenuText=defaultNamedOptArg
			, HasShortcutKey=defaultNamedOptArg, ShortcutKey=defaultNamedOptArg, Category=defaultNamedOptArg, StatusBar=defaultNamedOptArg, HelpContextID=defaultNamedOptArg
			, HelpFile=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1135, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Macro
			, Description, HasMenu, MenuText, HasShortcutKey, ShortcutKey
			, Category, StatusBar, HelpContextID, HelpFile)

	def _Run2(self, Macro=defaultNamedOptArg, Arg1=defaultNamedOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg
			, Arg4=defaultNamedOptArg, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg
			, Arg9=defaultNamedOptArg, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg
			, Arg14=defaultNamedOptArg, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg
			, Arg19=defaultNamedOptArg, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg
			, Arg24=defaultNamedOptArg, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg
			, Arg29=defaultNamedOptArg, Arg30=defaultNamedOptArg):
		return self._ApplyTypes_(806, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), '_Run2', None,Macro
			, Arg1, Arg2, Arg3, Arg4, Arg5
			, Arg6, Arg7, Arg8, Arg9, Arg10
			, Arg11, Arg12, Arg13, Arg14, Arg15
			, Arg16, Arg17, Arg18, Arg19, Arg20
			, Arg21, Arg22, Arg23, Arg24, Arg25
			, Arg26, Arg27, Arg28, Arg29, Arg30
			)

	def _WSFunction(self, Arg1=defaultNamedOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		return self._ApplyTypes_(169, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), '_WSFunction', None,Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)

	def _Wait(self, Time=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(393, LCID, 1, (24, 0), ((12, 1),),Time
			)

	_prop_map_get_ = {
		# Method 'ActiveCell' returns object of type 'Range'
		"ActiveCell": (305, 2, (9, 0), (), "ActiveCell", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'ActiveChart' returns object of type 'Chart'
		"ActiveChart": (183, 2, (13, 0), (), "ActiveChart", '{00020821-0000-0000-C000-000000000046}'),
		# Method 'ActiveDialog' returns object of type 'DialogSheet'
		"ActiveDialog": (815, 2, (9, 0), (), "ActiveDialog", '{000208AF-0000-0000-C000-000000000046}'),
		"ActiveEncryptionSession": (2394, 2, (3, 0), (), "ActiveEncryptionSession", None),
		# Method 'ActiveMenuBar' returns object of type 'MenuBar'
		"ActiveMenuBar": (758, 2, (9, 0), (), "ActiveMenuBar", '{00020864-0000-0000-C000-000000000046}'),
		"ActivePrinter": (306, 2, (8, 0), (), "ActivePrinter", None),
		# Method 'ActiveProtectedViewWindow' returns object of type 'ProtectedViewWindow'
		"ActiveProtectedViewWindow": (2784, 2, (9, 0), (), "ActiveProtectedViewWindow", '{000244CD-0000-0000-C000-000000000046}'),
		"ActiveSheet": (307, 2, (9, 0), (), "ActiveSheet", None),
		# Method 'ActiveWindow' returns object of type 'Window'
		"ActiveWindow": (759, 2, (9, 0), (), "ActiveWindow", '{00020893-0000-0000-C000-000000000046}'),
		# Method 'ActiveWorkbook' returns object of type 'Workbook'
		"ActiveWorkbook": (308, 2, (13, 0), (), "ActiveWorkbook", '{00020819-0000-0000-C000-000000000046}'),
		# Method 'AddIns' returns object of type 'AddIns'
		"AddIns": (549, 2, (9, 0), (), "AddIns", '{00020858-0000-0000-C000-000000000046}'),
		# Method 'AddIns2' returns object of type 'AddIns2'
		"AddIns2": (2775, 2, (9, 0), (), "AddIns2", '{000244B5-0000-0000-C000-000000000046}'),
		"AlertBeforeOverwriting": (930, 2, (11, 0), (), "AlertBeforeOverwriting", None),
		"AltStartupPath": (313, 2, (8, 0), (), "AltStartupPath", None),
		"AlwaysUseClearType": (2381, 2, (11, 0), (), "AlwaysUseClearType", None),
		# Method 'AnswerWizard' returns object of type 'AnswerWizard'
		"AnswerWizard": (1804, 2, (9, 0), (), "AnswerWizard", '{000C0360-0000-0000-C000-000000000046}'),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"ArbitraryXMLSupportAvailable": (2254, 2, (11, 0), (), "ArbitraryXMLSupportAvailable", None),
		"AskToUpdateLinks": (992, 2, (11, 0), (), "AskToUpdateLinks", None),
		# Method 'Assistance' returns object of type 'IAssistance'
		"Assistance": (2386, 2, (9, 0), (), "Assistance", '{4291224C-DEFE-485B-8E69-6CF8AA85CB76}'),
		# Method 'Assistant' returns object of type 'Assistant'
		"Assistant": (1438, 2, (9, 0), (), "Assistant", '{000C0322-0000-0000-C000-000000000046}'),
		# Method 'AutoCorrect' returns object of type 'AutoCorrect'
		"AutoCorrect": (1145, 2, (9, 0), (), "AutoCorrect", '{000208D4-0000-0000-C000-000000000046}'),
		"AutoFormatAsYouTypeReplaceHyperlinks": (1955, 2, (11, 0), (), "AutoFormatAsYouTypeReplaceHyperlinks", None),
		"AutoPercentEntry": (1800, 2, (11, 0), (), "AutoPercentEntry", None),
		# Method 'AutoRecover' returns object of type 'AutoRecover'
		"AutoRecover": (1949, 2, (9, 0), (), "AutoRecover", '{0002445A-0000-0000-C000-000000000046}'),
		"AutomationSecurity": (1941, 2, (3, 0), (), "AutomationSecurity", None),
		"Build": (314, 2, (3, 0), (), "Build", None),
		# Method 'COMAddIns' returns object of type 'COMAddIns'
		"COMAddIns": (1796, 2, (9, 0), (), "COMAddIns", '{000C0339-0000-0000-C000-000000000046}'),
		"CSVDisplayNumberConversionWarning": (3315, 2, (11, 0), (), "CSVDisplayNumberConversionWarning", None),
		"CSVKeepColumnAsTextIfMultipleEntriesAreText": (3316, 2, (11, 0), (), "CSVKeepColumnAsTextIfMultipleEntriesAreText", None),
		"CalculateBeforeSave": (315, 2, (11, 0), (), "CalculateBeforeSave", None),
		"Calculation": (316, 2, (3, 0), (), "Calculation", None),
		"CalculationInterruptKey": (1938, 2, (3, 0), (), "CalculationInterruptKey", None),
		"CalculationState": (1937, 2, (3, 0), (), "CalculationState", None),
		"CalculationVersion": (1806, 2, (3, 0), (), "CalculationVersion", None),
		"Caller": (317, 2, (12, 0), ((12, 17),), "Caller", None),
		"CanPlaySounds": (318, 2, (11, 0), (), "CanPlaySounds", None),
		"CanRecordSounds": (319, 2, (11, 0), (), "CanRecordSounds", None),
		"Caption": (139, 2, (8, 0), (), "Caption", None),
		"CellDragAndDrop": (320, 2, (11, 0), (), "CellDragAndDrop", None),
		# Method 'Cells' returns object of type 'Range'
		"Cells": (238, 2, (9, 0), (), "Cells", '{00020846-0000-0000-C000-000000000046}'),
		"ChartDataPointTrack": (2998, 2, (11, 0), (), "ChartDataPointTrack", None),
		# Method 'Charts' returns object of type 'Sheets'
		"Charts": (121, 2, (9, 0), (), "Charts", '{000208D7-0000-0000-C000-000000000046}'),
		"ClipboardFormats": (321, 2, (12, 0), ((12, 17),), "ClipboardFormats", None),
		"ClusterConnector": (2779, 2, (8, 0), (), "ClusterConnector", None),
		"ColorButtons": (365, 2, (11, 0), (), "ColorButtons", None),
		# Method 'Columns' returns object of type 'Range'
		"Columns": (241, 2, (9, 0), (), "Columns", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'CommandBars' returns object of type 'CommandBars'
		"CommandBars": (1439, 2, (13, 0), (), "CommandBars", '{55F88893-7708-11D1-ACEB-006008961DA5}'),
		"CommandUnderlines": (323, 2, (3, 0), (), "CommandUnderlines", None),
		"ConstrainNumeric": (324, 2, (11, 0), (), "ConstrainNumeric", None),
		"ControlCharacters": (233, 2, (11, 0), (), "ControlCharacters", None),
		"ConvertNumbersWithECharacter": (3314, 2, (11, 0), (), "ConvertNumbersWithECharacter", None),
		"CopyObjectsWithCells": (991, 2, (11, 0), (), "CopyObjectsWithCells", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"Cursor": (1161, 2, (3, 0), (), "Cursor", None),
		"CursorMovement": (232, 2, (3, 0), (), "CursorMovement", None),
		"CustomListCount": (787, 2, (3, 0), (), "CustomListCount", None),
		"CutCopyMode": (330, 2, (3, 0), (), "CutCopyMode", None),
		"DDEAppReturnCode": (332, 2, (3, 0), (), "DDEAppReturnCode", None),
		"DataEntryMode": (331, 2, (3, 0), (), "DataEntryMode", None),
		# Method 'DataPrivacyOptions' returns object of type 'DataPrivacyOptions'
		"DataPrivacyOptions": (3317, 2, (9, 0), (), "DataPrivacyOptions", '{000C03D9-0000-0000-C000-000000000046}'),
		"DecimalSeparator": (1809, 2, (8, 0), (), "DecimalSeparator", None),
		"DefaultFilePath": (1038, 2, (8, 0), (), "DefaultFilePath", None),
		# Method 'DefaultPivotTableLayoutOptions' returns object of type 'DefaultPivotTableLayoutOptions'
		"DefaultPivotTableLayoutOptions": (3271, 2, (9, 0), (), "DefaultPivotTableLayoutOptions", '{000244FB-0000-0000-C000-000000000046}'),
		"DefaultSaveFormat": (1209, 2, (3, 0), (), "DefaultSaveFormat", None),
		"DefaultSheetDirection": (229, 2, (3, 0), (), "DefaultSheetDirection", None),
		# Method 'DefaultWebOptions' returns object of type 'DefaultWebOptions'
		"DefaultWebOptions": (1797, 2, (9, 0), (), "DefaultWebOptions", '{00024448-0000-0000-C000-000000000046}'),
		"DeferAsyncQueries": (2390, 2, (11, 0), (), "DeferAsyncQueries", None),
		# Method 'DialogSheets' returns object of type 'Sheets'
		"DialogSheets": (764, 2, (9, 0), (), "DialogSheets", '{000208D7-0000-0000-C000-000000000046}'),
		# Method 'Dialogs' returns object of type 'Dialogs'
		"Dialogs": (761, 2, (9, 0), (), "Dialogs", '{00020879-0000-0000-C000-000000000046}'),
		"DisplayAlerts": (343, 2, (11, 0), (), "DisplayAlerts", None),
		"DisplayClipboardWindow": (322, 2, (11, 0), (), "DisplayClipboardWindow", None),
		"DisplayCommentIndicator": (1196, 2, (3, 0), (), "DisplayCommentIndicator", None),
		"DisplayDocumentActionTaskPane": (2251, 2, (11, 0), (), "DisplayDocumentActionTaskPane", None),
		"DisplayDocumentInformationPanel": (2380, 2, (11, 0), (), "DisplayDocumentInformationPanel", None),
		"DisplayExcel4Menus": (927, 2, (11, 0), (), "DisplayExcel4Menus", None),
		"DisplayFormulaAutoComplete": (2384, 2, (11, 0), (), "DisplayFormulaAutoComplete", None),
		"DisplayFormulaBar": (344, 2, (11, 0), (), "DisplayFormulaBar", None),
		"DisplayFullScreen": (1061, 2, (11, 0), (), "DisplayFullScreen", None),
		"DisplayFunctionToolTips": (1940, 2, (11, 0), (), "DisplayFunctionToolTips", None),
		"DisplayInfoWindow": (1213, 2, (11, 0), (), "DisplayInfoWindow", None),
		"DisplayInsertOptions": (1947, 2, (11, 0), (), "DisplayInsertOptions", None),
		"DisplayNoteIndicator": (345, 2, (11, 0), (), "DisplayNoteIndicator", None),
		"DisplayPasteOptions": (1946, 2, (11, 0), (), "DisplayPasteOptions", None),
		"DisplayRecentFiles": (926, 2, (11, 0), (), "DisplayRecentFiles", None),
		"DisplayScrollBars": (346, 2, (11, 0), (), "DisplayScrollBars", None),
		"DisplayStatusBar": (347, 2, (11, 0), (), "DisplayStatusBar", None),
		"Dummy101": (1802, 2, (9, 0), (), "Dummy101", None),
		"Dummy22": (2781, 2, (11, 0), (), "Dummy22", None),
		"Dummy23": (2782, 2, (11, 0), (), "Dummy23", None),
		"EditDirectlyInCell": (929, 2, (11, 0), (), "EditDirectlyInCell", None),
		"EnableAnimations": (1180, 2, (11, 0), (), "EnableAnimations", None),
		"EnableAutoComplete": (1179, 2, (11, 0), (), "EnableAutoComplete", None),
		"EnableCancelKey": (1096, 2, (3, 0), (), "EnableCancelKey", None),
		"EnableCheckFileExtensions": (3158, 2, (11, 0), (), "EnableCheckFileExtensions", None),
		"EnableEvents": (1212, 2, (11, 0), (), "EnableEvents", None),
		"EnableLargeOperationAlert": (2388, 2, (11, 0), (), "EnableLargeOperationAlert", None),
		"EnableLivePreview": (2379, 2, (11, 0), (), "EnableLivePreview", None),
		"EnableMacroAnimations": (2997, 2, (11, 0), (), "EnableMacroAnimations", None),
		"EnableSound": (1197, 2, (11, 0), (), "EnableSound", None),
		"EnableTipWizard": (1064, 2, (11, 0), (), "EnableTipWizard", None),
		# Method 'ErrorCheckingOptions' returns object of type 'ErrorCheckingOptions'
		"ErrorCheckingOptions": (1954, 2, (9, 0), (), "ErrorCheckingOptions", '{0002445B-0000-0000-C000-000000000046}'),
		# Method 'Excel4IntlMacroSheets' returns object of type 'Sheets'
		"Excel4IntlMacroSheets": (581, 2, (9, 0), (), "Excel4IntlMacroSheets", '{000208D7-0000-0000-C000-000000000046}'),
		# Method 'Excel4MacroSheets' returns object of type 'Sheets'
		"Excel4MacroSheets": (579, 2, (9, 0), (), "Excel4MacroSheets", '{000208D7-0000-0000-C000-000000000046}'),
		"ExtendList": (1793, 2, (11, 0), (), "ExtendList", None),
		"FeatureInstall": (1808, 2, (3, 0), (), "FeatureInstall", None),
		"FileConverters": (931, 2, (12, 0), ((12, 17), (12, 17)), "FileConverters", None),
		# Method 'FileExportConverters' returns object of type 'FileExportConverters'
		"FileExportConverters": (2768, 2, (9, 0), (), "FileExportConverters", '{000244B4-0000-0000-C000-000000000046}'),
		# Method 'FileFind' returns object of type 'IFind'
		"FileFind": (1201, 2, (9, 0), (), "FileFind", '{000C0337-0000-0000-C000-000000000046}'),
		# Method 'FileSearch' returns object of type 'FileSearch'
		"FileSearch": (1200, 2, (9, 0), (), "FileSearch", '{000C0332-0000-0000-C000-000000000046}'),
		"FileValidation": (2788, 2, (3, 0), (), "FileValidation", None),
		"FileValidationPivot": (2789, 2, (3, 0), (), "FileValidationPivot", None),
		# Method 'FindFormat' returns object of type 'CellFormat'
		"FindFormat": (1934, 2, (9, 0), (), "FindFormat", '{00024450-0000-0000-C000-000000000046}'),
		"FixedDecimal": (351, 2, (11, 0), (), "FixedDecimal", None),
		"FixedDecimalPlaces": (352, 2, (3, 0), (), "FixedDecimalPlaces", None),
		"FlashFill": (2996, 2, (11, 0), (), "FlashFill", None),
		"FlashFillMode": (2999, 2, (11, 0), (), "FlashFillMode", None),
		"FormatStaleValues": (3401, 2, (11, 0), (), "FormatStaleValues", None),
		"FormulaBarHeight": (2383, 2, (3, 0), (), "FormulaBarHeight", None),
		"GenerateGetPivotData": (1948, 2, (11, 0), (), "GenerateGetPivotData", None),
		"GenerateTableRefs": (2385, 2, (3, 0), (), "GenerateTableRefs", None),
		"Height": (123, 2, (5, 0), (), "Height", None),
		"HighQualityModeForGraphics": (2395, 2, (11, 0), (), "HighQualityModeForGraphics", None),
		"Hinstance": (1951, 2, (3, 0), (), "Hinstance", None),
		"HinstancePtr": (2787, 2, (12, 0), (), "HinstancePtr", None),
		"Hwnd": (1950, 2, (3, 0), (), "Hwnd", None),
		"IgnoreRemoteRequests": (356, 2, (11, 0), (), "IgnoreRemoteRequests", None),
		"Interactive": (361, 2, (11, 0), (), "Interactive", None),
		"International": (362, 2, (12, 0), ((12, 17),), "International", None),
		"IsSandboxed": (2785, 2, (11, 0), (), "IsSandboxed", None),
		"Iteration": (363, 2, (11, 0), (), "Iteration", None),
		# Method 'LanguageSettings' returns object of type 'LanguageSettings'
		"LanguageSettings": (1801, 2, (9, 0), (), "LanguageSettings", '{000C0353-0000-0000-C000-000000000046}'),
		"LargeButtons": (364, 2, (11, 0), (), "LargeButtons", None),
		"LargeOperationCellThousandCount": (2389, 2, (3, 0), (), "LargeOperationCellThousandCount", None),
		"Left": (127, 2, (5, 0), (), "Left", None),
		"LibraryPath": (366, 2, (8, 0), (), "LibraryPath", None),
		"MailSession": (942, 2, (12, 0), (), "MailSession", None),
		"MailSystem": (971, 2, (3, 0), (), "MailSystem", None),
		"MapPaperSize": (1959, 2, (11, 0), (), "MapPaperSize", None),
		"MathCoprocessorAvailable": (367, 2, (11, 0), (), "MathCoprocessorAvailable", None),
		"MaxChange": (368, 2, (5, 0), (), "MaxChange", None),
		"MaxIterations": (369, 2, (3, 0), (), "MaxIterations", None),
		"MeasurementUnit": (2375, 2, (3, 0), (), "MeasurementUnit", None),
		"MemoryFree": (370, 2, (3, 0), (), "MemoryFree", None),
		"MemoryTotal": (371, 2, (3, 0), (), "MemoryTotal", None),
		"MemoryUsed": (372, 2, (3, 0), (), "MemoryUsed", None),
		# Method 'MenuBars' returns object of type 'MenuBars'
		"MenuBars": (589, 2, (9, 0), (), "MenuBars", '{00020863-0000-0000-C000-000000000046}'),
		"MergeInstances": (3000, 2, (11, 0), (), "MergeInstances", None),
		# Method 'Modules' returns object of type 'Modules'
		"Modules": (582, 2, (9, 0), (), "Modules", '{000208AE-0000-0000-C000-000000000046}'),
		"MouseAvailable": (373, 2, (11, 0), (), "MouseAvailable", None),
		"MoveAfterReturn": (374, 2, (11, 0), (), "MoveAfterReturn", None),
		"MoveAfterReturnDirection": (1144, 2, (3, 0), (), "MoveAfterReturnDirection", None),
		# Method 'MultiThreadedCalculation' returns object of type 'MultiThreadedCalculation'
		"MultiThreadedCalculation": (2391, 2, (9, 0), (), "MultiThreadedCalculation", '{000244B1-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		# Method 'Names' returns object of type 'Names'
		"Names": (442, 2, (9, 0), (), "Names", '{000208B8-0000-0000-C000-000000000046}'),
		"NetworkTemplatesPath": (388, 2, (8, 0), (), "NetworkTemplatesPath", None),
		# Method 'NewWorkbook' returns object of type 'NewFile'
		"NewWorkbook": (1565, 2, (9, 0), (), "NewWorkbook", '{000C0936-0000-0000-C000-000000000046}'),
		# Method 'ODBCErrors' returns object of type 'ODBCErrors'
		"ODBCErrors": (1203, 2, (9, 0), (), "ODBCErrors", '{0002442D-0000-0000-C000-000000000046}'),
		"ODBCTimeout": (1204, 2, (3, 0), (), "ODBCTimeout", None),
		# Method 'OLEDBErrors' returns object of type 'OLEDBErrors'
		"OLEDBErrors": (1794, 2, (9, 0), (), "OLEDBErrors", '{00024446-0000-0000-C000-000000000046}'),
		"OnCalculate": (625, 2, (8, 0), (), "OnCalculate", None),
		"OnData": (629, 2, (8, 0), (), "OnData", None),
		"OnDoubleClick": (628, 2, (8, 0), (), "OnDoubleClick", None),
		"OnEntry": (627, 2, (8, 0), (), "OnEntry", None),
		"OnSheetActivate": (1031, 2, (8, 0), (), "OnSheetActivate", None),
		"OnSheetDeactivate": (1081, 2, (8, 0), (), "OnSheetDeactivate", None),
		"OnWindow": (623, 2, (8, 0), (), "OnWindow", None),
		"OperatingSystem": (375, 2, (8, 0), (), "OperatingSystem", None),
		"OrganizationName": (376, 2, (8, 0), (), "OrganizationName", None),
		# Method 'Parent' returns object of type 'Application'
		"Parent": (150, 2, (13, 0), (), "Parent", '{00024500-0000-0000-C000-000000000046}'),
		"Path": (291, 2, (8, 0), (), "Path", None),
		"PathSeparator": (377, 2, (8, 0), (), "PathSeparator", None),
		"PivotTableSelection": (1205, 2, (11, 0), (), "PivotTableSelection", None),
		"PreviousSelections": (378, 2, (12, 0), ((12, 17),), "PreviousSelections", None),
		"PrintCommunication": (2776, 2, (11, 0), (), "PrintCommunication", None),
		"ProductCode": (1798, 2, (8, 0), (), "ProductCode", None),
		"PromptForSummaryInfo": (1062, 2, (11, 0), (), "PromptForSummaryInfo", None),
		# Method 'ProtectedViewWindows' returns object of type 'ProtectedViewWindows'
		"ProtectedViewWindows": (2783, 2, (9, 0), (), "ProtectedViewWindows", '{000244CC-0000-0000-C000-000000000046}'),
		# Method 'QuickAnalysis' returns object of type 'QuickAnalysis'
		"QuickAnalysis": (2995, 2, (9, 0), (), "QuickAnalysis", '{000244D0-0000-0000-C000-000000000046}'),
		"Quitting": (2780, 2, (11, 0), (), "Quitting", None),
		# Method 'RTD' returns object of type 'RTD'
		"RTD": (1963, 2, (9, 0), (), "RTD", '{0002446E-0000-0000-C000-000000000046}'),
		"Ready": (1932, 2, (11, 0), (), "Ready", None),
		# Method 'RecentFiles' returns object of type 'RecentFiles'
		"RecentFiles": (1202, 2, (9, 0), (), "RecentFiles", '{00024406-0000-0000-C000-000000000046}'),
		"RecordRelative": (379, 2, (11, 0), (), "RecordRelative", None),
		"ReferenceStyle": (380, 2, (3, 0), (), "ReferenceStyle", None),
		"RegisteredFunctions": (775, 2, (12, 0), ((12, 17), (12, 17)), "RegisteredFunctions", None),
		# Method 'ReplaceFormat' returns object of type 'CellFormat'
		"ReplaceFormat": (1935, 2, (9, 0), (), "ReplaceFormat", '{00024450-0000-0000-C000-000000000046}'),
		"RollZoom": (1206, 2, (11, 0), (), "RollZoom", None),
		# Method 'Rows' returns object of type 'Range'
		"Rows": (258, 2, (9, 0), (), "Rows", '{00020846-0000-0000-C000-000000000046}'),
		"SaveISO8601Dates": (2786, 2, (11, 0), (), "SaveISO8601Dates", None),
		"ScreenUpdating": (382, 2, (11, 0), (), "ScreenUpdating", None),
		"Selection": (147, 2, (9, 0), (), "Selection", None),
		# Method 'SensitivityLabelPolicy' returns object of type 'SensitivityLabelPolicy'
		"SensitivityLabelPolicy": (3365, 2, (9, 0), (), "SensitivityLabelPolicy", '{88FF5F69-FACF-4667-8DC8-A85B8225DF15}'),
		# Method 'Sheets' returns object of type 'Sheets'
		"Sheets": (485, 2, (9, 0), (), "Sheets", '{000208D7-0000-0000-C000-000000000046}'),
		"SheetsInNewWorkbook": (993, 2, (3, 0), (), "SheetsInNewWorkbook", None),
		"ShowChartTipNames": (1207, 2, (11, 0), (), "ShowChartTipNames", None),
		"ShowChartTipValues": (1208, 2, (11, 0), (), "ShowChartTipValues", None),
		"ShowConvertToDataType": (3311, 2, (11, 0), (), "ShowConvertToDataType", None),
		"ShowDevTools": (2378, 2, (11, 0), (), "ShowDevTools", None),
		"ShowMenuFloaties": (2377, 2, (11, 0), (), "ShowMenuFloaties", None),
		"ShowQuickAnalysis": (2994, 2, (11, 0), (), "ShowQuickAnalysis", None),
		"ShowSelectionFloaties": (2376, 2, (11, 0), (), "ShowSelectionFloaties", None),
		"ShowStartupDialog": (1960, 2, (11, 0), (), "ShowStartupDialog", None),
		"ShowToolTips": (387, 2, (11, 0), (), "ShowToolTips", None),
		"ShowWindowsInTaskbar": (1807, 2, (11, 0), (), "ShowWindowsInTaskbar", None),
		# Method 'SmartArtColors' returns object of type 'SmartArtColors'
		"SmartArtColors": (2774, 2, (9, 0), (), "SmartArtColors", '{000C03CD-0000-0000-C000-000000000046}'),
		# Method 'SmartArtLayouts' returns object of type 'SmartArtLayouts'
		"SmartArtLayouts": (2772, 2, (9, 0), (), "SmartArtLayouts", '{000C03C9-0000-0000-C000-000000000046}'),
		# Method 'SmartArtQuickStyles' returns object of type 'SmartArtQuickStyles'
		"SmartArtQuickStyles": (2773, 2, (9, 0), (), "SmartArtQuickStyles", '{000C03CB-0000-0000-C000-000000000046}'),
		# Method 'SmartTagRecognizers' returns object of type 'SmartTagRecognizers'
		"SmartTagRecognizers": (1956, 2, (9, 0), (), "SmartTagRecognizers", '{00024463-0000-0000-C000-000000000046}'),
		# Method 'Speech' returns object of type 'Speech'
		"Speech": (1958, 2, (9, 0), (), "Speech", '{00024466-0000-0000-C000-000000000046}'),
		# Method 'SpellingOptions' returns object of type 'SpellingOptions'
		"SpellingOptions": (1957, 2, (9, 0), (), "SpellingOptions", '{00024465-0000-0000-C000-000000000046}'),
		"StandardFont": (924, 2, (8, 0), (), "StandardFont", None),
		"StandardFontSize": (925, 2, (5, 0), (), "StandardFontSize", None),
		"StartupPath": (385, 2, (8, 0), (), "StartupPath", None),
		"StatusBar": (386, 2, (12, 0), (), "StatusBar", None),
		"TemplatesPath": (381, 2, (8, 0), (), "TemplatesPath", None),
		# Method 'ThisCell' returns object of type 'Range'
		"ThisCell": (1962, 2, (9, 0), (), "ThisCell", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'ThisWorkbook' returns object of type 'Workbook'
		"ThisWorkbook": (778, 2, (13, 0), (), "ThisWorkbook", '{00020819-0000-0000-C000-000000000046}'),
		"ThousandsSeparator": (1810, 2, (8, 0), (), "ThousandsSeparator", None),
		# Method 'Toolbars' returns object of type 'Toolbars'
		"Toolbars": (552, 2, (9, 0), (), "Toolbars", '{0002085D-0000-0000-C000-000000000046}'),
		"Top": (126, 2, (5, 0), (), "Top", None),
		"TransitionMenuKey": (310, 2, (8, 0), (), "TransitionMenuKey", None),
		"TransitionMenuKeyAction": (311, 2, (3, 0), (), "TransitionMenuKeyAction", None),
		"TransitionNavigKeys": (312, 2, (11, 0), (), "TransitionNavigKeys", None),
		"TruncateLargeNumbers": (3313, 2, (11, 0), (), "TruncateLargeNumbers", None),
		"TruncateLeadingZeros": (3312, 2, (11, 0), (), "TruncateLeadingZeros", None),
		"UILanguage": (2, 2, (3, 0), (), "UILanguage", None),
		"UsableHeight": (389, 2, (5, 0), (), "UsableHeight", None),
		"UsableWidth": (390, 2, (5, 0), (), "UsableWidth", None),
		"UseClusterConnector": (2778, 2, (11, 0), (), "UseClusterConnector", None),
		"UseSystemSeparators": (1961, 2, (11, 0), (), "UseSystemSeparators", None),
		# Method 'UsedObjects' returns object of type 'UsedObjects'
		"UsedObjects": (1936, 2, (9, 0), (), "UsedObjects", '{00024451-0000-0000-C000-000000000046}'),
		"UserControl": (1210, 2, (11, 0), (), "UserControl", None),
		"UserLibraryPath": (1799, 2, (8, 0), (), "UserLibraryPath", None),
		"UserName": (391, 2, (8, 0), (), "UserName", None),
		# Method 'VBE' returns object of type 'VBE'
		"VBE": (1211, 2, (9, 0), (), "VBE", '{0002E166-0000-0000-C000-000000000046}'),
		"Value": (6, 2, (8, 0), (), "Value", None),
		"Version": (392, 2, (8, 0), (), "Version", None),
		"Visible": (558, 2, (11, 0), (), "Visible", None),
		"WarnOnFunctionNameConflict": (2382, 2, (11, 0), (), "WarnOnFunctionNameConflict", None),
		# Method 'Watches' returns object of type 'Watches'
		"Watches": (1939, 2, (9, 0), (), "Watches", '{00024456-0000-0000-C000-000000000046}'),
		"Width": (122, 2, (5, 0), (), "Width", None),
		"WindowState": (396, 2, (3, 0), (), "WindowState", None),
		# Method 'Windows' returns object of type 'Windows'
		"Windows": (430, 2, (9, 0), (), "Windows", '{00020892-0000-0000-C000-000000000046}'),
		"WindowsForPens": (395, 2, (11, 0), (), "WindowsForPens", None),
		# Method 'Workbooks' returns object of type 'Workbooks'
		"Workbooks": (572, 2, (9, 0), (), "Workbooks", '{000208DB-0000-0000-C000-000000000046}'),
		# Method 'WorksheetFunction' returns object of type 'WorksheetFunction'
		"WorksheetFunction": (1440, 2, (9, 0), (), "WorksheetFunction", '{00020845-0000-0000-C000-000000000046}'),
		# Method 'Worksheets' returns object of type 'Sheets'
		"Worksheets": (494, 2, (9, 0), (), "Worksheets", '{000208D7-0000-0000-C000-000000000046}'),
		"_Default": (0, 2, (8, 0), (), "_Default", None),
	}
	_prop_map_put_ = {
		"ActivePrinter": ((306, LCID, 4, 0),()),
		"AlertBeforeOverwriting": ((930, LCID, 4, 0),()),
		"AltStartupPath": ((313, LCID, 4, 0),()),
		"AlwaysUseClearType": ((2381, LCID, 4, 0),()),
		"AskToUpdateLinks": ((992, LCID, 4, 0),()),
		"AutoFormatAsYouTypeReplaceHyperlinks": ((1955, LCID, 4, 0),()),
		"AutoPercentEntry": ((1800, LCID, 4, 0),()),
		"AutomationSecurity": ((1941, LCID, 4, 0),()),
		"CSVDisplayNumberConversionWarning": ((3315, LCID, 4, 0),()),
		"CSVKeepColumnAsTextIfMultipleEntriesAreText": ((3316, LCID, 4, 0),()),
		"CalculateBeforeSave": ((315, LCID, 4, 0),()),
		"Calculation": ((316, LCID, 4, 0),()),
		"CalculationInterruptKey": ((1938, LCID, 4, 0),()),
		"Caption": ((139, LCID, 4, 0),()),
		"CellDragAndDrop": ((320, LCID, 4, 0),()),
		"ChartDataPointTrack": ((2998, LCID, 4, 0),()),
		"ClusterConnector": ((2779, LCID, 4, 0),()),
		"ColorButtons": ((365, LCID, 4, 0),()),
		"CommandUnderlines": ((323, LCID, 4, 0),()),
		"ConstrainNumeric": ((324, LCID, 4, 0),()),
		"ControlCharacters": ((233, LCID, 4, 0),()),
		"ConvertNumbersWithECharacter": ((3314, LCID, 4, 0),()),
		"CopyObjectsWithCells": ((991, LCID, 4, 0),()),
		"Cursor": ((1161, LCID, 4, 0),()),
		"CursorMovement": ((232, LCID, 4, 0),()),
		"CutCopyMode": ((330, LCID, 4, 0),()),
		"DataEntryMode": ((331, LCID, 4, 0),()),
		"DecimalSeparator": ((1809, LCID, 4, 0),()),
		"DefaultFilePath": ((1038, LCID, 4, 0),()),
		"DefaultSaveFormat": ((1209, LCID, 4, 0),()),
		"DefaultSheetDirection": ((229, LCID, 4, 0),()),
		"DeferAsyncQueries": ((2390, LCID, 4, 0),()),
		"DisplayAlerts": ((343, LCID, 4, 0),()),
		"DisplayClipboardWindow": ((322, LCID, 4, 0),()),
		"DisplayCommentIndicator": ((1196, LCID, 4, 0),()),
		"DisplayDocumentActionTaskPane": ((2251, LCID, 4, 0),()),
		"DisplayDocumentInformationPanel": ((2380, LCID, 4, 0),()),
		"DisplayExcel4Menus": ((927, LCID, 4, 0),()),
		"DisplayFormulaAutoComplete": ((2384, LCID, 4, 0),()),
		"DisplayFormulaBar": ((344, LCID, 4, 0),()),
		"DisplayFullScreen": ((1061, LCID, 4, 0),()),
		"DisplayFunctionToolTips": ((1940, LCID, 4, 0),()),
		"DisplayInfoWindow": ((1213, LCID, 4, 0),()),
		"DisplayInsertOptions": ((1947, LCID, 4, 0),()),
		"DisplayNoteIndicator": ((345, LCID, 4, 0),()),
		"DisplayPasteOptions": ((1946, LCID, 4, 0),()),
		"DisplayRecentFiles": ((926, LCID, 4, 0),()),
		"DisplayScrollBars": ((346, LCID, 4, 0),()),
		"DisplayStatusBar": ((347, LCID, 4, 0),()),
		"Dummy22": ((2781, LCID, 4, 0),()),
		"Dummy23": ((2782, LCID, 4, 0),()),
		"EditDirectlyInCell": ((929, LCID, 4, 0),()),
		"EnableAnimations": ((1180, LCID, 4, 0),()),
		"EnableAutoComplete": ((1179, LCID, 4, 0),()),
		"EnableCancelKey": ((1096, LCID, 4, 0),()),
		"EnableCheckFileExtensions": ((3158, LCID, 4, 0),()),
		"EnableEvents": ((1212, LCID, 4, 0),()),
		"EnableLargeOperationAlert": ((2388, LCID, 4, 0),()),
		"EnableLivePreview": ((2379, LCID, 4, 0),()),
		"EnableMacroAnimations": ((2997, LCID, 4, 0),()),
		"EnableSound": ((1197, LCID, 4, 0),()),
		"EnableTipWizard": ((1064, LCID, 4, 0),()),
		"ExtendList": ((1793, LCID, 4, 0),()),
		"FeatureInstall": ((1808, LCID, 4, 0),()),
		"FileValidation": ((2788, LCID, 4, 0),()),
		"FileValidationPivot": ((2789, LCID, 4, 0),()),
		"FindFormat": ((1934, LCID, 8, 0),()),
		"FixedDecimal": ((351, LCID, 4, 0),()),
		"FixedDecimalPlaces": ((352, LCID, 4, 0),()),
		"FlashFill": ((2996, LCID, 4, 0),()),
		"FlashFillMode": ((2999, LCID, 4, 0),()),
		"FormatStaleValues": ((3401, LCID, 4, 0),()),
		"FormulaBarHeight": ((2383, LCID, 4, 0),()),
		"GenerateGetPivotData": ((1948, LCID, 4, 0),()),
		"GenerateTableRefs": ((2385, LCID, 4, 0),()),
		"Height": ((123, LCID, 4, 0),()),
		"HighQualityModeForGraphics": ((2395, LCID, 4, 0),()),
		"IgnoreRemoteRequests": ((356, LCID, 4, 0),()),
		"Interactive": ((361, LCID, 4, 0),()),
		"Iteration": ((363, LCID, 4, 0),()),
		"LargeButtons": ((364, LCID, 4, 0),()),
		"LargeOperationCellThousandCount": ((2389, LCID, 4, 0),()),
		"Left": ((127, LCID, 4, 0),()),
		"MapPaperSize": ((1959, LCID, 4, 0),()),
		"MaxChange": ((368, LCID, 4, 0),()),
		"MaxIterations": ((369, LCID, 4, 0),()),
		"MeasurementUnit": ((2375, LCID, 4, 0),()),
		"MergeInstances": ((3000, LCID, 4, 0),()),
		"MoveAfterReturn": ((374, LCID, 4, 0),()),
		"MoveAfterReturnDirection": ((1144, LCID, 4, 0),()),
		"ODBCTimeout": ((1204, LCID, 4, 0),()),
		"OnCalculate": ((625, LCID, 4, 0),()),
		"OnData": ((629, LCID, 4, 0),()),
		"OnDoubleClick": ((628, LCID, 4, 0),()),
		"OnEntry": ((627, LCID, 4, 0),()),
		"OnSheetActivate": ((1031, LCID, 4, 0),()),
		"OnSheetDeactivate": ((1081, LCID, 4, 0),()),
		"OnWindow": ((623, LCID, 4, 0),()),
		"PivotTableSelection": ((1205, LCID, 4, 0),()),
		"PrintCommunication": ((2776, LCID, 4, 0),()),
		"PromptForSummaryInfo": ((1062, LCID, 4, 0),()),
		"ReferenceStyle": ((380, LCID, 4, 0),()),
		"ReplaceFormat": ((1935, LCID, 8, 0),()),
		"RollZoom": ((1206, LCID, 4, 0),()),
		"SaveISO8601Dates": ((2786, LCID, 4, 0),()),
		"ScreenUpdating": ((382, LCID, 4, 0),()),
		"SheetsInNewWorkbook": ((993, LCID, 4, 0),()),
		"ShowChartTipNames": ((1207, LCID, 4, 0),()),
		"ShowChartTipValues": ((1208, LCID, 4, 0),()),
		"ShowConvertToDataType": ((3311, LCID, 4, 0),()),
		"ShowDevTools": ((2378, LCID, 4, 0),()),
		"ShowMenuFloaties": ((2377, LCID, 4, 0),()),
		"ShowQuickAnalysis": ((2994, LCID, 4, 0),()),
		"ShowSelectionFloaties": ((2376, LCID, 4, 0),()),
		"ShowStartupDialog": ((1960, LCID, 4, 0),()),
		"ShowToolTips": ((387, LCID, 4, 0),()),
		"ShowWindowsInTaskbar": ((1807, LCID, 4, 0),()),
		"StandardFont": ((924, LCID, 4, 0),()),
		"StandardFontSize": ((925, LCID, 4, 0),()),
		"StatusBar": ((386, LCID, 4, 0),()),
		"ThousandsSeparator": ((1810, LCID, 4, 0),()),
		"Top": ((126, LCID, 4, 0),()),
		"TransitionMenuKey": ((310, LCID, 4, 0),()),
		"TransitionMenuKeyAction": ((311, LCID, 4, 0),()),
		"TransitionNavigKeys": ((312, LCID, 4, 0),()),
		"TruncateLargeNumbers": ((3313, LCID, 4, 0),()),
		"TruncateLeadingZeros": ((3312, LCID, 4, 0),()),
		"UILanguage": ((2, LCID, 4, 0),()),
		"UseClusterConnector": ((2778, LCID, 4, 0),()),
		"UseSystemSeparators": ((1961, LCID, 4, 0),()),
		"UserControl": ((1210, LCID, 4, 0),()),
		"UserName": ((391, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"WarnOnFunctionNameConflict": ((2382, LCID, 4, 0),()),
		"Width": ((122, LCID, 4, 0),()),
		"WindowState": ((396, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (8, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class _Chart(DispatchBaseClass):
	CLSID = IID('{000208D6-0000-0000-C000-000000000046}')
	coclass_clsid = IID('{00020821-0000-0000-C000-000000000046}')

	def Activate(self):
		return self._oleobj_.InvokeTypes(304, LCID, 1, (24, 0), (),)

	def ApplyChartTemplate(self, Filename=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2507, LCID, 1, (24, 0), ((8, 1),),Filename
			)

	def ApplyCustomType(self, ChartType=defaultNamedNotOptArg, TypeName=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1401, LCID, 1, (24, 0), ((3, 1), (12, 17)),ChartType
			, TypeName)

	def ApplyDataLabels(self, Type=2, LegendKey=defaultNamedOptArg, AutoText=defaultNamedOptArg, HasLeaderLines=defaultNamedOptArg
			, ShowSeriesName=defaultNamedOptArg, ShowCategoryName=defaultNamedOptArg, ShowValue=defaultNamedOptArg, ShowPercentage=defaultNamedOptArg, ShowBubbleSize=defaultNamedOptArg
			, Separator=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1922, LCID, 1, (24, 0), ((3, 49), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Type
			, LegendKey, AutoText, HasLeaderLines, ShowSeriesName, ShowCategoryName
			, ShowValue, ShowPercentage, ShowBubbleSize, Separator)

	def ApplyLayout(self, Layout=defaultNamedNotOptArg, ChartType=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2500, LCID, 1, (24, 0), ((3, 1), (12, 17)),Layout
			, ChartType)

	def Arcs(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(760, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Arcs', None)
		return ret

	def AreaGroups(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(9, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'AreaGroups', None)
		return ret

	def AutoFormat(self, Gallery=defaultNamedNotOptArg, Format=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(114, LCID, 1, (24, 0), ((3, 1), (12, 17)),Gallery
			, Format)

	def Axes(self, Type=defaultNamedNotOptArg, AxisGroup=1):
		ret = self._oleobj_.InvokeTypes(23, LCID, 1, (9, 0), ((12, 17), (3, 49)),Type
			, AxisGroup)
		if ret is not None:
			ret = Dispatch(ret, 'Axes', None)
		return ret

	def BarGroups(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(10, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'BarGroups', None)
		return ret

	def Buttons(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(557, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Buttons', None)
		return ret

	def ChartGroups(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(8, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ChartGroups', None)
		return ret

	def ChartObjects(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1060, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ChartObjects', None)
		return ret

	def ChartWizard(self, Source=defaultNamedOptArg, Gallery=defaultNamedOptArg, Format=defaultNamedOptArg, PlotBy=defaultNamedOptArg
			, CategoryLabels=defaultNamedOptArg, SeriesLabels=defaultNamedOptArg, HasLegend=defaultNamedOptArg, Title=defaultNamedOptArg, CategoryTitle=defaultNamedOptArg
			, ValueTitle=defaultNamedOptArg, ExtraTitle=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(196, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Source
			, Gallery, Format, PlotBy, CategoryLabels, SeriesLabels
			, HasLegend, Title, CategoryTitle, ValueTitle, ExtraTitle
			)

	def CheckBoxes(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(824, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'CheckBoxes', None)
		return ret

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(505, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17)),CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def ClearToMatchColorStyle(self):
		return self._oleobj_.InvokeTypes(3053, LCID, 1, (24, 0), (),)

	def ClearToMatchStyle(self):
		return self._oleobj_.InvokeTypes(2510, LCID, 1, (24, 0), (),)

	def ColumnGroups(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(11, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ColumnGroups', None)
		return ret

	def Copy(self, Before=defaultNamedOptArg, After=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(551, LCID, 1, (24, 0), ((12, 17), (12, 17)),Before
			, After)

	def CopyChartBuild(self):
		return self._oleobj_.InvokeTypes(1404, LCID, 1, (24, 0), (),)

	def CopyPicture(self, Appearance=1, Format=-4147, Size=2):
		return self._oleobj_.InvokeTypes(213, LCID, 1, (24, 0), ((3, 49), (3, 49), (3, 49)),Appearance
			, Format, Size)

	def CreatePublisher(self, Edition=defaultNamedNotOptArg, Appearance=1, Size=1, ContainsPICT=defaultNamedOptArg
			, ContainsBIFF=defaultNamedOptArg, ContainsRTF=defaultNamedOptArg, ContainsVALU=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(458, LCID, 1, (24, 0), ((12, 17), (3, 49), (3, 49), (12, 17), (12, 17), (12, 17), (12, 17)),Edition
			, Appearance, Size, ContainsPICT, ContainsBIFF, ContainsRTF
			, ContainsVALU)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def DeleteHiddenContent(self):
		return self._oleobj_.InvokeTypes(3051, LCID, 1, (24, 0), (),)

	def Deselect(self):
		return self._oleobj_.InvokeTypes(1120, LCID, 1, (24, 0), (),)

	def DoughnutGroups(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(14, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'DoughnutGroups', None)
		return ret

	def DrawingObjects(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(88, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'DrawingObjects', None)
		return ret

	def Drawings(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(772, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Drawings', None)
		return ret

	def DropDowns(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(836, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'DropDowns', None)
		return ret

	def Evaluate(self, Name=defaultNamedNotOptArg):
		return self._ApplyTypes_(1, 1, (12, 0), ((12, 1),), 'Evaluate', None,Name
			)

	def Export(self, Filename=defaultNamedNotOptArg, FilterName=defaultNamedOptArg, Interactive=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1414, LCID, 1, (11, 0), ((8, 1), (12, 17), (12, 17)),Filename
			, FilterName, Interactive)

	def ExportAsFixedFormat(self, Type=defaultNamedNotOptArg, Filename=defaultNamedOptArg, Quality=defaultNamedOptArg, IncludeDocProperties=defaultNamedOptArg
			, IgnorePrintAreas=defaultNamedOptArg, From=defaultNamedOptArg, To=defaultNamedOptArg, OpenAfterPublish=defaultNamedOptArg, FixedFormatExtClassPtr=defaultNamedOptArg
			, WorkIdentity=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(3175, LCID, 1, (24, 0), ((3, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Type
			, Filename, Quality, IncludeDocProperties, IgnorePrintAreas, From
			, To, OpenAfterPublish, FixedFormatExtClassPtr, WorkIdentity)

	def FullSeriesCollection(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3047, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'FullSeriesCollection', None)
		return ret

	def GetChartElement(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, ElementID=defaultNamedNotOptArg, Arg1=defaultNamedNotOptArg
			, Arg2=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1409, LCID, 1, (24, 0), ((3, 1), (3, 1), (16387, 1), (16387, 1), (16387, 1)),x
			, y, ElementID, Arg1, Arg2)

	# The method GetHasAxis is actually a property, but must be used as a method to correctly pass the arguments
	def GetHasAxis(self, Index1=defaultNamedOptArg, Index2=defaultNamedOptArg):
		return self._ApplyTypes_(52, 2, (12, 0), ((12, 17), (12, 17)), 'GetHasAxis', None,Index1
			, Index2)

	def GetProperty(self, ID=defaultNamedNotOptArg):
		return self._ApplyTypes_(3256, 1, (12, 0), ((8, 1),), 'GetProperty', None,ID
			)

	def GroupBoxes(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(834, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'GroupBoxes', None)
		return ret

	def GroupObjects(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1113, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'GroupObjects', None)
		return ret

	def Labels(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(841, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Labels', None)
		return ret

	def LineGroups(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(12, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'LineGroups', None)
		return ret

	def Lines(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(767, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Lines', None)
		return ret

	def ListBoxes(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(832, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ListBoxes', None)
		return ret

	# Result is of type Chart
	def Location(self, Where=defaultNamedNotOptArg, Name=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1397, LCID, 1, (13, 0), ((3, 1), (12, 17)),Where
			, Name)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, 'Location', '{00020821-0000-0000-C000-000000000046}')
		return ret

	def Move(self, Before=defaultNamedOptArg, After=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(637, LCID, 1, (24, 0), ((12, 17), (12, 17)),Before
			, After)

	def OLEObjects(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(799, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'OLEObjects', None)
		return ret

	def OptionButtons(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(826, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'OptionButtons', None)
		return ret

	def Ovals(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(801, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Ovals', None)
		return ret

	def Paste(self, Type=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(211, LCID, 1, (24, 0), ((12, 17),),Type
			)

	def Pictures(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(771, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Pictures', None)
		return ret

	def PieGroups(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(13, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'PieGroups', None)
		return ret

	def PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2361, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName)

	def PrintPreview(self, EnableChanges=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(281, LCID, 1, (24, 0), ((12, 17),),EnableChanges
			)

	def Protect(self, Password=defaultNamedOptArg, DrawingObjects=defaultNamedOptArg, Contents=defaultNamedOptArg, Scenarios=defaultNamedOptArg
			, UserInterfaceOnly=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2029, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Password
			, DrawingObjects, Contents, Scenarios, UserInterfaceOnly)

	def RadarGroups(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(15, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'RadarGroups', None)
		return ret

	def Rectangles(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(774, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Rectangles', None)
		return ret

	def Refresh(self):
		return self._oleobj_.InvokeTypes(1417, LCID, 1, (24, 0), (),)

	def SaveAs(self, Filename=defaultNamedNotOptArg, FileFormat=defaultNamedOptArg, Password=defaultNamedOptArg, WriteResPassword=defaultNamedOptArg
			, ReadOnlyRecommended=defaultNamedOptArg, CreateBackup=defaultNamedOptArg, AddToMru=defaultNamedOptArg, TextCodepage=defaultNamedOptArg, TextVisualLayout=defaultNamedOptArg
			, Local=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(3174, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup
			, AddToMru, TextCodepage, TextVisualLayout, Local)

	def SaveChartTemplate(self, Filename=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2508, LCID, 1, (24, 0), ((8, 1),),Filename
			)

	def ScrollBars(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(830, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ScrollBars', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(235, LCID, 1, (24, 0), ((12, 17),),Replace
			)

	def SeriesCollection(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(68, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'SeriesCollection', None)
		return ret

	def SetBackgroundPicture(self, Filename=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1188, LCID, 1, (24, 0), ((8, 1),),Filename
			)

	def SetDefaultChart(self, Name=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(219, LCID, 1, (24, 0), ((12, 1),),Name
			)

	def SetElement(self, Element=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2502, LCID, 1, (24, 0), ((3, 1),),Element
			)

	# The method SetHasAxis is actually a property, but must be used as a method to correctly pass the arguments
	def SetHasAxis(self, Index1=defaultNamedNotOptArg, Index2=defaultNamedOptArg, arg2=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(52, LCID, 4, (24, 0), ((12, 17), (12, 17), (12, 1)),Index1
			, Index2, arg2)

	def SetProperty(self, ID=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3253, LCID, 1, (24, 0), ((8, 1), (12, 1)),ID
			, Value)

	def SetSourceData(self, Source=defaultNamedNotOptArg, PlotBy=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1413, LCID, 1, (24, 0), ((9, 1), (12, 17)),Source
			, PlotBy)

	def Spinners(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(838, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Spinners', None)
		return ret

	def TextBoxes(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(777, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'TextBoxes', None)
		return ret

	def Unprotect(self, Password=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(285, LCID, 1, (24, 0), ((12, 17),),Password
			)

	def XYGroups(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(16, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'XYGroups', None)
		return ret

	def _ApplyDataLabels(self, Type=2, LegendKey=defaultNamedOptArg, AutoText=defaultNamedOptArg, HasLeaderLines=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(151, LCID, 1, (24, 0), ((3, 49), (12, 17), (12, 17), (12, 17)),Type
			, LegendKey, AutoText, HasLeaderLines)

	def _Evaluate(self, Name=defaultNamedNotOptArg):
		return self._ApplyTypes_(-5, 1, (12, 0), ((12, 1),), '_Evaluate', None,Name
			)

	def _ExportAsFixedFormat(self, Type=defaultNamedNotOptArg, Filename=defaultNamedOptArg, Quality=defaultNamedOptArg, IncludeDocProperties=defaultNamedOptArg
			, IgnorePrintAreas=defaultNamedOptArg, From=defaultNamedOptArg, To=defaultNamedOptArg, OpenAfterPublish=defaultNamedOptArg, FixedFormatExtClassPtr=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2493, LCID, 1, (24, 0), ((3, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Type
			, Filename, Quality, IncludeDocProperties, IgnorePrintAreas, From
			, To, OpenAfterPublish, FixedFormatExtClassPtr)

	def _PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1772, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName)

	def _Protect(self, Password=defaultNamedOptArg, DrawingObjects=defaultNamedOptArg, Contents=defaultNamedOptArg, Scenarios=defaultNamedOptArg
			, UserInterfaceOnly=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(282, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Password
			, DrawingObjects, Contents, Scenarios, UserInterfaceOnly)

	def _SaveAs(self, Filename=defaultNamedNotOptArg, FileFormat=defaultNamedOptArg, Password=defaultNamedOptArg, WriteResPassword=defaultNamedOptArg
			, ReadOnlyRecommended=defaultNamedOptArg, CreateBackup=defaultNamedOptArg, AddToMru=defaultNamedOptArg, TextCodepage=defaultNamedOptArg, TextVisualLayout=defaultNamedOptArg
			, Local=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1925, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup
			, AddToMru, TextCodepage, TextVisualLayout, Local)

	def _PrintOut_(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(905, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate)

	def _SaveAs_(self, Filename=defaultNamedNotOptArg, FileFormat=defaultNamedOptArg, Password=defaultNamedOptArg, WriteResPassword=defaultNamedOptArg
			, ReadOnlyRecommended=defaultNamedOptArg, CreateBackup=defaultNamedOptArg, AddToMru=defaultNamedOptArg, TextCodepage=defaultNamedOptArg, TextVisualLayout=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(284, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup
			, AddToMru, TextCodepage, TextVisualLayout)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Area3DGroup' returns object of type 'ChartGroup'
		"Area3DGroup": (17, 2, (9, 0), (), "Area3DGroup", '{00020859-0000-0000-C000-000000000046}'),
		"AutoScaling": (107, 2, (11, 0), (), "AutoScaling", None),
		# Method 'BackWall' returns object of type 'Walls'
		"BackWall": (2506, 2, (9, 0), (), "BackWall", '{000208C8-0000-0000-C000-000000000046}'),
		# Method 'Bar3DGroup' returns object of type 'ChartGroup'
		"Bar3DGroup": (18, 2, (9, 0), (), "Bar3DGroup", '{00020859-0000-0000-C000-000000000046}'),
		"BarShape": (1403, 2, (3, 0), (), "BarShape", None),
		"CategoryLabelLevel": (3048, 2, (3, 0), (), "CategoryLabelLevel", None),
		# Method 'ChartArea' returns object of type 'ChartArea'
		"ChartArea": (80, 2, (9, 0), (), "ChartArea", '{000208CC-0000-0000-C000-000000000046}'),
		"ChartColor": (3052, 2, (12, 0), (), "ChartColor", None),
		"ChartStyle": (2509, 2, (12, 0), (), "ChartStyle", None),
		# Method 'ChartTitle' returns object of type 'ChartTitle'
		"ChartTitle": (81, 2, (9, 0), (), "ChartTitle", '{00020849-0000-0000-C000-000000000046}'),
		"ChartType": (1400, 2, (3, 0), (), "ChartType", None),
		"CodeName": (1373, 2, (8, 0), (), "CodeName", None),
		# Method 'Column3DGroup' returns object of type 'ChartGroup'
		"Column3DGroup": (19, 2, (9, 0), (), "Column3DGroup", '{00020859-0000-0000-C000-000000000046}'),
		# Method 'Corners' returns object of type 'Corners'
		"Corners": (79, 2, (9, 0), (), "Corners", '{000208C0-0000-0000-C000-000000000046}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'DataTable' returns object of type 'DataTable'
		"DataTable": (1395, 2, (9, 0), (), "DataTable", '{00020843-0000-0000-C000-000000000046}'),
		"DepthPercent": (48, 2, (3, 0), (), "DepthPercent", None),
		"DisplayBlanksAs": (93, 2, (3, 0), (), "DisplayBlanksAs", None),
		"DisplayValueNotAvailableAsBlank": (3333, 2, (11, 0), (), "DisplayValueNotAvailableAsBlank", None),
		"Dummy24": (2858, 2, (11, 0), (), "Dummy24", None),
		"Dummy25": (2859, 2, (11, 0), (), "Dummy25", None),
		"Elevation": (49, 2, (3, 0), (), "Elevation", None),
		# Method 'Floor' returns object of type 'Floor'
		"Floor": (83, 2, (9, 0), (), "Floor", '{000208C7-0000-0000-C000-000000000046}'),
		"GapDepth": (50, 2, (3, 0), (), "GapDepth", None),
		"HasAxis": (52, 2, (12, 0), ((12, 17), (12, 17)), "HasAxis", None),
		"HasDataTable": (1396, 2, (11, 0), (), "HasDataTable", None),
		"HasHiddenContent": (3050, 2, (11, 0), (), "HasHiddenContent", None),
		"HasLegend": (53, 2, (11, 0), (), "HasLegend", None),
		"HasPivotFields": (1815, 2, (11, 0), (), "HasPivotFields", None),
		"HasTitle": (54, 2, (11, 0), (), "HasTitle", None),
		"HeightPercent": (55, 2, (3, 0), (), "HeightPercent", None),
		# Method 'Hyperlinks' returns object of type 'Hyperlinks'
		"Hyperlinks": (1393, 2, (9, 0), (), "Hyperlinks", '{00024430-0000-0000-C000-000000000046}'),
		"Index": (486, 2, (3, 0), (), "Index", None),
		# Method 'Legend' returns object of type 'Legend'
		"Legend": (84, 2, (9, 0), (), "Legend", '{000208CD-0000-0000-C000-000000000046}'),
		# Method 'Line3DGroup' returns object of type 'ChartGroup'
		"Line3DGroup": (20, 2, (9, 0), (), "Line3DGroup", '{00020859-0000-0000-C000-000000000046}'),
		# Method 'MailEnvelope' returns object of type 'MsoEnvelope'
		"MailEnvelope": (2021, 2, (13, 0), (), "MailEnvelope", '{0006F01A-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		"Next": (502, 2, (9, 0), (), "Next", None),
		"OnDoubleClick": (628, 2, (8, 0), (), "OnDoubleClick", None),
		"OnSheetActivate": (1031, 2, (8, 0), (), "OnSheetActivate", None),
		"OnSheetDeactivate": (1081, 2, (8, 0), (), "OnSheetDeactivate", None),
		# Method 'PageSetup' returns object of type 'PageSetup'
		"PageSetup": (998, 2, (9, 0), (), "PageSetup", '{000208B4-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Perspective": (57, 2, (3, 0), (), "Perspective", None),
		# Method 'Pie3DGroup' returns object of type 'ChartGroup'
		"Pie3DGroup": (21, 2, (9, 0), (), "Pie3DGroup", '{00020859-0000-0000-C000-000000000046}'),
		# Method 'PivotLayout' returns object of type 'PivotLayout'
		"PivotLayout": (1814, 2, (9, 0), (), "PivotLayout", '{0002444A-0000-0000-C000-000000000046}'),
		# Method 'PlotArea' returns object of type 'PlotArea'
		"PlotArea": (85, 2, (9, 0), (), "PlotArea", '{000208CB-0000-0000-C000-000000000046}'),
		"PlotBy": (202, 2, (3, 0), (), "PlotBy", None),
		"PlotVisibleOnly": (92, 2, (11, 0), (), "PlotVisibleOnly", None),
		"Previous": (503, 2, (9, 0), (), "Previous", None),
		"PrintedCommentPages": (2857, 2, (3, 0), (), "PrintedCommentPages", None),
		"ProtectContents": (292, 2, (11, 0), (), "ProtectContents", None),
		"ProtectData": (1406, 2, (11, 0), (), "ProtectData", None),
		"ProtectDrawingObjects": (293, 2, (11, 0), (), "ProtectDrawingObjects", None),
		"ProtectFormatting": (1405, 2, (11, 0), (), "ProtectFormatting", None),
		"ProtectGoalSeek": (1407, 2, (11, 0), (), "ProtectGoalSeek", None),
		"ProtectSelection": (1408, 2, (11, 0), (), "ProtectSelection", None),
		"ProtectionMode": (1159, 2, (11, 0), (), "ProtectionMode", None),
		"RightAngleAxes": (58, 2, (12, 0), (), "RightAngleAxes", None),
		"Rotation": (59, 2, (12, 0), (), "Rotation", None),
		# Method 'Scripts' returns object of type 'Scripts'
		"Scripts": (1816, 2, (9, 0), (), "Scripts", '{000C0340-0000-0000-C000-000000000046}'),
		"SeriesNameLevel": (3049, 2, (3, 0), (), "SeriesNameLevel", None),
		# Method 'Shapes' returns object of type 'Shapes'
		"Shapes": (1377, 2, (9, 0), (), "Shapes", '{0002443A-0000-0000-C000-000000000046}'),
		"ShowAllFieldButtons": (2864, 2, (11, 0), (), "ShowAllFieldButtons", None),
		"ShowAxisFieldButtons": (2862, 2, (11, 0), (), "ShowAxisFieldButtons", None),
		"ShowDataLabelsOverMaximum": (2504, 2, (11, 0), (), "ShowDataLabelsOverMaximum", None),
		"ShowExpandCollapseEntireFieldButtons": (3166, 2, (11, 0), (), "ShowExpandCollapseEntireFieldButtons", None),
		"ShowLegendFieldButtons": (2861, 2, (11, 0), (), "ShowLegendFieldButtons", None),
		"ShowReportFilterFieldButtons": (2860, 2, (11, 0), (), "ShowReportFilterFieldButtons", None),
		"ShowValueFieldButtons": (2863, 2, (11, 0), (), "ShowValueFieldButtons", None),
		"ShowWindow": (1399, 2, (11, 0), (), "ShowWindow", None),
		# Method 'SideWall' returns object of type 'Walls'
		"SideWall": (2505, 2, (9, 0), (), "SideWall", '{000208C8-0000-0000-C000-000000000046}'),
		"SizeWithWindow": (94, 2, (11, 0), (), "SizeWithWindow", None),
		"SubType": (109, 2, (3, 0), (), "SubType", None),
		# Method 'SurfaceGroup' returns object of type 'ChartGroup'
		"SurfaceGroup": (22, 2, (9, 0), (), "SurfaceGroup", '{00020859-0000-0000-C000-000000000046}'),
		# Method 'Tab' returns object of type 'Tab'
		"Tab": (1041, 2, (9, 0), (), "Tab", '{00024469-0000-0000-C000-000000000046}'),
		"Type": (108, 2, (3, 0), (), "Type", None),
		"Visible": (558, 2, (3, 0), (), "Visible", None),
		# Method 'Walls' returns object of type 'Walls'
		"Walls": (86, 2, (9, 0), (), "Walls", '{000208C8-0000-0000-C000-000000000046}'),
		"WallsAndGridlines2D": (210, 2, (11, 0), (), "WallsAndGridlines2D", None),
		"_CodeName": (-2147418112, 2, (8, 0), (), "_CodeName", None),
	}
	_prop_map_put_ = {
		"AutoScaling": ((107, LCID, 4, 0),()),
		"BarShape": ((1403, LCID, 4, 0),()),
		"CategoryLabelLevel": ((3048, LCID, 4, 0),()),
		"ChartColor": ((3052, LCID, 4, 0),()),
		"ChartStyle": ((2509, LCID, 4, 0),()),
		"ChartType": ((1400, LCID, 4, 0),()),
		"DepthPercent": ((48, LCID, 4, 0),()),
		"DisplayBlanksAs": ((93, LCID, 4, 0),()),
		"DisplayValueNotAvailableAsBlank": ((3333, LCID, 4, 0),()),
		"Dummy24": ((2858, LCID, 4, 0),()),
		"Dummy25": ((2859, LCID, 4, 0),()),
		"Elevation": ((49, LCID, 4, 0),()),
		"GapDepth": ((50, LCID, 4, 0),()),
		"HasAxis": ((52, LCID, 4, 0),()),
		"HasDataTable": ((1396, LCID, 4, 0),()),
		"HasLegend": ((53, LCID, 4, 0),()),
		"HasPivotFields": ((1815, LCID, 4, 0),()),
		"HasTitle": ((54, LCID, 4, 0),()),
		"HeightPercent": ((55, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnDoubleClick": ((628, LCID, 4, 0),()),
		"OnSheetActivate": ((1031, LCID, 4, 0),()),
		"OnSheetDeactivate": ((1081, LCID, 4, 0),()),
		"Perspective": ((57, LCID, 4, 0),()),
		"PlotBy": ((202, LCID, 4, 0),()),
		"PlotVisibleOnly": ((92, LCID, 4, 0),()),
		"ProtectData": ((1406, LCID, 4, 0),()),
		"ProtectFormatting": ((1405, LCID, 4, 0),()),
		"ProtectGoalSeek": ((1407, LCID, 4, 0),()),
		"ProtectSelection": ((1408, LCID, 4, 0),()),
		"RightAngleAxes": ((58, LCID, 4, 0),()),
		"Rotation": ((59, LCID, 4, 0),()),
		"SeriesNameLevel": ((3049, LCID, 4, 0),()),
		"ShowAllFieldButtons": ((2864, LCID, 4, 0),()),
		"ShowAxisFieldButtons": ((2862, LCID, 4, 0),()),
		"ShowDataLabelsOverMaximum": ((2504, LCID, 4, 0),()),
		"ShowExpandCollapseEntireFieldButtons": ((3166, LCID, 4, 0),()),
		"ShowLegendFieldButtons": ((2861, LCID, 4, 0),()),
		"ShowReportFilterFieldButtons": ((2860, LCID, 4, 0),()),
		"ShowValueFieldButtons": ((2863, LCID, 4, 0),()),
		"ShowWindow": ((1399, LCID, 4, 0),()),
		"SizeWithWindow": ((94, LCID, 4, 0),()),
		"SubType": ((109, LCID, 4, 0),()),
		"Type": ((108, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"WallsAndGridlines2D": ((210, LCID, 4, 0),()),
		"_CodeName": ((-2147418112, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class _Global(DispatchBaseClass):
	CLSID = IID('{000208D9-0000-0000-C000-000000000046}')
	coclass_clsid = IID('{00020812-0000-0000-C000-000000000046}')

	def Calculate(self):
		return self._oleobj_.InvokeTypes(279, LCID, 1, (24, 0), (),)

	def DDEExecute(self, Channel=defaultNamedNotOptArg, String=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(333, LCID, 1, (24, 0), ((3, 1), (8, 1)),Channel
			, String)

	def DDEInitiate(self, App=defaultNamedNotOptArg, Topic=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(334, LCID, 1, (3, 0), ((8, 1), (8, 1)),App
			, Topic)

	def DDEPoke(self, Channel=defaultNamedNotOptArg, Item=defaultNamedNotOptArg, Data=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(335, LCID, 1, (24, 0), ((3, 1), (12, 1), (12, 1)),Channel
			, Item, Data)

	def DDERequest(self, Channel=defaultNamedNotOptArg, Item=defaultNamedNotOptArg):
		return self._ApplyTypes_(336, 1, (12, 0), ((3, 1), (8, 1)), 'DDERequest', None,Channel
			, Item)

	def DDETerminate(self, Channel=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(337, LCID, 1, (24, 0), ((3, 1),),Channel
			)

	def Evaluate(self, Name=defaultNamedNotOptArg):
		return self._ApplyTypes_(1, 1, (12, 0), ((12, 1),), 'Evaluate', None,Name
			)

	def ExecuteExcel4Macro(self, String=defaultNamedNotOptArg):
		return self._ApplyTypes_(350, 1, (12, 0), ((8, 1),), 'ExecuteExcel4Macro', None,String
			)

	# Result is of type Range
	def Intersect(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(766, LCID, 1, (9, 0), ((9, 1), (9, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)
		if ret is not None:
			ret = Dispatch(ret, 'Intersect', '{00020846-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Range
	# The method Range is actually a property, but must be used as a method to correctly pass the arguments
	def Range(self, Cell1=defaultNamedNotOptArg, Cell2=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(197, LCID, 2, (9, 0), ((12, 1), (12, 17)),Cell1
			, Cell2)
		if ret is not None:
			ret = Dispatch(ret, 'Range', '{00020846-0000-0000-C000-000000000046}')
		return ret

	def Run(self, Macro=defaultNamedOptArg, Arg1=defaultNamedOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg
			, Arg4=defaultNamedOptArg, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg
			, Arg9=defaultNamedOptArg, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg
			, Arg14=defaultNamedOptArg, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg
			, Arg19=defaultNamedOptArg, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg
			, Arg24=defaultNamedOptArg, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg
			, Arg29=defaultNamedOptArg, Arg30=defaultNamedOptArg):
		return self._ApplyTypes_(259, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'Run', None,Macro
			, Arg1, Arg2, Arg3, Arg4, Arg5
			, Arg6, Arg7, Arg8, Arg9, Arg10
			, Arg11, Arg12, Arg13, Arg14, Arg15
			, Arg16, Arg17, Arg18, Arg19, Arg20
			, Arg21, Arg22, Arg23, Arg24, Arg25
			, Arg26, Arg27, Arg28, Arg29, Arg30
			)

	def SendKeys(self, Keys=defaultNamedNotOptArg, Wait=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(383, LCID, 1, (24, 0), ((12, 1), (12, 17)),Keys
			, Wait)

	# Result is of type Menu
	# The method ShortcutMenus is actually a property, but must be used as a method to correctly pass the arguments
	def ShortcutMenus(self, Index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(776, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ShortcutMenus', '{00020866-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Range
	def Union(self, Arg1=defaultNamedNotOptArg, Arg2=defaultNamedNotOptArg, Arg3=defaultNamedOptArg, Arg4=defaultNamedOptArg
			, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg, Arg9=defaultNamedOptArg
			, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg, Arg14=defaultNamedOptArg
			, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg, Arg19=defaultNamedOptArg
			, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg, Arg24=defaultNamedOptArg
			, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg, Arg29=defaultNamedOptArg
			, Arg30=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(779, LCID, 1, (9, 0), ((9, 1), (9, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Arg1
			, Arg2, Arg3, Arg4, Arg5, Arg6
			, Arg7, Arg8, Arg9, Arg10, Arg11
			, Arg12, Arg13, Arg14, Arg15, Arg16
			, Arg17, Arg18, Arg19, Arg20, Arg21
			, Arg22, Arg23, Arg24, Arg25, Arg26
			, Arg27, Arg28, Arg29, Arg30)
		if ret is not None:
			ret = Dispatch(ret, 'Union', '{00020846-0000-0000-C000-000000000046}')
		return ret

	def _Evaluate(self, Name=defaultNamedNotOptArg):
		return self._ApplyTypes_(-5, 1, (12, 0), ((12, 1),), '_Evaluate', None,Name
			)

	def _Run2(self, Macro=defaultNamedOptArg, Arg1=defaultNamedOptArg, Arg2=defaultNamedOptArg, Arg3=defaultNamedOptArg
			, Arg4=defaultNamedOptArg, Arg5=defaultNamedOptArg, Arg6=defaultNamedOptArg, Arg7=defaultNamedOptArg, Arg8=defaultNamedOptArg
			, Arg9=defaultNamedOptArg, Arg10=defaultNamedOptArg, Arg11=defaultNamedOptArg, Arg12=defaultNamedOptArg, Arg13=defaultNamedOptArg
			, Arg14=defaultNamedOptArg, Arg15=defaultNamedOptArg, Arg16=defaultNamedOptArg, Arg17=defaultNamedOptArg, Arg18=defaultNamedOptArg
			, Arg19=defaultNamedOptArg, Arg20=defaultNamedOptArg, Arg21=defaultNamedOptArg, Arg22=defaultNamedOptArg, Arg23=defaultNamedOptArg
			, Arg24=defaultNamedOptArg, Arg25=defaultNamedOptArg, Arg26=defaultNamedOptArg, Arg27=defaultNamedOptArg, Arg28=defaultNamedOptArg
			, Arg29=defaultNamedOptArg, Arg30=defaultNamedOptArg):
		return self._ApplyTypes_(806, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), '_Run2', None,Macro
			, Arg1, Arg2, Arg3, Arg4, Arg5
			, Arg6, Arg7, Arg8, Arg9, Arg10
			, Arg11, Arg12, Arg13, Arg14, Arg15
			, Arg16, Arg17, Arg18, Arg19, Arg20
			, Arg21, Arg22, Arg23, Arg24, Arg25
			, Arg26, Arg27, Arg28, Arg29, Arg30
			)

	_prop_map_get_ = {
		# Method 'ActiveCell' returns object of type 'Range'
		"ActiveCell": (305, 2, (9, 0), (), "ActiveCell", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'ActiveChart' returns object of type 'Chart'
		"ActiveChart": (183, 2, (13, 0), (), "ActiveChart", '{00020821-0000-0000-C000-000000000046}'),
		# Method 'ActiveDialog' returns object of type 'DialogSheet'
		"ActiveDialog": (815, 2, (9, 0), (), "ActiveDialog", '{000208AF-0000-0000-C000-000000000046}'),
		# Method 'ActiveMenuBar' returns object of type 'MenuBar'
		"ActiveMenuBar": (758, 2, (9, 0), (), "ActiveMenuBar", '{00020864-0000-0000-C000-000000000046}'),
		"ActivePrinter": (306, 2, (8, 0), (), "ActivePrinter", None),
		"ActiveSheet": (307, 2, (9, 0), (), "ActiveSheet", None),
		# Method 'ActiveWindow' returns object of type 'Window'
		"ActiveWindow": (759, 2, (9, 0), (), "ActiveWindow", '{00020893-0000-0000-C000-000000000046}'),
		# Method 'ActiveWorkbook' returns object of type 'Workbook'
		"ActiveWorkbook": (308, 2, (13, 0), (), "ActiveWorkbook", '{00020819-0000-0000-C000-000000000046}'),
		# Method 'AddIns' returns object of type 'AddIns'
		"AddIns": (549, 2, (9, 0), (), "AddIns", '{00020858-0000-0000-C000-000000000046}'),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Assistant' returns object of type 'Assistant'
		"Assistant": (1438, 2, (9, 0), (), "Assistant", '{000C0322-0000-0000-C000-000000000046}'),
		# Method 'Cells' returns object of type 'Range'
		"Cells": (238, 2, (9, 0), (), "Cells", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'Charts' returns object of type 'Sheets'
		"Charts": (121, 2, (9, 0), (), "Charts", '{000208D7-0000-0000-C000-000000000046}'),
		# Method 'Columns' returns object of type 'Range'
		"Columns": (241, 2, (9, 0), (), "Columns", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'CommandBars' returns object of type 'CommandBars'
		"CommandBars": (1439, 2, (13, 0), (), "CommandBars", '{55F88893-7708-11D1-ACEB-006008961DA5}'),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"DDEAppReturnCode": (332, 2, (3, 0), (), "DDEAppReturnCode", None),
		# Method 'DialogSheets' returns object of type 'Sheets'
		"DialogSheets": (764, 2, (9, 0), (), "DialogSheets", '{000208D7-0000-0000-C000-000000000046}'),
		# Method 'Excel4IntlMacroSheets' returns object of type 'Sheets'
		"Excel4IntlMacroSheets": (581, 2, (9, 0), (), "Excel4IntlMacroSheets", '{000208D7-0000-0000-C000-000000000046}'),
		# Method 'Excel4MacroSheets' returns object of type 'Sheets'
		"Excel4MacroSheets": (579, 2, (9, 0), (), "Excel4MacroSheets", '{000208D7-0000-0000-C000-000000000046}'),
		# Method 'MenuBars' returns object of type 'MenuBars'
		"MenuBars": (589, 2, (9, 0), (), "MenuBars", '{00020863-0000-0000-C000-000000000046}'),
		# Method 'Modules' returns object of type 'Modules'
		"Modules": (582, 2, (9, 0), (), "Modules", '{000208AE-0000-0000-C000-000000000046}'),
		# Method 'Names' returns object of type 'Names'
		"Names": (442, 2, (9, 0), (), "Names", '{000208B8-0000-0000-C000-000000000046}'),
		# Method 'Parent' returns object of type 'Application'
		"Parent": (150, 2, (13, 0), (), "Parent", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'Rows' returns object of type 'Range'
		"Rows": (258, 2, (9, 0), (), "Rows", '{00020846-0000-0000-C000-000000000046}'),
		"Selection": (147, 2, (9, 0), (), "Selection", None),
		# Method 'Sheets' returns object of type 'Sheets'
		"Sheets": (485, 2, (9, 0), (), "Sheets", '{000208D7-0000-0000-C000-000000000046}'),
		# Method 'ThisWorkbook' returns object of type 'Workbook'
		"ThisWorkbook": (778, 2, (13, 0), (), "ThisWorkbook", '{00020819-0000-0000-C000-000000000046}'),
		# Method 'Toolbars' returns object of type 'Toolbars'
		"Toolbars": (552, 2, (9, 0), (), "Toolbars", '{0002085D-0000-0000-C000-000000000046}'),
		# Method 'Windows' returns object of type 'Windows'
		"Windows": (430, 2, (9, 0), (), "Windows", '{00020892-0000-0000-C000-000000000046}'),
		# Method 'Workbooks' returns object of type 'Workbooks'
		"Workbooks": (572, 2, (9, 0), (), "Workbooks", '{000208DB-0000-0000-C000-000000000046}'),
		# Method 'WorksheetFunction' returns object of type 'WorksheetFunction'
		"WorksheetFunction": (1440, 2, (9, 0), (), "WorksheetFunction", '{00020845-0000-0000-C000-000000000046}'),
		# Method 'Worksheets' returns object of type 'Sheets'
		"Worksheets": (494, 2, (9, 0), (), "Worksheets", '{000208D7-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
		"ActivePrinter": ((306, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class _IOLEObject(DispatchBaseClass):
	CLSID = IID('{000208A2-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AltHTML": (-2147416259, 2, (3, 0), ((16392, 10),), "AltHTML", None),
		"Application": (-2147417964, 2, (3, 0), ((16397, 10),), "Application", None),
		"AutoLoad": (-2147416926, 2, (3, 0), ((16395, 10),), "AutoLoad", None),
		"AutoUpdate": (-2147417064, 2, (3, 0), ((16395, 10),), "AutoUpdate", None),
		"Border": (-2147417984, 2, (3, 0), ((16393, 10),), "Border", None),
		"BottomRightCell": (-2147417497, 2, (3, 0), ((16393, 10),), "BottomRightCell", None),
		"Creator": (-2147417963, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Enabled": (-2147417512, 2, (3, 0), ((16395, 10),), "Enabled", None),
		"Height": (-2147417989, 2, (3, 0), ((16389, 10),), "Height", None),
		"Index": (-2147417626, 2, (3, 0), ((16387, 10),), "Index", None),
		"Interior": (-2147417983, 2, (3, 0), ((16393, 10),), "Interior", None),
		"Left": (-2147417985, 2, (3, 0), ((16389, 10),), "Left", None),
		"LinkedCell": (-2147417054, 2, (3, 0), ((16392, 10),), "LinkedCell", None),
		"ListFillRange": (-2147417265, 2, (3, 0), ((16392, 10),), "ListFillRange", None),
		"Locked": (-2147417843, 2, (3, 0), ((16395, 10),), "Locked", None),
		"Name": (-2147418002, 2, (3, 0), ((16392, 10),), "Name", None),
		"OLEType": (-2147417058, 2, (3, 0), ((16396, 10),), "OLEType", None),
		"Object": (-2147417063, 2, (3, 0), ((16393, 10),), "Object", None),
		"OnAction": (-2147417516, 2, (3, 0), ((16392, 10),), "OnAction", None),
		"Parent": (-2147417962, 2, (3, 0), ((16393, 10),), "Parent", None),
		"Placement": (-2147417495, 2, (3, 0), ((16396, 10),), "Placement", None),
		"PrintObject": (-2147417494, 2, (3, 0), ((16395, 10),), "PrintObject", None),
		"Shadow": (-2147418009, 2, (3, 0), ((16395, 10),), "Shadow", None),
		"ShapeRange": (-2147416584, 2, (3, 0), ((16393, 10),), "ShapeRange", None),
		"SourceName": (-2147417391, 2, (3, 0), ((16392, 10),), "SourceName", None),
		"Top": (-2147417986, 2, (3, 0), ((16389, 10),), "Top", None),
		"TopLeftCell": (-2147417492, 2, (3, 0), ((16393, 10),), "TopLeftCell", None),
		"Visible": (-2147417554, 2, (3, 0), ((16395, 10),), "Visible", None),
		"Width": (-2147417990, 2, (3, 0), ((16389, 10),), "Width", None),
		"ZOrder": (-2147417490, 2, (3, 0), ((16387, 10),), "ZOrder", None),
		"progID": (-2147416589, 2, (3, 0), ((16392, 10),), "progID", None),
	}
	_prop_map_put_ = {
		"AltHTML": ((-2147416259, LCID, 4, 0),()),
		"AutoLoad": ((-2147416926, LCID, 4, 0),()),
		"AutoUpdate": ((-2147417064, LCID, 4, 0),()),
		"Enabled": ((-2147417512, LCID, 4, 0),()),
		"Height": ((-2147417989, LCID, 4, 0),()),
		"Left": ((-2147417985, LCID, 4, 0),()),
		"LinkedCell": ((-2147417054, LCID, 4, 0),()),
		"ListFillRange": ((-2147417265, LCID, 4, 0),()),
		"Locked": ((-2147417843, LCID, 4, 0),()),
		"Name": ((-2147418002, LCID, 4, 0),()),
		"OnAction": ((-2147417516, LCID, 4, 0),()),
		"Placement": ((-2147417495, LCID, 4, 0),()),
		"PrintObject": ((-2147417494, LCID, 4, 0),()),
		"Shadow": ((-2147418009, LCID, 4, 0),()),
		"SourceName": ((-2147417391, LCID, 4, 0),()),
		"Top": ((-2147417986, LCID, 4, 0),()),
		"Visible": ((-2147417554, LCID, 4, 0),()),
		"Width": ((-2147417990, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class _IQueryTable(DispatchBaseClass):
	CLSID = IID('{00024428-0001-0000-C000-000000000046}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AdjustColumnWidth": (1868, 2, (3, 0), ((16395, 10),), "AdjustColumnWidth", None),
		"Application": (148, 2, (3, 0), ((16397, 10),), "Application", None),
		"BackgroundQuery": (1427, 2, (3, 0), ((16395, 10),), "BackgroundQuery", None),
		"CommandText": (1829, 2, (3, 0), ((16396, 10),), "CommandText", None),
		"CommandType": (1830, 2, (3, 0), ((16387, 10),), "CommandType", None),
		"Connection": (1432, 2, (3, 0), ((16396, 10),), "Connection", None),
		"Creator": (149, 2, (3, 0), ((16387, 10),), "Creator", None),
		"Destination": (681, 2, (3, 0), ((16393, 10),), "Destination", None),
		"EditWebPage": (2163, 2, (3, 0), ((16396, 10),), "EditWebPage", None),
		"EnableEditing": (1595, 2, (3, 0), ((16395, 10),), "EnableEditing", None),
		"EnableRefresh": (1477, 2, (3, 0), ((16395, 10),), "EnableRefresh", None),
		"FetchedRowOverflow": (1588, 2, (3, 0), ((16395, 10),), "FetchedRowOverflow", None),
		"FieldNames": (1584, 2, (3, 0), ((16395, 10),), "FieldNames", None),
		"FillAdjacentFormulas": (1586, 2, (3, 0), ((16395, 10),), "FillAdjacentFormulas", None),
		"HasAutoFormat": (695, 2, (3, 0), ((16395, 10),), "HasAutoFormat", None),
		"ListObject": (2257, 2, (3, 0), ((16393, 10),), "ListObject", None),
		"MaintainConnection": (1832, 2, (3, 0), ((16395, 10),), "MaintainConnection", None),
		"Name": (110, 2, (3, 0), ((16392, 10),), "Name", None),
		"Parameters": (1593, 2, (3, 0), ((16393, 10),), "Parameters", None),
		"Parent": (150, 2, (3, 0), ((16393, 10),), "Parent", None),
		"PostText": (1591, 2, (3, 0), ((16392, 10),), "PostText", None),
		"PreserveColumnInfo": (1867, 2, (3, 0), ((16395, 10),), "PreserveColumnInfo", None),
		"PreserveFormatting": (1500, 2, (3, 0), ((16395, 10),), "PreserveFormatting", None),
		"QueryType": (1831, 2, (3, 0), ((16387, 10),), "QueryType", None),
		"Recordset": (1165, 2, (3, 0), ((16393, 10),), "Recordset", None),
		"RefreshOnFileOpen": (1479, 2, (3, 0), ((16395, 10),), "RefreshOnFileOpen", None),
		"RefreshPeriod": (1833, 2, (3, 0), ((16387, 10),), "RefreshPeriod", None),
		"RefreshStyle": (1590, 2, (3, 0), ((16387, 10),), "RefreshStyle", None),
		"Refreshing": (1587, 2, (3, 0), ((16395, 10),), "Refreshing", None),
		"ResultRange": (1592, 2, (3, 0), ((16393, 10),), "ResultRange", None),
		"RobustConnect": (2081, 2, (3, 0), ((16387, 10),), "RobustConnect", None),
		"RowNumbers": (1585, 2, (3, 0), ((16395, 10),), "RowNumbers", None),
		"SaveData": (692, 2, (3, 0), ((16395, 10),), "SaveData", None),
		"SavePassword": (1481, 2, (3, 0), ((16395, 10),), "SavePassword", None),
		"Sort": (3288, 2, (3, 0), ((16393, 10),), "Sort", None),
		"SourceConnectionFile": (2079, 2, (3, 0), ((16392, 10),), "SourceConnectionFile", None),
		"SourceDataFile": (2080, 2, (3, 0), ((16392, 10),), "SourceDataFile", None),
		"Sql": (1480, 2, (3, 0), ((16396, 10),), "Sql", None),
		"TablesOnlyFromHTML": (1594, 2, (3, 0), ((16395, 10),), "TablesOnlyFromHTML", None),
		"TextFileColumnDataTypes": (1865, 2, (3, 0), ((16396, 10),), "TextFileColumnDataTypes", None),
		"TextFileCommaDelimiter": (1862, 2, (3, 0), ((16395, 10),), "TextFileCommaDelimiter", None),
		"TextFileConsecutiveDelimiter": (1859, 2, (3, 0), ((16395, 10),), "TextFileConsecutiveDelimiter", None),
		"TextFileDecimalSeparator": (1870, 2, (3, 0), ((16392, 10),), "TextFileDecimalSeparator", None),
		"TextFileFixedColumnWidths": (1866, 2, (3, 0), ((16396, 10),), "TextFileFixedColumnWidths", None),
		"TextFileOtherDelimiter": (1864, 2, (3, 0), ((16392, 10),), "TextFileOtherDelimiter", None),
		"TextFileParseType": (1857, 2, (3, 0), ((16387, 10),), "TextFileParseType", None),
		"TextFilePlatform": (1855, 2, (3, 0), ((16387, 10),), "TextFilePlatform", None),
		"TextFilePromptOnRefresh": (1869, 2, (3, 0), ((16395, 10),), "TextFilePromptOnRefresh", None),
		"TextFileSemicolonDelimiter": (1861, 2, (3, 0), ((16395, 10),), "TextFileSemicolonDelimiter", None),
		"TextFileSpaceDelimiter": (1863, 2, (3, 0), ((16395, 10),), "TextFileSpaceDelimiter", None),
		"TextFileStartRow": (1856, 2, (3, 0), ((16387, 10),), "TextFileStartRow", None),
		"TextFileTabDelimiter": (1860, 2, (3, 0), ((16395, 10),), "TextFileTabDelimiter", None),
		"TextFileTextQualifier": (1858, 2, (3, 0), ((16387, 10),), "TextFileTextQualifier", None),
		"TextFileThousandsSeparator": (1871, 2, (3, 0), ((16392, 10),), "TextFileThousandsSeparator", None),
		"TextFileTrailingMinusNumbers": (2164, 2, (3, 0), ((16395, 10),), "TextFileTrailingMinusNumbers", None),
		"TextFileVisualLayout": (2245, 2, (3, 0), ((16387, 10),), "TextFileVisualLayout", None),
		"WebConsecutiveDelimitersAsOne": (1878, 2, (3, 0), ((16395, 10),), "WebConsecutiveDelimitersAsOne", None),
		"WebDisableDateRecognition": (1877, 2, (3, 0), ((16395, 10),), "WebDisableDateRecognition", None),
		"WebDisableRedirections": (2162, 2, (3, 0), ((16395, 10),), "WebDisableRedirections", None),
		"WebFormatting": (1873, 2, (3, 0), ((16387, 10),), "WebFormatting", None),
		"WebPreFormattedTextToColumns": (1875, 2, (3, 0), ((16395, 10),), "WebPreFormattedTextToColumns", None),
		"WebSelectionType": (1872, 2, (3, 0), ((16387, 10),), "WebSelectionType", None),
		"WebSingleBlockTextImport": (1876, 2, (3, 0), ((16395, 10),), "WebSingleBlockTextImport", None),
		"WebTables": (1874, 2, (3, 0), ((16392, 10),), "WebTables", None),
		"WorkbookConnection": (2544, 2, (3, 0), ((16393, 10),), "WorkbookConnection", None),
		"_Sort": (880, 2, (3, 0), ((16393, 10),), "_Sort", None),
	}
	_prop_map_put_ = {
		"AdjustColumnWidth": ((1868, LCID, 4, 0),()),
		"BackgroundQuery": ((1427, LCID, 4, 0),()),
		"CommandText": ((1829, LCID, 4, 0),()),
		"CommandType": ((1830, LCID, 4, 0),()),
		"Connection": ((1432, LCID, 4, 0),()),
		"EditWebPage": ((2163, LCID, 4, 0),()),
		"EnableEditing": ((1595, LCID, 4, 0),()),
		"EnableRefresh": ((1477, LCID, 4, 0),()),
		"FieldNames": ((1584, LCID, 4, 0),()),
		"FillAdjacentFormulas": ((1586, LCID, 4, 0),()),
		"HasAutoFormat": ((695, LCID, 4, 0),()),
		"MaintainConnection": ((1832, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"PostText": ((1591, LCID, 4, 0),()),
		"PreserveColumnInfo": ((1867, LCID, 4, 0),()),
		"PreserveFormatting": ((1500, LCID, 4, 0),()),
		"Recordset": ((1165, LCID, 8, 0),()),
		"RefreshOnFileOpen": ((1479, LCID, 4, 0),()),
		"RefreshPeriod": ((1833, LCID, 4, 0),()),
		"RefreshStyle": ((1590, LCID, 4, 0),()),
		"RobustConnect": ((2081, LCID, 4, 0),()),
		"RowNumbers": ((1585, LCID, 4, 0),()),
		"SaveData": ((692, LCID, 4, 0),()),
		"SavePassword": ((1481, LCID, 4, 0),()),
		"SourceConnectionFile": ((2079, LCID, 4, 0),()),
		"SourceDataFile": ((2080, LCID, 4, 0),()),
		"Sql": ((1480, LCID, 4, 0),()),
		"TablesOnlyFromHTML": ((1594, LCID, 4, 0),()),
		"TextFileColumnDataTypes": ((1865, LCID, 4, 0),()),
		"TextFileCommaDelimiter": ((1862, LCID, 4, 0),()),
		"TextFileConsecutiveDelimiter": ((1859, LCID, 4, 0),()),
		"TextFileDecimalSeparator": ((1870, LCID, 4, 0),()),
		"TextFileFixedColumnWidths": ((1866, LCID, 4, 0),()),
		"TextFileOtherDelimiter": ((1864, LCID, 4, 0),()),
		"TextFileParseType": ((1857, LCID, 4, 0),()),
		"TextFilePlatform": ((1855, LCID, 4, 0),()),
		"TextFilePromptOnRefresh": ((1869, LCID, 4, 0),()),
		"TextFileSemicolonDelimiter": ((1861, LCID, 4, 0),()),
		"TextFileSpaceDelimiter": ((1863, LCID, 4, 0),()),
		"TextFileStartRow": ((1856, LCID, 4, 0),()),
		"TextFileTabDelimiter": ((1860, LCID, 4, 0),()),
		"TextFileTextQualifier": ((1858, LCID, 4, 0),()),
		"TextFileThousandsSeparator": ((1871, LCID, 4, 0),()),
		"TextFileTrailingMinusNumbers": ((2164, LCID, 4, 0),()),
		"TextFileVisualLayout": ((2245, LCID, 4, 0),()),
		"WebConsecutiveDelimitersAsOne": ((1878, LCID, 4, 0),()),
		"WebDisableDateRecognition": ((1877, LCID, 4, 0),()),
		"WebDisableRedirections": ((2162, LCID, 4, 0),()),
		"WebFormatting": ((1873, LCID, 4, 0),()),
		"WebPreFormattedTextToColumns": ((1875, LCID, 4, 0),()),
		"WebSelectionType": ((1872, LCID, 4, 0),()),
		"WebSingleBlockTextImport": ((1876, LCID, 4, 0),()),
		"WebTables": ((1874, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class _OLEObject(DispatchBaseClass):
	CLSID = IID('{000208A2-0000-0000-C000-000000000046}')
	coclass_clsid = IID('{00020818-0000-0000-C000-000000000046}')

	def Activate(self):
		return self._ApplyTypes_(-2147417808, 1, (12, 0), (), 'Activate', None,)

	def BringToFront(self):
		return self._ApplyTypes_(-2147417510, 1, (12, 0), (), 'BringToFront', None,)

	def Copy(self):
		return self._ApplyTypes_(-2147417561, 1, (12, 0), (), 'Copy', None,)

	def CopyPicture(self, Appearance=2, Format=-4147):
		return self._ApplyTypes_(-2147417899, 1, (12, 0), ((3, 49), (3, 49)), 'CopyPicture', None,Appearance
			, Format)

	def Cut(self):
		return self._ApplyTypes_(-2147417547, 1, (12, 0), (), 'Cut', None,)

	def Delete(self):
		return self._ApplyTypes_(-2147417995, 1, (12, 0), (), 'Delete', None,)

	def Duplicate(self):
		ret = self._oleobj_.InvokeTypes(-2147417073, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Duplicate', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._ApplyTypes_(-2147417877, 1, (12, 0), ((12, 17),), 'Select', None,Replace
			)

	def SendToBack(self):
		return self._ApplyTypes_(-2147417507, 1, (12, 0), (), 'SendToBack', None,)

	def Update(self):
		return self._ApplyTypes_(-2147417432, 1, (12, 0), (), 'Update', None,)

	def Verb(self, Verb=1):
		return self._ApplyTypes_(-2147417506, 1, (12, 0), ((3, 49),), 'Verb', None,Verb
			)

	_prop_map_get_ = {
		"AltHTML": (-2147416259, 2, (8, 0), (), "AltHTML", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (-2147417964, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"AutoLoad": (-2147416926, 2, (11, 0), (), "AutoLoad", None),
		"AutoUpdate": (-2147417064, 2, (11, 0), (), "AutoUpdate", None),
		# Method 'Border' returns object of type 'Border'
		"Border": (-2147417984, 2, (9, 0), (), "Border", '{00020854-0000-0000-C000-000000000046}'),
		# Method 'BottomRightCell' returns object of type 'Range'
		"BottomRightCell": (-2147417497, 2, (9, 0), (), "BottomRightCell", '{00020846-0000-0000-C000-000000000046}'),
		"Creator": (-2147417963, 2, (3, 0), (), "Creator", None),
		"Enabled": (-2147417512, 2, (11, 0), (), "Enabled", None),
		"Height": (-2147417989, 2, (5, 0), (), "Height", None),
		"Index": (-2147417626, 2, (3, 0), (), "Index", None),
		# Method 'Interior' returns object of type 'Interior'
		"Interior": (-2147417983, 2, (9, 0), (), "Interior", '{00020870-0000-0000-C000-000000000046}'),
		"Left": (-2147417985, 2, (5, 0), (), "Left", None),
		"LinkedCell": (-2147417054, 2, (8, 0), (), "LinkedCell", None),
		"ListFillRange": (-2147417265, 2, (8, 0), (), "ListFillRange", None),
		"Locked": (-2147417843, 2, (11, 0), (), "Locked", None),
		"Name": (-2147418002, 2, (8, 0), (), "Name", None),
		"OLEType": (-2147417058, 2, (12, 0), (), "OLEType", None),
		"Object": (-2147417063, 2, (9, 0), (), "Object", None),
		"OnAction": (-2147417516, 2, (8, 0), (), "OnAction", None),
		"Parent": (-2147417962, 2, (9, 0), (), "Parent", None),
		"Placement": (-2147417495, 2, (12, 0), (), "Placement", None),
		"PrintObject": (-2147417494, 2, (11, 0), (), "PrintObject", None),
		"Shadow": (-2147418009, 2, (11, 0), (), "Shadow", None),
		# Method 'ShapeRange' returns object of type 'ShapeRange'
		"ShapeRange": (-2147416584, 2, (9, 0), (), "ShapeRange", '{0002443B-0000-0000-C000-000000000046}'),
		"SourceName": (-2147417391, 2, (8, 0), (), "SourceName", None),
		"Top": (-2147417986, 2, (5, 0), (), "Top", None),
		# Method 'TopLeftCell' returns object of type 'Range'
		"TopLeftCell": (-2147417492, 2, (9, 0), (), "TopLeftCell", '{00020846-0000-0000-C000-000000000046}'),
		"Visible": (-2147417554, 2, (11, 0), (), "Visible", None),
		"Width": (-2147417990, 2, (5, 0), (), "Width", None),
		"ZOrder": (-2147417490, 2, (3, 0), (), "ZOrder", None),
		"progID": (-2147416589, 2, (8, 0), (), "progID", None),
	}
	_prop_map_put_ = {
		"AltHTML": ((-2147416259, LCID, 4, 0),()),
		"AutoLoad": ((-2147416926, LCID, 4, 0),()),
		"AutoUpdate": ((-2147417064, LCID, 4, 0),()),
		"Enabled": ((-2147417512, LCID, 4, 0),()),
		"Height": ((-2147417989, LCID, 4, 0),()),
		"Left": ((-2147417985, LCID, 4, 0),()),
		"LinkedCell": ((-2147417054, LCID, 4, 0),()),
		"ListFillRange": ((-2147417265, LCID, 4, 0),()),
		"Locked": ((-2147417843, LCID, 4, 0),()),
		"Name": ((-2147418002, LCID, 4, 0),()),
		"OnAction": ((-2147417516, LCID, 4, 0),()),
		"Placement": ((-2147417495, LCID, 4, 0),()),
		"PrintObject": ((-2147417494, LCID, 4, 0),()),
		"Shadow": ((-2147418009, LCID, 4, 0),()),
		"SourceName": ((-2147417391, LCID, 4, 0),()),
		"Top": ((-2147417986, LCID, 4, 0),()),
		"Visible": ((-2147417554, LCID, 4, 0),()),
		"Width": ((-2147417990, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class _QueryTable(DispatchBaseClass):
	CLSID = IID('{00024428-0000-0000-C000-000000000046}')
	coclass_clsid = IID('{59191DA1-EA47-11CE-A51F-00AA0061507F}')

	def CancelRefresh(self):
		return self._oleobj_.InvokeTypes(1589, LCID, 1, (24, 0), (),)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def Refresh(self, BackgroundQuery=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1417, LCID, 1, (11, 0), ((12, 17),),BackgroundQuery
			)

	def ResetTimer(self):
		return self._oleobj_.InvokeTypes(1834, LCID, 1, (24, 0), (),)

	def SaveAsODC(self, ODCFileName=defaultNamedNotOptArg, Description=defaultNamedOptArg, Keywords=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2082, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17)),ODCFileName
			, Description, Keywords)

	_prop_map_get_ = {
		"AdjustColumnWidth": (1868, 2, (11, 0), (), "AdjustColumnWidth", None),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"BackgroundQuery": (1427, 2, (11, 0), (), "BackgroundQuery", None),
		"CommandText": (1829, 2, (12, 0), (), "CommandText", None),
		"CommandType": (1830, 2, (3, 0), (), "CommandType", None),
		"Connection": (1432, 2, (12, 0), (), "Connection", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'Destination' returns object of type 'Range'
		"Destination": (681, 2, (9, 0), (), "Destination", '{00020846-0000-0000-C000-000000000046}'),
		"EditWebPage": (2163, 2, (12, 0), (), "EditWebPage", None),
		"EnableEditing": (1595, 2, (11, 0), (), "EnableEditing", None),
		"EnableRefresh": (1477, 2, (11, 0), (), "EnableRefresh", None),
		"FetchedRowOverflow": (1588, 2, (11, 0), (), "FetchedRowOverflow", None),
		"FieldNames": (1584, 2, (11, 0), (), "FieldNames", None),
		"FillAdjacentFormulas": (1586, 2, (11, 0), (), "FillAdjacentFormulas", None),
		"HasAutoFormat": (695, 2, (11, 0), (), "HasAutoFormat", None),
		# Method 'ListObject' returns object of type 'ListObject'
		"ListObject": (2257, 2, (9, 0), (), "ListObject", '{00024471-0000-0000-C000-000000000046}'),
		"MaintainConnection": (1832, 2, (11, 0), (), "MaintainConnection", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		# Method 'Parameters' returns object of type 'Parameters'
		"Parameters": (1593, 2, (9, 0), (), "Parameters", '{0002442B-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"PostText": (1591, 2, (8, 0), (), "PostText", None),
		"PreserveColumnInfo": (1867, 2, (11, 0), (), "PreserveColumnInfo", None),
		"PreserveFormatting": (1500, 2, (11, 0), (), "PreserveFormatting", None),
		"QueryType": (1831, 2, (3, 0), (), "QueryType", None),
		"Recordset": (1165, 2, (9, 0), (), "Recordset", None),
		"RefreshOnFileOpen": (1479, 2, (11, 0), (), "RefreshOnFileOpen", None),
		"RefreshPeriod": (1833, 2, (3, 0), (), "RefreshPeriod", None),
		"RefreshStyle": (1590, 2, (3, 0), (), "RefreshStyle", None),
		"Refreshing": (1587, 2, (11, 0), (), "Refreshing", None),
		# Method 'ResultRange' returns object of type 'Range'
		"ResultRange": (1592, 2, (9, 0), (), "ResultRange", '{00020846-0000-0000-C000-000000000046}'),
		"RobustConnect": (2081, 2, (3, 0), (), "RobustConnect", None),
		"RowNumbers": (1585, 2, (11, 0), (), "RowNumbers", None),
		"SaveData": (692, 2, (11, 0), (), "SaveData", None),
		"SavePassword": (1481, 2, (11, 0), (), "SavePassword", None),
		# Method 'Sort' returns object of type 'Sort'
		"Sort": (3288, 2, (9, 0), (), "Sort", '{000244AB-0000-0000-C000-000000000046}'),
		"SourceConnectionFile": (2079, 2, (8, 0), (), "SourceConnectionFile", None),
		"SourceDataFile": (2080, 2, (8, 0), (), "SourceDataFile", None),
		"Sql": (1480, 2, (12, 0), (), "Sql", None),
		"TablesOnlyFromHTML": (1594, 2, (11, 0), (), "TablesOnlyFromHTML", None),
		"TextFileColumnDataTypes": (1865, 2, (12, 0), (), "TextFileColumnDataTypes", None),
		"TextFileCommaDelimiter": (1862, 2, (11, 0), (), "TextFileCommaDelimiter", None),
		"TextFileConsecutiveDelimiter": (1859, 2, (11, 0), (), "TextFileConsecutiveDelimiter", None),
		"TextFileDecimalSeparator": (1870, 2, (8, 0), (), "TextFileDecimalSeparator", None),
		"TextFileFixedColumnWidths": (1866, 2, (12, 0), (), "TextFileFixedColumnWidths", None),
		"TextFileOtherDelimiter": (1864, 2, (8, 0), (), "TextFileOtherDelimiter", None),
		"TextFileParseType": (1857, 2, (3, 0), (), "TextFileParseType", None),
		"TextFilePlatform": (1855, 2, (3, 0), (), "TextFilePlatform", None),
		"TextFilePromptOnRefresh": (1869, 2, (11, 0), (), "TextFilePromptOnRefresh", None),
		"TextFileSemicolonDelimiter": (1861, 2, (11, 0), (), "TextFileSemicolonDelimiter", None),
		"TextFileSpaceDelimiter": (1863, 2, (11, 0), (), "TextFileSpaceDelimiter", None),
		"TextFileStartRow": (1856, 2, (3, 0), (), "TextFileStartRow", None),
		"TextFileTabDelimiter": (1860, 2, (11, 0), (), "TextFileTabDelimiter", None),
		"TextFileTextQualifier": (1858, 2, (3, 0), (), "TextFileTextQualifier", None),
		"TextFileThousandsSeparator": (1871, 2, (8, 0), (), "TextFileThousandsSeparator", None),
		"TextFileTrailingMinusNumbers": (2164, 2, (11, 0), (), "TextFileTrailingMinusNumbers", None),
		"TextFileVisualLayout": (2245, 2, (3, 0), (), "TextFileVisualLayout", None),
		"WebConsecutiveDelimitersAsOne": (1878, 2, (11, 0), (), "WebConsecutiveDelimitersAsOne", None),
		"WebDisableDateRecognition": (1877, 2, (11, 0), (), "WebDisableDateRecognition", None),
		"WebDisableRedirections": (2162, 2, (11, 0), (), "WebDisableRedirections", None),
		"WebFormatting": (1873, 2, (3, 0), (), "WebFormatting", None),
		"WebPreFormattedTextToColumns": (1875, 2, (11, 0), (), "WebPreFormattedTextToColumns", None),
		"WebSelectionType": (1872, 2, (3, 0), (), "WebSelectionType", None),
		"WebSingleBlockTextImport": (1876, 2, (11, 0), (), "WebSingleBlockTextImport", None),
		"WebTables": (1874, 2, (8, 0), (), "WebTables", None),
		# Method 'WorkbookConnection' returns object of type 'WorkbookConnection'
		"WorkbookConnection": (2544, 2, (9, 0), (), "WorkbookConnection", '{00024485-0000-0000-C000-000000000046}'),
		# Method '_Sort' returns object of type 'Sort'
		"_Sort": (880, 2, (9, 0), (), "_Sort", '{000244AB-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
		"AdjustColumnWidth": ((1868, LCID, 4, 0),()),
		"BackgroundQuery": ((1427, LCID, 4, 0),()),
		"CommandText": ((1829, LCID, 4, 0),()),
		"CommandType": ((1830, LCID, 4, 0),()),
		"Connection": ((1432, LCID, 4, 0),()),
		"EditWebPage": ((2163, LCID, 4, 0),()),
		"EnableEditing": ((1595, LCID, 4, 0),()),
		"EnableRefresh": ((1477, LCID, 4, 0),()),
		"FieldNames": ((1584, LCID, 4, 0),()),
		"FillAdjacentFormulas": ((1586, LCID, 4, 0),()),
		"HasAutoFormat": ((695, LCID, 4, 0),()),
		"MaintainConnection": ((1832, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"PostText": ((1591, LCID, 4, 0),()),
		"PreserveColumnInfo": ((1867, LCID, 4, 0),()),
		"PreserveFormatting": ((1500, LCID, 4, 0),()),
		"Recordset": ((1165, LCID, 8, 0),()),
		"RefreshOnFileOpen": ((1479, LCID, 4, 0),()),
		"RefreshPeriod": ((1833, LCID, 4, 0),()),
		"RefreshStyle": ((1590, LCID, 4, 0),()),
		"RobustConnect": ((2081, LCID, 4, 0),()),
		"RowNumbers": ((1585, LCID, 4, 0),()),
		"SaveData": ((692, LCID, 4, 0),()),
		"SavePassword": ((1481, LCID, 4, 0),()),
		"SourceConnectionFile": ((2079, LCID, 4, 0),()),
		"SourceDataFile": ((2080, LCID, 4, 0),()),
		"Sql": ((1480, LCID, 4, 0),()),
		"TablesOnlyFromHTML": ((1594, LCID, 4, 0),()),
		"TextFileColumnDataTypes": ((1865, LCID, 4, 0),()),
		"TextFileCommaDelimiter": ((1862, LCID, 4, 0),()),
		"TextFileConsecutiveDelimiter": ((1859, LCID, 4, 0),()),
		"TextFileDecimalSeparator": ((1870, LCID, 4, 0),()),
		"TextFileFixedColumnWidths": ((1866, LCID, 4, 0),()),
		"TextFileOtherDelimiter": ((1864, LCID, 4, 0),()),
		"TextFileParseType": ((1857, LCID, 4, 0),()),
		"TextFilePlatform": ((1855, LCID, 4, 0),()),
		"TextFilePromptOnRefresh": ((1869, LCID, 4, 0),()),
		"TextFileSemicolonDelimiter": ((1861, LCID, 4, 0),()),
		"TextFileSpaceDelimiter": ((1863, LCID, 4, 0),()),
		"TextFileStartRow": ((1856, LCID, 4, 0),()),
		"TextFileTabDelimiter": ((1860, LCID, 4, 0),()),
		"TextFileTextQualifier": ((1858, LCID, 4, 0),()),
		"TextFileThousandsSeparator": ((1871, LCID, 4, 0),()),
		"TextFileTrailingMinusNumbers": ((2164, LCID, 4, 0),()),
		"TextFileVisualLayout": ((2245, LCID, 4, 0),()),
		"WebConsecutiveDelimitersAsOne": ((1878, LCID, 4, 0),()),
		"WebDisableDateRecognition": ((1877, LCID, 4, 0),()),
		"WebDisableRedirections": ((2162, LCID, 4, 0),()),
		"WebFormatting": ((1873, LCID, 4, 0),()),
		"WebPreFormattedTextToColumns": ((1875, LCID, 4, 0),()),
		"WebSelectionType": ((1872, LCID, 4, 0),()),
		"WebSingleBlockTextImport": ((1876, LCID, 4, 0),()),
		"WebTables": ((1874, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class _Workbook(DispatchBaseClass):
	CLSID = IID('{000208DA-0000-0000-C000-000000000046}')
	coclass_clsid = IID('{00020819-0000-0000-C000-000000000046}')

	def AcceptAllChanges(self, When=defaultNamedOptArg, Who=defaultNamedOptArg, Where=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1466, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17)),When
			, Who, Where)

	def Activate(self):
		return self._oleobj_.InvokeTypes(304, LCID, 1, (24, 0), (),)

	def AddToFavorites(self):
		return self._oleobj_.InvokeTypes(1476, LCID, 1, (24, 0), (),)

	def ApplyTheme(self, Filename=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2534, LCID, 1, (24, 0), ((8, 1),),Filename
			)

	def BreakLink(self, Name=defaultNamedNotOptArg, Type=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2047, LCID, 1, (24, 0), ((8, 1), (3, 1)),Name
			, Type)

	def CanCheckIn(self):
		return self._oleobj_.InvokeTypes(2053, LCID, 1, (11, 0), (),)

	def ChangeFileAccess(self, Mode=defaultNamedNotOptArg, WritePassword=defaultNamedOptArg, Notify=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(989, LCID, 1, (24, 0), ((3, 1), (12, 17), (12, 17)),Mode
			, WritePassword, Notify)

	def ChangeLink(self, Name=defaultNamedNotOptArg, NewName=defaultNamedNotOptArg, Type=1):
		return self._oleobj_.InvokeTypes(802, LCID, 1, (24, 0), ((8, 1), (8, 1), (3, 49)),Name
			, NewName, Type)

	def CheckIn(self, SaveChanges=defaultNamedOptArg, Comments=defaultNamedOptArg, MakePublic=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2051, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17)),SaveChanges
			, Comments, MakePublic)

	def CheckInWithVersion(self, SaveChanges=defaultNamedOptArg, Comments=defaultNamedOptArg, MakePublic=defaultNamedOptArg, VersionType=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2517, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17)),SaveChanges
			, Comments, MakePublic, VersionType)

	def Close(self, SaveChanges=defaultNamedOptArg, Filename=defaultNamedOptArg, RouteWorkbook=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(277, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17)),SaveChanges
			, Filename, RouteWorkbook)

	def ConvertComments(self):
		return self._oleobj_.InvokeTypes(3279, LCID, 1, (24, 0), (),)

	def CreateForecastSheet(self, Timeline=defaultNamedNotOptArg, Values=defaultNamedNotOptArg, ForecastStart=defaultNamedOptArg, ForecastEnd=defaultNamedOptArg
			, ConfInt=defaultNamedOptArg, Seasonality=defaultNamedOptArg, DataCompletion=defaultNamedOptArg, Aggregation=defaultNamedOptArg, ChartType=defaultNamedOptArg
			, ShowStatsTable=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(3167, LCID, 1, (24, 0), ((9, 1), (9, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Timeline
			, Values, ForecastStart, ForecastEnd, ConfInt, Seasonality
			, DataCompletion, Aggregation, ChartType, ShowStatsTable)

	def DeleteNumberFormat(self, NumberFormat=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(397, LCID, 1, (24, 0), ((8, 1),),NumberFormat
			)

	def Dummy16(self):
		return self._oleobj_.InvokeTypes(2048, LCID, 1, (24, 0), (),)

	def Dummy17(self, calcid=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2044, LCID, 1, (24, 0), ((3, 1),),calcid
			)

	def Dummy26(self):
		return self._oleobj_.InvokeTypes(2869, LCID, 1, (24, 0), (),)

	def Dummy27(self):
		return self._oleobj_.InvokeTypes(2870, LCID, 1, (24, 0), (),)

	def EnableConnections(self):
		return self._oleobj_.InvokeTypes(2537, LCID, 1, (24, 0), (),)

	def EndReview(self):
		return self._oleobj_.InvokeTypes(2058, LCID, 1, (24, 0), (),)

	def ExclusiveAccess(self):
		return self._oleobj_.InvokeTypes(1168, LCID, 1, (11, 0), (),)

	def ExportAsFixedFormat(self, Type=defaultNamedNotOptArg, Filename=defaultNamedOptArg, Quality=defaultNamedOptArg, IncludeDocProperties=defaultNamedOptArg
			, IgnorePrintAreas=defaultNamedOptArg, From=defaultNamedOptArg, To=defaultNamedOptArg, OpenAfterPublish=defaultNamedOptArg, FixedFormatExtClassPtr=defaultNamedOptArg
			, WorkIdentity=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(3175, LCID, 1, (24, 0), ((3, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Type
			, Filename, Quality, IncludeDocProperties, IgnorePrintAreas, From
			, To, OpenAfterPublish, FixedFormatExtClassPtr, WorkIdentity)

	def FollowHyperlink(self, Address=defaultNamedNotOptArg, SubAddress=defaultNamedOptArg, NewWindow=defaultNamedOptArg, AddHistory=defaultNamedOptArg
			, ExtraInfo=defaultNamedOptArg, Method=defaultNamedOptArg, HeaderInfo=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1470, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Address
			, SubAddress, NewWindow, AddHistory, ExtraInfo, Method
			, HeaderInfo)

	def ForwardMailer(self):
		return self._oleobj_.InvokeTypes(973, LCID, 1, (24, 0), (),)

	# The method GetColors is actually a property, but must be used as a method to correctly pass the arguments
	def GetColors(self, Index=defaultNamedOptArg):
		return self._ApplyTypes_(286, 2, (12, 0), ((12, 17),), 'GetColors', None,Index
			)

	# Result is of type WorkflowTasks
	def GetWorkflowTasks(self):
		ret = self._oleobj_.InvokeTypes(2522, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetWorkflowTasks', '{000CD901-0000-0000-C000-000000000046}')
		return ret

	# Result is of type WorkflowTemplates
	def GetWorkflowTemplates(self):
		ret = self._oleobj_.InvokeTypes(2523, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetWorkflowTemplates', '{000CD903-0000-0000-C000-000000000046}')
		return ret

	def HighlightChangesOptions(self, When=defaultNamedOptArg, Who=defaultNamedOptArg, Where=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1458, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17)),When
			, Who, Where)

	def LinkInfo(self, Name=defaultNamedNotOptArg, LinkInfo=defaultNamedNotOptArg, Type=defaultNamedOptArg, EditionRef=defaultNamedOptArg):
		return self._ApplyTypes_(807, 1, (12, 0), ((8, 1), (3, 1), (12, 17), (12, 17)), 'LinkInfo', None,Name
			, LinkInfo, Type, EditionRef)

	def LinkSources(self, Type=defaultNamedOptArg):
		return self._ApplyTypes_(808, 1, (12, 0), ((12, 17),), 'LinkSources', None,Type
			)

	def LockServerFile(self):
		return self._oleobj_.InvokeTypes(2520, LCID, 1, (24, 0), (),)

	# Result is of type PublishedDocs
	def LookUpInDocs(self, Filename=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(3335, LCID, 1, (9, 0), ((12, 17),),Filename
			)
		if ret is not None:
			ret = Dispatch(ret, 'LookUpInDocs', '{000244F7-0000-0000-C000-000000000046}')
		return ret

	def MergeWorkbook(self, Filename=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1446, LCID, 1, (24, 0), ((12, 1),),Filename
			)

	# Result is of type Window
	def NewWindow(self):
		ret = self._oleobj_.InvokeTypes(280, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'NewWindow', '{00020893-0000-0000-C000-000000000046}')
		return ret

	def OpenLinks(self, Name=defaultNamedNotOptArg, ReadOnly=defaultNamedOptArg, Type=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(803, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17)),Name
			, ReadOnly, Type)

	# Result is of type PivotCaches
	def PivotCaches(self):
		ret = self._oleobj_.InvokeTypes(1449, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'PivotCaches', '{0002441D-0000-0000-C000-000000000046}')
		return ret

	def PivotTableWizard(self, SourceType=defaultNamedOptArg, SourceData=defaultNamedOptArg, TableDestination=defaultNamedOptArg, TableName=defaultNamedOptArg
			, RowGrand=defaultNamedOptArg, ColumnGrand=defaultNamedOptArg, SaveData=defaultNamedOptArg, HasAutoFormat=defaultNamedOptArg, AutoPage=defaultNamedOptArg
			, Reserved=defaultNamedOptArg, BackgroundQuery=defaultNamedOptArg, OptimizeCache=defaultNamedOptArg, PageFieldOrder=defaultNamedOptArg, PageFieldWrapCount=defaultNamedOptArg
			, ReadData=defaultNamedOptArg, Connection=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(684, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),SourceType
			, SourceData, TableDestination, TableName, RowGrand, ColumnGrand
			, SaveData, HasAutoFormat, AutoPage, Reserved, BackgroundQuery
			, OptimizeCache, PageFieldOrder, PageFieldWrapCount, ReadData, Connection
			)

	def Post(self, DestName=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1166, LCID, 1, (24, 0), ((12, 17),),DestName
			)

	def PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg, IgnorePrintAreas=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2361, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName, IgnorePrintAreas)

	def PrintPreview(self, EnableChanges=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(281, LCID, 1, (24, 0), ((12, 17),),EnableChanges
			)

	def Protect(self, Password=defaultNamedOptArg, Structure=defaultNamedOptArg, Windows=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2029, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17)),Password
			, Structure, Windows)

	def ProtectSharing(self, Filename=defaultNamedOptArg, Password=defaultNamedOptArg, WriteResPassword=defaultNamedOptArg, ReadOnlyRecommended=defaultNamedOptArg
			, CreateBackup=defaultNamedOptArg, SharingPassword=defaultNamedOptArg, FileFormat=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2543, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup, SharingPassword
			, FileFormat)

	def PublishToDocs(self, Title=defaultNamedNotOptArg, DisclosureScope=defaultNamedNotOptArg, OverwriteUrl=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(3334, LCID, 1, (8, 0), ((8, 1), (3, 1), (12, 17)),Title
			, DisclosureScope, OverwriteUrl)

	def PublishToPBI(self, PublishType=defaultNamedOptArg, nameConflict=defaultNamedOptArg, bstrGroupName=defaultNamedOptArg):
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(3257, LCID, 1, (8, 0), ((12, 17), (12, 17), (12, 17)),PublishType
			, nameConflict, bstrGroupName)

	def PurgeChangeHistoryNow(self, Days=defaultNamedNotOptArg, SharingPassword=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1464, LCID, 1, (24, 0), ((3, 1), (12, 17)),Days
			, SharingPassword)

	def RecheckSmartTags(self):
		return self._oleobj_.InvokeTypes(2065, LCID, 1, (24, 0), (),)

	def RefreshAll(self):
		return self._oleobj_.InvokeTypes(1452, LCID, 1, (24, 0), (),)

	def RejectAllChanges(self, When=defaultNamedOptArg, Who=defaultNamedOptArg, Where=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1467, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17)),When
			, Who, Where)

	def ReloadAs(self, Encoding=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1821, LCID, 1, (24, 0), ((3, 1),),Encoding
			)

	def RemoveDocumentInformation(self, RemoveDocInfoType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2514, LCID, 1, (24, 0), ((3, 1),),RemoveDocInfoType
			)

	def RemoveUser(self, Index=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1453, LCID, 1, (24, 0), ((3, 1),),Index
			)

	def Reply(self):
		return self._oleobj_.InvokeTypes(977, LCID, 1, (24, 0), (),)

	def ReplyAll(self):
		return self._oleobj_.InvokeTypes(978, LCID, 1, (24, 0), (),)

	def ReplyWithChanges(self, ShowMessage=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2057, LCID, 1, (24, 0), ((12, 17),),ShowMessage
			)

	def ResetColors(self):
		return self._oleobj_.InvokeTypes(1468, LCID, 1, (24, 0), (),)

	def Route(self):
		return self._oleobj_.InvokeTypes(946, LCID, 1, (24, 0), (),)

	def RunAutoMacros(self, Which=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(634, LCID, 1, (24, 0), ((3, 1),),Which
			)

	def Save(self):
		return self._oleobj_.InvokeTypes(283, LCID, 1, (24, 0), (),)

	def SaveAs(self, Filename=defaultNamedNotOptArg, FileFormat=defaultNamedNotOptArg, Password=defaultNamedNotOptArg, WriteResPassword=defaultNamedNotOptArg
			, ReadOnlyRecommended=defaultNamedNotOptArg, CreateBackup=defaultNamedNotOptArg, AccessMode=1, ConflictResolution=defaultNamedOptArg, AddToMru=defaultNamedOptArg
			, TextCodepage=defaultNamedOptArg, TextVisualLayout=defaultNamedOptArg, Local=defaultNamedOptArg, WorkIdentity=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(3174, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (3, 49), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup
			, AccessMode, ConflictResolution, AddToMru, TextCodepage, TextVisualLayout
			, Local, WorkIdentity)

	def SaveAsXMLData(self, Filename=defaultNamedNotOptArg, Map=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(2278, LCID, 1, (24, 0), ((8, 1), (9, 1)),Filename
			, Map)

	def SaveCopyAs(self, Filename=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(175, LCID, 1, (24, 0), ((12, 17),),Filename
			)

	def SendFaxOverInternet(self, Recipients=defaultNamedOptArg, Subject=defaultNamedOptArg, ShowMessage=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2267, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17)),Recipients
			, Subject, ShowMessage)

	def SendForReview(self, Recipients=defaultNamedOptArg, Subject=defaultNamedOptArg, ShowMessage=defaultNamedOptArg, IncludeAttachment=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2054, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17)),Recipients
			, Subject, ShowMessage, IncludeAttachment)

	def SendMail(self, Recipients=defaultNamedNotOptArg, Subject=defaultNamedOptArg, ReturnReceipt=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(947, LCID, 1, (24, 0), ((12, 1), (12, 17), (12, 17)),Recipients
			, Subject, ReturnReceipt)

	def SendMailer(self, FileFormat=defaultNamedNotOptArg, Priority=-4143):
		return self._oleobj_.InvokeTypes(980, LCID, 1, (24, 0), ((12, 17), (3, 49)),FileFormat
			, Priority)

	# The method SetColors is actually a property, but must be used as a method to correctly pass the arguments
	def SetColors(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		return self._oleobj_.InvokeTypes(286, LCID, 4, (24, 0), ((12, 17), (12, 1)),Index
			, arg1)

	def SetLinkOnData(self, Name=defaultNamedNotOptArg, Procedure=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(809, LCID, 1, (24, 0), ((8, 1), (12, 17)),Name
			, Procedure)

	def SetPasswordEncryptionOptions(self, PasswordEncryptionProvider=defaultNamedOptArg, PasswordEncryptionAlgorithm=defaultNamedOptArg, PasswordEncryptionKeyLength=defaultNamedOptArg, PasswordEncryptionFileProperties=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2062, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17)),PasswordEncryptionProvider
			, PasswordEncryptionAlgorithm, PasswordEncryptionKeyLength, PasswordEncryptionFileProperties)

	def ToggleFormsDesign(self):
		return self._oleobj_.InvokeTypes(2279, LCID, 1, (24, 0), (),)

	def Unprotect(self, Password=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(285, LCID, 1, (24, 0), ((12, 17),),Password
			)

	def UnprotectSharing(self, SharingPassword=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1455, LCID, 1, (24, 0), ((12, 17),),SharingPassword
			)

	def UpdateFromFile(self):
		return self._oleobj_.InvokeTypes(995, LCID, 1, (24, 0), (),)

	def UpdateLink(self, Name=defaultNamedOptArg, Type=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(804, LCID, 1, (24, 0), ((12, 17), (12, 17)),Name
			, Type)

	def WebPagePreview(self):
		return self._oleobj_.InvokeTypes(1818, LCID, 1, (24, 0), (),)

	def XmlImport(self, Url=defaultNamedNotOptArg, ImportMap=pythoncom.Missing, Overwrite=defaultNamedOptArg, Destination=defaultNamedOptArg):
		return self._ApplyTypes_(2270, 1, (3, 0), ((8, 1), (16393, 2), (12, 17), (12, 17)), 'XmlImport', None,Url
			, ImportMap, Overwrite, Destination)

	def XmlImportXml(self, Data=defaultNamedNotOptArg, ImportMap=pythoncom.Missing, Overwrite=defaultNamedOptArg, Destination=defaultNamedOptArg):
		return self._ApplyTypes_(2277, 1, (3, 0), ((8, 1), (16393, 2), (12, 17), (12, 17)), 'XmlImportXml', None,Data
			, ImportMap, Overwrite, Destination)

	def _ExportAsFixedFormat(self, Type=defaultNamedNotOptArg, Filename=defaultNamedOptArg, Quality=defaultNamedOptArg, IncludeDocProperties=defaultNamedOptArg
			, IgnorePrintAreas=defaultNamedOptArg, From=defaultNamedOptArg, To=defaultNamedOptArg, OpenAfterPublish=defaultNamedOptArg, FixedFormatExtClassPtr=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2493, LCID, 1, (24, 0), ((3, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Type
			, Filename, Quality, IncludeDocProperties, IgnorePrintAreas, From
			, To, OpenAfterPublish, FixedFormatExtClassPtr)

	def _PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1772, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName)

	def _Protect(self, Password=defaultNamedOptArg, Structure=defaultNamedOptArg, Windows=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(282, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17)),Password
			, Structure, Windows)

	def _ProtectSharing(self, Filename=defaultNamedOptArg, Password=defaultNamedOptArg, WriteResPassword=defaultNamedOptArg, ReadOnlyRecommended=defaultNamedOptArg
			, CreateBackup=defaultNamedOptArg, SharingPassword=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1450, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup, SharingPassword
			)

	def _SaveAs(self, Filename=defaultNamedNotOptArg, FileFormat=defaultNamedNotOptArg, Password=defaultNamedNotOptArg, WriteResPassword=defaultNamedNotOptArg
			, ReadOnlyRecommended=defaultNamedNotOptArg, CreateBackup=defaultNamedNotOptArg, AccessMode=1, ConflictResolution=defaultNamedOptArg, AddToMru=defaultNamedOptArg
			, TextCodepage=defaultNamedOptArg, TextVisualLayout=defaultNamedOptArg, Local=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1925, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (3, 49), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup
			, AccessMode, ConflictResolution, AddToMru, TextCodepage, TextVisualLayout
			, Local)

	def _PrintOut_(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(905, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate)

	def _SaveAs_(self, Filename=defaultNamedNotOptArg, FileFormat=defaultNamedNotOptArg, Password=defaultNamedNotOptArg, WriteResPassword=defaultNamedNotOptArg
			, ReadOnlyRecommended=defaultNamedNotOptArg, CreateBackup=defaultNamedNotOptArg, AccessMode=1, ConflictResolution=defaultNamedOptArg, AddToMru=defaultNamedOptArg
			, TextCodepage=defaultNamedOptArg, TextVisualLayout=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(284, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (3, 49), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup
			, AccessMode, ConflictResolution, AddToMru, TextCodepage, TextVisualLayout
			)

	def sblt(self, s=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1826, LCID, 1, (24, 0), ((8, 1),),s
			)

	_prop_map_get_ = {
		"AcceptLabelsInFormulas": (1441, 2, (11, 0), (), "AcceptLabelsInFormulas", None),
		"AccuracyVersion": (2871, 2, (3, 0), (), "AccuracyVersion", None),
		# Method 'ActiveChart' returns object of type 'Chart'
		"ActiveChart": (183, 2, (13, 0), (), "ActiveChart", '{00020821-0000-0000-C000-000000000046}'),
		"ActiveSheet": (307, 2, (9, 0), (), "ActiveSheet", None),
		# Method 'ActiveSlicer' returns object of type 'Slicer'
		"ActiveSlicer": (2867, 2, (9, 0), (), "ActiveSlicer", '{000244C8-0000-0000-C000-000000000046}'),
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		"Author": (574, 2, (8, 0), (), "Author", None),
		"AutoSaveOn": (3232, 2, (11, 0), (), "AutoSaveOn", None),
		"AutoUpdateFrequency": (1442, 2, (3, 0), (), "AutoUpdateFrequency", None),
		"AutoUpdateSaveChanges": (1443, 2, (11, 0), (), "AutoUpdateSaveChanges", None),
		"BuiltinDocumentProperties": (1176, 2, (9, 0), (), "BuiltinDocumentProperties", None),
		"CalculationVersion": (1806, 2, (3, 0), (), "CalculationVersion", None),
		"CaseSensitive": (3056, 2, (11, 0), (), "CaseSensitive", None),
		"ChangeHistoryDuration": (1444, 2, (3, 0), (), "ChangeHistoryDuration", None),
		"ChartDataPointTrack": (2998, 2, (11, 0), (), "ChartDataPointTrack", None),
		# Method 'Charts' returns object of type 'Sheets'
		"Charts": (121, 2, (9, 0), (), "Charts", '{000208D7-0000-0000-C000-000000000046}'),
		"CheckCompatibility": (2528, 2, (11, 0), (), "CheckCompatibility", None),
		"CodeName": (1373, 2, (8, 0), (), "CodeName", None),
		"Colors": (286, 2, (12, 0), ((12, 17),), "Colors", None),
		# Method 'CommandBars' returns object of type 'CommandBars'
		"CommandBars": (1439, 2, (13, 0), (), "CommandBars", '{55F88893-7708-11D1-ACEB-006008961DA5}'),
		"Comments": (575, 2, (8, 0), (), "Comments", None),
		"ConflictResolution": (1175, 2, (3, 0), (), "ConflictResolution", None),
		# Method 'Connections' returns object of type 'Connections'
		"Connections": (2513, 2, (9, 0), (), "Connections", '{00024486-0000-0000-C000-000000000046}'),
		"ConnectionsDisabled": (2536, 2, (11, 0), (), "ConnectionsDisabled", None),
		"Container": (1190, 2, (9, 0), (), "Container", None),
		# Method 'ContentTypeProperties' returns object of type 'MetaProperties'
		"ContentTypeProperties": (2512, 2, (9, 0), (), "ContentTypeProperties", '{000C038E-0000-0000-C000-000000000046}'),
		"CreateBackup": (287, 2, (11, 0), (), "CreateBackup", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		"CustomDocumentProperties": (1177, 2, (9, 0), (), "CustomDocumentProperties", None),
		# Method 'CustomViews' returns object of type 'CustomViews'
		"CustomViews": (1456, 2, (9, 0), (), "CustomViews", '{00024422-0000-0000-C000-000000000046}'),
		# Method 'CustomXMLParts' returns object of type 'CustomXMLParts'
		"CustomXMLParts": (2530, 2, (13, 0), (), "CustomXMLParts", '{000CDB0C-0000-0000-C000-000000000046}'),
		"Date1904": (403, 2, (11, 0), (), "Date1904", None),
		"DefaultPivotTableStyle": (2527, 2, (12, 0), (), "DefaultPivotTableStyle", None),
		"DefaultSlicerStyle": (2868, 2, (12, 0), (), "DefaultSlicerStyle", None),
		"DefaultTableStyle": (2526, 2, (12, 0), (), "DefaultTableStyle", None),
		"DefaultTimelineStyle": (3060, 2, (12, 0), (), "DefaultTimelineStyle", None),
		# Method 'DialogSheets' returns object of type 'Sheets'
		"DialogSheets": (764, 2, (9, 0), (), "DialogSheets", '{000208D7-0000-0000-C000-000000000046}'),
		"DisplayDrawingObjects": (404, 2, (3, 0), (), "DisplayDrawingObjects", None),
		"DisplayInkComments": (2276, 2, (11, 0), (), "DisplayInkComments", None),
		"DoNotPromptForConvert": (2541, 2, (11, 0), (), "DoNotPromptForConvert", None),
		# Method 'DocumentInspectors' returns object of type 'DocumentInspectors'
		"DocumentInspectors": (2521, 2, (9, 0), (), "DocumentInspectors", '{000C0392-0000-0000-C000-000000000046}'),
		# Method 'DocumentLibraryVersions' returns object of type 'DocumentLibraryVersions'
		"DocumentLibraryVersions": (2274, 2, (9, 0), (), "DocumentLibraryVersions", '{000C0388-0000-0000-C000-000000000046}'),
		"EnableAutoRecover": (2049, 2, (11, 0), (), "EnableAutoRecover", None),
		"EncryptionProvider": (2540, 2, (8, 0), (), "EncryptionProvider", None),
		"EnvelopeVisible": (1824, 2, (11, 0), (), "EnvelopeVisible", None),
		# Method 'Excel4IntlMacroSheets' returns object of type 'Sheets'
		"Excel4IntlMacroSheets": (581, 2, (9, 0), (), "Excel4IntlMacroSheets", '{000208D7-0000-0000-C000-000000000046}'),
		# Method 'Excel4MacroSheets' returns object of type 'Sheets'
		"Excel4MacroSheets": (579, 2, (9, 0), (), "Excel4MacroSheets", '{000208D7-0000-0000-C000-000000000046}'),
		"Excel8CompatibilityMode": (2535, 2, (11, 0), (), "Excel8CompatibilityMode", None),
		"ExternalCodeServiceTimeout": (3406, 2, (3, 0), (), "ExternalCodeServiceTimeout", None),
		"FileFormat": (288, 2, (3, 0), (), "FileFormat", None),
		"Final": (2531, 2, (11, 0), (), "Final", None),
		"ForceFullCalculation": (2542, 2, (11, 0), (), "ForceFullCalculation", None),
		"FullName": (289, 2, (8, 0), (), "FullName", None),
		"FullNameURLEncoded": (1927, 2, (8, 0), (), "FullNameURLEncoded", None),
		# Method 'HTMLProject' returns object of type 'HTMLProject'
		"HTMLProject": (1823, 2, (9, 0), (), "HTMLProject", '{000C0356-0000-0000-C000-000000000046}'),
		"HasMailer": (976, 2, (11, 0), (), "HasMailer", None),
		"HasPassword": (290, 2, (11, 0), (), "HasPassword", None),
		"HasRoutingSlip": (950, 2, (11, 0), (), "HasRoutingSlip", None),
		"HasVBProject": (2529, 2, (11, 0), (), "HasVBProject", None),
		"HighlightChangesOnScreen": (1461, 2, (11, 0), (), "HighlightChangesOnScreen", None),
		# Method 'IconSets' returns object of type 'IconSets'
		"IconSets": (2539, 2, (9, 0), (), "IconSets", '{0002449C-0000-0000-C000-000000000046}'),
		"InactiveListBorderVisible": (2275, 2, (11, 0), (), "InactiveListBorderVisible", None),
		"IsAddin": (1445, 2, (11, 0), (), "IsAddin", None),
		"IsInplace": (1769, 2, (11, 0), (), "IsInplace", None),
		"KeepChangeHistory": (1462, 2, (11, 0), (), "KeepChangeHistory", None),
		"Keywords": (577, 2, (8, 0), (), "Keywords", None),
		"ListChangesOnNewSheet": (1463, 2, (11, 0), (), "ListChangesOnNewSheet", None),
		# Method 'Mailer' returns object of type 'Mailer'
		"Mailer": (979, 2, (9, 0), (), "Mailer", '{000208D1-0000-0000-C000-000000000046}'),
		# Method 'Model' returns object of type 'Model'
		"Model": (3059, 2, (9, 0), (), "Model", '{000244DB-0000-0000-C000-000000000046}'),
		# Method 'Modules' returns object of type 'Sheets'
		"Modules": (582, 2, (9, 0), (), "Modules", '{000208D7-0000-0000-C000-000000000046}'),
		"MultiUserEditing": (1169, 2, (11, 0), (), "MultiUserEditing", None),
		"Name": (110, 2, (8, 0), (), "Name", None),
		# Method 'Names' returns object of type 'Names'
		"Names": (442, 2, (9, 0), (), "Names", '{000208B8-0000-0000-C000-000000000046}'),
		"OnSave": (1178, 2, (8, 0), (), "OnSave", None),
		"OnSheetActivate": (1031, 2, (8, 0), (), "OnSheetActivate", None),
		"OnSheetDeactivate": (1081, 2, (8, 0), (), "OnSheetDeactivate", None),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Password": (429, 2, (8, 0), (), "Password", None),
		"PasswordEncryptionAlgorithm": (2060, 2, (8, 0), (), "PasswordEncryptionAlgorithm", None),
		"PasswordEncryptionFileProperties": (2063, 2, (11, 0), (), "PasswordEncryptionFileProperties", None),
		"PasswordEncryptionKeyLength": (2061, 2, (3, 0), (), "PasswordEncryptionKeyLength", None),
		"PasswordEncryptionProvider": (2059, 2, (8, 0), (), "PasswordEncryptionProvider", None),
		"Path": (291, 2, (8, 0), (), "Path", None),
		# Method 'Permission' returns object of type 'Permission'
		"Permission": (2264, 2, (9, 0), (), "Permission", '{000C0376-0000-0000-C000-000000000046}'),
		"PersonalViewListSettings": (1447, 2, (11, 0), (), "PersonalViewListSettings", None),
		"PersonalViewPrintSettings": (1448, 2, (11, 0), (), "PersonalViewPrintSettings", None),
		"PivotTables": (690, 2, (9, 0), (), "PivotTables", None),
		"PrecisionAsDisplayed": (405, 2, (11, 0), (), "PrecisionAsDisplayed", None),
		"ProtectStructure": (588, 2, (11, 0), (), "ProtectStructure", None),
		"ProtectWindows": (295, 2, (11, 0), (), "ProtectWindows", None),
		# Method 'PublishObjects' returns object of type 'PublishObjects'
		"PublishObjects": (1819, 2, (9, 0), (), "PublishObjects", '{00024443-0000-0000-C000-000000000046}'),
		# Method 'Queries' returns object of type 'Queries'
		"Queries": (3186, 2, (9, 0), (), "Queries", '{000244EC-0000-0000-C000-000000000046}'),
		"ReadOnly": (296, 2, (11, 0), (), "ReadOnly", None),
		"ReadOnlyRecommended": (2005, 2, (11, 0), (), "ReadOnlyRecommended", None),
		"RemovePersonalInformation": (2050, 2, (11, 0), (), "RemovePersonalInformation", None),
		# Method 'Research' returns object of type 'Research'
		"Research": (2532, 2, (9, 0), (), "Research", '{000244AC-0000-0000-C000-000000000046}'),
		"RevisionNumber": (1172, 2, (3, 0), (), "RevisionNumber", None),
		"Routed": (951, 2, (11, 0), (), "Routed", None),
		# Method 'RoutingSlip' returns object of type 'RoutingSlip'
		"RoutingSlip": (949, 2, (9, 0), (), "RoutingSlip", '{000208AA-0000-0000-C000-000000000046}'),
		"SaveLinkValues": (406, 2, (11, 0), (), "SaveLinkValues", None),
		"Saved": (298, 2, (11, 0), (), "Saved", None),
		# Method 'SensitivityLabel' returns object of type 'ISensitivityLabel'
		"SensitivityLabel": (3379, 2, (9, 0), (), "SensitivityLabel", '{4B0F95AC-5769-40E9-98DF-80CDD086612E}'),
		# Method 'ServerPolicy' returns object of type 'ServerPolicy'
		"ServerPolicy": (2519, 2, (9, 0), (), "ServerPolicy", '{000C0390-0000-0000-C000-000000000046}'),
		# Method 'ServerViewableItems' returns object of type 'ServerViewableItems'
		"ServerViewableItems": (2524, 2, (9, 0), (), "ServerViewableItems", '{000244A4-0000-0000-C000-000000000046}'),
		# Method 'SharedWorkspace' returns object of type 'SharedWorkspace'
		"SharedWorkspace": (2265, 2, (9, 0), (), "SharedWorkspace", '{000C0385-0000-0000-C000-000000000046}'),
		# Method 'Sheets' returns object of type 'Sheets'
		"Sheets": (485, 2, (9, 0), (), "Sheets", '{000208D7-0000-0000-C000-000000000046}'),
		"ShowConflictHistory": (1171, 2, (11, 0), (), "ShowConflictHistory", None),
		"ShowPivotChartActiveFields": (2538, 2, (11, 0), (), "ShowPivotChartActiveFields", None),
		"ShowPivotTableFieldList": (2046, 2, (11, 0), (), "ShowPivotTableFieldList", None),
		# Method 'Signatures' returns object of type 'SignatureSet'
		"Signatures": (2516, 2, (9, 0), (), "Signatures", '{000C0410-0000-0000-C000-000000000046}'),
		# Method 'SlicerCaches' returns object of type 'SlicerCaches'
		"SlicerCaches": (2866, 2, (9, 0), (), "SlicerCaches", '{000244C3-0000-0000-C000-000000000046}'),
		# Method 'SmartDocument' returns object of type 'SmartDocument'
		"SmartDocument": (2273, 2, (9, 0), (), "SmartDocument", '{000C0377-0000-0000-C000-000000000046}'),
		# Method 'SmartTagOptions' returns object of type 'SmartTagOptions'
		"SmartTagOptions": (2064, 2, (9, 0), (), "SmartTagOptions", '{00024464-0000-0000-C000-000000000046}'),
		# Method 'Styles' returns object of type 'Styles'
		"Styles": (493, 2, (9, 0), (), "Styles", '{00020853-0000-0000-C000-000000000046}'),
		"Subject": (953, 2, (8, 0), (), "Subject", None),
		# Method 'Sync' returns object of type 'Sync'
		"Sync": (2266, 2, (9, 0), (), "Sync", '{000C0386-0000-0000-C000-000000000046}'),
		# Method 'TableStyles' returns object of type 'TableStyles'
		"TableStyles": (2525, 2, (9, 0), (), "TableStyles", '{000244A8-0000-0000-C000-000000000046}'),
		"TemplateRemoveExtData": (1457, 2, (11, 0), (), "TemplateRemoveExtData", None),
		# Method 'Theme' returns object of type 'OfficeTheme'
		"Theme": (2533, 2, (9, 0), (), "Theme", '{000C03A0-0000-0000-C000-000000000046}'),
		"Title": (199, 2, (8, 0), (), "Title", None),
		"UpdateLinks": (864, 2, (3, 0), (), "UpdateLinks", None),
		"UpdateRemoteReferences": (411, 2, (11, 0), (), "UpdateRemoteReferences", None),
		"UseWholeCellCriteria": (3057, 2, (11, 0), (), "UseWholeCellCriteria", None),
		"UseWildcards": (3058, 2, (11, 0), (), "UseWildcards", None),
		"UserControl": (1210, 2, (11, 0), (), "UserControl", None),
		"UserStatus": (1173, 2, (12, 0), (), "UserStatus", None),
		"VBASigned": (1828, 2, (11, 0), (), "VBASigned", None),
		# Method 'VBProject' returns object of type 'VBProject'
		"VBProject": (1469, 2, (13, 0), (), "VBProject", '{0002E169-0000-0000-C000-000000000046}'),
		# Method 'WebOptions' returns object of type 'WebOptions'
		"WebOptions": (1820, 2, (9, 0), (), "WebOptions", '{00024449-0000-0000-C000-000000000046}'),
		# Method 'Windows' returns object of type 'Windows'
		"Windows": (430, 2, (9, 0), (), "Windows", '{00020892-0000-0000-C000-000000000046}'),
		"WorkIdentity": (3173, 2, (8, 0), (), "WorkIdentity", None),
		# Method 'Worksheets' returns object of type 'Sheets'
		"Worksheets": (494, 2, (9, 0), (), "Worksheets", '{000208D7-0000-0000-C000-000000000046}'),
		"WritePassword": (1128, 2, (8, 0), (), "WritePassword", None),
		"WriteReserved": (299, 2, (11, 0), (), "WriteReserved", None),
		"WriteReservedBy": (300, 2, (8, 0), (), "WriteReservedBy", None),
		# Method 'XmlMaps' returns object of type 'XmlMaps'
		"XmlMaps": (2269, 2, (9, 0), (), "XmlMaps", '{0002447C-0000-0000-C000-000000000046}'),
		# Method 'XmlNamespaces' returns object of type 'XmlNamespaces'
		"XmlNamespaces": (2268, 2, (9, 0), (), "XmlNamespaces", '{00024477-0000-0000-C000-000000000046}'),
		"_CodeName": (-2147418112, 2, (8, 0), (), "_CodeName", None),
		"_ReadOnlyRecommended": (297, 2, (11, 0), (), "_ReadOnlyRecommended", None),
	}
	_prop_map_put_ = {
		"AcceptLabelsInFormulas": ((1441, LCID, 4, 0),()),
		"AccuracyVersion": ((2871, LCID, 4, 0),()),
		"Author": ((574, LCID, 4, 0),()),
		"AutoSaveOn": ((3232, LCID, 4, 0),()),
		"AutoUpdateFrequency": ((1442, LCID, 4, 0),()),
		"AutoUpdateSaveChanges": ((1443, LCID, 4, 0),()),
		"ChangeHistoryDuration": ((1444, LCID, 4, 0),()),
		"ChartDataPointTrack": ((2998, LCID, 4, 0),()),
		"CheckCompatibility": ((2528, LCID, 4, 0),()),
		"Colors": ((286, LCID, 4, 0),()),
		"Comments": ((575, LCID, 4, 0),()),
		"ConflictResolution": ((1175, LCID, 4, 0),()),
		"Date1904": ((403, LCID, 4, 0),()),
		"DefaultPivotTableStyle": ((2527, LCID, 4, 0),()),
		"DefaultSlicerStyle": ((2868, LCID, 4, 0),()),
		"DefaultTableStyle": ((2526, LCID, 4, 0),()),
		"DefaultTimelineStyle": ((3060, LCID, 4, 0),()),
		"DisplayDrawingObjects": ((404, LCID, 4, 0),()),
		"DisplayInkComments": ((2276, LCID, 4, 0),()),
		"DoNotPromptForConvert": ((2541, LCID, 4, 0),()),
		"EnableAutoRecover": ((2049, LCID, 4, 0),()),
		"EncryptionProvider": ((2540, LCID, 4, 0),()),
		"EnvelopeVisible": ((1824, LCID, 4, 0),()),
		"ExternalCodeServiceTimeout": ((3406, LCID, 4, 0),()),
		"Final": ((2531, LCID, 4, 0),()),
		"ForceFullCalculation": ((2542, LCID, 4, 0),()),
		"HasMailer": ((976, LCID, 4, 0),()),
		"HasRoutingSlip": ((950, LCID, 4, 0),()),
		"HighlightChangesOnScreen": ((1461, LCID, 4, 0),()),
		"InactiveListBorderVisible": ((2275, LCID, 4, 0),()),
		"IsAddin": ((1445, LCID, 4, 0),()),
		"KeepChangeHistory": ((1462, LCID, 4, 0),()),
		"Keywords": ((577, LCID, 4, 0),()),
		"ListChangesOnNewSheet": ((1463, LCID, 4, 0),()),
		"OnSave": ((1178, LCID, 4, 0),()),
		"OnSheetActivate": ((1031, LCID, 4, 0),()),
		"OnSheetDeactivate": ((1081, LCID, 4, 0),()),
		"Password": ((429, LCID, 4, 0),()),
		"PersonalViewListSettings": ((1447, LCID, 4, 0),()),
		"PersonalViewPrintSettings": ((1448, LCID, 4, 0),()),
		"PrecisionAsDisplayed": ((405, LCID, 4, 0),()),
		"ReadOnlyRecommended": ((2005, LCID, 4, 0),()),
		"RemovePersonalInformation": ((2050, LCID, 4, 0),()),
		"SaveLinkValues": ((406, LCID, 4, 0),()),
		"Saved": ((298, LCID, 4, 0),()),
		"ShowConflictHistory": ((1171, LCID, 4, 0),()),
		"ShowPivotChartActiveFields": ((2538, LCID, 4, 0),()),
		"ShowPivotTableFieldList": ((2046, LCID, 4, 0),()),
		"Subject": ((953, LCID, 4, 0),()),
		"TemplateRemoveExtData": ((1457, LCID, 4, 0),()),
		"Title": ((199, LCID, 4, 0),()),
		"UpdateLinks": ((864, LCID, 4, 0),()),
		"UpdateRemoteReferences": ((411, LCID, 4, 0),()),
		"UserControl": ((1210, LCID, 4, 0),()),
		"WorkIdentity": ((3173, LCID, 4, 0),()),
		"WritePassword": ((1128, LCID, 4, 0),()),
		"_CodeName": ((-2147418112, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class _Worksheet(DispatchBaseClass):
	CLSID = IID('{000208D8-0000-0000-C000-000000000046}')
	coclass_clsid = IID('{00020820-0000-0000-C000-000000000046}')

	def Activate(self):
		return self._oleobj_.InvokeTypes(304, LCID, 1, (24, 0), (),)

	def Arcs(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(760, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Arcs', None)
		return ret

	def Buttons(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(557, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Buttons', None)
		return ret

	def Calculate(self):
		return self._oleobj_.InvokeTypes(279, LCID, 1, (24, 0), (),)

	def ChartObjects(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1060, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ChartObjects', None)
		return ret

	def CheckBoxes(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(824, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'CheckBoxes', None)
		return ret

	def CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(505, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17)),CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang)

	def CircleInvalid(self):
		return self._oleobj_.InvokeTypes(1437, LCID, 1, (24, 0), (),)

	def ClearArrows(self):
		return self._oleobj_.InvokeTypes(970, LCID, 1, (24, 0), (),)

	def ClearCircles(self):
		return self._oleobj_.InvokeTypes(1436, LCID, 1, (24, 0), (),)

	def Copy(self, Before=defaultNamedOptArg, After=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(551, LCID, 1, (24, 0), ((12, 17), (12, 17)),Before
			, After)

	def Delete(self):
		return self._oleobj_.InvokeTypes(117, LCID, 1, (24, 0), (),)

	def DrawingObjects(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(88, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'DrawingObjects', None)
		return ret

	def Drawings(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(772, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Drawings', None)
		return ret

	def DropDowns(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(836, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'DropDowns', None)
		return ret

	def Evaluate(self, Name=defaultNamedNotOptArg):
		return self._ApplyTypes_(1, 1, (12, 0), ((12, 1),), 'Evaluate', None,Name
			)

	def ExportAsFixedFormat(self, Type=defaultNamedNotOptArg, Filename=defaultNamedOptArg, Quality=defaultNamedOptArg, IncludeDocProperties=defaultNamedOptArg
			, IgnorePrintAreas=defaultNamedOptArg, From=defaultNamedOptArg, To=defaultNamedOptArg, OpenAfterPublish=defaultNamedOptArg, FixedFormatExtClassPtr=defaultNamedOptArg
			, WorkIdentity=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(3175, LCID, 1, (24, 0), ((3, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Type
			, Filename, Quality, IncludeDocProperties, IgnorePrintAreas, From
			, To, OpenAfterPublish, FixedFormatExtClassPtr, WorkIdentity)

	def GroupBoxes(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(834, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'GroupBoxes', None)
		return ret

	def GroupObjects(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(1113, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'GroupObjects', None)
		return ret

	def Labels(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(841, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Labels', None)
		return ret

	def Lines(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(767, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Lines', None)
		return ret

	def ListBoxes(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(832, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ListBoxes', None)
		return ret

	def Move(self, Before=defaultNamedOptArg, After=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(637, LCID, 1, (24, 0), ((12, 17), (12, 17)),Before
			, After)

	def OLEObjects(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(799, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'OLEObjects', None)
		return ret

	def OptionButtons(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(826, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'OptionButtons', None)
		return ret

	def Ovals(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(801, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Ovals', None)
		return ret

	def Paste(self, Destination=defaultNamedOptArg, Link=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(211, LCID, 1, (24, 0), ((12, 17), (12, 17)),Destination
			, Link)

	def PasteSpecial(self, Format=defaultNamedOptArg, Link=defaultNamedOptArg, DisplayAsIcon=defaultNamedOptArg, IconFileName=defaultNamedOptArg
			, IconIndex=defaultNamedOptArg, IconLabel=defaultNamedOptArg, NoHTMLFormatting=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1928, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Format
			, Link, DisplayAsIcon, IconFileName, IconIndex, IconLabel
			, NoHTMLFormatting)

	def Pictures(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(771, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Pictures', None)
		return ret

	# Result is of type PivotTable
	def PivotTableWizard(self, SourceType=defaultNamedOptArg, SourceData=defaultNamedOptArg, TableDestination=defaultNamedOptArg, TableName=defaultNamedOptArg
			, RowGrand=defaultNamedOptArg, ColumnGrand=defaultNamedOptArg, SaveData=defaultNamedOptArg, HasAutoFormat=defaultNamedOptArg, AutoPage=defaultNamedOptArg
			, Reserved=defaultNamedOptArg, BackgroundQuery=defaultNamedOptArg, OptimizeCache=defaultNamedOptArg, PageFieldOrder=defaultNamedOptArg, PageFieldWrapCount=defaultNamedOptArg
			, ReadData=defaultNamedOptArg, Connection=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(684, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),SourceType
			, SourceData, TableDestination, TableName, RowGrand, ColumnGrand
			, SaveData, HasAutoFormat, AutoPage, Reserved, BackgroundQuery
			, OptimizeCache, PageFieldOrder, PageFieldWrapCount, ReadData, Connection
			)
		if ret is not None:
			ret = Dispatch(ret, 'PivotTableWizard', '{00020872-0000-0000-C000-000000000046}')
		return ret

	def PivotTables(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(690, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'PivotTables', None)
		return ret

	def PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg, IgnorePrintAreas=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2361, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName, IgnorePrintAreas)

	def PrintPreview(self, EnableChanges=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(281, LCID, 1, (24, 0), ((12, 17),),EnableChanges
			)

	def Protect(self, Password=defaultNamedOptArg, DrawingObjects=defaultNamedOptArg, Contents=defaultNamedOptArg, Scenarios=defaultNamedOptArg
			, UserInterfaceOnly=defaultNamedOptArg, AllowFormattingCells=defaultNamedOptArg, AllowFormattingColumns=defaultNamedOptArg, AllowFormattingRows=defaultNamedOptArg, AllowInsertingColumns=defaultNamedOptArg
			, AllowInsertingRows=defaultNamedOptArg, AllowInsertingHyperlinks=defaultNamedOptArg, AllowDeletingColumns=defaultNamedOptArg, AllowDeletingRows=defaultNamedOptArg, AllowSorting=defaultNamedOptArg
			, AllowFiltering=defaultNamedOptArg, AllowUsingPivotTables=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2029, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Password
			, DrawingObjects, Contents, Scenarios, UserInterfaceOnly, AllowFormattingCells
			, AllowFormattingColumns, AllowFormattingRows, AllowInsertingColumns, AllowInsertingRows, AllowInsertingHyperlinks
			, AllowDeletingColumns, AllowDeletingRows, AllowSorting, AllowFiltering, AllowUsingPivotTables
			)

	# Result is of type Range
	# The method Range is actually a property, but must be used as a method to correctly pass the arguments
	def Range(self, Cell1=defaultNamedNotOptArg, Cell2=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(197, LCID, 2, (9, 0), ((12, 1), (12, 17)),Cell1
			, Cell2)
		if ret is not None:
			ret = Dispatch(ret, 'Range', '{00020846-0000-0000-C000-000000000046}')
		return ret

	def Rectangles(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(774, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Rectangles', None)
		return ret

	def ResetAllPageBreaks(self):
		return self._oleobj_.InvokeTypes(1426, LCID, 1, (24, 0), (),)

	def SaveAs(self, Filename=defaultNamedNotOptArg, FileFormat=defaultNamedOptArg, Password=defaultNamedOptArg, WriteResPassword=defaultNamedOptArg
			, ReadOnlyRecommended=defaultNamedOptArg, CreateBackup=defaultNamedOptArg, AddToMru=defaultNamedOptArg, TextCodepage=defaultNamedOptArg, TextVisualLayout=defaultNamedOptArg
			, Local=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(3174, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup
			, AddToMru, TextCodepage, TextVisualLayout, Local)

	def Scenarios(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(908, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Scenarios', None)
		return ret

	def ScrollBars(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(830, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ScrollBars', None)
		return ret

	def Select(self, Replace=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(235, LCID, 1, (24, 0), ((12, 17),),Replace
			)

	def SetBackgroundPicture(self, Filename=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1188, LCID, 1, (24, 0), ((8, 1),),Filename
			)

	def ShowAllData(self):
		return self._oleobj_.InvokeTypes(794, LCID, 1, (24, 0), (),)

	def ShowDataForm(self):
		return self._oleobj_.InvokeTypes(409, LCID, 1, (24, 0), (),)

	def Spinners(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(838, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Spinners', None)
		return ret

	def TextBoxes(self, Index=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(777, LCID, 1, (9, 0), ((12, 17),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'TextBoxes', None)
		return ret

	def Unprotect(self, Password=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(285, LCID, 1, (24, 0), ((12, 17),),Password
			)

	# Result is of type Range
	def XmlDataQuery(self, XPath=defaultNamedNotOptArg, SelectionNamespaces=defaultNamedOptArg, Map=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(2260, LCID, 1, (9, 0), ((8, 1), (12, 17), (12, 17)),XPath
			, SelectionNamespaces, Map)
		if ret is not None:
			ret = Dispatch(ret, 'XmlDataQuery', '{00020846-0000-0000-C000-000000000046}')
		return ret

	# Result is of type Range
	def XmlMapQuery(self, XPath=defaultNamedNotOptArg, SelectionNamespaces=defaultNamedOptArg, Map=defaultNamedOptArg):
		ret = self._oleobj_.InvokeTypes(2263, LCID, 1, (9, 0), ((8, 1), (12, 17), (12, 17)),XPath
			, SelectionNamespaces, Map)
		if ret is not None:
			ret = Dispatch(ret, 'XmlMapQuery', '{00020846-0000-0000-C000-000000000046}')
		return ret

	def _CheckSpelling(self, CustomDictionary=defaultNamedOptArg, IgnoreUppercase=defaultNamedOptArg, AlwaysSuggest=defaultNamedOptArg, SpellLang=defaultNamedOptArg
			, IgnoreFinalYaa=defaultNamedOptArg, SpellScript=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1817, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),CustomDictionary
			, IgnoreUppercase, AlwaysSuggest, SpellLang, IgnoreFinalYaa, SpellScript
			)

	def _Evaluate(self, Name=defaultNamedNotOptArg):
		return self._ApplyTypes_(-5, 1, (12, 0), ((12, 1),), '_Evaluate', None,Name
			)

	def _ExportAsFixedFormat(self, Type=defaultNamedNotOptArg, Filename=defaultNamedOptArg, Quality=defaultNamedOptArg, IncludeDocProperties=defaultNamedOptArg
			, IgnorePrintAreas=defaultNamedOptArg, From=defaultNamedOptArg, To=defaultNamedOptArg, OpenAfterPublish=defaultNamedOptArg, FixedFormatExtClassPtr=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(2493, LCID, 1, (24, 0), ((3, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Type
			, Filename, Quality, IncludeDocProperties, IgnorePrintAreas, From
			, To, OpenAfterPublish, FixedFormatExtClassPtr)

	def _PasteSpecial(self, Format=defaultNamedOptArg, Link=defaultNamedOptArg, DisplayAsIcon=defaultNamedOptArg, IconFileName=defaultNamedOptArg
			, IconIndex=defaultNamedOptArg, IconLabel=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1027, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Format
			, Link, DisplayAsIcon, IconFileName, IconIndex, IconLabel
			)

	def _PrintOut(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg, PrToFileName=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1772, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate, PrToFileName)

	def _Protect(self, Password=defaultNamedOptArg, DrawingObjects=defaultNamedOptArg, Contents=defaultNamedOptArg, Scenarios=defaultNamedOptArg
			, UserInterfaceOnly=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(282, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Password
			, DrawingObjects, Contents, Scenarios, UserInterfaceOnly)

	def _SaveAs(self, Filename=defaultNamedNotOptArg, FileFormat=defaultNamedOptArg, Password=defaultNamedOptArg, WriteResPassword=defaultNamedOptArg
			, ReadOnlyRecommended=defaultNamedOptArg, CreateBackup=defaultNamedOptArg, AddToMru=defaultNamedOptArg, TextCodepage=defaultNamedOptArg, TextVisualLayout=defaultNamedOptArg
			, Local=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(1925, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup
			, AddToMru, TextCodepage, TextVisualLayout, Local)

	def _PrintOut_(self, From=defaultNamedOptArg, To=defaultNamedOptArg, Copies=defaultNamedOptArg, Preview=defaultNamedOptArg
			, ActivePrinter=defaultNamedOptArg, PrintToFile=defaultNamedOptArg, Collate=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(905, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),From
			, To, Copies, Preview, ActivePrinter, PrintToFile
			, Collate)

	def _SaveAs_(self, Filename=defaultNamedNotOptArg, FileFormat=defaultNamedOptArg, Password=defaultNamedOptArg, WriteResPassword=defaultNamedOptArg
			, ReadOnlyRecommended=defaultNamedOptArg, CreateBackup=defaultNamedOptArg, AddToMru=defaultNamedOptArg, TextCodepage=defaultNamedOptArg, TextVisualLayout=defaultNamedOptArg):
		return self._oleobj_.InvokeTypes(284, LCID, 1, (24, 0), ((8, 1), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),Filename
			, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup
			, AddToMru, TextCodepage, TextVisualLayout)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'Application'
		"Application": (148, 2, (13, 0), (), "Application", '{00024500-0000-0000-C000-000000000046}'),
		# Method 'AutoFilter' returns object of type 'AutoFilter'
		"AutoFilter": (3289, 2, (9, 0), (), "AutoFilter", '{00024432-0000-0000-C000-000000000046}'),
		"AutoFilterMode": (792, 2, (11, 0), (), "AutoFilterMode", None),
		# Method 'Cells' returns object of type 'Range'
		"Cells": (238, 2, (9, 0), (), "Cells", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'CircularReference' returns object of type 'Range'
		"CircularReference": (1069, 2, (9, 0), (), "CircularReference", '{00020846-0000-0000-C000-000000000046}'),
		"CodeName": (1373, 2, (8, 0), (), "CodeName", None),
		# Method 'Columns' returns object of type 'Range'
		"Columns": (241, 2, (9, 0), (), "Columns", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'Comments' returns object of type 'Comments'
		"Comments": (575, 2, (9, 0), (), "Comments", '{00024426-0000-0000-C000-000000000046}'),
		# Method 'CommentsThreaded' returns object of type 'CommentsThreaded'
		"CommentsThreaded": (3282, 2, (9, 0), (), "CommentsThreaded", '{000244FC-0000-0000-C000-000000000046}'),
		"ConsolidationFunction": (789, 2, (3, 0), (), "ConsolidationFunction", None),
		"ConsolidationOptions": (790, 2, (12, 0), (), "ConsolidationOptions", None),
		"ConsolidationSources": (791, 2, (12, 0), (), "ConsolidationSources", None),
		"Creator": (149, 2, (3, 0), (), "Creator", None),
		# Method 'CustomProperties' returns object of type 'CustomProperties'
		"CustomProperties": (2030, 2, (9, 0), (), "CustomProperties", '{00024452-0000-0000-C000-000000000046}'),
		"DisplayAutomaticPageBreaks": (643, 2, (11, 0), (), "DisplayAutomaticPageBreaks", None),
		"DisplayPageBreaks": (1435, 2, (11, 0), (), "DisplayPageBreaks", None),
		"DisplayRightToLeft": (1774, 2, (11, 0), (), "DisplayRightToLeft", None),
		"EnableAutoFilter": (1156, 2, (11, 0), (), "EnableAutoFilter", None),
		"EnableCalculation": (1424, 2, (11, 0), (), "EnableCalculation", None),
		"EnableFormatConditionsCalculation": (2511, 2, (11, 0), (), "EnableFormatConditionsCalculation", None),
		"EnableOutlining": (1157, 2, (11, 0), (), "EnableOutlining", None),
		"EnablePivotTable": (1158, 2, (11, 0), (), "EnablePivotTable", None),
		"EnableSelection": (1425, 2, (3, 0), (), "EnableSelection", None),
		"FilterMode": (800, 2, (11, 0), (), "FilterMode", None),
		# Method 'HPageBreaks' returns object of type 'HPageBreaks'
		"HPageBreaks": (1418, 2, (9, 0), (), "HPageBreaks", '{00024404-0000-0000-C000-000000000046}'),
		# Method 'Hyperlinks' returns object of type 'Hyperlinks'
		"Hyperlinks": (1393, 2, (9, 0), (), "Hyperlinks", '{00024430-0000-0000-C000-000000000046}'),
		"Index": (486, 2, (3, 0), (), "Index", None),
		# Method 'ListObjects' returns object of type 'ListObjects'
		"ListObjects": (2259, 2, (9, 0), (), "ListObjects", '{00024470-0000-0000-C000-000000000046}'),
		# Method 'MailEnvelope' returns object of type 'MsoEnvelope'
		"MailEnvelope": (2021, 2, (13, 0), (), "MailEnvelope", '{0006F01A-0000-0000-C000-000000000046}'),
		"Name": (110, 2, (8, 0), (), "Name", None),
		# Method 'NamedSheetViews' returns object of type 'NamedSheetViewCollection'
		"NamedSheetViews": (3309, 2, (9, 0), (), "NamedSheetViews", '{00024501-0000-0000-C000-000000000046}'),
		# Method 'Names' returns object of type 'Names'
		"Names": (442, 2, (9, 0), (), "Names", '{000208B8-0000-0000-C000-000000000046}'),
		"Next": (502, 2, (9, 0), (), "Next", None),
		"OnCalculate": (625, 2, (8, 0), (), "OnCalculate", None),
		"OnData": (629, 2, (8, 0), (), "OnData", None),
		"OnDoubleClick": (628, 2, (8, 0), (), "OnDoubleClick", None),
		"OnEntry": (627, 2, (8, 0), (), "OnEntry", None),
		"OnSheetActivate": (1031, 2, (8, 0), (), "OnSheetActivate", None),
		"OnSheetDeactivate": (1081, 2, (8, 0), (), "OnSheetDeactivate", None),
		# Method 'Outline' returns object of type 'Outline'
		"Outline": (102, 2, (9, 0), (), "Outline", '{000208AB-0000-0000-C000-000000000046}'),
		# Method 'PageSetup' returns object of type 'PageSetup'
		"PageSetup": (998, 2, (9, 0), (), "PageSetup", '{000208B4-0000-0000-C000-000000000046}'),
		"Parent": (150, 2, (9, 0), (), "Parent", None),
		"Previous": (503, 2, (9, 0), (), "Previous", None),
		"PrintedCommentPages": (2857, 2, (3, 0), (), "PrintedCommentPages", None),
		"ProtectContents": (292, 2, (11, 0), (), "ProtectContents", None),
		"ProtectDrawingObjects": (293, 2, (11, 0), (), "ProtectDrawingObjects", None),
		"ProtectScenarios": (294, 2, (11, 0), (), "ProtectScenarios", None),
		# Method 'Protection' returns object of type 'Protection'
		"Protection": (176, 2, (9, 0), (), "Protection", '{00024467-0000-0000-C000-000000000046}'),
		"ProtectionMode": (1159, 2, (11, 0), (), "ProtectionMode", None),
		# Method 'QueryTables' returns object of type 'QueryTables'
		"QueryTables": (1434, 2, (9, 0), (), "QueryTables", '{00024429-0000-0000-C000-000000000046}'),
		# Method 'Rows' returns object of type 'Range'
		"Rows": (258, 2, (9, 0), (), "Rows", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'Scripts' returns object of type 'Scripts'
		"Scripts": (1816, 2, (9, 0), (), "Scripts", '{000C0340-0000-0000-C000-000000000046}'),
		"ScrollArea": (1433, 2, (8, 0), (), "ScrollArea", None),
		# Method 'Shapes' returns object of type 'Shapes'
		"Shapes": (1377, 2, (9, 0), (), "Shapes", '{0002443A-0000-0000-C000-000000000046}'),
		# Method 'SmartTags' returns object of type 'SmartTags'
		"SmartTags": (2016, 2, (9, 0), (), "SmartTags", '{00024461-0000-0000-C000-000000000046}'),
		# Method 'Sort' returns object of type 'Sort'
		"Sort": (3288, 2, (9, 0), (), "Sort", '{000244AB-0000-0000-C000-000000000046}'),
		"StandardHeight": (407, 2, (5, 0), (), "StandardHeight", None),
		"StandardWidth": (408, 2, (5, 0), (), "StandardWidth", None),
		# Method 'Tab' returns object of type 'Tab'
		"Tab": (1041, 2, (9, 0), (), "Tab", '{00024469-0000-0000-C000-000000000046}'),
		"TransitionExpEval": (401, 2, (11, 0), (), "TransitionExpEval", None),
		"TransitionFormEntry": (402, 2, (11, 0), (), "TransitionFormEntry", None),
		"Type": (108, 2, (3, 0), (), "Type", None),
		# Method 'UsedRange' returns object of type 'Range'
		"UsedRange": (412, 2, (9, 0), (), "UsedRange", '{00020846-0000-0000-C000-000000000046}'),
		# Method 'VPageBreaks' returns object of type 'VPageBreaks'
		"VPageBreaks": (1419, 2, (9, 0), (), "VPageBreaks", '{00024405-0000-0000-C000-000000000046}'),
		"Visible": (558, 2, (3, 0), (), "Visible", None),
		# Method '_AutoFilter' returns object of type 'AutoFilter'
		"_AutoFilter": (793, 2, (9, 0), (), "_AutoFilter", '{00024432-0000-0000-C000-000000000046}'),
		"_CodeName": (-2147418112, 2, (8, 0), (), "_CodeName", None),
		"_DisplayRightToLeft": (648, 2, (3, 0), (), "_DisplayRightToLeft", None),
		# Method '_Sort' returns object of type 'Sort'
		"_Sort": (880, 2, (9, 0), (), "_Sort", '{000244AB-0000-0000-C000-000000000046}'),
	}
	_prop_map_put_ = {
		"AutoFilterMode": ((792, LCID, 4, 0),()),
		"DisplayAutomaticPageBreaks": ((643, LCID, 4, 0),()),
		"DisplayPageBreaks": ((1435, LCID, 4, 0),()),
		"DisplayRightToLeft": ((1774, LCID, 4, 0),()),
		"EnableAutoFilter": ((1156, LCID, 4, 0),()),
		"EnableCalculation": ((1424, LCID, 4, 0),()),
		"EnableFormatConditionsCalculation": ((2511, LCID, 4, 0),()),
		"EnableOutlining": ((1157, LCID, 4, 0),()),
		"EnablePivotTable": ((1158, LCID, 4, 0),()),
		"EnableSelection": ((1425, LCID, 4, 0),()),
		"Name": ((110, LCID, 4, 0),()),
		"OnCalculate": ((625, LCID, 4, 0),()),
		"OnData": ((629, LCID, 4, 0),()),
		"OnDoubleClick": ((628, LCID, 4, 0),()),
		"OnEntry": ((627, LCID, 4, 0),()),
		"OnSheetActivate": ((1031, LCID, 4, 0),()),
		"OnSheetDeactivate": ((1081, LCID, 4, 0),()),
		"ScrollArea": ((1433, LCID, 4, 0),()),
		"StandardWidth": ((408, LCID, 4, 0),()),
		"TransitionExpEval": ((401, LCID, 4, 0),()),
		"TransitionFormEntry": ((402, LCID, 4, 0),()),
		"Visible": ((558, LCID, 4, 0),()),
		"_CodeName": ((-2147418112, LCID, 4, 0),()),
		"_DisplayRightToLeft": ((648, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

from win32com.client import CoClassBaseClass
# This CoClass is known by the name 'Excel.Application.16'
class Application(CoClassBaseClass): # A CoClass
	CLSID = IID('{00024500-0000-0000-C000-000000000046}')
	coclass_sources = [
		AppEvents,
	]
	default_source = AppEvents
	coclass_interfaces = [
		_Application,
	]
	default_interface = _Application

# This CoClass is known by the name 'Excel.Chart.8'
class Chart(CoClassBaseClass): # A CoClass
	CLSID = IID('{00020821-0000-0000-C000-000000000046}')
	coclass_sources = [
		ChartEvents,
	]
	default_source = ChartEvents
	coclass_interfaces = [
		_Chart,
	]
	default_interface = _Chart

class Global(CoClassBaseClass): # A CoClass
	CLSID = IID('{00020812-0000-0000-C000-000000000046}')
	coclass_sources = [
	]
	coclass_interfaces = [
		_Global,
	]
	default_interface = _Global

class OLEObject(CoClassBaseClass): # A CoClass
	CLSID = IID('{00020818-0000-0000-C000-000000000046}')
	coclass_sources = [
		OLEObjectEvents,
	]
	default_source = OLEObjectEvents
	coclass_interfaces = [
		_OLEObject,
	]
	default_interface = _OLEObject

class QueryTable(CoClassBaseClass): # A CoClass
	CLSID = IID('{59191DA1-EA47-11CE-A51F-00AA0061507F}')
	coclass_sources = [
		RefreshEvents,
	]
	default_source = RefreshEvents
	coclass_interfaces = [
		_QueryTable,
	]
	default_interface = _QueryTable

class Workbook(CoClassBaseClass): # A CoClass
	CLSID = IID('{00020819-0000-0000-C000-000000000046}')
	coclass_sources = [
		WorkbookEvents,
	]
	default_source = WorkbookEvents
	coclass_interfaces = [
		_Workbook,
	]
	default_interface = _Workbook

# This CoClass is known by the name 'Excel.Sheet.8'
class Worksheet(CoClassBaseClass): # A CoClass
	CLSID = IID('{00020820-0000-0000-C000-000000000046}')
	coclass_sources = [
		DocEvents,
	]
	default_source = DocEvents
	coclass_interfaces = [
		_Worksheet,
	]
	default_interface = _Worksheet

Adjustments_vtables_dispatch_ = 1
Adjustments_vtables_ = [
	(( 'Parent' , 'Parent' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'Count' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'Index' , 'Val' , ), 0, (0, (), [ (3, 1, None, None) , 
			 (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'Index' , 'Val' , ), 0, (0, (), [ (3, 1, None, None) , 
			 (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

CalloutFormat_vtables_dispatch_ = 1
CalloutFormat_vtables_ = [
	(( 'Parent' , 'Parent' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'AutomaticLength' , ), 10, (10, (), [ ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'CustomDrop' , 'Drop' , ), 11, (11, (), [ (4, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'CustomLength' , 'Length' , ), 12, (12, (), [ (4, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'PresetDrop' , 'DropType' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Accent' , 'Accent' , ), 100, (100, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Accent' , 'Accent' , ), 100, (100, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'Angle' , ), 101, (101, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'Angle' , ), 101, (101, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'AutoAttach' , 'AutoAttach' , ), 102, (102, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'AutoAttach' , 'AutoAttach' , ), 102, (102, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'AutoLength' , 'AutoLength' , ), 103, (103, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Border' , 'Border' , ), 104, (104, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Border' , 'Border' , ), 104, (104, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Drop' , 'Drop' , ), 105, (105, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'DropType' , 'DropType' , ), 106, (106, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Gap' , 'Gap' , ), 107, (107, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Gap' , 'Gap' , ), 107, (107, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'Length' , ), 108, (108, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'Type' , ), 109, (109, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'Type' , ), 109, (109, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

ColorFormat_vtables_dispatch_ = 1
ColorFormat_vtables_ = [
	(( 'Parent' , 'Parent' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'RGB' , 'RGB' , ), 0, (0, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'RGB' , 'RGB' , ), 0, (0, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SchemeColor' , 'SchemeColor' , ), 100, (100, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SchemeColor' , 'SchemeColor' , ), 100, (100, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'Type' , ), 101, (101, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'TintAndShade' , 'pValue' , ), 102, (102, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'TintAndShade' , 'pValue' , ), 102, (102, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ObjectThemeColor' , 'ObjectThemeColor' , ), 104, (104, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ObjectThemeColor' , 'ObjectThemeColor' , ), 104, (104, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Brightness' , 'pValue' , ), 105, (105, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Brightness' , 'pValue' , ), 105, (105, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

CubeField_vtables_dispatch_ = 1
CubeField_vtables_ = [
	(( 'Application' , 'RHS' , ), 148, (148, (), [ (16397, 10, None, "IID('{00024500-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Creator' , 'RHS' , ), 149, (149, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'RHS' , ), 150, (150, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'CubeFieldType' , 'RHS' , ), 1918, (1918, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_Caption' , 'RHS' , ), 2667, (2667, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 1088 , )),
	(( 'Name' , 'RHS' , ), 110, (110, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'RHS' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'RHS' , ), 134, (134, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'RHS' , ), 134, (134, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Position' , 'RHS' , ), 133, (133, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Position' , 'RHS' , ), 133, (133, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'TreeviewControl' , 'RHS' , ), 1919, (1919, (), [ (16393, 10, None, "IID('{0002444B-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'DragToColumn' , 'RHS' , ), 1508, (1508, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'DragToColumn' , 'RHS' , ), 1508, (1508, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'DragToHide' , 'RHS' , ), 1509, (1509, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'DragToHide' , 'RHS' , ), 1509, (1509, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'DragToPage' , 'RHS' , ), 1510, (1510, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'DragToPage' , 'RHS' , ), 1510, (1510, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'DragToRow' , 'RHS' , ), 1511, (1511, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'DragToRow' , 'RHS' , ), 1511, (1511, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'DragToData' , 'RHS' , ), 1844, (1844, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'DragToData' , 'RHS' , ), 1844, (1844, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'HiddenLevels' , 'RHS' , ), 1920, (1920, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 64 , )),
	(( 'HiddenLevels' , 'RHS' , ), 1920, (1920, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 64 , )),
	(( 'HasMemberProperties' , 'RHS' , ), 2181, (2181, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'LayoutForm' , 'RHS' , ), 1848, (1848, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'LayoutForm' , 'RHS' , ), 1848, (1848, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'PivotFields' , 'RHS' , ), 718, (718, (), [ (16393, 10, None, "IID('{00020875-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( '_AddMemberPropertyField' , 'Property' , 'PropertyOrder' , ), 2182, (2182, (), [ (8, 1, None, None) , 
			 (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 280 , (3, 0, None, None) , 1088 , )),
	(( 'EnableMultiplePageItems' , 'RHS' , ), 2184, (2184, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'EnableMultiplePageItems' , 'RHS' , ), 2184, (2184, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'LayoutSubtotalLocation' , 'RHS' , ), 1846, (1846, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'LayoutSubtotalLocation' , 'RHS' , ), 1846, (1846, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ShowInFieldList' , 'RHS' , ), 2185, (2185, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'ShowInFieldList' , 'RHS' , ), 2185, (2185, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 117, (117, (), [ ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'AddMemberPropertyField' , 'Property' , 'PropertyOrder' , 'PropertyDisplayedIn' , ), 2668, (2668, (), [ 
			 (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 2 , 344 , (3, 0, None, None) , 0 , )),
	(( 'IncludeNewItemsInFilter' , 'RHS' , ), 2587, (2587, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'IncludeNewItemsInFilter' , 'RHS' , ), 2587, (2587, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'CubeFieldSubType' , 'RHS' , ), 2670, (2670, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'AllItemsVisible' , 'RHS' , ), 2593, (2593, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'ClearManualFilter' , ), 2594, (2594, (), [ ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'CreatePivotFields' , ), 2671, (2671, (), [ ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'CurrentPageName' , 'RHS' , ), 1852, (1852, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'CurrentPageName' , 'RHS' , ), 1852, (1852, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'IsDate' , 'RHS' , ), 2672, (2672, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'Caption' , 'RHS' , ), 139, (139, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'Caption' , 'RHS' , ), 139, (139, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'FlattenHierarchies' , 'RHS' , ), 2924, (2924, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'FlattenHierarchies' , 'RHS' , ), 2924, (2924, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'HierarchizeDistinct' , 'RHS' , ), 2925, (2925, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'HierarchizeDistinct' , 'RHS' , ), 2925, (2925, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'AutoGroup' , 'Orientation' , 'Position' , ), 3165, (3165, (), [ (12, 17, None, None) , 
			 (12, 17, None, None) , ], 1 , 1 , 4 , 2 , 472 , (3, 0, None, None) , 0 , )),
]

CubeFields_vtables_dispatch_ = 1
CubeFields_vtables_ = [
	(( 'Application' , 'RHS' , ), 148, (148, (), [ (16397, 10, None, "IID('{00024500-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Creator' , 'RHS' , ), 149, (149, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'RHS' , ), 150, (150, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'RHS' , ), 118, (118, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'Index' , 'RHS' , ), 170, (170, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{0002444C-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( '_Default' , 'Index' , 'RHS' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{0002444C-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 1024 , )),
	(( '_NewEnum' , 'RHS' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 1024 , )),
	(( 'AddSet' , 'Name' , 'Caption' , 'RHS' , ), 2186, (2186, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{0002444C-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'GetMeasure' , 'AttributeHierarchy' , 'Function' , 'Caption' , 'RHS' , 
			 ), 3089, (3089, (), [ (12, 1, None, None) , (3, 1, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{0002444C-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 1 , 120 , (3, 0, None, None) , 0 , )),
]

DefaultWebOptions_vtables_dispatch_ = 1
DefaultWebOptions_vtables_ = [
	(( 'Application' , 'RHS' , ), 148, (148, (), [ (16397, 10, None, "IID('{00024500-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Creator' , 'RHS' , ), 149, (149, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'RHS' , ), 150, (150, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'RelyOnCSS' , 'RHS' , ), 1899, (1899, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'RelyOnCSS' , 'RHS' , ), 1899, (1899, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SaveHiddenData' , 'RHS' , ), 1900, (1900, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SaveHiddenData' , 'RHS' , ), 1900, (1900, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'LoadPictures' , 'RHS' , ), 1901, (1901, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'LoadPictures' , 'RHS' , ), 1901, (1901, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'OrganizeInFolder' , 'RHS' , ), 1902, (1902, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'OrganizeInFolder' , 'RHS' , ), 1902, (1902, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'UpdateLinksOnSave' , 'RHS' , ), 1903, (1903, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'UpdateLinksOnSave' , 'RHS' , ), 1903, (1903, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'UseLongFileNames' , 'RHS' , ), 1904, (1904, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'UseLongFileNames' , 'RHS' , ), 1904, (1904, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'CheckIfOfficeIsHTMLEditor' , 'RHS' , ), 1905, (1905, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'CheckIfOfficeIsHTMLEditor' , 'RHS' , ), 1905, (1905, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'DownloadComponents' , 'RHS' , ), 1906, (1906, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'DownloadComponents' , 'RHS' , ), 1906, (1906, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'RelyOnVML' , 'RHS' , ), 1907, (1907, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'RelyOnVML' , 'RHS' , ), 1907, (1907, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'AllowPNG' , 'RHS' , ), 1908, (1908, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'AllowPNG' , 'RHS' , ), 1908, (1908, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ScreenSize' , 'RHS' , ), 1909, (1909, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ScreenSize' , 'RHS' , ), 1909, (1909, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'PixelsPerInch' , 'RHS' , ), 1910, (1910, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'PixelsPerInch' , 'RHS' , ), 1910, (1910, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'LocationOfComponents' , 'RHS' , ), 1911, (1911, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'LocationOfComponents' , 'RHS' , ), 1911, (1911, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Encoding' , 'RHS' , ), 1822, (1822, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Encoding' , 'RHS' , ), 1822, (1822, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'AlwaysSaveInDefaultEncoding' , 'RHS' , ), 1912, (1912, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'AlwaysSaveInDefaultEncoding' , 'RHS' , ), 1912, (1912, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Fonts' , 'RHS' , ), 1913, (1913, (), [ (16393, 10, None, "IID('{000C0914-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'FolderSuffix' , 'RHS' , ), 1914, (1914, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'TargetBrowser' , 'RHS' , ), 2179, (2179, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'TargetBrowser' , 'RHS' , ), 2179, (2179, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'SaveNewWebPagesAsWebArchives' , 'RHS' , ), 2180, (2180, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'SaveNewWebPagesAsWebArchives' , 'RHS' , ), 2180, (2180, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
]

DiagramNode_vtables_dispatch_ = 1
DiagramNode_vtables_ = [
	(( 'AddNode' , 'pos' , 'nodeType' , 'NewNode' , ), 10, (10, (), [ 
			 (3, 49, '2', None) , (3, 49, '1', None) , (16393, 10, None, "IID('{000C0370-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 11, (11, (), [ ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'MoveNode' , 'pTargetNode' , 'pos' , ), 12, (12, (), [ (9, 1, None, "IID('{000C0370-0000-0000-C000-000000000046}')") , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ReplaceNode' , 'pTargetNode' , ), 13, (13, (), [ (9, 1, None, "IID('{000C0370-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SwapNode' , 'pTargetNode' , 'swapChildren' , ), 14, (14, (), [ (9, 1, None, "IID('{000C0370-0000-0000-C000-000000000046}')") , 
			 (11, 49, 'True', None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'CloneNode' , 'copyChildren' , 'pTargetNode' , 'pos' , 'ppNode' , 
			 ), 15, (15, (), [ (11, 1, None, None) , (9, 1, None, "IID('{000C0370-0000-0000-C000-000000000046}')") , (3, 49, '2', None) , (16393, 10, None, "IID('{000C0370-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'TransferChildren' , 'pReceivingNode' , ), 16, (16, (), [ (9, 1, None, "IID('{000C0370-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'NextNode' , 'ppNextNode' , ), 17, (17, (), [ (16393, 10, None, "IID('{000C0370-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'PrevNode' , 'ppPrevNode' , ), 18, (18, (), [ (16393, 10, None, "IID('{000C0370-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 100, (100, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Children' , 'ppChildren' , ), 101, (101, (), [ (16393, 10, None, "IID('{000C036F-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Shape' , 'ppShape' , ), 102, (102, (), [ (16393, 10, None, "IID('{00024439-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Root' , 'ppRoot' , ), 103, (103, (), [ (16393, 10, None, "IID('{000C0370-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Diagram' , 'ppDiagram' , ), 104, (104, (), [ (16393, 10, None, "IID('{000C036D-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Layout' , 'pdgmType' , ), 105, (105, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Layout' , 'pdgmType' , ), 105, (105, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'TextShape' , 'Shape' , ), 106, (106, (), [ (16393, 10, None, "IID('{00024439-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

DiagramNodeChildren_vtables_dispatch_ = 1
DiagramNodeChildren_vtables_ = [
	(( '_NewEnum' , 'ppunkEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 1024 , )),
	(( 'Item' , 'Index' , 'ppNode' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{000C0370-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'AddNode' , 'Index' , 'nodeType' , 'ppNewNode' , ), 10, (10, (), [ 
			 (12, 49, '-1', None) , (3, 49, '1', None) , (16393, 10, None, "IID('{000C0370-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SelectAll' , ), 11, (11, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 100, (100, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pcDiagramNodes' , ), 101, (101, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'FirstChild' , 'pFirst' , ), 103, (103, (), [ (16393, 10, None, "IID('{000C0370-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'LastChild' , 'pLast' , ), 104, (104, (), [ (16393, 10, None, "IID('{000C0370-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

DiagramNodes_vtables_dispatch_ = 1
DiagramNodes_vtables_ = [
	(( '_NewEnum' , 'ppunkEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 1024 , )),
	(( 'Item' , 'Index' , 'ppdn' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{000C0370-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'SelectAll' , ), 10, (10, (), [ ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 100, (100, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pcDiagramNodes' , ), 101, (101, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

FillFormat_vtables_dispatch_ = 1
FillFormat_vtables_ = [
	(( 'Parent' , 'Parent' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Background' , ), 10, (10, (), [ ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 64 , )),
	(( 'OneColorGradient' , 'Style' , 'Variant' , 'Degree' , ), 11, (11, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (4, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Patterned' , 'Pattern' , ), 12, (12, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'PresetGradient' , 'Style' , 'Variant' , 'PresetGradientType' , ), 13, (13, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'PresetTextured' , 'PresetTexture' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Solid' , ), 15, (15, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'TwoColorGradient' , 'Style' , 'Variant' , ), 16, (16, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'UserPicture' , 'PictureFile' , ), 17, (17, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'UserTextured' , 'TextureFile' , ), 18, (18, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'BackColor' , 'BackColor' , ), 100, (100, (), [ (16393, 10, None, "IID('{000C0312-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'BackColor' , 'BackColor' , ), 100, (100, (), [ (9, 1, None, "IID('{000C0312-0000-0000-C000-000000000046}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ForeColor' , 'ForeColor' , ), 101, (101, (), [ (16393, 10, None, "IID('{000C0312-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ForeColor' , 'ForeColor' , ), 101, (101, (), [ (9, 1, None, "IID('{000C0312-0000-0000-C000-000000000046}')") , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'GradientColorType' , 'GradientColorType' , ), 102, (102, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'GradientDegree' , 'GradientDegree' , ), 103, (103, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'GradientStyle' , 'GradientStyle' , ), 104, (104, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'GradientVariant' , 'GradientVariant' , ), 105, (105, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Pattern' , 'Pattern' , ), 106, (106, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'PresetGradientType' , 'PresetGradientType' , ), 107, (107, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'PresetTexture' , 'PresetTexture' , ), 108, (108, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'TextureName' , 'TextureName' , ), 109, (109, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'TextureType' , 'TextureType' , ), 110, (110, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Transparency' , 'Transparency' , ), 111, (111, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Transparency' , 'Transparency' , ), 111, (111, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'Type' , ), 112, (112, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'Visible' , ), 113, (113, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'Visible' , ), 113, (113, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'GradientStops' , 'GradientStops' , ), 114, (114, (), [ (16393, 10, None, "IID('{000C03C0-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'TextureOffsetX' , 'TextureOffsetX' , ), 115, (115, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'TextureOffsetX' , 'TextureOffsetX' , ), 115, (115, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'TextureOffsetY' , 'TextureOffsetY' , ), 116, (116, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'TextureOffsetY' , 'TextureOffsetY' , ), 116, (116, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'TextureAlignment' , 'TextureAlignment' , ), 117, (117, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'TextureAlignment' , 'TextureAlignment' , ), 117, (117, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'TextureHorizontalScale' , 'HorizontalScale' , ), 118, (118, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'TextureHorizontalScale' , 'HorizontalScale' , ), 118, (118, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'TextureVerticalScale' , 'VerticalScale' , ), 119, (119, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'TextureVerticalScale' , 'VerticalScale' , ), 119, (119, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'TextureTile' , 'TextureTile' , ), 120, (120, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'TextureTile' , 'TextureTile' , ), 120, (120, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'RotateWithObject' , 'RotateWithObject' , ), 121, (121, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'RotateWithObject' , 'RotateWithObject' , ), 121, (121, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'PictureEffects' , 'PictureEffects' , ), 122, (122, (), [ (16393, 10, None, "IID('{000C03D2-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'GradientAngle' , 'GradientAngle' , ), 123, (123, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'GradientAngle' , 'GradientAngle' , ), 123, (123, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
]

IRTDUpdateEvent_vtables_dispatch_ = 1
IRTDUpdateEvent_vtables_ = [
	(( 'UpdateNotify' , ), 10, (10, (), [ ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'HeartbeatInterval' , 'plRetVal' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'HeartbeatInterval' , 'plRetVal' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Disconnect' , ), 12, (12, (), [ ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IRtdServer_vtables_dispatch_ = 1
IRtdServer_vtables_ = [
	(( 'ServerStart' , 'CallbackObject' , 'pfRes' , ), 10, (10, (), [ (9, 1, None, "IID('{A43788C1-D91B-11D3-8F39-00C04F3651B8}')") , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'ConnectData' , 'TopicID' , 'Strings' , 'GetNewValues' , 'pvarOut' , 
			 ), 11, (11, (), [ (3, 1, None, None) , (24588, 1, None, None) , (16395, 3, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'RefreshData' , 'TopicCount' , 'parrayOut' , ), 12, (12, (), [ (16387, 3, None, None) , 
			 (24588, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'DisconnectData' , 'TopicID' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Heartbeat' , 'pfRes' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ServerTerminate' , ), 15, (15, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

LineFormat_vtables_dispatch_ = 1
LineFormat_vtables_ = [
	(( 'Parent' , 'Parent' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'BackColor' , 'BackColor' , ), 100, (100, (), [ (16393, 10, None, "IID('{000C0312-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'BackColor' , 'BackColor' , ), 100, (100, (), [ (9, 1, None, "IID('{000C0312-0000-0000-C000-000000000046}')") , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'BeginArrowheadLength' , 'BeginArrowheadLength' , ), 101, (101, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'BeginArrowheadLength' , 'BeginArrowheadLength' , ), 101, (101, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'BeginArrowheadStyle' , 'BeginArrowheadStyle' , ), 102, (102, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'BeginArrowheadStyle' , 'BeginArrowheadStyle' , ), 102, (102, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'BeginArrowheadWidth' , 'BeginArrowheadWidth' , ), 103, (103, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'BeginArrowheadWidth' , 'BeginArrowheadWidth' , ), 103, (103, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'DashStyle' , 'DashStyle' , ), 104, (104, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'DashStyle' , 'DashStyle' , ), 104, (104, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'EndArrowheadLength' , 'EndArrowheadLength' , ), 105, (105, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'EndArrowheadLength' , 'EndArrowheadLength' , ), 105, (105, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'EndArrowheadStyle' , 'EndArrowheadStyle' , ), 106, (106, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'EndArrowheadStyle' , 'EndArrowheadStyle' , ), 106, (106, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'EndArrowheadWidth' , 'EndArrowheadWidth' , ), 107, (107, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'EndArrowheadWidth' , 'EndArrowheadWidth' , ), 107, (107, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ForeColor' , 'ForeColor' , ), 108, (108, (), [ (16393, 10, None, "IID('{000C0312-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ForeColor' , 'ForeColor' , ), 108, (108, (), [ (9, 1, None, "IID('{000C0312-0000-0000-C000-000000000046}')") , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Pattern' , 'Pattern' , ), 109, (109, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Pattern' , 'Pattern' , ), 109, (109, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Style' , ), 110, (110, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Style' , ), 110, (110, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Transparency' , 'Transparency' , ), 111, (111, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Transparency' , 'Transparency' , ), 111, (111, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'Visible' , ), 112, (112, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'Visible' , ), 112, (112, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Weight' , 'Weight' , ), 113, (113, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Weight' , 'Weight' , ), 113, (113, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'InsetPen' , 'InsetPen' , ), 114, (114, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'InsetPen' , 'InsetPen' , ), 114, (114, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
]

Model3DFormat_vtables_dispatch_ = 1
Model3DFormat_vtables_ = [
	(( 'Parent' , 'Parent' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'AutoFit' , 'AutoFit' , ), 100, (100, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'AutoFit' , 'AutoFit' , ), 100, (100, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'RotationX' , 'RotationX' , ), 101, (101, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'RotationX' , 'RotationX' , ), 101, (101, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'RotationY' , 'RotationY' , ), 102, (102, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'RotationY' , 'RotationY' , ), 102, (102, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'RotationZ' , 'RotationZ' , ), 103, (103, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'RotationZ' , 'RotationZ' , ), 103, (103, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'FieldOfView' , 'FOV' , ), 104, (104, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'FieldOfView' , 'FOV' , ), 104, (104, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'CameraPositionX' , 'CameraPositionX' , ), 105, (105, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'CameraPositionX' , 'CameraPositionX' , ), 105, (105, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'CameraPositionY' , 'CameraPositionY' , ), 106, (106, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'CameraPositionY' , 'CameraPositionY' , ), 106, (106, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'CameraPositionZ' , 'CameraPositionZ' , ), 107, (107, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'CameraPositionZ' , 'CameraPositionZ' , ), 107, (107, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'LookAtPointX' , 'LookAtPointX' , ), 108, (108, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'LookAtPointX' , 'LookAtPointX' , ), 108, (108, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'LookAtPointY' , 'LookAtPointY' , ), 109, (109, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'LookAtPointY' , 'LookAtPointY' , ), 109, (109, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'LookAtPointZ' , 'LookAtPointZ' , ), 110, (110, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'LookAtPointZ' , 'LookAtPointZ' , ), 110, (110, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ResetModel' , 'ResetSize' , ), 111, (111, (), [ (11, 49, 'False', None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'IncrementRotationX' , 'Increment' , ), 112, (112, (), [ (4, 1, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'IncrementRotationY' , 'Increment' , ), 113, (113, (), [ (4, 1, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'IncrementRotationZ' , 'Increment' , ), 114, (114, (), [ (4, 1, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
]

PictureFormat_vtables_dispatch_ = 1
PictureFormat_vtables_ = [
	(( 'Parent' , 'Parent' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'IncrementBrightness' , 'Increment' , ), 10, (10, (), [ (4, 1, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'IncrementContrast' , 'Increment' , ), 11, (11, (), [ (4, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Brightness' , 'Brightness' , ), 100, (100, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Brightness' , 'Brightness' , ), 100, (100, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ColorType' , 'ColorType' , ), 101, (101, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ColorType' , 'ColorType' , ), 101, (101, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Contrast' , 'Contrast' , ), 102, (102, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Contrast' , 'Contrast' , ), 102, (102, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'CropBottom' , 'CropBottom' , ), 103, (103, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'CropBottom' , 'CropBottom' , ), 103, (103, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'CropLeft' , 'CropLeft' , ), 104, (104, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'CropLeft' , 'CropLeft' , ), 104, (104, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'CropRight' , 'CropRight' , ), 105, (105, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'CropRight' , 'CropRight' , ), 105, (105, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'CropTop' , 'CropTop' , ), 106, (106, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'CropTop' , 'CropTop' , ), 106, (106, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'TransparencyColor' , 'TransparencyColor' , ), 107, (107, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'TransparencyColor' , 'TransparencyColor' , ), 107, (107, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'TransparentBackground' , 'TransparentBackground' , ), 108, (108, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'TransparentBackground' , 'TransparentBackground' , ), 108, (108, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Crop' , 'Crop' , ), 109, (109, (), [ (16393, 10, None, "IID('{000C03D3-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

PublishObject_vtables_dispatch_ = 1
PublishObject_vtables_ = [
	(( 'Application' , 'RHS' , ), 148, (148, (), [ (16397, 10, None, "IID('{00024500-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Creator' , 'RHS' , ), 149, (149, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'RHS' , ), 150, (150, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 117, (117, (), [ ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Publish' , 'Create' , ), 1895, (1895, (), [ (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DivID' , 'RHS' , ), 1894, (1894, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sheet' , 'RHS' , ), 751, (751, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'SourceType' , 'RHS' , ), 685, (685, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Source' , 'RHS' , ), 222, (222, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'HtmlType' , 'RHS' , ), 1893, (1893, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'HtmlType' , 'RHS' , ), 1893, (1893, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Title' , 'RHS' , ), 199, (199, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Title' , 'RHS' , ), 199, (199, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Filename' , 'RHS' , ), 1415, (1415, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Filename' , 'RHS' , ), 1415, (1415, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'AutoRepublish' , 'RHS' , ), 2178, (2178, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'AutoRepublish' , 'RHS' , ), 2178, (2178, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

ShadowFormat_vtables_dispatch_ = 1
ShadowFormat_vtables_ = [
	(( 'Parent' , 'Parent' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'IncrementOffsetX' , 'Increment' , ), 10, (10, (), [ (4, 1, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'IncrementOffsetY' , 'Increment' , ), 11, (11, (), [ (4, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ForeColor' , 'ForeColor' , ), 100, (100, (), [ (16393, 10, None, "IID('{000C0312-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ForeColor' , 'ForeColor' , ), 100, (100, (), [ (9, 1, None, "IID('{000C0312-0000-0000-C000-000000000046}')") , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Obscured' , 'Obscured' , ), 101, (101, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Obscured' , 'Obscured' , ), 101, (101, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'OffsetX' , 'OffsetX' , ), 102, (102, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'OffsetX' , 'OffsetX' , ), 102, (102, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'OffsetY' , 'OffsetY' , ), 103, (103, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'OffsetY' , 'OffsetY' , ), 103, (103, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Transparency' , 'Transparency' , ), 104, (104, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Transparency' , 'Transparency' , ), 104, (104, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'Type' , ), 105, (105, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'Type' , ), 105, (105, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'Visible' , ), 106, (106, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'Visible' , ), 106, (106, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'ShadowStyle' , ), 107, (107, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'ShadowStyle' , ), 107, (107, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Blur' , 'Blur' , ), 108, (108, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Blur' , 'Blur' , ), 108, (108, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Size' , 'Size' , ), 109, (109, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Size' , 'Size' , ), 109, (109, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'RotateWithShape' , 'RotateWithShape' , ), 110, (110, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'RotateWithShape' , 'RotateWithShape' , ), 110, (110, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

ShapeNode_vtables_dispatch_ = 1
ShapeNode_vtables_ = [
	(( 'Parent' , 'Parent' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'EditingType' , 'EditingType' , ), 100, (100, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Points' , 'Points' , ), 101, (101, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SegmentType' , 'SegmentType' , ), 102, (102, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

ShapeNodes_vtables_dispatch_ = 1
ShapeNodes_vtables_ = [
	(( 'Parent' , 'Parent' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'Count' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'Index' , 'Item' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{000C0318-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , '_NewEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 1024 , )),
	(( 'Delete' , 'Index' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Insert' , 'Index' , 'SegmentType' , 'EditingType' , 'X1' , 
			 'Y1' , 'X2' , 'Y2' , 'X3' , 'Y3' , 
			 ), 12, (12, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (4, 1, None, None) , 
			 (4, 1, None, None) , (4, 49, '0.0', None) , (4, 49, '0.0', None) , (4, 49, '0.0', None) , (4, 49, '0.0', None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'SetEditingType' , 'Index' , 'EditingType' , ), 13, (13, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'SetPosition' , 'Index' , 'X1' , 'Y1' , ), 14, (14, (), [ 
			 (3, 1, None, None) , (4, 1, None, None) , (4, 1, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'SetSegmentType' , 'Index' , 'SegmentType' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

Sheets_vtables_dispatch_ = 1
Sheets_vtables_ = [
	(( 'Application' , 'RHS' , ), 148, (148, (), [ (16397, 10, None, "IID('{00024500-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Creator' , 'RHS' , ), 149, (149, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'RHS' , ), 150, (150, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Before' , 'After' , 'Count' , 'Type' , 
			 'lcid' , 'RHS' , ), 181, (181, (), [ (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 4 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Copy' , 'Before' , 'After' , 'lcid' , ), 551, (551, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 2 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'RHS' , ), 118, (118, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'lcid' , ), 117, (117, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'FillAcrossSheets' , 'Range' , 'Type' , 'lcid' , ), 469, (469, (), [ 
			 (9, 1, None, "IID('{00020846-0000-0000-C000-000000000046}')") , (3, 49, '-4104', None) , (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'Index' , 'RHS' , ), 170, (170, (), [ (12, 1, None, None) , 
			 (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Move' , 'Before' , 'After' , 'lcid' , ), 637, (637, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 2 , 128 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'RHS' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 1024 , )),
	(( '__PrintOut' , 'From' , 'To' , 'Copies' , 'Preview' , 
			 'ActivePrinter' , 'PrintToFile' , 'Collate' , 'lcid' , ), 905, (905, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 7 , 144 , (3, 0, None, None) , 1088 , )),
	(( 'PrintPreview' , 'EnableChanges' , 'lcid' , ), 281, (281, (), [ (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Select' , 'Replace' , 'lcid' , ), 235, (235, (), [ (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 160 , (3, 0, None, None) , 0 , )),
	(( 'HPageBreaks' , 'RHS' , ), 1418, (1418, (), [ (16393, 10, None, "IID('{00024404-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'VPageBreaks' , 'RHS' , ), 1419, (1419, (), [ (16393, 10, None, "IID('{00024405-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'lcid' , 'RHS' , ), 558, (558, (), [ (3, 5, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'lcid' , 'RHS' , ), 558, (558, (), [ (3, 5, None, None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( '_Default' , 'Index' , 'RHS' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 1024 , )),
	(( '_PrintOut' , 'From' , 'To' , 'Copies' , 'Preview' , 
			 'ActivePrinter' , 'PrintToFile' , 'Collate' , 'PrToFileName' , 'lcid' , 
			 ), 1772, (1772, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 8 , 208 , (3, 0, None, None) , 1088 , )),
	(( 'PrintOut' , 'From' , 'To' , 'Copies' , 'Preview' , 
			 'ActivePrinter' , 'PrintToFile' , 'Collate' , 'PrToFileName' , 'IgnorePrintAreas' , 
			 'lcid' , ), 2361, (2361, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 9 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Add2' , 'Before' , 'After' , 'Count' , 'NewLayout' , 
			 'RHS' , ), 3054, (3054, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 4 , 224 , (3, 0, None, None) , 0 , )),
]

TextEffectFormat_vtables_dispatch_ = 1
TextEffectFormat_vtables_ = [
	(( 'Parent' , 'Parent' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ToggleVerticalText' , ), 10, (10, (), [ ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Alignment' , 'Alignment' , ), 100, (100, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Alignment' , 'Alignment' , ), 100, (100, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'FontBold' , 'FontBold' , ), 101, (101, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'FontBold' , 'FontBold' , ), 101, (101, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'FontItalic' , 'FontItalic' , ), 102, (102, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'FontItalic' , 'FontItalic' , ), 102, (102, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'FontName' , 'FontName' , ), 103, (103, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'FontName' , 'FontName' , ), 103, (103, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'FontSize' , 'FontSize' , ), 104, (104, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'FontSize' , 'FontSize' , ), 104, (104, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'KernedPairs' , 'KernedPairs' , ), 105, (105, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'KernedPairs' , 'KernedPairs' , ), 105, (105, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'NormalizedHeight' , 'NormalizedHeight' , ), 106, (106, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'NormalizedHeight' , 'NormalizedHeight' , ), 106, (106, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'PresetShape' , 'PresetShape' , ), 107, (107, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'PresetShape' , 'PresetShape' , ), 107, (107, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'PresetTextEffect' , 'Preset' , ), 108, (108, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'PresetTextEffect' , 'Preset' , ), 108, (108, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'RotatedChars' , 'RotatedChars' , ), 109, (109, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'RotatedChars' , 'RotatedChars' , ), 109, (109, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Text' , 'Text' , ), 110, (110, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Text' , 'Text' , ), 110, (110, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Tracking' , 'Tracking' , ), 111, (111, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Tracking' , 'Tracking' , ), 111, (111, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
]

TextFrame2_vtables_dispatch_ = 1
TextFrame2_vtables_ = [
	(( 'Parent' , 'Parent' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'MarginBottom' , 'MarginBottom' , ), 100, (100, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'MarginBottom' , 'MarginBottom' , ), 100, (100, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'MarginLeft' , 'MarginLeft' , ), 101, (101, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'MarginLeft' , 'MarginLeft' , ), 101, (101, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'MarginRight' , 'MarginRight' , ), 102, (102, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'MarginRight' , 'MarginRight' , ), 102, (102, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'MarginTop' , 'MarginTop' , ), 103, (103, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'MarginTop' , 'MarginTop' , ), 103, (103, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'Orientation' , ), 104, (104, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'Orientation' , ), 104, (104, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'HorizontalAnchor' , 'HorizontalAnchor' , ), 105, (105, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'HorizontalAnchor' , 'HorizontalAnchor' , ), 105, (105, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'VerticalAnchor' , 'VerticalAnchor' , ), 106, (106, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'VerticalAnchor' , 'VerticalAnchor' , ), 106, (106, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'PathFormat' , 'PathFormat' , ), 107, (107, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'PathFormat' , 'PathFormat' , ), 107, (107, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'WarpFormat' , 'WarpFormat' , ), 108, (108, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'WarpFormat' , 'WarpFormat' , ), 108, (108, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'WordArtformat' , 'WordArtformat' , ), 109, (109, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'WordArtformat' , 'WordArtformat' , ), 109, (109, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'WordWrap' , 'WordWrap' , ), 110, (110, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'WordWrap' , 'WordWrap' , ), 110, (110, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'AutoSize' , 'AutoSize' , ), 111, (111, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'AutoSize' , 'AutoSize' , ), 111, (111, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ThreeD' , 'ThreeD' , ), 112, (112, (), [ (16393, 10, None, "IID('{000C0321-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'HasText' , 'pHasText' , ), 113, (113, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'TextRange' , 'Range' , ), 114, (114, (), [ (16393, 10, None, "IID('{000C0397-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Column' , 'Column' , ), 115, (115, (), [ (16393, 10, None, "IID('{000C03B2-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Ruler' , 'Ruler' , ), 116, (116, (), [ (16393, 10, None, "IID('{000C03C1-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'DeleteText' , ), 117, (117, (), [ ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'NoTextRotation' , 'NoTextRotation' , ), 118, (118, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'NoTextRotation' , 'NoTextRotation' , ), 118, (118, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
]

ThreeDFormat_vtables_dispatch_ = 1
ThreeDFormat_vtables_ = [
	(( 'Parent' , 'Parent' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'IncrementRotationX' , 'Increment' , ), 10, (10, (), [ (4, 1, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'IncrementRotationY' , 'Increment' , ), 11, (11, (), [ (4, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ResetRotation' , ), 12, (12, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SetThreeDFormat' , 'PresetThreeDFormat' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'SetExtrusionDirection' , 'PresetExtrusionDirection' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Depth' , 'Depth' , ), 100, (100, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Depth' , 'Depth' , ), 100, (100, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ExtrusionColor' , 'ExtrusionColor' , ), 101, (101, (), [ (16393, 10, None, "IID('{000C0312-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ExtrusionColorType' , 'ExtrusionColorType' , ), 102, (102, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ExtrusionColorType' , 'ExtrusionColorType' , ), 102, (102, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Perspective' , 'Perspective' , ), 103, (103, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Perspective' , 'Perspective' , ), 103, (103, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'PresetExtrusionDirection' , 'PresetExtrusionDirection' , ), 104, (104, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'PresetLightingDirection' , 'PresetLightingDirection' , ), 105, (105, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'PresetLightingDirection' , 'PresetLightingDirection' , ), 105, (105, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'PresetLightingSoftness' , 'PresetLightingSoftness' , ), 106, (106, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'PresetLightingSoftness' , 'PresetLightingSoftness' , ), 106, (106, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'PresetMaterial' , 'PresetMaterial' , ), 107, (107, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'PresetMaterial' , 'PresetMaterial' , ), 107, (107, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'PresetThreeDFormat' , 'PresetThreeDFormat' , ), 108, (108, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'RotationX' , 'RotationX' , ), 109, (109, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'RotationX' , 'RotationX' , ), 109, (109, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'RotationY' , 'RotationY' , ), 110, (110, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'RotationY' , 'RotationY' , ), 110, (110, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'Visible' , ), 111, (111, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'Visible' , ), 111, (111, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'SetPresetCamera' , 'PresetCamera' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'IncrementRotationZ' , 'Increment' , ), 16, (16, (), [ (4, 1, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'IncrementRotationHorizontal' , 'Increment' , ), 17, (17, (), [ (4, 1, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'IncrementRotationVertical' , 'Increment' , ), 18, (18, (), [ (4, 1, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'PresetLighting' , 'PresetLightRigType' , ), 112, (112, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'PresetLighting' , 'PresetLightRigType' , ), 112, (112, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Z' , 'Z' , ), 113, (113, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Z' , 'Z' , ), 113, (113, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'BevelTopType' , 'BevelTopType' , ), 114, (114, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'BevelTopType' , 'BevelTopType' , ), 114, (114, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'BevelTopInset' , 'BevelTopInset' , ), 115, (115, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'BevelTopInset' , 'BevelTopInset' , ), 115, (115, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'BevelTopDepth' , 'BevelTopDepth' , ), 116, (116, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'BevelTopDepth' , 'BevelTopDepth' , ), 116, (116, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'BevelBottomType' , 'BevelBottomType' , ), 117, (117, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'BevelBottomType' , 'BevelBottomType' , ), 117, (117, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'BevelBottomInset' , 'BevelBottomInset' , ), 118, (118, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'BevelBottomInset' , 'BevelBottomInset' , ), 118, (118, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'BevelBottomDepth' , 'BevelBottomDepth' , ), 119, (119, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'BevelBottomDepth' , 'BevelBottomDepth' , ), 119, (119, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'PresetCamera' , 'PresetCamera' , ), 120, (120, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'RotationZ' , 'RotationZ' , ), 121, (121, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'RotationZ' , 'RotationZ' , ), 121, (121, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'ContourWidth' , 'Width' , ), 122, (122, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'ContourWidth' , 'Width' , ), 122, (122, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'ContourColor' , 'ContourColor' , ), 123, (123, (), [ (16393, 10, None, "IID('{000C0312-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'FieldOfView' , 'FOV' , ), 124, (124, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'FieldOfView' , 'FOV' , ), 124, (124, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'ProjectText' , 'ProjectText' , ), 125, (125, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'ProjectText' , 'ProjectText' , ), 125, (125, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'LightAngle' , 'LightAngle' , ), 126, (126, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'LightAngle' , 'LightAngle' , ), 126, (126, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
]

TreeviewControl_vtables_dispatch_ = 1
TreeviewControl_vtables_ = [
	(( 'Application' , 'RHS' , ), 148, (148, (), [ (16397, 10, None, "IID('{00024500-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Creator' , 'RHS' , ), 149, (149, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'RHS' , ), 150, (150, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Hidden' , 'RHS' , ), 268, (268, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Hidden' , 'RHS' , ), 268, (268, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Drilled' , 'RHS' , ), 1917, (1917, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Drilled' , 'RHS' , ), 1917, (1917, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

WebOptions_vtables_dispatch_ = 1
WebOptions_vtables_ = [
	(( 'Application' , 'RHS' , ), 148, (148, (), [ (16397, 10, None, "IID('{00024500-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Creator' , 'RHS' , ), 149, (149, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'RHS' , ), 150, (150, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'RelyOnCSS' , 'RHS' , ), 1899, (1899, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'RelyOnCSS' , 'RHS' , ), 1899, (1899, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'OrganizeInFolder' , 'RHS' , ), 1902, (1902, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'OrganizeInFolder' , 'RHS' , ), 1902, (1902, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'UseLongFileNames' , 'RHS' , ), 1904, (1904, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'UseLongFileNames' , 'RHS' , ), 1904, (1904, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'DownloadComponents' , 'RHS' , ), 1906, (1906, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'DownloadComponents' , 'RHS' , ), 1906, (1906, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'RelyOnVML' , 'RHS' , ), 1907, (1907, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'RelyOnVML' , 'RHS' , ), 1907, (1907, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'AllowPNG' , 'RHS' , ), 1908, (1908, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'AllowPNG' , 'RHS' , ), 1908, (1908, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ScreenSize' , 'RHS' , ), 1909, (1909, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ScreenSize' , 'RHS' , ), 1909, (1909, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'PixelsPerInch' , 'RHS' , ), 1910, (1910, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'PixelsPerInch' , 'RHS' , ), 1910, (1910, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'LocationOfComponents' , 'RHS' , ), 1911, (1911, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'LocationOfComponents' , 'RHS' , ), 1911, (1911, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Encoding' , 'RHS' , ), 1822, (1822, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Encoding' , 'RHS' , ), 1822, (1822, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'FolderSuffix' , 'RHS' , ), 1914, (1914, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'UseDefaultFolderSuffix' , ), 1915, (1915, (), [ ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'TargetBrowser' , 'RHS' , ), 2179, (2179, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'TargetBrowser' , 'RHS' , ), 2179, (2179, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

Workbooks_vtables_dispatch_ = 1
Workbooks_vtables_ = [
	(( 'Application' , 'RHS' , ), 148, (148, (), [ (16397, 10, None, "IID('{00024500-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Creator' , 'RHS' , ), 149, (149, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'RHS' , ), 150, (150, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Template' , 'lcid' , 'RHS' , ), 181, (181, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16397, 10, None, "IID('{00020819-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 1 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Close' , 'lcid' , ), 277, (277, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'RHS' , ), 118, (118, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'Index' , 'RHS' , ), 170, (170, (), [ (12, 1, None, None) , 
			 (16397, 10, None, "IID('{00020819-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'RHS' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 1024 , )),
	(( '_Open' , 'Filename' , 'UpdateLinks' , 'ReadOnly' , 'Format' , 
			 'Password' , 'WriteResPassword' , 'IgnoreReadOnlyRecommended' , 'Origin' , 'Delimiter' , 
			 'Editable' , 'Notify' , 'Converter' , 'AddToMru' , 'lcid' , 
			 'RHS' , ), 682, (682, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (3, 5, None, None) , (16397, 10, None, "IID('{00020819-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 12 , 120 , (3, 0, None, None) , 1088 , )),
	(( '__OpenText' , 'Filename' , 'Origin' , 'StartRow' , 'DataType' , 
			 'TextQualifier' , 'ConsecutiveDelimiter' , 'Tab' , 'Semicolon' , 'Comma' , 
			 'Space' , 'Other' , 'OtherChar' , 'FieldInfo' , 'TextVisualLayout' , 
			 'lcid' , ), 683, (683, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (3, 49, '1', None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 9 , 128 , (3, 0, None, None) , 1088 , )),
	(( '_Default' , 'Index' , 'RHS' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16397, 10, None, "IID('{00020819-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 1024 , )),
	(( '_OpenText' , 'Filename' , 'Origin' , 'StartRow' , 'DataType' , 
			 'TextQualifier' , 'ConsecutiveDelimiter' , 'Tab' , 'Semicolon' , 'Comma' , 
			 'Space' , 'Other' , 'OtherChar' , 'FieldInfo' , 'TextVisualLayout' , 
			 'DecimalSeparator' , 'ThousandsSeparator' , 'lcid' , ), 1773, (1773, (), [ (8, 1, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 49, '1', None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 11 , 144 , (3, 0, None, None) , 1088 , )),
	(( 'Open' , 'Filename' , 'UpdateLinks' , 'ReadOnly' , 'Format' , 
			 'Password' , 'WriteResPassword' , 'IgnoreReadOnlyRecommended' , 'Origin' , 'Delimiter' , 
			 'Editable' , 'Notify' , 'Converter' , 'AddToMru' , 'Local' , 
			 'CorruptLoad' , 'lcid' , 'RHS' , ), 1923, (1923, (), [ (8, 1, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , 
			 (16397, 10, None, "IID('{00020819-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 14 , 152 , (3, 0, None, None) , 0 , )),
	(( 'OpenText' , 'Filename' , 'Origin' , 'StartRow' , 'DataType' , 
			 'TextQualifier' , 'ConsecutiveDelimiter' , 'Tab' , 'Semicolon' , 'Comma' , 
			 'Space' , 'Other' , 'OtherChar' , 'FieldInfo' , 'TextVisualLayout' , 
			 'DecimalSeparator' , 'ThousandsSeparator' , 'TrailingMinusNumbers' , 'Local' , 'lcid' , 
			 ), 1924, (1924, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (3, 49, '1', None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 13 , 160 , (3, 0, None, None) , 0 , )),
	(( 'OpenDatabase' , 'Filename' , 'CommandText' , 'CommandType' , 'BackgroundQuery' , 
			 'ImportDataAs' , 'RHS' , ), 2067, (2067, (), [ (8, 1, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (16397, 10, None, "IID('{00020819-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 4 , 168 , (3, 0, None, None) , 0 , )),
	(( 'CheckOut' , 'Filename' , ), 2069, (2069, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'CanCheckOut' , 'Filename' , 'RHS' , ), 2070, (2070, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( '_OpenXML' , 'Filename' , 'Stylesheets' , 'RHS' , ), 2071, (2071, (), [ 
			 (8, 1, None, None) , (12, 17, None, None) , (16397, 10, None, "IID('{00020819-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 1 , 192 , (3, 0, None, None) , 1088 , )),
	(( 'OpenXML' , 'Filename' , 'Stylesheets' , 'LoadOption' , 'RHS' , 
			 ), 2280, (2280, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , (16397, 10, None, "IID('{00020819-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 2 , 200 , (3, 0, None, None) , 0 , )),
]

_Application_vtables_dispatch_ = 1
_Application_vtables_ = [
	(( 'Application' , 'RHS' , ), 148, (148, (), [ (16397, 10, None, "IID('{00024500-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Creator' , 'RHS' , ), 149, (149, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'RHS' , ), 150, (150, (), [ (16397, 10, None, "IID('{00024500-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ActiveCell' , 'RHS' , ), 305, (305, (), [ (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ActiveChart' , 'RHS' , ), 183, (183, (), [ (16397, 10, None, "IID('{00020821-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ActiveDialog' , 'RHS' , ), 815, (815, (), [ (16393, 10, None, "IID('{000208AF-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 64 , )),
	(( 'ActiveMenuBar' , 'RHS' , ), 758, (758, (), [ (16393, 10, None, "IID('{00020864-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 64 , )),
	(( 'ActivePrinter' , 'lcid' , 'RHS' , ), 306, (306, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ActivePrinter' , 'lcid' , 'RHS' , ), 306, (306, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ActiveSheet' , 'RHS' , ), 307, (307, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ActiveWindow' , 'RHS' , ), 759, (759, (), [ (16393, 10, None, "IID('{00020893-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ActiveWorkbook' , 'RHS' , ), 308, (308, (), [ (16397, 10, None, "IID('{00020819-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'AddIns' , 'RHS' , ), 549, (549, (), [ (16393, 10, None, "IID('{00020858-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 1024 , )),
	(( 'Assistant' , 'RHS' , ), 1438, (1438, (), [ (16393, 10, None, "IID('{000C0322-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 64 , )),
	(( 'Calculate' , 'lcid' , ), 279, (279, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Cells' , 'RHS' , ), 238, (238, (), [ (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Charts' , 'RHS' , ), 121, (121, (), [ (16393, 10, None, "IID('{000208D7-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Columns' , 'RHS' , ), 241, (241, (), [ (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 1024 , )),
	(( 'CommandBars' , 'RHS' , ), 1439, (1439, (), [ (16397, 10, None, "IID('{55F88893-7708-11D1-ACEB-006008961DA5}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'DDEAppReturnCode' , 'lcid' , 'RHS' , ), 332, (332, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'DDEExecute' , 'Channel' , 'String' , 'lcid' , ), 333, (333, (), [ 
			 (3, 1, None, None) , (8, 1, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'DDEInitiate' , 'App' , 'Topic' , 'lcid' , 'RHS' , 
			 ), 334, (334, (), [ (8, 1, None, None) , (8, 1, None, None) , (3, 5, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'DDEPoke' , 'Channel' , 'Item' , 'Data' , 'lcid' , 
			 ), 335, (335, (), [ (3, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'DDERequest' , 'Channel' , 'Item' , 'lcid' , 'RHS' , 
			 ), 336, (336, (), [ (3, 1, None, None) , (8, 1, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'DDETerminate' , 'Channel' , 'lcid' , ), 337, (337, (), [ (3, 1, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DialogSheets' , 'RHS' , ), 764, (764, (), [ (16393, 10, None, "IID('{000208D7-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 64 , )),
	(( 'Evaluate' , 'Name' , 'lcid' , 'RHS' , ), 1, (1, (), [ 
			 (12, 1, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( '_Evaluate' , 'Name' , 'lcid' , 'RHS' , ), -5, (-5, (), [ 
			 (12, 1, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 1024 , )),
	(( 'ExecuteExcel4Macro' , 'String' , 'lcid' , 'RHS' , ), 350, (350, (), [ 
			 (8, 1, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Intersect' , 'Arg1' , 'Arg2' , 'Arg3' , 'Arg4' , 
			 'Arg5' , 'Arg6' , 'Arg7' , 'Arg8' , 'Arg9' , 
			 'Arg10' , 'Arg11' , 'Arg12' , 'Arg13' , 'Arg14' , 
			 'Arg15' , 'Arg16' , 'Arg17' , 'Arg18' , 'Arg19' , 
			 'Arg20' , 'Arg21' , 'Arg22' , 'Arg23' , 'Arg24' , 
			 'Arg25' , 'Arg26' , 'Arg27' , 'Arg28' , 'Arg29' , 
			 'Arg30' , 'lcid' , 'RHS' , ), 766, (766, (), [ (9, 1, None, "IID('{00020846-0000-0000-C000-000000000046}')") , 
			 (9, 1, None, "IID('{00020846-0000-0000-C000-000000000046}')") , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , 
			 (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 28 , 288 , (3, 0, None, None) , 0 , )),
	(( 'MenuBars' , 'RHS' , ), 589, (589, (), [ (16393, 10, None, "IID('{00020863-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 64 , )),
	(( 'Modules' , 'RHS' , ), 582, (582, (), [ (16393, 10, None, "IID('{000208AE-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 64 , )),
	(( 'Names' , 'RHS' , ), 442, (442, (), [ (16393, 10, None, "IID('{000208B8-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Range' , 'Cell1' , 'Cell2' , 'RHS' , ), 197, (197, (), [ 
			 (12, 1, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 1 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Rows' , 'RHS' , ), 258, (258, (), [ (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 1024 , )),
	(( 'Run' , 'Macro' , 'Arg1' , 'Arg2' , 'Arg3' , 
			 'Arg4' , 'Arg5' , 'Arg6' , 'Arg7' , 'Arg8' , 
			 'Arg9' , 'Arg10' , 'Arg11' , 'Arg12' , 'Arg13' , 
			 'Arg14' , 'Arg15' , 'Arg16' , 'Arg17' , 'Arg18' , 
			 'Arg19' , 'Arg20' , 'Arg21' , 'Arg22' , 'Arg23' , 
			 'Arg24' , 'Arg25' , 'Arg26' , 'Arg27' , 'Arg28' , 
			 'Arg29' , 'Arg30' , 'RHS' , ), 259, (259, (), [ (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 31 , 336 , (3, 0, None, None) , 0 , )),
	(( '_Run2' , 'Macro' , 'Arg1' , 'Arg2' , 'Arg3' , 
			 'Arg4' , 'Arg5' , 'Arg6' , 'Arg7' , 'Arg8' , 
			 'Arg9' , 'Arg10' , 'Arg11' , 'Arg12' , 'Arg13' , 
			 'Arg14' , 'Arg15' , 'Arg16' , 'Arg17' , 'Arg18' , 
			 'Arg19' , 'Arg20' , 'Arg21' , 'Arg22' , 'Arg23' , 
			 'Arg24' , 'Arg25' , 'Arg26' , 'Arg27' , 'Arg28' , 
			 'Arg29' , 'Arg30' , 'lcid' , 'RHS' , ), 806, (806, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 31 , 344 , (3, 0, None, None) , 1024 , )),
	(( 'Selection' , 'lcid' , 'RHS' , ), 147, (147, (), [ (3, 5, None, None) , 
			 (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'SendKeys' , 'Keys' , 'Wait' , 'lcid' , ), 383, (383, (), [ 
			 (12, 1, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 360 , (3, 0, None, None) , 0 , )),
	(( 'Sheets' , 'RHS' , ), 485, (485, (), [ (16393, 10, None, "IID('{000208D7-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'ShortcutMenus' , 'Index' , 'RHS' , ), 776, (776, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{00020866-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 64 , )),
	(( 'ThisWorkbook' , 'lcid' , 'RHS' , ), 778, (778, (), [ (3, 5, None, None) , 
			 (16397, 10, None, "IID('{00020819-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Toolbars' , 'RHS' , ), 552, (552, (), [ (16393, 10, None, "IID('{0002085D-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 64 , )),
	(( 'Union' , 'Arg1' , 'Arg2' , 'Arg3' , 'Arg4' , 
			 'Arg5' , 'Arg6' , 'Arg7' , 'Arg8' , 'Arg9' , 
			 'Arg10' , 'Arg11' , 'Arg12' , 'Arg13' , 'Arg14' , 
			 'Arg15' , 'Arg16' , 'Arg17' , 'Arg18' , 'Arg19' , 
			 'Arg20' , 'Arg21' , 'Arg22' , 'Arg23' , 'Arg24' , 
			 'Arg25' , 'Arg26' , 'Arg27' , 'Arg28' , 'Arg29' , 
			 'Arg30' , 'lcid' , 'RHS' , ), 779, (779, (), [ (9, 1, None, "IID('{00020846-0000-0000-C000-000000000046}')") , 
			 (9, 1, None, "IID('{00020846-0000-0000-C000-000000000046}')") , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , 
			 (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 28 , 400 , (3, 0, None, None) , 0 , )),
	(( 'Windows' , 'RHS' , ), 430, (430, (), [ (16393, 10, None, "IID('{00020892-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'Workbooks' , 'RHS' , ), 572, (572, (), [ (16393, 10, None, "IID('{000208DB-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'WorksheetFunction' , 'RHS' , ), 1440, (1440, (), [ (16393, 10, None, "IID('{00020845-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'Worksheets' , 'RHS' , ), 494, (494, (), [ (16393, 10, None, "IID('{000208D7-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'Excel4IntlMacroSheets' , 'RHS' , ), 581, (581, (), [ (16393, 10, None, "IID('{000208D7-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Excel4MacroSheets' , 'RHS' , ), 579, (579, (), [ (16393, 10, None, "IID('{000208D7-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'ActivateMicrosoftApp' , 'Index' , 'lcid' , ), 1095, (1095, (), [ (3, 1, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'AddChartAutoFormat' , 'Chart' , 'Name' , 'Description' , 'lcid' , 
			 ), 216, (216, (), [ (12, 1, None, None) , (8, 1, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 464 , (3, 0, None, None) , 64 , )),
	(( 'AddCustomList' , 'ListArray' , 'ByRow' , 'lcid' , ), 780, (780, (), [ 
			 (12, 1, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 472 , (3, 0, None, None) , 0 , )),
	(( 'AlertBeforeOverwriting' , 'lcid' , 'RHS' , ), 930, (930, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'AlertBeforeOverwriting' , 'lcid' , 'RHS' , ), 930, (930, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'AltStartupPath' , 'lcid' , 'RHS' , ), 313, (313, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'AltStartupPath' , 'lcid' , 'RHS' , ), 313, (313, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'AskToUpdateLinks' , 'lcid' , 'RHS' , ), 992, (992, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'AskToUpdateLinks' , 'lcid' , 'RHS' , ), 992, (992, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'EnableAnimations' , 'lcid' , 'RHS' , ), 1180, (1180, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'EnableAnimations' , 'lcid' , 'RHS' , ), 1180, (1180, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'AutoCorrect' , 'RHS' , ), 1145, (1145, (), [ (16393, 10, None, "IID('{000208D4-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'Build' , 'lcid' , 'RHS' , ), 314, (314, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'CalculateBeforeSave' , 'lcid' , 'RHS' , ), 315, (315, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'CalculateBeforeSave' , 'lcid' , 'RHS' , ), 315, (315, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'Calculation' , 'lcid' , 'RHS' , ), 316, (316, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'Calculation' , 'lcid' , 'RHS' , ), 316, (316, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'Caller' , 'Index' , 'lcid' , 'RHS' , ), 317, (317, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 1 , 592 , (3, 0, None, None) , 0 , )),
	(( 'CanPlaySounds' , 'lcid' , 'RHS' , ), 318, (318, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'CanRecordSounds' , 'lcid' , 'RHS' , ), 319, (319, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'Caption' , 'RHS' , ), 139, (139, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'Caption' , 'RHS' , ), 139, (139, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'CellDragAndDrop' , 'lcid' , 'RHS' , ), 320, (320, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'CellDragAndDrop' , 'lcid' , 'RHS' , ), 320, (320, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'CentimetersToPoints' , 'Centimeters' , 'lcid' , 'RHS' , ), 1086, (1086, (), [ 
			 (5, 1, None, None) , (3, 5, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'CheckSpelling' , 'Word' , 'CustomDictionary' , 'IgnoreUppercase' , 'lcid' , 
			 'RHS' , ), 505, (505, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (3, 5, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 2 , 656 , (3, 0, None, None) , 0 , )),
	(( 'ClipboardFormats' , 'Index' , 'lcid' , 'RHS' , ), 321, (321, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 1 , 664 , (3, 0, None, None) , 0 , )),
	(( 'DisplayClipboardWindow' , 'lcid' , 'RHS' , ), 322, (322, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'DisplayClipboardWindow' , 'lcid' , 'RHS' , ), 322, (322, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'ColorButtons' , 'RHS' , ), 365, (365, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 64 , )),
	(( 'ColorButtons' , 'RHS' , ), 365, (365, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 64 , )),
	(( 'CommandUnderlines' , 'lcid' , 'RHS' , ), 323, (323, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
	(( 'CommandUnderlines' , 'lcid' , 'RHS' , ), 323, (323, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
	(( 'ConstrainNumeric' , 'lcid' , 'RHS' , ), 324, (324, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'ConstrainNumeric' , 'lcid' , 'RHS' , ), 324, (324, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'ConvertFormula' , 'Formula' , 'FromReferenceStyle' , 'ToReferenceStyle' , 'ToAbsolute' , 
			 'RelativeTo' , 'lcid' , 'RHS' , ), 325, (325, (), [ (12, 1, None, None) , 
			 (3, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 3 , 736 , (3, 0, None, None) , 0 , )),
	(( 'CopyObjectsWithCells' , 'lcid' , 'RHS' , ), 991, (991, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
	(( 'CopyObjectsWithCells' , 'lcid' , 'RHS' , ), 991, (991, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
	(( 'Cursor' , 'lcid' , 'RHS' , ), 1161, (1161, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
	(( 'Cursor' , 'lcid' , 'RHS' , ), 1161, (1161, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
	(( 'CustomListCount' , 'lcid' , 'RHS' , ), 787, (787, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
	(( 'CutCopyMode' , 'lcid' , 'RHS' , ), 330, (330, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
	(( 'CutCopyMode' , 'lcid' , 'RHS' , ), 330, (330, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
	(( 'DataEntryMode' , 'lcid' , 'RHS' , ), 331, (331, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
	(( 'DataEntryMode' , 'lcid' , 'RHS' , ), 331, (331, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
	(( 'Dummy1' , 'Arg1' , 'Arg2' , 'Arg3' , 'Arg4' , 
			 'RHS' , ), 1782, (1782, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 4 , 816 , (3, 0, None, None) , 64 , )),
	(( 'Dummy2' , 'Arg1' , 'Arg2' , 'Arg3' , 'Arg4' , 
			 'Arg5' , 'Arg6' , 'Arg7' , 'Arg8' , 'RHS' , 
			 ), 1783, (1783, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 8 , 824 , (3, 0, None, None) , 64 , )),
	(( 'Dummy3' , 'RHS' , ), 1784, (1784, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 832 , (3, 0, None, None) , 64 , )),
	(( 'Dummy4' , 'Arg1' , 'Arg2' , 'Arg3' , 'Arg4' , 
			 'Arg5' , 'Arg6' , 'Arg7' , 'Arg8' , 'Arg9' , 
			 'Arg10' , 'Arg11' , 'Arg12' , 'Arg13' , 'Arg14' , 
			 'Arg15' , 'RHS' , ), 1785, (1785, (), [ (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 15 , 840 , (3, 0, None, None) , 64 , )),
	(( 'Dummy5' , 'Arg1' , 'Arg2' , 'Arg3' , 'Arg4' , 
			 'Arg5' , 'Arg6' , 'Arg7' , 'Arg8' , 'Arg9' , 
			 'Arg10' , 'Arg11' , 'Arg12' , 'Arg13' , 'RHS' , 
			 ), 1786, (1786, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 13 , 848 , (3, 0, None, None) , 64 , )),
	(( 'Dummy6' , 'RHS' , ), 1787, (1787, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 856 , (3, 0, None, None) , 64 , )),
	(( 'Dummy7' , 'RHS' , ), 1788, (1788, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 864 , (3, 0, None, None) , 64 , )),
	(( 'Dummy8' , 'Arg1' , 'RHS' , ), 1789, (1789, (), [ (12, 17, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 1 , 872 , (3, 0, None, None) , 64 , )),
	(( 'Dummy9' , 'RHS' , ), 1790, (1790, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 880 , (3, 0, None, None) , 64 , )),
	(( 'Dummy10' , 'arg' , 'RHS' , ), 1791, (1791, (), [ (12, 17, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 1 , 888 , (3, 0, None, None) , 64 , )),
	(( 'Dummy11' , ), 1792, (1792, (), [ ], 1 , 1 , 4 , 0 , 896 , (3, 0, None, None) , 64 , )),
	(( '_Default' , 'RHS' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 1024 , )),
	(( 'DefaultFilePath' , 'lcid' , 'RHS' , ), 1038, (1038, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
	(( 'DefaultFilePath' , 'lcid' , 'RHS' , ), 1038, (1038, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
	(( 'DeleteChartAutoFormat' , 'Name' , 'lcid' , ), 217, (217, (), [ (8, 1, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 928 , (3, 0, None, None) , 64 , )),
	(( 'DeleteCustomList' , 'ListNum' , 'lcid' , ), 783, (783, (), [ (3, 1, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
	(( 'Dialogs' , 'RHS' , ), 761, (761, (), [ (16393, 10, None, "IID('{00020879-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
	(( 'DisplayAlerts' , 'lcid' , 'RHS' , ), 343, (343, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
	(( 'DisplayAlerts' , 'lcid' , 'RHS' , ), 343, (343, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
	(( 'DisplayFormulaBar' , 'lcid' , 'RHS' , ), 344, (344, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
	(( 'DisplayFormulaBar' , 'lcid' , 'RHS' , ), 344, (344, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
	(( 'DisplayFullScreen' , 'lcid' , 'RHS' , ), 1061, (1061, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
	(( 'DisplayFullScreen' , 'lcid' , 'RHS' , ), 1061, (1061, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
	(( 'DisplayNoteIndicator' , 'RHS' , ), 345, (345, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
	(( 'DisplayNoteIndicator' , 'RHS' , ), 345, (345, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCommentIndicator' , 'RHS' , ), 1196, (1196, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCommentIndicator' , 'RHS' , ), 1196, (1196, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
	(( 'DisplayExcel4Menus' , 'lcid' , 'RHS' , ), 927, (927, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
	(( 'DisplayExcel4Menus' , 'lcid' , 'RHS' , ), 927, (927, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
	(( 'DisplayRecentFiles' , 'RHS' , ), 926, (926, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
	(( 'DisplayRecentFiles' , 'RHS' , ), 926, (926, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
	(( 'DisplayScrollBars' , 'lcid' , 'RHS' , ), 346, (346, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
	(( 'DisplayScrollBars' , 'lcid' , 'RHS' , ), 346, (346, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
	(( 'DisplayStatusBar' , 'lcid' , 'RHS' , ), 347, (347, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
	(( 'DisplayStatusBar' , 'lcid' , 'RHS' , ), 347, (347, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
	(( 'DoubleClick' , 'lcid' , ), 349, (349, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
	(( 'EditDirectlyInCell' , 'lcid' , 'RHS' , ), 929, (929, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
	(( 'EditDirectlyInCell' , 'lcid' , 'RHS' , ), 929, (929, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
	(( 'EnableAutoComplete' , 'RHS' , ), 1179, (1179, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
	(( 'EnableAutoComplete' , 'RHS' , ), 1179, (1179, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
	(( 'EnableCancelKey' , 'lcid' , 'RHS' , ), 1096, (1096, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
	(( 'EnableCancelKey' , 'lcid' , 'RHS' , ), 1096, (1096, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
	(( 'EnableSound' , 'RHS' , ), 1197, (1197, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
	(( 'EnableSound' , 'RHS' , ), 1197, (1197, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
	(( 'EnableTipWizard' , 'lcid' , 'RHS' , ), 1064, (1064, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1168 , (3, 0, None, None) , 64 , )),
	(( 'EnableTipWizard' , 'lcid' , 'RHS' , ), 1064, (1064, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1176 , (3, 0, None, None) , 64 , )),
	(( 'FileConverters' , 'Index1' , 'Index2' , 'lcid' , 'RHS' , 
			 ), 931, (931, (), [ (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 2 , 1184 , (3, 0, None, None) , 0 , )),
	(( 'FileSearch' , 'RHS' , ), 1200, (1200, (), [ (16393, 10, None, "IID('{000C0332-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 64 , )),
	(( 'FileFind' , 'RHS' , ), 1201, (1201, (), [ (16393, 10, None, "IID('{000C0337-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1200 , (3, 0, None, None) , 64 , )),
	(( '_FindFile' , 'lcid' , ), 1068, (1068, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 1208 , (3, 0, None, None) , 1088 , )),
	(( 'FixedDecimal' , 'lcid' , 'RHS' , ), 351, (351, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
	(( 'FixedDecimal' , 'lcid' , 'RHS' , ), 351, (351, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
	(( 'FixedDecimalPlaces' , 'lcid' , 'RHS' , ), 352, (352, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
	(( 'FixedDecimalPlaces' , 'lcid' , 'RHS' , ), 352, (352, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
	(( 'GetCustomListContents' , 'ListNum' , 'lcid' , 'RHS' , ), 786, (786, (), [ 
			 (3, 1, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
	(( 'GetCustomListNum' , 'ListArray' , 'lcid' , 'RHS' , ), 785, (785, (), [ 
			 (12, 1, None, None) , (3, 5, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
	(( 'GetOpenFilename' , 'FileFilter' , 'FilterIndex' , 'Title' , 'ButtonText' , 
			 'MultiSelect' , 'lcid' , 'RHS' , ), 1075, (1075, (), [ (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 5 , 1264 , (3, 0, None, None) , 0 , )),
	(( 'GetSaveAsFilename' , 'InitialFilename' , 'FileFilter' , 'FilterIndex' , 'Title' , 
			 'ButtonText' , 'lcid' , 'RHS' , ), 1076, (1076, (), [ (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 5 , 1272 , (3, 0, None, None) , 0 , )),
	(( 'Goto' , 'Reference' , 'Scroll' , 'lcid' , ), 475, (475, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 2 , 1280 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'lcid' , 'RHS' , ), 123, (123, (), [ (3, 5, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'lcid' , 'RHS' , ), 123, (123, (), [ (3, 5, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
	(( 'Help' , 'HelpFile' , 'HelpContextID' , 'lcid' , ), 354, (354, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 2 , 1304 , (3, 0, None, None) , 0 , )),
	(( 'IgnoreRemoteRequests' , 'lcid' , 'RHS' , ), 356, (356, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
	(( 'IgnoreRemoteRequests' , 'lcid' , 'RHS' , ), 356, (356, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
	(( 'InchesToPoints' , 'Inches' , 'lcid' , 'RHS' , ), 1087, (1087, (), [ 
			 (5, 1, None, None) , (3, 5, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
	(( 'InputBox' , 'Prompt' , 'Title' , 'Default' , 'Left' , 
			 'Top' , 'HelpFile' , 'HelpContextID' , 'Type' , 'lcid' , 
			 'RHS' , ), 357, (357, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 7 , 1336 , (3, 0, None, None) , 0 , )),
	(( 'Interactive' , 'lcid' , 'RHS' , ), 361, (361, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
	(( 'Interactive' , 'lcid' , 'RHS' , ), 361, (361, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
	(( 'International' , 'Index' , 'lcid' , 'RHS' , ), 362, (362, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 1 , 1360 , (3, 0, None, None) , 0 , )),
	(( 'Iteration' , 'lcid' , 'RHS' , ), 363, (363, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
	(( 'Iteration' , 'lcid' , 'RHS' , ), 363, (363, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
	(( 'LargeButtons' , 'RHS' , ), 364, (364, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1384 , (3, 0, None, None) , 64 , )),
	(( 'LargeButtons' , 'RHS' , ), 364, (364, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1392 , (3, 0, None, None) , 64 , )),
	(( 'Left' , 'lcid' , 'RHS' , ), 127, (127, (), [ (3, 5, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
	(( 'Left' , 'lcid' , 'RHS' , ), 127, (127, (), [ (3, 5, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
	(( 'LibraryPath' , 'lcid' , 'RHS' , ), 366, (366, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
	(( '_MacroOptions' , 'Macro' , 'Description' , 'HasMenu' , 'MenuText' , 
			 'HasShortcutKey' , 'ShortcutKey' , 'Category' , 'StatusBar' , 'HelpContextID' , 
			 'HelpFile' , 'lcid' , ), 1135, (1135, (), [ (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 10 , 1424 , (3, 0, None, None) , 1088 , )),
	(( 'MailLogoff' , 'lcid' , ), 945, (945, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
	(( 'MailLogon' , 'Name' , 'Password' , 'DownloadNewMail' , 'lcid' , 
			 ), 943, (943, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 3 , 1440 , (3, 0, None, None) , 0 , )),
	(( 'MailSession' , 'lcid' , 'RHS' , ), 942, (942, (), [ (3, 5, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
	(( 'MailSystem' , 'lcid' , 'RHS' , ), 971, (971, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
	(( 'MathCoprocessorAvailable' , 'lcid' , 'RHS' , ), 367, (367, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
	(( 'MaxChange' , 'lcid' , 'RHS' , ), 368, (368, (), [ (3, 5, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
	(( 'MaxChange' , 'lcid' , 'RHS' , ), 368, (368, (), [ (3, 5, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
	(( 'MaxIterations' , 'lcid' , 'RHS' , ), 369, (369, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
	(( 'MaxIterations' , 'lcid' , 'RHS' , ), 369, (369, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
	(( 'MemoryFree' , 'lcid' , 'RHS' , ), 370, (370, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1504 , (3, 0, None, None) , 64 , )),
	(( 'MemoryTotal' , 'lcid' , 'RHS' , ), 371, (371, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1512 , (3, 0, None, None) , 64 , )),
	(( 'MemoryUsed' , 'lcid' , 'RHS' , ), 372, (372, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1520 , (3, 0, None, None) , 64 , )),
	(( 'MouseAvailable' , 'lcid' , 'RHS' , ), 373, (373, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
	(( 'MoveAfterReturn' , 'lcid' , 'RHS' , ), 374, (374, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
	(( 'MoveAfterReturn' , 'lcid' , 'RHS' , ), 374, (374, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
	(( 'MoveAfterReturnDirection' , 'lcid' , 'RHS' , ), 1144, (1144, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
	(( 'MoveAfterReturnDirection' , 'lcid' , 'RHS' , ), 1144, (1144, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
	(( 'RecentFiles' , 'RHS' , ), 1202, (1202, (), [ (16393, 10, None, "IID('{00024406-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'RHS' , ), 110, (110, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
	(( 'NextLetter' , 'lcid' , 'RHS' , ), 972, (972, (), [ (3, 5, None, None) , 
			 (16397, 10, None, "IID('{00020819-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
	(( 'NetworkTemplatesPath' , 'lcid' , 'RHS' , ), 388, (388, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
	(( 'ODBCErrors' , 'RHS' , ), 1203, (1203, (), [ (16393, 10, None, "IID('{0002442D-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
	(( 'ODBCTimeout' , 'RHS' , ), 1204, (1204, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
	(( 'ODBCTimeout' , 'RHS' , ), 1204, (1204, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
	(( 'OnCalculate' , 'lcid' , 'RHS' , ), 625, (625, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1624 , (3, 0, None, None) , 64 , )),
	(( 'OnCalculate' , 'lcid' , 'RHS' , ), 625, (625, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1632 , (3, 0, None, None) , 64 , )),
	(( 'OnData' , 'lcid' , 'RHS' , ), 629, (629, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1640 , (3, 0, None, None) , 64 , )),
	(( 'OnData' , 'lcid' , 'RHS' , ), 629, (629, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1648 , (3, 0, None, None) , 64 , )),
	(( 'OnDoubleClick' , 'lcid' , 'RHS' , ), 628, (628, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1656 , (3, 0, None, None) , 64 , )),
	(( 'OnDoubleClick' , 'lcid' , 'RHS' , ), 628, (628, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1664 , (3, 0, None, None) , 64 , )),
	(( 'OnEntry' , 'lcid' , 'RHS' , ), 627, (627, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1672 , (3, 0, None, None) , 64 , )),
	(( 'OnEntry' , 'lcid' , 'RHS' , ), 627, (627, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1680 , (3, 0, None, None) , 64 , )),
	(( 'OnKey' , 'Key' , 'Procedure' , 'lcid' , ), 626, (626, (), [ 
			 (8, 1, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 1688 , (3, 0, None, None) , 0 , )),
	(( 'OnRepeat' , 'Text' , 'Procedure' , 'lcid' , ), 769, (769, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 1696 , (3, 0, None, None) , 0 , )),
	(( 'OnSheetActivate' , 'lcid' , 'RHS' , ), 1031, (1031, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1704 , (3, 0, None, None) , 64 , )),
	(( 'OnSheetActivate' , 'lcid' , 'RHS' , ), 1031, (1031, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1712 , (3, 0, None, None) , 64 , )),
	(( 'OnSheetDeactivate' , 'lcid' , 'RHS' , ), 1081, (1081, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1720 , (3, 0, None, None) , 64 , )),
	(( 'OnSheetDeactivate' , 'lcid' , 'RHS' , ), 1081, (1081, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1728 , (3, 0, None, None) , 64 , )),
	(( 'OnTime' , 'EarliestTime' , 'Procedure' , 'LatestTime' , 'Schedule' , 
			 'lcid' , ), 624, (624, (), [ (12, 1, None, None) , (8, 1, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 2 , 1736 , (3, 0, None, None) , 0 , )),
	(( 'OnUndo' , 'Text' , 'Procedure' , 'lcid' , ), 770, (770, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 1744 , (3, 0, None, None) , 0 , )),
	(( 'OnWindow' , 'lcid' , 'RHS' , ), 623, (623, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1752 , (3, 0, None, None) , 0 , )),
	(( 'OnWindow' , 'lcid' , 'RHS' , ), 623, (623, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1760 , (3, 0, None, None) , 0 , )),
	(( 'OperatingSystem' , 'lcid' , 'RHS' , ), 375, (375, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1768 , (3, 0, None, None) , 0 , )),
	(( 'OrganizationName' , 'lcid' , 'RHS' , ), 376, (376, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1776 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'lcid' , 'RHS' , ), 291, (291, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1784 , (3, 0, None, None) , 0 , )),
	(( 'PathSeparator' , 'lcid' , 'RHS' , ), 377, (377, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1792 , (3, 0, None, None) , 0 , )),
	(( 'PreviousSelections' , 'Index' , 'lcid' , 'RHS' , ), 378, (378, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 1 , 1800 , (3, 0, None, None) , 0 , )),
	(( 'PivotTableSelection' , 'RHS' , ), 1205, (1205, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1808 , (3, 0, None, None) , 0 , )),
	(( 'PivotTableSelection' , 'RHS' , ), 1205, (1205, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1816 , (3, 0, None, None) , 0 , )),
	(( 'PromptForSummaryInfo' , 'lcid' , 'RHS' , ), 1062, (1062, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1824 , (3, 0, None, None) , 0 , )),
	(( 'PromptForSummaryInfo' , 'lcid' , 'RHS' , ), 1062, (1062, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1832 , (3, 0, None, None) , 0 , )),
	(( 'Quit' , ), 302, (302, (), [ ], 1 , 1 , 4 , 0 , 1840 , (3, 0, None, None) , 0 , )),
	(( 'RecordMacro' , 'BasicCode' , 'XlmCode' , 'lcid' , ), 773, (773, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 2 , 1848 , (3, 0, None, None) , 0 , )),
	(( 'RecordRelative' , 'lcid' , 'RHS' , ), 379, (379, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1856 , (3, 0, None, None) , 0 , )),
	(( 'ReferenceStyle' , 'lcid' , 'RHS' , ), 380, (380, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1864 , (3, 0, None, None) , 0 , )),
	(( 'ReferenceStyle' , 'lcid' , 'RHS' , ), 380, (380, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1872 , (3, 0, None, None) , 0 , )),
	(( 'RegisteredFunctions' , 'Index1' , 'Index2' , 'lcid' , 'RHS' , 
			 ), 775, (775, (), [ (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 2 , 1880 , (3, 0, None, None) , 0 , )),
	(( 'RegisterXLL' , 'Filename' , 'lcid' , 'RHS' , ), 30, (30, (), [ 
			 (8, 1, None, None) , (3, 5, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1888 , (3, 0, None, None) , 0 , )),
	(( 'Repeat' , 'lcid' , ), 301, (301, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 1896 , (3, 0, None, None) , 0 , )),
	(( 'ResetTipWizard' , 'lcid' , ), 928, (928, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 1904 , (3, 0, None, None) , 64 , )),
	(( 'RollZoom' , 'RHS' , ), 1206, (1206, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1912 , (3, 0, None, None) , 0 , )),
	(( 'RollZoom' , 'RHS' , ), 1206, (1206, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1920 , (3, 0, None, None) , 0 , )),
	(( 'Save' , 'Filename' , 'lcid' , ), 283, (283, (), [ (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 1928 , (3, 0, None, None) , 64 , )),
	(( 'SaveWorkspace' , 'Filename' , 'lcid' , ), 212, (212, (), [ (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 1936 , (3, 0, None, None) , 64 , )),
	(( 'ScreenUpdating' , 'lcid' , 'RHS' , ), 382, (382, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1944 , (3, 0, None, None) , 0 , )),
	(( 'ScreenUpdating' , 'lcid' , 'RHS' , ), 382, (382, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1952 , (3, 0, None, None) , 0 , )),
	(( 'SetDefaultChart' , 'FormatName' , 'Gallery' , ), 219, (219, (), [ (12, 17, None, None) , 
			 (12, 17, None, None) , ], 1 , 1 , 4 , 2 , 1960 , (3, 0, None, None) , 64 , )),
	(( 'SheetsInNewWorkbook' , 'lcid' , 'RHS' , ), 993, (993, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1968 , (3, 0, None, None) , 0 , )),
	(( 'SheetsInNewWorkbook' , 'lcid' , 'RHS' , ), 993, (993, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1976 , (3, 0, None, None) , 0 , )),
	(( 'ShowChartTipNames' , 'RHS' , ), 1207, (1207, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1984 , (3, 0, None, None) , 0 , )),
	(( 'ShowChartTipNames' , 'RHS' , ), 1207, (1207, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1992 , (3, 0, None, None) , 0 , )),
	(( 'ShowChartTipValues' , 'RHS' , ), 1208, (1208, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2000 , (3, 0, None, None) , 0 , )),
	(( 'ShowChartTipValues' , 'RHS' , ), 1208, (1208, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2008 , (3, 0, None, None) , 0 , )),
	(( 'StandardFont' , 'lcid' , 'RHS' , ), 924, (924, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 2016 , (3, 0, None, None) , 0 , )),
	(( 'StandardFont' , 'lcid' , 'RHS' , ), 924, (924, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 2024 , (3, 0, None, None) , 0 , )),
	(( 'StandardFontSize' , 'lcid' , 'RHS' , ), 925, (925, (), [ (3, 5, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 2032 , (3, 0, None, None) , 0 , )),
	(( 'StandardFontSize' , 'lcid' , 'RHS' , ), 925, (925, (), [ (3, 5, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 2040 , (3, 0, None, None) , 0 , )),
	(( 'StartupPath' , 'lcid' , 'RHS' , ), 385, (385, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 2048 , (3, 0, None, None) , 0 , )),
	(( 'StatusBar' , 'lcid' , 'RHS' , ), 386, (386, (), [ (3, 5, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 2056 , (3, 0, None, None) , 0 , )),
	(( 'StatusBar' , 'lcid' , 'RHS' , ), 386, (386, (), [ (3, 5, None, None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 2064 , (3, 0, None, None) , 0 , )),
	(( 'TemplatesPath' , 'lcid' , 'RHS' , ), 381, (381, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 2072 , (3, 0, None, None) , 0 , )),
	(( 'ShowToolTips' , 'RHS' , ), 387, (387, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2080 , (3, 0, None, None) , 0 , )),
	(( 'ShowToolTips' , 'RHS' , ), 387, (387, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2088 , (3, 0, None, None) , 0 , )),
	(( 'Top' , 'lcid' , 'RHS' , ), 126, (126, (), [ (3, 5, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 2096 , (3, 0, None, None) , 0 , )),
	(( 'Top' , 'lcid' , 'RHS' , ), 126, (126, (), [ (3, 5, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 2104 , (3, 0, None, None) , 0 , )),
	(( 'DefaultSaveFormat' , 'RHS' , ), 1209, (1209, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 2112 , (3, 0, None, None) , 0 , )),
	(( 'DefaultSaveFormat' , 'RHS' , ), 1209, (1209, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 2120 , (3, 0, None, None) , 0 , )),
	(( 'TransitionMenuKey' , 'lcid' , 'RHS' , ), 310, (310, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 2128 , (3, 0, None, None) , 0 , )),
	(( 'TransitionMenuKey' , 'lcid' , 'RHS' , ), 310, (310, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 2136 , (3, 0, None, None) , 0 , )),
	(( 'TransitionMenuKeyAction' , 'lcid' , 'RHS' , ), 311, (311, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 2144 , (3, 0, None, None) , 0 , )),
	(( 'TransitionMenuKeyAction' , 'lcid' , 'RHS' , ), 311, (311, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 2152 , (3, 0, None, None) , 0 , )),
	(( 'TransitionNavigKeys' , 'lcid' , 'RHS' , ), 312, (312, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2160 , (3, 0, None, None) , 0 , )),
	(( 'TransitionNavigKeys' , 'lcid' , 'RHS' , ), 312, (312, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2168 , (3, 0, None, None) , 0 , )),
	(( 'Undo' , 'lcid' , ), 303, (303, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 2176 , (3, 0, None, None) , 0 , )),
	(( 'UsableHeight' , 'lcid' , 'RHS' , ), 389, (389, (), [ (3, 5, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 2184 , (3, 0, None, None) , 0 , )),
	(( 'UsableWidth' , 'lcid' , 'RHS' , ), 390, (390, (), [ (3, 5, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 2192 , (3, 0, None, None) , 0 , )),
	(( 'UserControl' , 'RHS' , ), 1210, (1210, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2200 , (3, 0, None, None) , 0 , )),
	(( 'UserControl' , 'RHS' , ), 1210, (1210, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2208 , (3, 0, None, None) , 0 , )),
	(( 'UserName' , 'lcid' , 'RHS' , ), 391, (391, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 2216 , (3, 0, None, None) , 0 , )),
	(( 'UserName' , 'lcid' , 'RHS' , ), 391, (391, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 2224 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'RHS' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 2232 , (3, 0, None, None) , 0 , )),
	(( 'VBE' , 'RHS' , ), 1211, (1211, (), [ (16393, 10, None, "IID('{0002E166-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2240 , (3, 0, None, None) , 0 , )),
	(( 'Version' , 'lcid' , 'RHS' , ), 392, (392, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 2248 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'lcid' , 'RHS' , ), 558, (558, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2256 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'lcid' , 'RHS' , ), 558, (558, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2264 , (3, 0, None, None) , 0 , )),
	(( 'Volatile' , 'Volatile' , 'lcid' , ), 788, (788, (), [ (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 2272 , (3, 0, None, None) , 0 , )),
	(( '_Wait' , 'Time' , 'lcid' , ), 393, (393, (), [ (12, 1, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 2280 , (3, 0, None, None) , 1088 , )),
	(( 'Width' , 'lcid' , 'RHS' , ), 122, (122, (), [ (3, 5, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 2288 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'lcid' , 'RHS' , ), 122, (122, (), [ (3, 5, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 2296 , (3, 0, None, None) , 0 , )),
	(( 'WindowsForPens' , 'lcid' , 'RHS' , ), 395, (395, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2304 , (3, 0, None, None) , 0 , )),
	(( 'WindowState' , 'lcid' , 'RHS' , ), 396, (396, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 2312 , (3, 0, None, None) , 0 , )),
	(( 'WindowState' , 'lcid' , 'RHS' , ), 396, (396, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 2320 , (3, 0, None, None) , 0 , )),
	(( 'UILanguage' , 'lcid' , 'RHS' , ), 2, (2, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 2328 , (3, 0, None, None) , 64 , )),
	(( 'UILanguage' , 'lcid' , 'RHS' , ), 2, (2, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 2336 , (3, 0, None, None) , 64 , )),
	(( 'DefaultSheetDirection' , 'lcid' , 'RHS' , ), 229, (229, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 2344 , (3, 0, None, None) , 0 , )),
	(( 'DefaultSheetDirection' , 'lcid' , 'RHS' , ), 229, (229, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 2352 , (3, 0, None, None) , 0 , )),
	(( 'CursorMovement' , 'lcid' , 'RHS' , ), 232, (232, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 2360 , (3, 0, None, None) , 0 , )),
	(( 'CursorMovement' , 'lcid' , 'RHS' , ), 232, (232, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 2368 , (3, 0, None, None) , 0 , )),
	(( 'ControlCharacters' , 'lcid' , 'RHS' , ), 233, (233, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2376 , (3, 0, None, None) , 0 , )),
	(( 'ControlCharacters' , 'lcid' , 'RHS' , ), 233, (233, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2384 , (3, 0, None, None) , 0 , )),
	(( '_WSFunction' , 'Arg1' , 'Arg2' , 'Arg3' , 'Arg4' , 
			 'Arg5' , 'Arg6' , 'Arg7' , 'Arg8' , 'Arg9' , 
			 'Arg10' , 'Arg11' , 'Arg12' , 'Arg13' , 'Arg14' , 
			 'Arg15' , 'Arg16' , 'Arg17' , 'Arg18' , 'Arg19' , 
			 'Arg20' , 'Arg21' , 'Arg22' , 'Arg23' , 'Arg24' , 
			 'Arg25' , 'Arg26' , 'Arg27' , 'Arg28' , 'Arg29' , 
			 'Arg30' , 'lcid' , 'RHS' , ), 169, (169, (), [ (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 30 , 2392 , (3, 0, None, None) , 1088 , )),
	(( 'EnableEvents' , 'RHS' , ), 1212, (1212, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2400 , (3, 0, None, None) , 0 , )),
	(( 'EnableEvents' , 'RHS' , ), 1212, (1212, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2408 , (3, 0, None, None) , 0 , )),
	(( 'DisplayInfoWindow' , 'RHS' , ), 1213, (1213, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2416 , (3, 0, None, None) , 64 , )),
	(( 'DisplayInfoWindow' , 'RHS' , ), 1213, (1213, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2424 , (3, 0, None, None) , 64 , )),
	(( 'Wait' , 'Time' , 'lcid' , 'RHS' , ), 1770, (1770, (), [ 
			 (12, 1, None, None) , (3, 5, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 2432 , (3, 0, None, None) , 0 , )),
	(( 'ExtendList' , 'RHS' , ), 1793, (1793, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2440 , (3, 0, None, None) , 0 , )),
	(( 'ExtendList' , 'RHS' , ), 1793, (1793, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2448 , (3, 0, None, None) , 0 , )),
	(( 'OLEDBErrors' , 'RHS' , ), 1794, (1794, (), [ (16393, 10, None, "IID('{00024446-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2456 , (3, 0, None, None) , 0 , )),
	(( 'GetPhonetic' , 'Text' , 'RHS' , ), 1795, (1795, (), [ (12, 17, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 1 , 2464 , (3, 0, None, None) , 0 , )),
	(( 'COMAddIns' , 'RHS' , ), 1796, (1796, (), [ (16393, 10, None, "IID('{000C0339-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2472 , (3, 0, None, None) , 0 , )),
	(( 'DefaultWebOptions' , 'RHS' , ), 1797, (1797, (), [ (16393, 10, None, "IID('{00024448-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2480 , (3, 0, None, None) , 0 , )),
	(( 'ProductCode' , 'RHS' , ), 1798, (1798, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 2488 , (3, 0, None, None) , 0 , )),
	(( 'UserLibraryPath' , 'RHS' , ), 1799, (1799, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 2496 , (3, 0, None, None) , 0 , )),
	(( 'AutoPercentEntry' , 'RHS' , ), 1800, (1800, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2504 , (3, 0, None, None) , 0 , )),
	(( 'AutoPercentEntry' , 'RHS' , ), 1800, (1800, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2512 , (3, 0, None, None) , 0 , )),
	(( 'LanguageSettings' , 'RHS' , ), 1801, (1801, (), [ (16393, 10, None, "IID('{000C0353-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2520 , (3, 0, None, None) , 0 , )),
	(( 'Dummy101' , 'RHS' , ), 1802, (1802, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 2528 , (3, 0, None, None) , 64 , )),
	(( 'Dummy12' , 'p1' , 'p2' , ), 1803, (1803, (), [ (9, 1, None, "IID('{00020872-0000-0000-C000-000000000046}')") , 
			 (9, 1, None, "IID('{00020872-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 0 , 2536 , (3, 0, None, None) , 64 , )),
	(( 'AnswerWizard' , 'RHS' , ), 1804, (1804, (), [ (16393, 10, None, "IID('{000C0360-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2544 , (3, 0, None, None) , 64 , )),
	(( 'CalculateFull' , ), 1805, (1805, (), [ ], 1 , 1 , 4 , 0 , 2552 , (3, 0, None, None) , 0 , )),
	(( 'FindFile' , 'lcid' , 'RHS' , ), 1771, (1771, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 2560 , (3, 0, None, None) , 0 , )),
	(( 'CalculationVersion' , 'RHS' , ), 1806, (1806, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 2568 , (3, 0, None, None) , 0 , )),
	(( 'ShowWindowsInTaskbar' , 'RHS' , ), 1807, (1807, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2576 , (3, 0, None, None) , 64 , )),
	(( 'ShowWindowsInTaskbar' , 'RHS' , ), 1807, (1807, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2584 , (3, 0, None, None) , 64 , )),
	(( 'FeatureInstall' , 'RHS' , ), 1808, (1808, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 2592 , (3, 0, None, None) , 0 , )),
	(( 'FeatureInstall' , 'RHS' , ), 1808, (1808, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 2600 , (3, 0, None, None) , 0 , )),
	(( 'Ready' , 'RHS' , ), 1932, (1932, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2608 , (3, 0, None, None) , 0 , )),
	(( 'Dummy13' , 'Arg1' , 'Arg2' , 'Arg3' , 'Arg4' , 
			 'Arg5' , 'Arg6' , 'Arg7' , 'Arg8' , 'Arg9' , 
			 'Arg10' , 'Arg11' , 'Arg12' , 'Arg13' , 'Arg14' , 
			 'Arg15' , 'Arg16' , 'Arg17' , 'Arg18' , 'Arg19' , 
			 'Arg20' , 'Arg21' , 'Arg22' , 'Arg23' , 'Arg24' , 
			 'Arg25' , 'Arg26' , 'Arg27' , 'Arg28' , 'Arg29' , 
			 'Arg30' , 'RHS' , ), 1933, (1933, (), [ (12, 1, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 29 , 2616 , (3, 0, None, None) , 64 , )),
	(( 'FindFormat' , 'RHS' , ), 1934, (1934, (), [ (16393, 10, None, "IID('{00024450-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2624 , (3, 0, None, None) , 0 , )),
	(( 'FindFormat' , 'RHS' , ), 1934, (1934, (), [ (9, 1, None, "IID('{00024450-0000-0000-C000-000000000046}')") , ], 1 , 8 , 4 , 0 , 2632 , (3, 0, None, None) , 0 , )),
	(( 'ReplaceFormat' , 'RHS' , ), 1935, (1935, (), [ (16393, 10, None, "IID('{00024450-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2640 , (3, 0, None, None) , 0 , )),
	(( 'ReplaceFormat' , 'RHS' , ), 1935, (1935, (), [ (9, 1, None, "IID('{00024450-0000-0000-C000-000000000046}')") , ], 1 , 8 , 4 , 0 , 2648 , (3, 0, None, None) , 0 , )),
	(( 'UsedObjects' , 'RHS' , ), 1936, (1936, (), [ (16393, 10, None, "IID('{00024451-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2656 , (3, 0, None, None) , 0 , )),
	(( 'CalculationState' , 'RHS' , ), 1937, (1937, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 2664 , (3, 0, None, None) , 0 , )),
	(( 'CalculationInterruptKey' , 'RHS' , ), 1938, (1938, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 2672 , (3, 0, None, None) , 0 , )),
	(( 'CalculationInterruptKey' , 'RHS' , ), 1938, (1938, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 2680 , (3, 0, None, None) , 0 , )),
	(( 'Watches' , 'RHS' , ), 1939, (1939, (), [ (16393, 10, None, "IID('{00024456-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2688 , (3, 0, None, None) , 0 , )),
	(( 'DisplayFunctionToolTips' , 'RHS' , ), 1940, (1940, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2696 , (3, 0, None, None) , 0 , )),
	(( 'DisplayFunctionToolTips' , 'RHS' , ), 1940, (1940, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2704 , (3, 0, None, None) , 0 , )),
	(( 'AutomationSecurity' , 'RHS' , ), 1941, (1941, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 2712 , (3, 0, None, None) , 0 , )),
	(( 'AutomationSecurity' , 'RHS' , ), 1941, (1941, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 2720 , (3, 0, None, None) , 0 , )),
	(( 'FileDialog' , 'fileDialogType' , 'RHS' , ), 1942, (1942, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{000C0362-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2728 , (3, 0, None, None) , 0 , )),
	(( 'Dummy14' , ), 1944, (1944, (), [ ], 1 , 1 , 4 , 0 , 2736 , (3, 0, None, None) , 64 , )),
	(( 'CalculateFullRebuild' , ), 1945, (1945, (), [ ], 1 , 1 , 4 , 0 , 2744 , (3, 0, None, None) , 0 , )),
	(( 'DisplayPasteOptions' , 'RHS' , ), 1946, (1946, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2752 , (3, 0, None, None) , 0 , )),
	(( 'DisplayPasteOptions' , 'RHS' , ), 1946, (1946, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2760 , (3, 0, None, None) , 0 , )),
	(( 'DisplayInsertOptions' , 'RHS' , ), 1947, (1947, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2768 , (3, 0, None, None) , 0 , )),
	(( 'DisplayInsertOptions' , 'RHS' , ), 1947, (1947, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2776 , (3, 0, None, None) , 0 , )),
	(( 'GenerateGetPivotData' , 'RHS' , ), 1948, (1948, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2784 , (3, 0, None, None) , 0 , )),
	(( 'GenerateGetPivotData' , 'RHS' , ), 1948, (1948, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2792 , (3, 0, None, None) , 0 , )),
	(( 'AutoRecover' , 'RHS' , ), 1949, (1949, (), [ (16393, 10, None, "IID('{0002445A-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2800 , (3, 0, None, None) , 0 , )),
	(( 'Hwnd' , 'RHS' , ), 1950, (1950, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 2808 , (3, 0, None, None) , 0 , )),
	(( 'Hinstance' , 'RHS' , ), 1951, (1951, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 2816 , (3, 0, None, None) , 0 , )),
	(( 'CheckAbort' , 'KeepAbort' , ), 1952, (1952, (), [ (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 2824 , (3, 0, None, None) , 0 , )),
	(( 'ErrorCheckingOptions' , 'RHS' , ), 1954, (1954, (), [ (16393, 10, None, "IID('{0002445B-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2832 , (3, 0, None, None) , 0 , )),
	(( 'AutoFormatAsYouTypeReplaceHyperlinks' , 'RHS' , ), 1955, (1955, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2840 , (3, 0, None, None) , 0 , )),
	(( 'AutoFormatAsYouTypeReplaceHyperlinks' , 'RHS' , ), 1955, (1955, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2848 , (3, 0, None, None) , 0 , )),
	(( 'SmartTagRecognizers' , 'RHS' , ), 1956, (1956, (), [ (16393, 10, None, "IID('{00024463-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2856 , (3, 0, None, None) , 64 , )),
	(( 'NewWorkbook' , 'RHS' , ), 1565, (1565, (), [ (16393, 10, None, "IID('{000C0936-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2864 , (3, 0, None, None) , 0 , )),
	(( 'SpellingOptions' , 'RHS' , ), 1957, (1957, (), [ (16393, 10, None, "IID('{00024465-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2872 , (3, 0, None, None) , 0 , )),
	(( 'Speech' , 'RHS' , ), 1958, (1958, (), [ (16393, 10, None, "IID('{00024466-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2880 , (3, 0, None, None) , 0 , )),
	(( 'MapPaperSize' , 'RHS' , ), 1959, (1959, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2888 , (3, 0, None, None) , 0 , )),
	(( 'MapPaperSize' , 'RHS' , ), 1959, (1959, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2896 , (3, 0, None, None) , 0 , )),
	(( 'ShowStartupDialog' , 'RHS' , ), 1960, (1960, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2904 , (3, 0, None, None) , 0 , )),
	(( 'ShowStartupDialog' , 'RHS' , ), 1960, (1960, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2912 , (3, 0, None, None) , 0 , )),
	(( 'DecimalSeparator' , 'RHS' , ), 1809, (1809, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 2920 , (3, 0, None, None) , 0 , )),
	(( 'DecimalSeparator' , 'RHS' , ), 1809, (1809, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 2928 , (3, 0, None, None) , 0 , )),
	(( 'ThousandsSeparator' , 'RHS' , ), 1810, (1810, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 2936 , (3, 0, None, None) , 0 , )),
	(( 'ThousandsSeparator' , 'RHS' , ), 1810, (1810, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 2944 , (3, 0, None, None) , 0 , )),
	(( 'UseSystemSeparators' , 'RHS' , ), 1961, (1961, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2952 , (3, 0, None, None) , 0 , )),
	(( 'UseSystemSeparators' , 'RHS' , ), 1961, (1961, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2960 , (3, 0, None, None) , 0 , )),
	(( 'ThisCell' , 'RHS' , ), 1962, (1962, (), [ (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2968 , (3, 0, None, None) , 0 , )),
	(( 'RTD' , 'RHS' , ), 1963, (1963, (), [ (16393, 10, None, "IID('{0002446E-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2976 , (3, 0, None, None) , 0 , )),
	(( 'DisplayDocumentActionTaskPane' , 'RHS' , ), 2251, (2251, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2984 , (3, 0, None, None) , 0 , )),
	(( 'DisplayDocumentActionTaskPane' , 'RHS' , ), 2251, (2251, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2992 , (3, 0, None, None) , 0 , )),
	(( 'DisplayXMLSourcePane' , 'XmlMap' , ), 2252, (2252, (), [ (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 3000 , (3, 0, None, None) , 0 , )),
	(( 'ArbitraryXMLSupportAvailable' , 'RHS' , ), 2254, (2254, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3008 , (3, 0, None, None) , 0 , )),
	(( 'Support' , 'Object' , 'ID' , 'arg' , 'RHS' , 
			 ), 2255, (2255, (), [ (9, 1, None, None) , (3, 1, None, None) , (12, 17, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 1 , 3016 , (3, 0, None, None) , 64 , )),
	(( 'Dummy20' , 'grfCompareFunctions' , 'RHS' , ), 2373, (2373, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 3024 , (3, 0, None, None) , 64 , )),
	(( 'MeasurementUnit' , 'RHS' , ), 2375, (2375, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 3032 , (3, 0, None, None) , 0 , )),
	(( 'MeasurementUnit' , 'RHS' , ), 2375, (2375, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 3040 , (3, 0, None, None) , 0 , )),
	(( 'ShowSelectionFloaties' , 'RHS' , ), 2376, (2376, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3048 , (3, 0, None, None) , 0 , )),
	(( 'ShowSelectionFloaties' , 'RHS' , ), 2376, (2376, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3056 , (3, 0, None, None) , 0 , )),
	(( 'ShowMenuFloaties' , 'RHS' , ), 2377, (2377, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3064 , (3, 0, None, None) , 0 , )),
	(( 'ShowMenuFloaties' , 'RHS' , ), 2377, (2377, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3072 , (3, 0, None, None) , 0 , )),
	(( 'ShowDevTools' , 'RHS' , ), 2378, (2378, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3080 , (3, 0, None, None) , 0 , )),
	(( 'ShowDevTools' , 'RHS' , ), 2378, (2378, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3088 , (3, 0, None, None) , 0 , )),
	(( 'EnableLivePreview' , 'RHS' , ), 2379, (2379, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3096 , (3, 0, None, None) , 0 , )),
	(( 'EnableLivePreview' , 'RHS' , ), 2379, (2379, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3104 , (3, 0, None, None) , 0 , )),
	(( 'DisplayDocumentInformationPanel' , 'RHS' , ), 2380, (2380, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3112 , (3, 0, None, None) , 0 , )),
	(( 'DisplayDocumentInformationPanel' , 'RHS' , ), 2380, (2380, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3120 , (3, 0, None, None) , 0 , )),
	(( 'AlwaysUseClearType' , 'RHS' , ), 2381, (2381, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3128 , (3, 0, None, None) , 0 , )),
	(( 'AlwaysUseClearType' , 'RHS' , ), 2381, (2381, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3136 , (3, 0, None, None) , 0 , )),
	(( 'WarnOnFunctionNameConflict' , 'RHS' , ), 2382, (2382, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3144 , (3, 0, None, None) , 0 , )),
	(( 'WarnOnFunctionNameConflict' , 'RHS' , ), 2382, (2382, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3152 , (3, 0, None, None) , 0 , )),
	(( 'FormulaBarHeight' , 'RHS' , ), 2383, (2383, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 3160 , (3, 0, None, None) , 0 , )),
	(( 'FormulaBarHeight' , 'RHS' , ), 2383, (2383, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 3168 , (3, 0, None, None) , 0 , )),
	(( 'DisplayFormulaAutoComplete' , 'RHS' , ), 2384, (2384, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3176 , (3, 0, None, None) , 0 , )),
	(( 'DisplayFormulaAutoComplete' , 'RHS' , ), 2384, (2384, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3184 , (3, 0, None, None) , 0 , )),
	(( 'GenerateTableRefs' , 'lcid' , 'RHS' , ), 2385, (2385, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 3192 , (3, 0, None, None) , 0 , )),
	(( 'GenerateTableRefs' , 'lcid' , 'RHS' , ), 2385, (2385, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 3200 , (3, 0, None, None) , 0 , )),
	(( 'Assistance' , 'RHS' , ), 2386, (2386, (), [ (16393, 10, None, "IID('{4291224C-DEFE-485B-8E69-6CF8AA85CB76}')") , ], 1 , 2 , 4 , 0 , 3208 , (3, 0, None, None) , 0 , )),
	(( 'CalculateUntilAsyncQueriesDone' , ), 2387, (2387, (), [ ], 1 , 1 , 4 , 0 , 3216 , (3, 0, None, None) , 0 , )),
	(( 'EnableLargeOperationAlert' , 'RHS' , ), 2388, (2388, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3224 , (3, 0, None, None) , 0 , )),
	(( 'EnableLargeOperationAlert' , 'RHS' , ), 2388, (2388, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3232 , (3, 0, None, None) , 0 , )),
	(( 'LargeOperationCellThousandCount' , 'RHS' , ), 2389, (2389, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 3240 , (3, 0, None, None) , 0 , )),
	(( 'LargeOperationCellThousandCount' , 'RHS' , ), 2389, (2389, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 3248 , (3, 0, None, None) , 0 , )),
	(( 'DeferAsyncQueries' , 'RHS' , ), 2390, (2390, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3256 , (3, 0, None, None) , 0 , )),
	(( 'DeferAsyncQueries' , 'RHS' , ), 2390, (2390, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3264 , (3, 0, None, None) , 0 , )),
	(( 'MultiThreadedCalculation' , 'RHS' , ), 2391, (2391, (), [ (16393, 10, None, "IID('{000244B1-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 3272 , (3, 0, None, None) , 0 , )),
	(( 'SharePointVersion' , 'bstrUrl' , 'RHS' , ), 2392, (2392, (), [ (8, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 3280 , (3, 0, None, None) , 0 , )),
	(( 'ActiveEncryptionSession' , 'RHS' , ), 2394, (2394, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 3288 , (3, 0, None, None) , 0 , )),
	(( 'HighQualityModeForGraphics' , 'RHS' , ), 2395, (2395, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3296 , (3, 0, None, None) , 0 , )),
	(( 'HighQualityModeForGraphics' , 'RHS' , ), 2395, (2395, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3304 , (3, 0, None, None) , 0 , )),
	(( 'FileExportConverters' , 'RHS' , ), 2768, (2768, (), [ (16393, 10, None, "IID('{000244B4-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 3312 , (3, 0, None, None) , 0 , )),
	(( 'SmartArtLayouts' , 'RHS' , ), 2772, (2772, (), [ (16393, 10, None, "IID('{000C03C9-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 3320 , (3, 0, None, None) , 0 , )),
	(( 'SmartArtQuickStyles' , 'RHS' , ), 2773, (2773, (), [ (16393, 10, None, "IID('{000C03CB-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 3328 , (3, 0, None, None) , 0 , )),
	(( 'SmartArtColors' , 'RHS' , ), 2774, (2774, (), [ (16393, 10, None, "IID('{000C03CD-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 3336 , (3, 0, None, None) , 0 , )),
	(( 'AddIns2' , 'RHS' , ), 2775, (2775, (), [ (16393, 10, None, "IID('{000244B5-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 3344 , (3, 0, None, None) , 0 , )),
	(( 'PrintCommunication' , 'RHS' , ), 2776, (2776, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3352 , (3, 0, None, None) , 0 , )),
	(( 'PrintCommunication' , 'RHS' , ), 2776, (2776, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3360 , (3, 0, None, None) , 0 , )),
	(( 'MacroOptions' , 'Macro' , 'Description' , 'HasMenu' , 'MenuText' , 
			 'HasShortcutKey' , 'ShortcutKey' , 'Category' , 'StatusBar' , 'HelpContextID' , 
			 'HelpFile' , 'ArgumentDescriptions' , 'lcid' , ), 2770, (2770, (), [ (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 11 , 3368 , (3, 0, None, None) , 0 , )),
	(( 'UseClusterConnector' , 'RHS' , ), 2778, (2778, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3376 , (3, 0, None, None) , 0 , )),
	(( 'UseClusterConnector' , 'RHS' , ), 2778, (2778, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3384 , (3, 0, None, None) , 0 , )),
	(( 'ClusterConnector' , 'RHS' , ), 2779, (2779, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 3392 , (3, 0, None, None) , 0 , )),
	(( 'ClusterConnector' , 'RHS' , ), 2779, (2779, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 3400 , (3, 0, None, None) , 0 , )),
	(( 'Quitting' , 'RHS' , ), 2780, (2780, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3408 , (3, 0, None, None) , 64 , )),
	(( 'Dummy22' , 'RHS' , ), 2781, (2781, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3416 , (3, 0, None, None) , 64 , )),
	(( 'Dummy22' , 'RHS' , ), 2781, (2781, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3424 , (3, 0, None, None) , 64 , )),
	(( 'Dummy23' , 'RHS' , ), 2782, (2782, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3432 , (3, 0, None, None) , 64 , )),
	(( 'Dummy23' , 'RHS' , ), 2782, (2782, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3440 , (3, 0, None, None) , 64 , )),
	(( 'ProtectedViewWindows' , 'RHS' , ), 2783, (2783, (), [ (16393, 10, None, "IID('{000244CC-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 3448 , (3, 0, None, None) , 0 , )),
	(( 'ActiveProtectedViewWindow' , 'RHS' , ), 2784, (2784, (), [ (16393, 10, None, "IID('{000244CD-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 3456 , (3, 0, None, None) , 0 , )),
	(( 'IsSandboxed' , 'RHS' , ), 2785, (2785, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3464 , (3, 0, None, None) , 0 , )),
	(( 'SaveISO8601Dates' , 'RHS' , ), 2786, (2786, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3472 , (3, 0, None, None) , 64 , )),
	(( 'SaveISO8601Dates' , 'RHS' , ), 2786, (2786, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3480 , (3, 0, None, None) , 64 , )),
	(( 'HinstancePtr' , 'RHS' , ), 2787, (2787, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 3488 , (3, 0, None, None) , 0 , )),
	(( 'FileValidation' , 'RHS' , ), 2788, (2788, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 3496 , (3, 0, None, None) , 0 , )),
	(( 'FileValidation' , 'RHS' , ), 2788, (2788, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 3504 , (3, 0, None, None) , 0 , )),
	(( 'FileValidationPivot' , 'RHS' , ), 2789, (2789, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 3512 , (3, 0, None, None) , 0 , )),
	(( 'FileValidationPivot' , 'RHS' , ), 2789, (2789, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 3520 , (3, 0, None, None) , 0 , )),
	(( 'ShowQuickAnalysis' , 'RHS' , ), 2994, (2994, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3528 , (3, 0, None, None) , 0 , )),
	(( 'ShowQuickAnalysis' , 'RHS' , ), 2994, (2994, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3536 , (3, 0, None, None) , 0 , )),
	(( 'QuickAnalysis' , 'RHS' , ), 2995, (2995, (), [ (16393, 10, None, "IID('{000244D0-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 3544 , (3, 0, None, None) , 0 , )),
	(( 'FlashFill' , 'RHS' , ), 2996, (2996, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3552 , (3, 0, None, None) , 0 , )),
	(( 'FlashFill' , 'RHS' , ), 2996, (2996, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3560 , (3, 0, None, None) , 0 , )),
	(( 'EnableMacroAnimations' , 'RHS' , ), 2997, (2997, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3568 , (3, 0, None, None) , 0 , )),
	(( 'EnableMacroAnimations' , 'RHS' , ), 2997, (2997, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3576 , (3, 0, None, None) , 0 , )),
	(( 'ChartDataPointTrack' , 'RHS' , ), 2998, (2998, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3584 , (3, 0, None, None) , 0 , )),
	(( 'ChartDataPointTrack' , 'RHS' , ), 2998, (2998, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3592 , (3, 0, None, None) , 0 , )),
	(( 'FlashFillMode' , 'RHS' , ), 2999, (2999, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3600 , (3, 0, None, None) , 0 , )),
	(( 'FlashFillMode' , 'RHS' , ), 2999, (2999, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3608 , (3, 0, None, None) , 0 , )),
	(( 'MergeInstances' , 'RHS' , ), 3000, (3000, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3616 , (3, 0, None, None) , 0 , )),
	(( 'MergeInstances' , 'RHS' , ), 3000, (3000, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3624 , (3, 0, None, None) , 0 , )),
	(( 'EnableCheckFileExtensions' , 'RHS' , ), 3158, (3158, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3632 , (3, 0, None, None) , 0 , )),
	(( 'EnableCheckFileExtensions' , 'RHS' , ), 3158, (3158, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3640 , (3, 0, None, None) , 0 , )),
	(( 'DefaultPivotTableLayoutOptions' , 'RHS' , ), 3271, (3271, (), [ (16393, 10, None, "IID('{000244FB-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 3648 , (3, 0, None, None) , 0 , )),
	(( 'TruncateLeadingZeros' , 'RHS' , ), 3312, (3312, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3656 , (3, 0, None, None) , 64 , )),
	(( 'TruncateLeadingZeros' , 'RHS' , ), 3312, (3312, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3664 , (3, 0, None, None) , 64 , )),
	(( 'TruncateLargeNumbers' , 'RHS' , ), 3313, (3313, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3672 , (3, 0, None, None) , 64 , )),
	(( 'TruncateLargeNumbers' , 'RHS' , ), 3313, (3313, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3680 , (3, 0, None, None) , 64 , )),
	(( 'ConvertNumbersWithECharacter' , 'RHS' , ), 3314, (3314, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3688 , (3, 0, None, None) , 64 , )),
	(( 'ConvertNumbersWithECharacter' , 'RHS' , ), 3314, (3314, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3696 , (3, 0, None, None) , 64 , )),
	(( 'CSVDisplayNumberConversionWarning' , 'RHS' , ), 3315, (3315, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3704 , (3, 0, None, None) , 64 , )),
	(( 'CSVDisplayNumberConversionWarning' , 'RHS' , ), 3315, (3315, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3712 , (3, 0, None, None) , 64 , )),
	(( 'CSVKeepColumnAsTextIfMultipleEntriesAreText' , 'RHS' , ), 3316, (3316, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3720 , (3, 0, None, None) , 64 , )),
	(( 'CSVKeepColumnAsTextIfMultipleEntriesAreText' , 'RHS' , ), 3316, (3316, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3728 , (3, 0, None, None) , 64 , )),
	(( 'DataPrivacyOptions' , 'RHS' , ), 3317, (3317, (), [ (16393, 10, None, "IID('{000C03D9-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 3736 , (3, 0, None, None) , 64 , )),
	(( 'ShowConvertToDataType' , 'RHS' , ), 3311, (3311, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3744 , (3, 0, None, None) , 0 , )),
	(( 'ShowConvertToDataType' , 'RHS' , ), 3311, (3311, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3752 , (3, 0, None, None) , 0 , )),
	(( 'SensitivityLabelPolicy' , 'RHS' , ), 3365, (3365, (), [ (16393, 10, None, "IID('{88FF5F69-FACF-4667-8DC8-A85B8225DF15}')") , ], 1 , 2 , 4 , 0 , 3760 , (3, 0, None, None) , 0 , )),
	(( 'FormatStaleValues' , 'RHS' , ), 3401, (3401, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3768 , (3, 0, None, None) , 0 , )),
	(( 'FormatStaleValues' , 'RHS' , ), 3401, (3401, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3776 , (3, 0, None, None) , 0 , )),
]

_Chart_vtables_dispatch_ = 1
_Chart_vtables_ = [
	(( 'Application' , 'RHS' , ), 148, (148, (), [ (16397, 10, None, "IID('{00024500-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Creator' , 'RHS' , ), 149, (149, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'RHS' , ), 150, (150, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Activate' , 'lcid' , ), 304, (304, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Copy' , 'Before' , 'After' , 'lcid' , ), 551, (551, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 2 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'lcid' , ), 117, (117, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'CodeName' , 'RHS' , ), 1373, (1373, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( '_CodeName' , 'RHS' , ), -2147418112, (-2147418112, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 1024 , )),
	(( '_CodeName' , 'RHS' , ), -2147418112, (-2147418112, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 1024 , )),
	(( 'Index' , 'lcid' , 'RHS' , ), 486, (486, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Move' , 'Before' , 'After' , 'lcid' , ), 637, (637, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 2 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'RHS' , ), 110, (110, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'RHS' , ), 110, (110, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Next' , 'RHS' , ), 502, (502, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'OnDoubleClick' , 'lcid' , 'RHS' , ), 628, (628, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 64 , )),
	(( 'OnDoubleClick' , 'lcid' , 'RHS' , ), 628, (628, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 64 , )),
	(( 'OnSheetActivate' , 'lcid' , 'RHS' , ), 1031, (1031, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 64 , )),
	(( 'OnSheetActivate' , 'lcid' , 'RHS' , ), 1031, (1031, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 64 , )),
	(( 'OnSheetDeactivate' , 'lcid' , 'RHS' , ), 1081, (1081, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 64 , )),
	(( 'OnSheetDeactivate' , 'lcid' , 'RHS' , ), 1081, (1081, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 64 , )),
	(( 'PageSetup' , 'RHS' , ), 998, (998, (), [ (16393, 10, None, "IID('{000208B4-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Previous' , 'RHS' , ), 503, (503, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( '__PrintOut' , 'From' , 'To' , 'Copies' , 'Preview' , 
			 'ActivePrinter' , 'PrintToFile' , 'Collate' , 'lcid' , ), 905, (905, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 7 , 232 , (3, 0, None, None) , 1088 , )),
	(( 'PrintPreview' , 'EnableChanges' , 'lcid' , ), 281, (281, (), [ (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 240 , (3, 0, None, None) , 0 , )),
	(( '_Protect' , 'Password' , 'DrawingObjects' , 'Contents' , 'Scenarios' , 
			 'UserInterfaceOnly' , 'lcid' , ), 282, (282, (), [ (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 5 , 248 , (3, 0, None, None) , 1088 , )),
	(( 'ProtectContents' , 'lcid' , 'RHS' , ), 292, (292, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ProtectDrawingObjects' , 'lcid' , 'RHS' , ), 293, (293, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ProtectionMode' , 'lcid' , 'RHS' , ), 1159, (1159, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( '_Dummy23' , ), 65559, (65559, (), [ ], 1 , 1 , 4 , 0 , 280 , (24, 0, None, None) , 1089 , )),
	(( '__SaveAs' , 'Filename' , 'FileFormat' , 'Password' , 'WriteResPassword' , 
			 'ReadOnlyRecommended' , 'CreateBackup' , 'AddToMru' , 'TextCodepage' , 'TextVisualLayout' , 
			 'lcid' , ), 284, (284, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 8 , 288 , (3, 0, None, None) , 1088 , )),
	(( 'Select' , 'Replace' , 'lcid' , ), 235, (235, (), [ (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Unprotect' , 'Password' , 'lcid' , ), 285, (285, (), [ (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'lcid' , 'RHS' , ), 558, (558, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'lcid' , 'RHS' , ), 558, (558, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Shapes' , 'RHS' , ), 1377, (1377, (), [ (16393, 10, None, "IID('{0002443A-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( '_ApplyDataLabels' , 'Type' , 'LegendKey' , 'AutoText' , 'HasLeaderLines' , 
			 'lcid' , ), 151, (151, (), [ (3, 49, '2', None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 3 , 336 , (3, 0, None, None) , 1088 , )),
	(( 'Arcs' , 'Index' , 'lcid' , 'RHS' , ), 760, (760, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 344 , (3, 0, None, None) , 64 , )),
	(( 'Area3DGroup' , 'lcid' , 'RHS' , ), 17, (17, (), [ (3, 5, None, None) , 
			 (16393, 10, None, "IID('{00020859-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 64 , )),
	(( 'AreaGroups' , 'Index' , 'lcid' , 'RHS' , ), 9, (9, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 360 , (3, 0, None, None) , 64 , )),
	(( 'AutoFormat' , 'Gallery' , 'Format' , ), 114, (114, (), [ (3, 1, None, None) , 
			 (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 368 , (3, 0, None, None) , 64 , )),
	(( 'AutoScaling' , 'lcid' , 'RHS' , ), 107, (107, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'AutoScaling' , 'lcid' , 'RHS' , ), 107, (107, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Axes' , 'Type' , 'AxisGroup' , 'lcid' , 'RHS' , 
			 ), 23, (23, (), [ (12, 17, None, None) , (3, 49, '1', None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'SetBackgroundPicture' , 'Filename' , ), 1188, (1188, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'Bar3DGroup' , 'lcid' , 'RHS' , ), 18, (18, (), [ (3, 5, None, None) , 
			 (16393, 10, None, "IID('{00020859-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 64 , )),
	(( 'BarGroups' , 'Index' , 'lcid' , 'RHS' , ), 10, (10, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 416 , (3, 0, None, None) , 64 , )),
	(( 'Buttons' , 'Index' , 'lcid' , 'RHS' , ), 557, (557, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 424 , (3, 0, None, None) , 64 , )),
	(( 'ChartArea' , 'lcid' , 'RHS' , ), 80, (80, (), [ (3, 5, None, None) , 
			 (16393, 10, None, "IID('{000208CC-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'ChartGroups' , 'Index' , 'lcid' , 'RHS' , ), 8, (8, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 440 , (3, 0, None, None) , 0 , )),
	(( 'ChartObjects' , 'Index' , 'lcid' , 'RHS' , ), 1060, (1060, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 448 , (3, 0, None, None) , 0 , )),
	(( 'ChartTitle' , 'lcid' , 'RHS' , ), 81, (81, (), [ (3, 5, None, None) , 
			 (16393, 10, None, "IID('{00020849-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'ChartWizard' , 'Source' , 'Gallery' , 'Format' , 'PlotBy' , 
			 'CategoryLabels' , 'SeriesLabels' , 'HasLegend' , 'Title' , 'CategoryTitle' , 
			 'ValueTitle' , 'ExtraTitle' , 'lcid' , ), 196, (196, (), [ (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 11 , 464 , (3, 0, None, None) , 0 , )),
	(( 'CheckBoxes' , 'Index' , 'lcid' , 'RHS' , ), 824, (824, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 472 , (3, 0, None, None) , 64 , )),
	(( 'CheckSpelling' , 'CustomDictionary' , 'IgnoreUppercase' , 'AlwaysSuggest' , 'SpellLang' , 
			 'lcid' , ), 505, (505, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 4 , 480 , (3, 0, None, None) , 0 , )),
	(( 'Column3DGroup' , 'lcid' , 'RHS' , ), 19, (19, (), [ (3, 5, None, None) , 
			 (16393, 10, None, "IID('{00020859-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 64 , )),
	(( 'ColumnGroups' , 'Index' , 'lcid' , 'RHS' , ), 11, (11, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 496 , (3, 0, None, None) , 64 , )),
	(( 'CopyPicture' , 'Appearance' , 'Format' , 'Size' , 'lcid' , 
			 ), 213, (213, (), [ (3, 49, '1', None) , (3, 49, '-4147', None) , (3, 49, '2', None) , (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'Corners' , 'lcid' , 'RHS' , ), 79, (79, (), [ (3, 5, None, None) , 
			 (16393, 10, None, "IID('{000208C0-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 64 , )),
	(( 'CreatePublisher' , 'Edition' , 'Appearance' , 'Size' , 'ContainsPICT' , 
			 'ContainsBIFF' , 'ContainsRTF' , 'ContainsVALU' , 'lcid' , ), 458, (458, (), [ 
			 (12, 17, None, None) , (3, 49, '1', None) , (3, 49, '1', None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 4 , 520 , (3, 0, None, None) , 64 , )),
	(( 'DataTable' , 'RHS' , ), 1395, (1395, (), [ (16393, 10, None, "IID('{00020843-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'DepthPercent' , 'lcid' , 'RHS' , ), 48, (48, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'DepthPercent' , 'lcid' , 'RHS' , ), 48, (48, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'Deselect' , 'lcid' , ), 1120, (1120, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 64 , )),
	(( 'DisplayBlanksAs' , 'lcid' , 'RHS' , ), 93, (93, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'DisplayBlanksAs' , 'lcid' , 'RHS' , ), 93, (93, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'DoughnutGroups' , 'Index' , 'lcid' , 'RHS' , ), 14, (14, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 576 , (3, 0, None, None) , 64 , )),
	(( 'Drawings' , 'Index' , 'lcid' , 'RHS' , ), 772, (772, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 584 , (3, 0, None, None) , 64 , )),
	(( 'DrawingObjects' , 'Index' , 'lcid' , 'RHS' , ), 88, (88, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 592 , (3, 0, None, None) , 64 , )),
	(( 'DropDowns' , 'Index' , 'lcid' , 'RHS' , ), 836, (836, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 600 , (3, 0, None, None) , 64 , )),
	(( 'Elevation' , 'lcid' , 'RHS' , ), 49, (49, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'Elevation' , 'lcid' , 'RHS' , ), 49, (49, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'Evaluate' , 'Name' , 'lcid' , 'RHS' , ), 1, (1, (), [ 
			 (12, 1, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( '_Evaluate' , 'Name' , 'lcid' , 'RHS' , ), -5, (-5, (), [ 
			 (12, 1, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 632 , (3, 0, None, None) , 1024 , )),
	(( 'Floor' , 'lcid' , 'RHS' , ), 83, (83, (), [ (3, 5, None, None) , 
			 (16393, 10, None, "IID('{000208C7-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'GapDepth' , 'lcid' , 'RHS' , ), 50, (50, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'GapDepth' , 'lcid' , 'RHS' , ), 50, (50, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'GroupBoxes' , 'Index' , 'lcid' , 'RHS' , ), 834, (834, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 664 , (3, 0, None, None) , 64 , )),
	(( 'GroupObjects' , 'Index' , 'lcid' , 'RHS' , ), 1113, (1113, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 672 , (3, 0, None, None) , 64 , )),
	(( 'HasAxis' , 'Index1' , 'Index2' , 'lcid' , 'RHS' , 
			 ), 52, (52, (), [ (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 2 , 680 , (3, 0, None, None) , 0 , )),
	(( 'HasAxis' , 'Index1' , 'Index2' , 'lcid' , 'RHS' , 
			 ), 52, (52, (), [ (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , (12, 1, None, None) , ], 1 , 4 , 4 , 2 , 688 , (3, 0, None, None) , 0 , )),
	(( 'HasDataTable' , 'RHS' , ), 1396, (1396, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
	(( 'HasDataTable' , 'RHS' , ), 1396, (1396, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
	(( 'HasLegend' , 'lcid' , 'RHS' , ), 53, (53, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
	(( 'HasLegend' , 'lcid' , 'RHS' , ), 53, (53, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'HasTitle' , 'lcid' , 'RHS' , ), 54, (54, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'HasTitle' , 'lcid' , 'RHS' , ), 54, (54, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
	(( 'HeightPercent' , 'lcid' , 'RHS' , ), 55, (55, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
	(( 'HeightPercent' , 'lcid' , 'RHS' , ), 55, (55, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
	(( 'Hyperlinks' , 'RHS' , ), 1393, (1393, (), [ (16393, 10, None, "IID('{00024430-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
	(( 'Labels' , 'Index' , 'lcid' , 'RHS' , ), 841, (841, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 768 , (3, 0, None, None) , 64 , )),
	(( 'Legend' , 'lcid' , 'RHS' , ), 84, (84, (), [ (3, 5, None, None) , 
			 (16393, 10, None, "IID('{000208CD-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
	(( 'Line3DGroup' , 'lcid' , 'RHS' , ), 20, (20, (), [ (3, 5, None, None) , 
			 (16393, 10, None, "IID('{00020859-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 784 , (3, 0, None, None) , 64 , )),
	(( 'LineGroups' , 'Index' , 'lcid' , 'RHS' , ), 12, (12, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 792 , (3, 0, None, None) , 64 , )),
	(( 'Lines' , 'Index' , 'lcid' , 'RHS' , ), 767, (767, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 800 , (3, 0, None, None) , 64 , )),
	(( 'ListBoxes' , 'Index' , 'lcid' , 'RHS' , ), 832, (832, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 808 , (3, 0, None, None) , 64 , )),
	(( 'Location' , 'Where' , 'Name' , 'RHS' , ), 1397, (1397, (), [ 
			 (3, 1, None, None) , (12, 17, None, None) , (16397, 10, None, "IID('{00020821-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 1 , 816 , (3, 0, None, None) , 0 , )),
	(( 'OLEObjects' , 'Index' , 'lcid' , 'RHS' , ), 799, (799, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 824 , (3, 0, None, None) , 0 , )),
	(( 'OptionButtons' , 'Index' , 'lcid' , 'RHS' , ), 826, (826, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 832 , (3, 0, None, None) , 64 , )),
	(( 'Ovals' , 'Index' , 'lcid' , 'RHS' , ), 801, (801, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 840 , (3, 0, None, None) , 64 , )),
	(( 'Paste' , 'Type' , 'lcid' , ), 211, (211, (), [ (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 848 , (3, 0, None, None) , 0 , )),
	(( 'Perspective' , 'lcid' , 'RHS' , ), 57, (57, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
	(( 'Perspective' , 'lcid' , 'RHS' , ), 57, (57, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
	(( 'Pictures' , 'Index' , 'lcid' , 'RHS' , ), 771, (771, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 872 , (3, 0, None, None) , 64 , )),
	(( 'Pie3DGroup' , 'lcid' , 'RHS' , ), 21, (21, (), [ (3, 5, None, None) , 
			 (16393, 10, None, "IID('{00020859-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 880 , (3, 0, None, None) , 64 , )),
	(( 'PieGroups' , 'Index' , 'lcid' , 'RHS' , ), 13, (13, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 888 , (3, 0, None, None) , 64 , )),
	(( 'PlotArea' , 'lcid' , 'RHS' , ), 85, (85, (), [ (3, 5, None, None) , 
			 (16393, 10, None, "IID('{000208CB-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
	(( 'PlotVisibleOnly' , 'lcid' , 'RHS' , ), 92, (92, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
	(( 'PlotVisibleOnly' , 'lcid' , 'RHS' , ), 92, (92, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
	(( 'RadarGroups' , 'Index' , 'lcid' , 'RHS' , ), 15, (15, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 920 , (3, 0, None, None) , 64 , )),
	(( 'Rectangles' , 'Index' , 'lcid' , 'RHS' , ), 774, (774, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 928 , (3, 0, None, None) , 64 , )),
	(( 'RightAngleAxes' , 'lcid' , 'RHS' , ), 58, (58, (), [ (3, 5, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
	(( 'RightAngleAxes' , 'lcid' , 'RHS' , ), 58, (58, (), [ (3, 5, None, None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
	(( 'Rotation' , 'lcid' , 'RHS' , ), 59, (59, (), [ (3, 5, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
	(( 'Rotation' , 'lcid' , 'RHS' , ), 59, (59, (), [ (3, 5, None, None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
	(( 'ScrollBars' , 'Index' , 'lcid' , 'RHS' , ), 830, (830, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 968 , (3, 0, None, None) , 64 , )),
	(( 'SeriesCollection' , 'Index' , 'lcid' , 'RHS' , ), 68, (68, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 976 , (3, 0, None, None) , 0 , )),
	(( 'SizeWithWindow' , 'lcid' , 'RHS' , ), 94, (94, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 64 , )),
	(( 'SizeWithWindow' , 'lcid' , 'RHS' , ), 94, (94, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 64 , )),
	(( 'ShowWindow' , 'RHS' , ), 1399, (1399, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 64 , )),
	(( 'ShowWindow' , 'RHS' , ), 1399, (1399, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1008 , (3, 0, None, None) , 64 , )),
	(( 'Spinners' , 'Index' , 'lcid' , 'RHS' , ), 838, (838, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 1016 , (3, 0, None, None) , 64 , )),
	(( 'SubType' , 'lcid' , 'RHS' , ), 109, (109, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1024 , (3, 0, None, None) , 64 , )),
	(( 'SubType' , 'lcid' , 'RHS' , ), 109, (109, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1032 , (3, 0, None, None) , 64 , )),
	(( 'SurfaceGroup' , 'lcid' , 'RHS' , ), 22, (22, (), [ (3, 5, None, None) , 
			 (16393, 10, None, "IID('{00020859-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1040 , (3, 0, None, None) , 64 , )),
	(( 'TextBoxes' , 'Index' , 'lcid' , 'RHS' , ), 777, (777, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 1048 , (3, 0, None, None) , 64 , )),
	(( 'Type' , 'lcid' , 'RHS' , ), 108, (108, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1056 , (3, 0, None, None) , 64 , )),
	(( 'Type' , 'lcid' , 'RHS' , ), 108, (108, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1064 , (3, 0, None, None) , 64 , )),
	(( 'ChartType' , 'RHS' , ), 1400, (1400, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
	(( 'ChartType' , 'RHS' , ), 1400, (1400, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
	(( 'ApplyCustomType' , 'ChartType' , 'TypeName' , ), 1401, (1401, (), [ (3, 1, None, None) , 
			 (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 1088 , (3, 0, None, None) , 64 , )),
	(( 'Walls' , 'lcid' , 'RHS' , ), 86, (86, (), [ (3, 5, None, None) , 
			 (16393, 10, None, "IID('{000208C8-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
	(( 'WallsAndGridlines2D' , 'lcid' , 'RHS' , ), 210, (210, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1104 , (3, 0, None, None) , 64 , )),
	(( 'WallsAndGridlines2D' , 'lcid' , 'RHS' , ), 210, (210, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1112 , (3, 0, None, None) , 64 , )),
	(( 'XYGroups' , 'Index' , 'lcid' , 'RHS' , ), 16, (16, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 1120 , (3, 0, None, None) , 64 , )),
	(( 'BarShape' , 'RHS' , ), 1403, (1403, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
	(( 'BarShape' , 'RHS' , ), 1403, (1403, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
	(( 'PlotBy' , 'RHS' , ), 202, (202, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
	(( 'PlotBy' , 'RHS' , ), 202, (202, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
	(( 'CopyChartBuild' , ), 1404, (1404, (), [ ], 1 , 1 , 4 , 0 , 1160 , (3, 0, None, None) , 64 , )),
	(( 'ProtectFormatting' , 'RHS' , ), 1405, (1405, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
	(( 'ProtectFormatting' , 'RHS' , ), 1405, (1405, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
	(( 'ProtectData' , 'RHS' , ), 1406, (1406, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
	(( 'ProtectData' , 'RHS' , ), 1406, (1406, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
	(( 'ProtectGoalSeek' , 'RHS' , ), 1407, (1407, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1200 , (3, 0, None, None) , 64 , )),
	(( 'ProtectGoalSeek' , 'RHS' , ), 1407, (1407, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1208 , (3, 0, None, None) , 64 , )),
	(( 'ProtectSelection' , 'RHS' , ), 1408, (1408, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
	(( 'ProtectSelection' , 'RHS' , ), 1408, (1408, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
	(( 'GetChartElement' , 'x' , 'y' , 'ElementID' , 'Arg1' , 
			 'Arg2' , ), 1409, (1409, (), [ (3, 1, None, None) , (3, 1, None, None) , (16387, 1, None, None) , 
			 (16387, 1, None, None) , (16387, 1, None, None) , ], 1 , 1 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
	(( 'SetSourceData' , 'Source' , 'PlotBy' , ), 1413, (1413, (), [ (9, 1, None, "IID('{00020846-0000-0000-C000-000000000046}')") , 
			 (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 1240 , (3, 0, None, None) , 0 , )),
	(( 'Export' , 'Filename' , 'FilterName' , 'Interactive' , 'RHS' , 
			 ), 1414, (1414, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 2 , 1248 , (3, 0, None, None) , 0 , )),
	(( 'Refresh' , ), 1417, (1417, (), [ ], 1 , 1 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
	(( 'PivotLayout' , 'RHS' , ), 1814, (1814, (), [ (16393, 10, None, "IID('{0002444A-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
	(( 'HasPivotFields' , 'RHS' , ), 1815, (1815, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 64 , )),
	(( 'HasPivotFields' , 'RHS' , ), 1815, (1815, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 64 , )),
	(( 'Scripts' , 'RHS' , ), 1816, (1816, (), [ (16393, 10, None, "IID('{000C0340-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 64 , )),
	(( '_PrintOut' , 'From' , 'To' , 'Copies' , 'Preview' , 
			 'ActivePrinter' , 'PrintToFile' , 'Collate' , 'PrToFileName' , 'lcid' , 
			 ), 1772, (1772, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 8 , 1296 , (3, 0, None, None) , 1088 , )),
	(( 'Tab' , 'RHS' , ), 1041, (1041, (), [ (16393, 10, None, "IID('{00024469-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
	(( 'MailEnvelope' , 'RHS' , ), 2021, (2021, (), [ (16397, 10, None, "IID('{0006F01A-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
	(( 'ApplyDataLabels' , 'Type' , 'LegendKey' , 'AutoText' , 'HasLeaderLines' , 
			 'ShowSeriesName' , 'ShowCategoryName' , 'ShowValue' , 'ShowPercentage' , 'ShowBubbleSize' , 
			 'Separator' , 'lcid' , ), 1922, (1922, (), [ (3, 49, '2', None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 9 , 1320 , (3, 0, None, None) , 0 , )),
	(( '_SaveAs' , 'Filename' , 'FileFormat' , 'Password' , 'WriteResPassword' , 
			 'ReadOnlyRecommended' , 'CreateBackup' , 'AddToMru' , 'TextCodepage' , 'TextVisualLayout' , 
			 'Local' , ), 1925, (1925, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 9 , 1328 , (3, 0, None, None) , 1088 , )),
	(( 'Protect' , 'Password' , 'DrawingObjects' , 'Contents' , 'Scenarios' , 
			 'UserInterfaceOnly' , ), 2029, (2029, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 5 , 1336 , (3, 0, None, None) , 0 , )),
	(( 'ApplyLayout' , 'Layout' , 'ChartType' , ), 2500, (2500, (), [ (3, 1, None, None) , 
			 (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 1344 , (3, 0, None, None) , 0 , )),
	(( 'SetElement' , 'Element' , ), 2502, (2502, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
	(( 'ShowDataLabelsOverMaximum' , 'RHS' , ), 2504, (2504, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
	(( 'ShowDataLabelsOverMaximum' , 'RHS' , ), 2504, (2504, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
	(( 'SideWall' , 'RHS' , ), 2505, (2505, (), [ (16393, 10, None, "IID('{000208C8-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
	(( 'BackWall' , 'RHS' , ), 2506, (2506, (), [ (16393, 10, None, "IID('{000208C8-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
	(( 'PrintOut' , 'From' , 'To' , 'Copies' , 'Preview' , 
			 'ActivePrinter' , 'PrintToFile' , 'Collate' , 'PrToFileName' , 'lcid' , 
			 ), 2361, (2361, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 8 , 1392 , (3, 0, None, None) , 0 , )),
	(( 'ApplyChartTemplate' , 'Filename' , ), 2507, (2507, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
	(( 'SaveChartTemplate' , 'Filename' , ), 2508, (2508, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
	(( 'SetDefaultChart' , 'Name' , ), 219, (219, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
	(( '_ExportAsFixedFormat' , 'Type' , 'Filename' , 'Quality' , 'IncludeDocProperties' , 
			 'IgnorePrintAreas' , 'From' , 'To' , 'OpenAfterPublish' , 'FixedFormatExtClassPtr' , 
			 ), 2493, (2493, (), [ (3, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 8 , 1424 , (3, 0, None, None) , 1088 , )),
	(( 'ChartStyle' , 'RHS' , ), 2509, (2509, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
	(( 'ChartStyle' , 'RHS' , ), 2509, (2509, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
	(( 'ClearToMatchStyle' , ), 2510, (2510, (), [ ], 1 , 1 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
	(( 'PrintedCommentPages' , 'RHS' , ), 2857, (2857, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
	(( 'Dummy24' , 'RHS' , ), 2858, (2858, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1464 , (3, 0, None, None) , 64 , )),
	(( 'Dummy24' , 'RHS' , ), 2858, (2858, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1472 , (3, 0, None, None) , 64 , )),
	(( 'Dummy25' , 'RHS' , ), 2859, (2859, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1480 , (3, 0, None, None) , 64 , )),
	(( 'Dummy25' , 'RHS' , ), 2859, (2859, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1488 , (3, 0, None, None) , 64 , )),
	(( 'ShowReportFilterFieldButtons' , 'RHS' , ), 2860, (2860, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
	(( 'ShowReportFilterFieldButtons' , 'RHS' , ), 2860, (2860, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
	(( 'ShowLegendFieldButtons' , 'RHS' , ), 2861, (2861, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
	(( 'ShowLegendFieldButtons' , 'RHS' , ), 2861, (2861, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
	(( 'ShowAxisFieldButtons' , 'RHS' , ), 2862, (2862, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
	(( 'ShowAxisFieldButtons' , 'RHS' , ), 2862, (2862, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
	(( 'ShowValueFieldButtons' , 'RHS' , ), 2863, (2863, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
	(( 'ShowValueFieldButtons' , 'RHS' , ), 2863, (2863, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
	(( 'ShowAllFieldButtons' , 'RHS' , ), 2864, (2864, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
	(( 'ShowAllFieldButtons' , 'RHS' , ), 2864, (2864, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
	(( 'FullSeriesCollection' , 'Index' , 'lcid' , 'RHS' , ), 3047, (3047, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 1576 , (3, 0, None, None) , 0 , )),
	(( 'CategoryLabelLevel' , 'RHS' , ), 3048, (3048, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
	(( 'CategoryLabelLevel' , 'RHS' , ), 3048, (3048, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
	(( 'SeriesNameLevel' , 'RHS' , ), 3049, (3049, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
	(( 'SeriesNameLevel' , 'RHS' , ), 3049, (3049, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
	(( 'HasHiddenContent' , 'RHS' , ), 3050, (3050, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1616 , (3, 0, None, None) , 64 , )),
	(( 'DeleteHiddenContent' , ), 3051, (3051, (), [ ], 1 , 1 , 4 , 0 , 1624 , (3, 0, None, None) , 64 , )),
	(( 'ChartColor' , 'RHS' , ), 3052, (3052, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1632 , (3, 0, None, None) , 0 , )),
	(( 'ChartColor' , 'RHS' , ), 3052, (3052, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1640 , (3, 0, None, None) , 0 , )),
	(( 'ClearToMatchColorStyle' , ), 3053, (3053, (), [ ], 1 , 1 , 4 , 0 , 1648 , (3, 0, None, None) , 0 , )),
	(( 'ShowExpandCollapseEntireFieldButtons' , 'RHS' , ), 3166, (3166, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1656 , (3, 0, None, None) , 0 , )),
	(( 'ShowExpandCollapseEntireFieldButtons' , 'RHS' , ), 3166, (3166, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1664 , (3, 0, None, None) , 0 , )),
	(( 'ExportAsFixedFormat' , 'Type' , 'Filename' , 'Quality' , 'IncludeDocProperties' , 
			 'IgnorePrintAreas' , 'From' , 'To' , 'OpenAfterPublish' , 'FixedFormatExtClassPtr' , 
			 'WorkIdentity' , ), 3175, (3175, (), [ (3, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 9 , 1672 , (3, 0, None, None) , 0 , )),
	(( 'SetProperty' , 'ID' , 'Value' , ), 3253, (3253, (), [ (8, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 1680 , (3, 0, None, None) , 0 , )),
	(( 'GetProperty' , 'ID' , 'RHS' , ), 3256, (3256, (), [ (8, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 1688 , (3, 0, None, None) , 0 , )),
	(( 'DisplayValueNotAvailableAsBlank' , 'RHS' , ), 3333, (3333, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1696 , (3, 0, None, None) , 0 , )),
	(( 'DisplayValueNotAvailableAsBlank' , 'RHS' , ), 3333, (3333, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1704 , (3, 0, None, None) , 0 , )),
	(( 'SaveAs' , 'Filename' , 'FileFormat' , 'Password' , 'WriteResPassword' , 
			 'ReadOnlyRecommended' , 'CreateBackup' , 'AddToMru' , 'TextCodepage' , 'TextVisualLayout' , 
			 'Local' , ), 3174, (3174, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 9 , 1712 , (3, 0, None, None) , 0 , )),
]

_Global_vtables_dispatch_ = 1
_Global_vtables_ = [
	(( 'Application' , 'RHS' , ), 148, (148, (), [ (16397, 10, None, "IID('{00024500-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Creator' , 'RHS' , ), 149, (149, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'RHS' , ), 150, (150, (), [ (16397, 10, None, "IID('{00024500-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ActiveCell' , 'RHS' , ), 305, (305, (), [ (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ActiveChart' , 'RHS' , ), 183, (183, (), [ (16397, 10, None, "IID('{00020821-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ActiveDialog' , 'RHS' , ), 815, (815, (), [ (16393, 10, None, "IID('{000208AF-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 64 , )),
	(( 'ActiveMenuBar' , 'RHS' , ), 758, (758, (), [ (16393, 10, None, "IID('{00020864-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 64 , )),
	(( 'ActivePrinter' , 'lcid' , 'RHS' , ), 306, (306, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ActivePrinter' , 'lcid' , 'RHS' , ), 306, (306, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ActiveSheet' , 'RHS' , ), 307, (307, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ActiveWindow' , 'RHS' , ), 759, (759, (), [ (16393, 10, None, "IID('{00020893-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ActiveWorkbook' , 'RHS' , ), 308, (308, (), [ (16397, 10, None, "IID('{00020819-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'AddIns' , 'RHS' , ), 549, (549, (), [ (16393, 10, None, "IID('{00020858-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 1024 , )),
	(( 'Assistant' , 'RHS' , ), 1438, (1438, (), [ (16393, 10, None, "IID('{000C0322-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 64 , )),
	(( 'Calculate' , 'lcid' , ), 279, (279, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Cells' , 'RHS' , ), 238, (238, (), [ (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Charts' , 'RHS' , ), 121, (121, (), [ (16393, 10, None, "IID('{000208D7-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Columns' , 'RHS' , ), 241, (241, (), [ (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 1024 , )),
	(( 'CommandBars' , 'RHS' , ), 1439, (1439, (), [ (16397, 10, None, "IID('{55F88893-7708-11D1-ACEB-006008961DA5}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'DDEAppReturnCode' , 'lcid' , 'RHS' , ), 332, (332, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'DDEExecute' , 'Channel' , 'String' , 'lcid' , ), 333, (333, (), [ 
			 (3, 1, None, None) , (8, 1, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'DDEInitiate' , 'App' , 'Topic' , 'lcid' , 'RHS' , 
			 ), 334, (334, (), [ (8, 1, None, None) , (8, 1, None, None) , (3, 5, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'DDEPoke' , 'Channel' , 'Item' , 'Data' , 'lcid' , 
			 ), 335, (335, (), [ (3, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'DDERequest' , 'Channel' , 'Item' , 'lcid' , 'RHS' , 
			 ), 336, (336, (), [ (3, 1, None, None) , (8, 1, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'DDETerminate' , 'Channel' , 'lcid' , ), 337, (337, (), [ (3, 1, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DialogSheets' , 'RHS' , ), 764, (764, (), [ (16393, 10, None, "IID('{000208D7-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 64 , )),
	(( 'Evaluate' , 'Name' , 'lcid' , 'RHS' , ), 1, (1, (), [ 
			 (12, 1, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( '_Evaluate' , 'Name' , 'lcid' , 'RHS' , ), -5, (-5, (), [ 
			 (12, 1, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 1024 , )),
	(( 'ExecuteExcel4Macro' , 'String' , 'lcid' , 'RHS' , ), 350, (350, (), [ 
			 (8, 1, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Intersect' , 'Arg1' , 'Arg2' , 'Arg3' , 'Arg4' , 
			 'Arg5' , 'Arg6' , 'Arg7' , 'Arg8' , 'Arg9' , 
			 'Arg10' , 'Arg11' , 'Arg12' , 'Arg13' , 'Arg14' , 
			 'Arg15' , 'Arg16' , 'Arg17' , 'Arg18' , 'Arg19' , 
			 'Arg20' , 'Arg21' , 'Arg22' , 'Arg23' , 'Arg24' , 
			 'Arg25' , 'Arg26' , 'Arg27' , 'Arg28' , 'Arg29' , 
			 'Arg30' , 'lcid' , 'RHS' , ), 766, (766, (), [ (9, 1, None, "IID('{00020846-0000-0000-C000-000000000046}')") , 
			 (9, 1, None, "IID('{00020846-0000-0000-C000-000000000046}')") , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , 
			 (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 28 , 288 , (3, 0, None, None) , 0 , )),
	(( 'MenuBars' , 'RHS' , ), 589, (589, (), [ (16393, 10, None, "IID('{00020863-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 64 , )),
	(( 'Modules' , 'RHS' , ), 582, (582, (), [ (16393, 10, None, "IID('{000208AE-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 64 , )),
	(( 'Names' , 'RHS' , ), 442, (442, (), [ (16393, 10, None, "IID('{000208B8-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Range' , 'Cell1' , 'Cell2' , 'RHS' , ), 197, (197, (), [ 
			 (12, 1, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 1 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Rows' , 'RHS' , ), 258, (258, (), [ (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 1024 , )),
	(( 'Run' , 'Macro' , 'Arg1' , 'Arg2' , 'Arg3' , 
			 'Arg4' , 'Arg5' , 'Arg6' , 'Arg7' , 'Arg8' , 
			 'Arg9' , 'Arg10' , 'Arg11' , 'Arg12' , 'Arg13' , 
			 'Arg14' , 'Arg15' , 'Arg16' , 'Arg17' , 'Arg18' , 
			 'Arg19' , 'Arg20' , 'Arg21' , 'Arg22' , 'Arg23' , 
			 'Arg24' , 'Arg25' , 'Arg26' , 'Arg27' , 'Arg28' , 
			 'Arg29' , 'Arg30' , 'RHS' , ), 259, (259, (), [ (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 31 , 336 , (3, 0, None, None) , 0 , )),
	(( '_Run2' , 'Macro' , 'Arg1' , 'Arg2' , 'Arg3' , 
			 'Arg4' , 'Arg5' , 'Arg6' , 'Arg7' , 'Arg8' , 
			 'Arg9' , 'Arg10' , 'Arg11' , 'Arg12' , 'Arg13' , 
			 'Arg14' , 'Arg15' , 'Arg16' , 'Arg17' , 'Arg18' , 
			 'Arg19' , 'Arg20' , 'Arg21' , 'Arg22' , 'Arg23' , 
			 'Arg24' , 'Arg25' , 'Arg26' , 'Arg27' , 'Arg28' , 
			 'Arg29' , 'Arg30' , 'lcid' , 'RHS' , ), 806, (806, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 31 , 344 , (3, 0, None, None) , 1024 , )),
	(( 'Selection' , 'lcid' , 'RHS' , ), 147, (147, (), [ (3, 5, None, None) , 
			 (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'SendKeys' , 'Keys' , 'Wait' , 'lcid' , ), 383, (383, (), [ 
			 (12, 1, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 360 , (3, 0, None, None) , 0 , )),
	(( 'Sheets' , 'RHS' , ), 485, (485, (), [ (16393, 10, None, "IID('{000208D7-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'ShortcutMenus' , 'Index' , 'RHS' , ), 776, (776, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{00020866-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 64 , )),
	(( 'ThisWorkbook' , 'lcid' , 'RHS' , ), 778, (778, (), [ (3, 5, None, None) , 
			 (16397, 10, None, "IID('{00020819-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Toolbars' , 'RHS' , ), 552, (552, (), [ (16393, 10, None, "IID('{0002085D-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 64 , )),
	(( 'Union' , 'Arg1' , 'Arg2' , 'Arg3' , 'Arg4' , 
			 'Arg5' , 'Arg6' , 'Arg7' , 'Arg8' , 'Arg9' , 
			 'Arg10' , 'Arg11' , 'Arg12' , 'Arg13' , 'Arg14' , 
			 'Arg15' , 'Arg16' , 'Arg17' , 'Arg18' , 'Arg19' , 
			 'Arg20' , 'Arg21' , 'Arg22' , 'Arg23' , 'Arg24' , 
			 'Arg25' , 'Arg26' , 'Arg27' , 'Arg28' , 'Arg29' , 
			 'Arg30' , 'lcid' , 'RHS' , ), 779, (779, (), [ (9, 1, None, "IID('{00020846-0000-0000-C000-000000000046}')") , 
			 (9, 1, None, "IID('{00020846-0000-0000-C000-000000000046}')") , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , 
			 (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 28 , 400 , (3, 0, None, None) , 0 , )),
	(( 'Windows' , 'RHS' , ), 430, (430, (), [ (16393, 10, None, "IID('{00020892-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'Workbooks' , 'RHS' , ), 572, (572, (), [ (16393, 10, None, "IID('{000208DB-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'WorksheetFunction' , 'RHS' , ), 1440, (1440, (), [ (16393, 10, None, "IID('{00020845-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'Worksheets' , 'RHS' , ), 494, (494, (), [ (16393, 10, None, "IID('{000208D7-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'Excel4IntlMacroSheets' , 'RHS' , ), 581, (581, (), [ (16393, 10, None, "IID('{000208D7-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Excel4MacroSheets' , 'RHS' , ), 579, (579, (), [ (16393, 10, None, "IID('{000208D7-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
]

_Workbook_vtables_dispatch_ = 1
_Workbook_vtables_ = [
	(( 'Application' , 'RHS' , ), 148, (148, (), [ (16397, 10, None, "IID('{00024500-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Creator' , 'RHS' , ), 149, (149, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'RHS' , ), 150, (150, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'AcceptLabelsInFormulas' , 'RHS' , ), 1441, (1441, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 64 , )),
	(( 'AcceptLabelsInFormulas' , 'RHS' , ), 1441, (1441, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 64 , )),
	(( 'Activate' , 'lcid' , ), 304, (304, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ActiveChart' , 'RHS' , ), 183, (183, (), [ (16397, 10, None, "IID('{00020821-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ActiveSheet' , 'RHS' , ), 307, (307, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Author' , 'lcid' , 'RHS' , ), 574, (574, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 64 , )),
	(( 'Author' , 'lcid' , 'RHS' , ), 574, (574, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 64 , )),
	(( 'AutoUpdateFrequency' , 'RHS' , ), 1442, (1442, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'AutoUpdateFrequency' , 'RHS' , ), 1442, (1442, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'AutoUpdateSaveChanges' , 'RHS' , ), 1443, (1443, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'AutoUpdateSaveChanges' , 'RHS' , ), 1443, (1443, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ChangeHistoryDuration' , 'RHS' , ), 1444, (1444, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ChangeHistoryDuration' , 'RHS' , ), 1444, (1444, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'BuiltinDocumentProperties' , 'RHS' , ), 1176, (1176, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ChangeFileAccess' , 'Mode' , 'WritePassword' , 'Notify' , 'lcid' , 
			 ), 989, (989, (), [ (3, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 2 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ChangeLink' , 'Name' , 'NewName' , 'Type' , 'lcid' , 
			 ), 802, (802, (), [ (8, 1, None, None) , (8, 1, None, None) , (3, 49, '1', None) , (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Charts' , 'RHS' , ), 121, (121, (), [ (16393, 10, None, "IID('{000208D7-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Close' , 'SaveChanges' , 'Filename' , 'RouteWorkbook' , 'lcid' , 
			 ), 277, (277, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 3 , 216 , (3, 0, None, None) , 0 , )),
	(( 'CodeName' , 'RHS' , ), 1373, (1373, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( '_CodeName' , 'RHS' , ), -2147418112, (-2147418112, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 1024 , )),
	(( '_CodeName' , 'RHS' , ), -2147418112, (-2147418112, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 1024 , )),
	(( 'Colors' , 'Index' , 'lcid' , 'RHS' , ), 286, (286, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 1 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Colors' , 'Index' , 'lcid' , 'RHS' , ), 286, (286, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (12, 1, None, None) , ], 1 , 4 , 4 , 1 , 256 , (3, 0, None, None) , 0 , )),
	(( 'CommandBars' , 'RHS' , ), 1439, (1439, (), [ (16397, 10, None, "IID('{55F88893-7708-11D1-ACEB-006008961DA5}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Comments' , 'lcid' , 'RHS' , ), 575, (575, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 64 , )),
	(( 'Comments' , 'lcid' , 'RHS' , ), 575, (575, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 64 , )),
	(( 'ConflictResolution' , 'RHS' , ), 1175, (1175, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ConflictResolution' , 'RHS' , ), 1175, (1175, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Container' , 'RHS' , ), 1190, (1190, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'CreateBackup' , 'lcid' , 'RHS' , ), 287, (287, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'CustomDocumentProperties' , 'RHS' , ), 1177, (1177, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Date1904' , 'lcid' , 'RHS' , ), 403, (403, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Date1904' , 'lcid' , 'RHS' , ), 403, (403, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'DeleteNumberFormat' , 'NumberFormat' , 'lcid' , ), 397, (397, (), [ (8, 1, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'DialogSheets' , 'RHS' , ), 764, (764, (), [ (16393, 10, None, "IID('{000208D7-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 64 , )),
	(( 'DisplayDrawingObjects' , 'lcid' , 'RHS' , ), 404, (404, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'DisplayDrawingObjects' , 'lcid' , 'RHS' , ), 404, (404, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'ExclusiveAccess' , 'lcid' , 'RHS' , ), 1168, (1168, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'FileFormat' , 'lcid' , 'RHS' , ), 288, (288, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'ForwardMailer' , 'lcid' , ), 973, (973, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'lcid' , 'RHS' , ), 289, (289, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'HasMailer' , 'lcid' , 'RHS' , ), 976, (976, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 64 , )),
	(( 'HasMailer' , 'lcid' , 'RHS' , ), 976, (976, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 64 , )),
	(( 'HasPassword' , 'lcid' , 'RHS' , ), 290, (290, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'HasRoutingSlip' , 'lcid' , 'RHS' , ), 950, (950, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 64 , )),
	(( 'HasRoutingSlip' , 'lcid' , 'RHS' , ), 950, (950, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 64 , )),
	(( 'IsAddin' , 'RHS' , ), 1445, (1445, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'IsAddin' , 'RHS' , ), 1445, (1445, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'Keywords' , 'lcid' , 'RHS' , ), 577, (577, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 64 , )),
	(( 'Keywords' , 'lcid' , 'RHS' , ), 577, (577, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 64 , )),
	(( 'LinkInfo' , 'Name' , 'LinkInfo' , 'Type' , 'EditionRef' , 
			 'lcid' , 'RHS' , ), 807, (807, (), [ (8, 1, None, None) , (3, 1, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 2 , 480 , (3, 0, None, None) , 0 , )),
	(( 'LinkSources' , 'Type' , 'lcid' , 'RHS' , ), 808, (808, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 1 , 488 , (3, 0, None, None) , 0 , )),
	(( 'Mailer' , 'RHS' , ), 979, (979, (), [ (16393, 10, None, "IID('{000208D1-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'MergeWorkbook' , 'Filename' , ), 1446, (1446, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'Modules' , 'RHS' , ), 582, (582, (), [ (16393, 10, None, "IID('{000208D7-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 64 , )),
	(( 'MultiUserEditing' , 'lcid' , 'RHS' , ), 1169, (1169, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'RHS' , ), 110, (110, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'Names' , 'RHS' , ), 442, (442, (), [ (16393, 10, None, "IID('{000208B8-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'NewWindow' , 'lcid' , 'RHS' , ), 280, (280, (), [ (3, 5, None, None) , 
			 (16393, 10, None, "IID('{00020893-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'OnSave' , 'lcid' , 'RHS' , ), 1178, (1178, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 64 , )),
	(( 'OnSave' , 'lcid' , 'RHS' , ), 1178, (1178, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 64 , )),
	(( 'OnSheetActivate' , 'lcid' , 'RHS' , ), 1031, (1031, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 64 , )),
	(( 'OnSheetActivate' , 'lcid' , 'RHS' , ), 1031, (1031, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 64 , )),
	(( 'OnSheetDeactivate' , 'lcid' , 'RHS' , ), 1081, (1081, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 64 , )),
	(( 'OnSheetDeactivate' , 'lcid' , 'RHS' , ), 1081, (1081, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 64 , )),
	(( 'OpenLinks' , 'Name' , 'ReadOnly' , 'Type' , 'lcid' , 
			 ), 803, (803, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 2 , 600 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'lcid' , 'RHS' , ), 291, (291, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'PersonalViewListSettings' , 'RHS' , ), 1447, (1447, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'PersonalViewListSettings' , 'RHS' , ), 1447, (1447, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'PersonalViewPrintSettings' , 'RHS' , ), 1448, (1448, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'PersonalViewPrintSettings' , 'RHS' , ), 1448, (1448, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'PivotCaches' , 'RHS' , ), 1449, (1449, (), [ (16393, 10, None, "IID('{0002441D-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'Post' , 'DestName' , 'lcid' , ), 1166, (1166, (), [ (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 656 , (3, 0, None, None) , 0 , )),
	(( 'PrecisionAsDisplayed' , 'lcid' , 'RHS' , ), 405, (405, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'PrecisionAsDisplayed' , 'lcid' , 'RHS' , ), 405, (405, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( '__PrintOut' , 'From' , 'To' , 'Copies' , 'Preview' , 
			 'ActivePrinter' , 'PrintToFile' , 'Collate' , 'lcid' , ), 905, (905, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 7 , 680 , (3, 0, None, None) , 1088 , )),
	(( 'PrintPreview' , 'EnableChanges' , 'lcid' , ), 281, (281, (), [ (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 688 , (3, 0, None, None) , 0 , )),
	(( '_Protect' , 'Password' , 'Structure' , 'Windows' , ), 282, (282, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 3 , 696 , (3, 0, None, None) , 1088 , )),
	(( '_ProtectSharing' , 'Filename' , 'Password' , 'WriteResPassword' , 'ReadOnlyRecommended' , 
			 'CreateBackup' , 'SharingPassword' , ), 1450, (1450, (), [ (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 6 , 704 , (3, 0, None, None) , 1088 , )),
	(( 'ProtectStructure' , 'RHS' , ), 588, (588, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
	(( 'ProtectWindows' , 'RHS' , ), 295, (295, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'lcid' , 'RHS' , ), 296, (296, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( '_ReadOnlyRecommended' , 'lcid' , 'RHS' , ), 297, (297, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 736 , (3, 0, None, None) , 1088 , )),
	(( 'RefreshAll' , ), 1452, (1452, (), [ ], 1 , 1 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
	(( 'Reply' , 'lcid' , ), 977, (977, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
	(( 'ReplyAll' , 'lcid' , ), 978, (978, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
	(( 'RemoveUser' , 'Index' , ), 1453, (1453, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
	(( 'RevisionNumber' , 'lcid' , 'RHS' , ), 1172, (1172, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
	(( 'Route' , 'lcid' , ), 946, (946, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 784 , (3, 0, None, None) , 64 , )),
	(( 'Routed' , 'lcid' , 'RHS' , ), 951, (951, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 64 , )),
	(( 'RoutingSlip' , 'RHS' , ), 949, (949, (), [ (16393, 10, None, "IID('{000208AA-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 800 , (3, 0, None, None) , 64 , )),
	(( 'RunAutoMacros' , 'Which' , 'lcid' , ), 634, (634, (), [ (3, 1, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
	(( 'Save' , 'lcid' , ), 283, (283, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
	(( '__SaveAs' , 'Filename' , 'FileFormat' , 'Password' , 'WriteResPassword' , 
			 'ReadOnlyRecommended' , 'CreateBackup' , 'AccessMode' , 'ConflictResolution' , 'AddToMru' , 
			 'TextCodepage' , 'TextVisualLayout' , 'lcid' , ), 284, (284, (), [ (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (3, 49, '1', None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 4 , 824 , (3, 0, None, None) , 1088 , )),
	(( 'SaveCopyAs' , 'Filename' , 'lcid' , ), 175, (175, (), [ (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 832 , (3, 0, None, None) , 0 , )),
	(( 'Saved' , 'lcid' , 'RHS' , ), 298, (298, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
	(( 'Saved' , 'lcid' , 'RHS' , ), 298, (298, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
	(( 'SaveLinkValues' , 'lcid' , 'RHS' , ), 406, (406, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
	(( 'SaveLinkValues' , 'lcid' , 'RHS' , ), 406, (406, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
	(( 'SendMail' , 'Recipients' , 'Subject' , 'ReturnReceipt' , 'lcid' , 
			 ), 947, (947, (), [ (12, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 2 , 872 , (3, 0, None, None) , 0 , )),
	(( 'SendMailer' , 'FileFormat' , 'Priority' , 'lcid' , ), 980, (980, (), [ 
			 (12, 17, None, None) , (3, 49, '-4143', None) , (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
	(( 'SetLinkOnData' , 'Name' , 'Procedure' , 'lcid' , ), 809, (809, (), [ 
			 (8, 1, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 888 , (3, 0, None, None) , 0 , )),
	(( 'Sheets' , 'RHS' , ), 485, (485, (), [ (16393, 10, None, "IID('{000208D7-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
	(( 'ShowConflictHistory' , 'lcid' , 'RHS' , ), 1171, (1171, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
	(( 'ShowConflictHistory' , 'lcid' , 'RHS' , ), 1171, (1171, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
	(( 'Styles' , 'RHS' , ), 493, (493, (), [ (16393, 10, None, "IID('{00020853-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
	(( 'Subject' , 'lcid' , 'RHS' , ), 953, (953, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 928 , (3, 0, None, None) , 64 , )),
	(( 'Subject' , 'lcid' , 'RHS' , ), 953, (953, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 936 , (3, 0, None, None) , 64 , )),
	(( 'Title' , 'lcid' , 'RHS' , ), 199, (199, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 944 , (3, 0, None, None) , 64 , )),
	(( 'Title' , 'lcid' , 'RHS' , ), 199, (199, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 952 , (3, 0, None, None) , 64 , )),
	(( 'Unprotect' , 'Password' , 'lcid' , ), 285, (285, (), [ (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 960 , (3, 0, None, None) , 0 , )),
	(( 'UnprotectSharing' , 'SharingPassword' , ), 1455, (1455, (), [ (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 968 , (3, 0, None, None) , 0 , )),
	(( 'UpdateFromFile' , 'lcid' , ), 995, (995, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
	(( 'UpdateLink' , 'Name' , 'Type' , 'lcid' , ), 804, (804, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 2 , 984 , (3, 0, None, None) , 0 , )),
	(( 'UpdateRemoteReferences' , 'lcid' , 'RHS' , ), 411, (411, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
	(( 'UpdateRemoteReferences' , 'lcid' , 'RHS' , ), 411, (411, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
	(( 'UserControl' , 'RHS' , ), 1210, (1210, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1008 , (3, 0, None, None) , 64 , )),
	(( 'UserControl' , 'RHS' , ), 1210, (1210, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1016 , (3, 0, None, None) , 64 , )),
	(( 'UserStatus' , 'lcid' , 'RHS' , ), 1173, (1173, (), [ (3, 5, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
	(( 'CustomViews' , 'RHS' , ), 1456, (1456, (), [ (16393, 10, None, "IID('{00024422-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
	(( 'Windows' , 'RHS' , ), 430, (430, (), [ (16393, 10, None, "IID('{00020892-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
	(( 'Worksheets' , 'RHS' , ), 494, (494, (), [ (16393, 10, None, "IID('{000208D7-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
	(( 'WriteReserved' , 'lcid' , 'RHS' , ), 299, (299, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
	(( 'WriteReservedBy' , 'lcid' , 'RHS' , ), 300, (300, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
	(( 'Excel4IntlMacroSheets' , 'RHS' , ), 581, (581, (), [ (16393, 10, None, "IID('{000208D7-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
	(( 'Excel4MacroSheets' , 'RHS' , ), 579, (579, (), [ (16393, 10, None, "IID('{000208D7-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
	(( 'TemplateRemoveExtData' , 'RHS' , ), 1457, (1457, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
	(( 'TemplateRemoveExtData' , 'RHS' , ), 1457, (1457, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
	(( 'HighlightChangesOptions' , 'When' , 'Who' , 'Where' , ), 1458, (1458, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 3 , 1104 , (3, 0, None, None) , 0 , )),
	(( 'HighlightChangesOnScreen' , 'RHS' , ), 1461, (1461, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
	(( 'HighlightChangesOnScreen' , 'RHS' , ), 1461, (1461, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
	(( 'KeepChangeHistory' , 'RHS' , ), 1462, (1462, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
	(( 'KeepChangeHistory' , 'RHS' , ), 1462, (1462, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
	(( 'ListChangesOnNewSheet' , 'RHS' , ), 1463, (1463, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
	(( 'ListChangesOnNewSheet' , 'RHS' , ), 1463, (1463, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
	(( 'PurgeChangeHistoryNow' , 'Days' , 'SharingPassword' , ), 1464, (1464, (), [ (3, 1, None, None) , 
			 (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 1160 , (3, 0, None, None) , 0 , )),
	(( 'AcceptAllChanges' , 'When' , 'Who' , 'Where' , ), 1466, (1466, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 3 , 1168 , (3, 0, None, None) , 0 , )),
	(( 'RejectAllChanges' , 'When' , 'Who' , 'Where' , ), 1467, (1467, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 3 , 1176 , (3, 0, None, None) , 0 , )),
	(( 'PivotTableWizard' , 'SourceType' , 'SourceData' , 'TableDestination' , 'TableName' , 
			 'RowGrand' , 'ColumnGrand' , 'SaveData' , 'HasAutoFormat' , 'AutoPage' , 
			 'Reserved' , 'BackgroundQuery' , 'OptimizeCache' , 'PageFieldOrder' , 'PageFieldWrapCount' , 
			 'ReadData' , 'Connection' , 'lcid' , ), 684, (684, (), [ (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 16 , 1184 , (3, 0, None, None) , 64 , )),
	(( 'ResetColors' , ), 1468, (1468, (), [ ], 1 , 1 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
	(( 'VBProject' , 'RHS' , ), 1469, (1469, (), [ (16397, 10, None, "IID('{0002E169-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
	(( 'FollowHyperlink' , 'Address' , 'SubAddress' , 'NewWindow' , 'AddHistory' , 
			 'ExtraInfo' , 'Method' , 'HeaderInfo' , ), 1470, (1470, (), [ (8, 1, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , ], 1 , 1 , 4 , 6 , 1208 , (3, 0, None, None) , 0 , )),
	(( 'AddToFavorites' , ), 1476, (1476, (), [ ], 1 , 1 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
	(( 'IsInplace' , 'RHS' , ), 1769, (1769, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
	(( '_PrintOut' , 'From' , 'To' , 'Copies' , 'Preview' , 
			 'ActivePrinter' , 'PrintToFile' , 'Collate' , 'PrToFileName' , 'lcid' , 
			 ), 1772, (1772, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 8 , 1232 , (3, 0, None, None) , 1088 , )),
	(( 'WebPagePreview' , ), 1818, (1818, (), [ ], 1 , 1 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
	(( 'PublishObjects' , 'RHS' , ), 1819, (1819, (), [ (16393, 10, None, "IID('{00024443-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
	(( 'WebOptions' , 'RHS' , ), 1820, (1820, (), [ (16393, 10, None, "IID('{00024449-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
	(( 'ReloadAs' , 'Encoding' , ), 1821, (1821, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
	(( 'HTMLProject' , 'RHS' , ), 1823, (1823, (), [ (16393, 10, None, "IID('{000C0356-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 64 , )),
	(( 'EnvelopeVisible' , 'RHS' , ), 1824, (1824, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
	(( 'EnvelopeVisible' , 'RHS' , ), 1824, (1824, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
	(( 'CalculationVersion' , 'RHS' , ), 1806, (1806, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
	(( 'Dummy17' , 'calcid' , ), 2044, (2044, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1304 , (3, 0, None, None) , 64 , )),
	(( 'sblt' , 's' , ), 1826, (1826, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1312 , (3, 0, None, None) , 64 , )),
	(( 'VBASigned' , 'RHS' , ), 1828, (1828, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
	(( 'ShowPivotTableFieldList' , 'RHS' , ), 2046, (2046, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
	(( 'ShowPivotTableFieldList' , 'RHS' , ), 2046, (2046, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
	(( 'UpdateLinks' , 'RHS' , ), 864, (864, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
	(( 'UpdateLinks' , 'RHS' , ), 864, (864, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
	(( 'BreakLink' , 'Name' , 'Type' , ), 2047, (2047, (), [ (8, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
	(( 'Dummy16' , ), 2048, (2048, (), [ ], 1 , 1 , 4 , 0 , 1368 , (3, 0, None, None) , 64 , )),
	(( '_SaveAs' , 'Filename' , 'FileFormat' , 'Password' , 'WriteResPassword' , 
			 'ReadOnlyRecommended' , 'CreateBackup' , 'AccessMode' , 'ConflictResolution' , 'AddToMru' , 
			 'TextCodepage' , 'TextVisualLayout' , 'Local' , 'lcid' , ), 1925, (1925, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (3, 49, '1', None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 5 , 1376 , (3, 0, None, None) , 1088 , )),
	(( 'EnableAutoRecover' , 'RHS' , ), 2049, (2049, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
	(( 'EnableAutoRecover' , 'RHS' , ), 2049, (2049, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
	(( 'RemovePersonalInformation' , 'RHS' , ), 2050, (2050, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
	(( 'RemovePersonalInformation' , 'RHS' , ), 2050, (2050, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
	(( 'FullNameURLEncoded' , 'lcid' , 'RHS' , ), 1927, (1927, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
	(( 'CheckIn' , 'SaveChanges' , 'Comments' , 'MakePublic' , ), 2051, (2051, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 3 , 1424 , (3, 0, None, None) , 0 , )),
	(( 'CanCheckIn' , 'RHS' , ), 2053, (2053, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
	(( 'SendForReview' , 'Recipients' , 'Subject' , 'ShowMessage' , 'IncludeAttachment' , 
			 ), 2054, (2054, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 4 , 1440 , (3, 0, None, None) , 0 , )),
	(( 'ReplyWithChanges' , 'ShowMessage' , ), 2057, (2057, (), [ (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 1448 , (3, 0, None, None) , 0 , )),
	(( 'EndReview' , ), 2058, (2058, (), [ ], 1 , 1 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
	(( 'Password' , 'RHS' , ), 429, (429, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
	(( 'Password' , 'RHS' , ), 429, (429, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
	(( 'WritePassword' , 'RHS' , ), 1128, (1128, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
	(( 'WritePassword' , 'RHS' , ), 1128, (1128, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
	(( 'PasswordEncryptionProvider' , 'RHS' , ), 2059, (2059, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
	(( 'PasswordEncryptionAlgorithm' , 'RHS' , ), 2060, (2060, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
	(( 'PasswordEncryptionKeyLength' , 'RHS' , ), 2061, (2061, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
	(( 'SetPasswordEncryptionOptions' , 'PasswordEncryptionProvider' , 'PasswordEncryptionAlgorithm' , 'PasswordEncryptionKeyLength' , 'PasswordEncryptionFileProperties' , 
			 ), 2062, (2062, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 4 , 1520 , (3, 0, None, None) , 0 , )),
	(( 'PasswordEncryptionFileProperties' , 'RHS' , ), 2063, (2063, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnlyRecommended' , 'RHS' , ), 2005, (2005, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnlyRecommended' , 'RHS' , ), 2005, (2005, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
	(( 'Protect' , 'Password' , 'Structure' , 'Windows' , ), 2029, (2029, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 3 , 1552 , (3, 0, None, None) , 0 , )),
	(( 'SmartTagOptions' , 'RHS' , ), 2064, (2064, (), [ (16393, 10, None, "IID('{00024464-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1560 , (3, 0, None, None) , 64 , )),
	(( 'RecheckSmartTags' , ), 2065, (2065, (), [ ], 1 , 1 , 4 , 0 , 1568 , (3, 0, None, None) , 64 , )),
	(( 'Permission' , 'RHS' , ), 2264, (2264, (), [ (16393, 10, None, "IID('{000C0376-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
	(( 'SharedWorkspace' , 'RHS' , ), 2265, (2265, (), [ (16393, 10, None, "IID('{000C0385-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
	(( 'Sync' , 'RHS' , ), 2266, (2266, (), [ (16393, 10, None, "IID('{000C0386-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
	(( 'SendFaxOverInternet' , 'Recipients' , 'Subject' , 'ShowMessage' , ), 2267, (2267, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 3 , 1600 , (3, 0, None, None) , 0 , )),
	(( 'XmlNamespaces' , 'RHS' , ), 2268, (2268, (), [ (16393, 10, None, "IID('{00024477-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
	(( 'XmlMaps' , 'RHS' , ), 2269, (2269, (), [ (16393, 10, None, "IID('{0002447C-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
	(( 'XmlImport' , 'Url' , 'ImportMap' , 'Overwrite' , 'Destination' , 
			 'RHS' , ), 2270, (2270, (), [ (8, 1, None, None) , (16393, 2, None, "IID('{0002447B-0000-0000-C000-000000000046}')") , (12, 17, None, None) , 
			 (12, 17, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 2 , 1624 , (3, 0, None, None) , 0 , )),
	(( 'SmartDocument' , 'RHS' , ), 2273, (2273, (), [ (16393, 10, None, "IID('{000C0377-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1632 , (3, 0, None, None) , 0 , )),
	(( 'DocumentLibraryVersions' , 'RHS' , ), 2274, (2274, (), [ (16393, 10, None, "IID('{000C0388-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1640 , (3, 0, None, None) , 0 , )),
	(( 'InactiveListBorderVisible' , 'RHS' , ), 2275, (2275, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1648 , (3, 0, None, None) , 0 , )),
	(( 'InactiveListBorderVisible' , 'RHS' , ), 2275, (2275, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1656 , (3, 0, None, None) , 0 , )),
	(( 'DisplayInkComments' , 'RHS' , ), 2276, (2276, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1664 , (3, 0, None, None) , 0 , )),
	(( 'DisplayInkComments' , 'RHS' , ), 2276, (2276, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1672 , (3, 0, None, None) , 0 , )),
	(( 'XmlImportXml' , 'Data' , 'ImportMap' , 'Overwrite' , 'Destination' , 
			 'RHS' , ), 2277, (2277, (), [ (8, 1, None, None) , (16393, 2, None, "IID('{0002447B-0000-0000-C000-000000000046}')") , (12, 17, None, None) , 
			 (12, 17, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 2 , 1680 , (3, 0, None, None) , 0 , )),
	(( 'SaveAsXMLData' , 'Filename' , 'Map' , ), 2278, (2278, (), [ (8, 1, None, None) , 
			 (9, 1, None, "IID('{0002447B-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 0 , 1688 , (3, 0, None, None) , 0 , )),
	(( 'ToggleFormsDesign' , ), 2279, (2279, (), [ ], 1 , 1 , 4 , 0 , 1696 , (3, 0, None, None) , 0 , )),
	(( 'ContentTypeProperties' , 'RHS' , ), 2512, (2512, (), [ (16393, 10, None, "IID('{000C038E-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1704 , (3, 0, None, None) , 0 , )),
	(( 'Connections' , 'RHS' , ), 2513, (2513, (), [ (16393, 10, None, "IID('{00024486-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1712 , (3, 0, None, None) , 0 , )),
	(( 'RemoveDocumentInformation' , 'RemoveDocInfoType' , ), 2514, (2514, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1720 , (3, 0, None, None) , 0 , )),
	(( 'Signatures' , 'RHS' , ), 2516, (2516, (), [ (16393, 10, None, "IID('{000C0410-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1728 , (3, 0, None, None) , 0 , )),
	(( 'CheckInWithVersion' , 'SaveChanges' , 'Comments' , 'MakePublic' , 'VersionType' , 
			 ), 2517, (2517, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 4 , 1736 , (3, 0, None, None) , 0 , )),
	(( 'ServerPolicy' , 'RHS' , ), 2519, (2519, (), [ (16393, 10, None, "IID('{000C0390-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1744 , (3, 0, None, None) , 0 , )),
	(( 'LockServerFile' , ), 2520, (2520, (), [ ], 1 , 1 , 4 , 0 , 1752 , (3, 0, None, None) , 0 , )),
	(( 'DocumentInspectors' , 'RHS' , ), 2521, (2521, (), [ (16393, 10, None, "IID('{000C0392-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1760 , (3, 0, None, None) , 0 , )),
	(( 'GetWorkflowTasks' , 'RHS' , ), 2522, (2522, (), [ (16393, 10, None, "IID('{000CD901-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 0 , 1768 , (3, 0, None, None) , 0 , )),
	(( 'GetWorkflowTemplates' , 'RHS' , ), 2523, (2523, (), [ (16393, 10, None, "IID('{000CD903-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 0 , 1776 , (3, 0, None, None) , 0 , )),
	(( 'PrintOut' , 'From' , 'To' , 'Copies' , 'Preview' , 
			 'ActivePrinter' , 'PrintToFile' , 'Collate' , 'PrToFileName' , 'IgnorePrintAreas' , 
			 'lcid' , ), 2361, (2361, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 9 , 1784 , (3, 0, None, None) , 0 , )),
	(( 'ServerViewableItems' , 'RHS' , ), 2524, (2524, (), [ (16393, 10, None, "IID('{000244A4-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1792 , (3, 0, None, None) , 0 , )),
	(( 'TableStyles' , 'RHS' , ), 2525, (2525, (), [ (16393, 10, None, "IID('{000244A8-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1800 , (3, 0, None, None) , 0 , )),
	(( 'DefaultTableStyle' , 'RHS' , ), 2526, (2526, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1808 , (3, 0, None, None) , 1024 , )),
	(( 'DefaultTableStyle' , 'RHS' , ), 2526, (2526, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1816 , (3, 0, None, None) , 1024 , )),
	(( 'DefaultPivotTableStyle' , 'RHS' , ), 2527, (2527, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1824 , (3, 0, None, None) , 1024 , )),
	(( 'DefaultPivotTableStyle' , 'RHS' , ), 2527, (2527, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 1832 , (3, 0, None, None) , 1024 , )),
	(( 'CheckCompatibility' , 'RHS' , ), 2528, (2528, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1840 , (3, 0, None, None) , 0 , )),
	(( 'CheckCompatibility' , 'RHS' , ), 2528, (2528, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1848 , (3, 0, None, None) , 0 , )),
	(( 'HasVBProject' , 'RHS' , ), 2529, (2529, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1856 , (3, 0, None, None) , 0 , )),
	(( 'CustomXMLParts' , 'RHS' , ), 2530, (2530, (), [ (16397, 10, None, "IID('{000CDB0C-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1864 , (3, 0, None, None) , 0 , )),
	(( 'Final' , 'RHS' , ), 2531, (2531, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1872 , (3, 0, None, None) , 0 , )),
	(( 'Final' , 'RHS' , ), 2531, (2531, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1880 , (3, 0, None, None) , 0 , )),
	(( 'Research' , 'RHS' , ), 2532, (2532, (), [ (16393, 10, None, "IID('{000244AC-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1888 , (3, 0, None, None) , 0 , )),
	(( 'Theme' , 'RHS' , ), 2533, (2533, (), [ (16393, 10, None, "IID('{000C03A0-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1896 , (3, 0, None, None) , 0 , )),
	(( 'ApplyTheme' , 'Filename' , ), 2534, (2534, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1904 , (3, 0, None, None) , 0 , )),
	(( 'Excel8CompatibilityMode' , 'RHS' , ), 2535, (2535, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1912 , (3, 0, None, None) , 0 , )),
	(( 'ConnectionsDisabled' , 'RHS' , ), 2536, (2536, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1920 , (3, 0, None, None) , 0 , )),
	(( 'EnableConnections' , ), 2537, (2537, (), [ ], 1 , 1 , 4 , 0 , 1928 , (3, 0, None, None) , 0 , )),
	(( 'ShowPivotChartActiveFields' , 'RHS' , ), 2538, (2538, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1936 , (3, 0, None, None) , 0 , )),
	(( 'ShowPivotChartActiveFields' , 'RHS' , ), 2538, (2538, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1944 , (3, 0, None, None) , 0 , )),
	(( '_ExportAsFixedFormat' , 'Type' , 'Filename' , 'Quality' , 'IncludeDocProperties' , 
			 'IgnorePrintAreas' , 'From' , 'To' , 'OpenAfterPublish' , 'FixedFormatExtClassPtr' , 
			 ), 2493, (2493, (), [ (3, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 8 , 1952 , (3, 0, None, None) , 1088 , )),
	(( 'IconSets' , 'RHS' , ), 2539, (2539, (), [ (16393, 10, None, "IID('{0002449C-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1960 , (3, 0, None, None) , 0 , )),
	(( 'EncryptionProvider' , 'RHS' , ), 2540, (2540, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1968 , (3, 0, None, None) , 0 , )),
	(( 'EncryptionProvider' , 'RHS' , ), 2540, (2540, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1976 , (3, 0, None, None) , 0 , )),
	(( 'DoNotPromptForConvert' , 'RHS' , ), 2541, (2541, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1984 , (3, 0, None, None) , 0 , )),
	(( 'DoNotPromptForConvert' , 'RHS' , ), 2541, (2541, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1992 , (3, 0, None, None) , 0 , )),
	(( 'ForceFullCalculation' , 'RHS' , ), 2542, (2542, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2000 , (3, 0, None, None) , 0 , )),
	(( 'ForceFullCalculation' , 'RHS' , ), 2542, (2542, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2008 , (3, 0, None, None) , 0 , )),
	(( 'ProtectSharing' , 'Filename' , 'Password' , 'WriteResPassword' , 'ReadOnlyRecommended' , 
			 'CreateBackup' , 'SharingPassword' , 'FileFormat' , ), 2543, (2543, (), [ (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , ], 1 , 1 , 4 , 7 , 2016 , (3, 0, None, None) , 0 , )),
	(( 'SlicerCaches' , 'RHS' , ), 2866, (2866, (), [ (16393, 10, None, "IID('{000244C3-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2024 , (3, 0, None, None) , 0 , )),
	(( 'ActiveSlicer' , 'RHS' , ), 2867, (2867, (), [ (16393, 10, None, "IID('{000244C8-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2032 , (3, 0, None, None) , 0 , )),
	(( 'DefaultSlicerStyle' , 'RHS' , ), 2868, (2868, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 2040 , (3, 0, None, None) , 1024 , )),
	(( 'DefaultSlicerStyle' , 'RHS' , ), 2868, (2868, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 2048 , (3, 0, None, None) , 1024 , )),
	(( 'Dummy26' , ), 2869, (2869, (), [ ], 1 , 1 , 4 , 0 , 2056 , (3, 0, None, None) , 64 , )),
	(( 'Dummy27' , ), 2870, (2870, (), [ ], 1 , 1 , 4 , 0 , 2064 , (3, 0, None, None) , 64 , )),
	(( 'AccuracyVersion' , 'RHS' , ), 2871, (2871, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 2072 , (3, 0, None, None) , 0 , )),
	(( 'AccuracyVersion' , 'RHS' , ), 2871, (2871, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 2080 , (3, 0, None, None) , 0 , )),
	(( 'CaseSensitive' , 'RHS' , ), 3056, (3056, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2088 , (3, 0, None, None) , 0 , )),
	(( 'UseWholeCellCriteria' , 'RHS' , ), 3057, (3057, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2096 , (3, 0, None, None) , 0 , )),
	(( 'UseWildcards' , 'RHS' , ), 3058, (3058, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2104 , (3, 0, None, None) , 0 , )),
	(( 'PivotTables' , 'RHS' , ), 690, (690, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 2112 , (3, 0, None, None) , 0 , )),
	(( 'Model' , 'RHS' , ), 3059, (3059, (), [ (16393, 10, None, "IID('{000244DB-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2120 , (3, 0, None, None) , 0 , )),
	(( 'ChartDataPointTrack' , 'RHS' , ), 2998, (2998, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2128 , (3, 0, None, None) , 0 , )),
	(( 'ChartDataPointTrack' , 'RHS' , ), 2998, (2998, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2136 , (3, 0, None, None) , 0 , )),
	(( 'DefaultTimelineStyle' , 'RHS' , ), 3060, (3060, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 2144 , (3, 0, None, None) , 1024 , )),
	(( 'DefaultTimelineStyle' , 'RHS' , ), 3060, (3060, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 2152 , (3, 0, None, None) , 1024 , )),
	(( 'Queries' , 'RHS' , ), 3186, (3186, (), [ (16393, 10, None, "IID('{000244EC-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 2160 , (3, 0, None, None) , 0 , )),
	(( 'CreateForecastSheet' , 'Timeline' , 'Values' , 'ForecastStart' , 'ForecastEnd' , 
			 'ConfInt' , 'Seasonality' , 'DataCompletion' , 'Aggregation' , 'ChartType' , 
			 'ShowStatsTable' , ), 3167, (3167, (), [ (9, 1, None, "IID('{00020846-0000-0000-C000-000000000046}')") , (9, 1, None, "IID('{00020846-0000-0000-C000-000000000046}')") , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 8 , 2168 , (3, 0, None, None) , 0 , )),
	(( 'WorkIdentity' , 'RHS' , ), 3173, (3173, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 2176 , (3, 0, None, None) , 0 , )),
	(( 'WorkIdentity' , 'RHS' , ), 3173, (3173, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 2184 , (3, 0, None, None) , 0 , )),
	(( 'SaveAs' , 'Filename' , 'FileFormat' , 'Password' , 'WriteResPassword' , 
			 'ReadOnlyRecommended' , 'CreateBackup' , 'AccessMode' , 'ConflictResolution' , 'AddToMru' , 
			 'TextCodepage' , 'TextVisualLayout' , 'Local' , 'WorkIdentity' , 'lcid' , 
			 ), 3174, (3174, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (3, 49, '1', None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 6 , 2192 , (3, 0, None, None) , 0 , )),
	(( 'ExportAsFixedFormat' , 'Type' , 'Filename' , 'Quality' , 'IncludeDocProperties' , 
			 'IgnorePrintAreas' , 'From' , 'To' , 'OpenAfterPublish' , 'FixedFormatExtClassPtr' , 
			 'WorkIdentity' , ), 3175, (3175, (), [ (3, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 9 , 2200 , (3, 0, None, None) , 0 , )),
	(( 'PublishToDocs' , 'Title' , 'DisclosureScope' , 'OverwriteUrl' , 'RHS' , 
			 ), 3334, (3334, (), [ (8, 1, None, None) , (3, 1, None, None) , (12, 17, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 1 , 2208 , (3, 0, None, None) , 64 , )),
	(( 'LookUpInDocs' , 'Filename' , 'RHS' , ), 3335, (3335, (), [ (12, 17, None, None) , 
			 (16393, 10, None, "IID('{000244F7-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 1 , 2216 , (3, 0, None, None) , 64 , )),
	(( 'PublishToPBI' , 'PublishType' , 'nameConflict' , 'bstrGroupName' , 'RHS' , 
			 ), 3257, (3257, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 3 , 2224 , (3, 0, None, None) , 0 , )),
	(( 'AutoSaveOn' , 'RHS' , ), 3232, (3232, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2232 , (3, 0, None, None) , 0 , )),
	(( 'AutoSaveOn' , 'RHS' , ), 3232, (3232, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2240 , (3, 0, None, None) , 0 , )),
	(( 'ConvertComments' , ), 3279, (3279, (), [ ], 1 , 1 , 4 , 0 , 2248 , (3, 0, None, None) , 0 , )),
	(( 'SensitivityLabel' , 'RHS' , ), 3379, (3379, (), [ (16393, 10, None, "IID('{4B0F95AC-5769-40E9-98DF-80CDD086612E}')") , ], 1 , 2 , 4 , 0 , 2256 , (3, 0, None, None) , 0 , )),
	(( 'ExternalCodeServiceTimeout' , 'RHS' , ), 3406, (3406, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 2264 , (3, 0, None, None) , 0 , )),
	(( 'ExternalCodeServiceTimeout' , 'RHS' , ), 3406, (3406, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 2272 , (3, 0, None, None) , 0 , )),
]

_Worksheet_vtables_dispatch_ = 1
_Worksheet_vtables_ = [
	(( 'Application' , 'RHS' , ), 148, (148, (), [ (16397, 10, None, "IID('{00024500-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Creator' , 'RHS' , ), 149, (149, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'RHS' , ), 150, (150, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Activate' , 'lcid' , ), 304, (304, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Copy' , 'Before' , 'After' , 'lcid' , ), 551, (551, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 2 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'lcid' , ), 117, (117, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'CodeName' , 'RHS' , ), 1373, (1373, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( '_CodeName' , 'RHS' , ), -2147418112, (-2147418112, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 1024 , )),
	(( '_CodeName' , 'RHS' , ), -2147418112, (-2147418112, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 1024 , )),
	(( 'Index' , 'lcid' , 'RHS' , ), 486, (486, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Move' , 'Before' , 'After' , 'lcid' , ), 637, (637, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 2 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'RHS' , ), 110, (110, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'RHS' , ), 110, (110, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Next' , 'RHS' , ), 502, (502, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'OnDoubleClick' , 'lcid' , 'RHS' , ), 628, (628, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 64 , )),
	(( 'OnDoubleClick' , 'lcid' , 'RHS' , ), 628, (628, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 64 , )),
	(( 'OnSheetActivate' , 'lcid' , 'RHS' , ), 1031, (1031, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 64 , )),
	(( 'OnSheetActivate' , 'lcid' , 'RHS' , ), 1031, (1031, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 64 , )),
	(( 'OnSheetDeactivate' , 'lcid' , 'RHS' , ), 1081, (1081, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 64 , )),
	(( 'OnSheetDeactivate' , 'lcid' , 'RHS' , ), 1081, (1081, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 64 , )),
	(( 'PageSetup' , 'RHS' , ), 998, (998, (), [ (16393, 10, None, "IID('{000208B4-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Previous' , 'RHS' , ), 503, (503, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( '__PrintOut' , 'From' , 'To' , 'Copies' , 'Preview' , 
			 'ActivePrinter' , 'PrintToFile' , 'Collate' , 'lcid' , ), 905, (905, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 7 , 232 , (3, 0, None, None) , 1088 , )),
	(( 'PrintPreview' , 'EnableChanges' , 'lcid' , ), 281, (281, (), [ (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 240 , (3, 0, None, None) , 0 , )),
	(( '_Protect' , 'Password' , 'DrawingObjects' , 'Contents' , 'Scenarios' , 
			 'UserInterfaceOnly' , 'lcid' , ), 282, (282, (), [ (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 5 , 248 , (3, 0, None, None) , 1088 , )),
	(( 'ProtectContents' , 'lcid' , 'RHS' , ), 292, (292, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ProtectDrawingObjects' , 'lcid' , 'RHS' , ), 293, (293, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ProtectionMode' , 'lcid' , 'RHS' , ), 1159, (1159, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ProtectScenarios' , 'lcid' , 'RHS' , ), 294, (294, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( '__SaveAs' , 'Filename' , 'FileFormat' , 'Password' , 'WriteResPassword' , 
			 'ReadOnlyRecommended' , 'CreateBackup' , 'AddToMru' , 'TextCodepage' , 'TextVisualLayout' , 
			 'lcid' , ), 284, (284, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 8 , 288 , (3, 0, None, None) , 1088 , )),
	(( 'Select' , 'Replace' , 'lcid' , ), 235, (235, (), [ (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Unprotect' , 'Password' , 'lcid' , ), 285, (285, (), [ (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 1 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'lcid' , 'RHS' , ), 558, (558, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'lcid' , 'RHS' , ), 558, (558, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Shapes' , 'RHS' , ), 1377, (1377, (), [ (16393, 10, None, "IID('{0002443A-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'TransitionExpEval' , 'lcid' , 'RHS' , ), 401, (401, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 1024 , )),
	(( 'TransitionExpEval' , 'lcid' , 'RHS' , ), 401, (401, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 1024 , )),
	(( 'Arcs' , 'Index' , 'lcid' , 'RHS' , ), 760, (760, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 352 , (3, 0, None, None) , 64 , )),
	(( 'AutoFilterMode' , 'lcid' , 'RHS' , ), 792, (792, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 1024 , )),
	(( 'AutoFilterMode' , 'lcid' , 'RHS' , ), 792, (792, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 1024 , )),
	(( 'SetBackgroundPicture' , 'Filename' , ), 1188, (1188, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'Buttons' , 'Index' , 'lcid' , 'RHS' , ), 557, (557, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 384 , (3, 0, None, None) , 64 , )),
	(( 'Calculate' , 'lcid' , ), 279, (279, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'EnableCalculation' , 'RHS' , ), 1424, (1424, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'EnableCalculation' , 'RHS' , ), 1424, (1424, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'Cells' , 'RHS' , ), 238, (238, (), [ (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'ChartObjects' , 'Index' , 'lcid' , 'RHS' , ), 1060, (1060, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 424 , (3, 0, None, None) , 0 , )),
	(( 'CheckBoxes' , 'Index' , 'lcid' , 'RHS' , ), 824, (824, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 432 , (3, 0, None, None) , 64 , )),
	(( 'CheckSpelling' , 'CustomDictionary' , 'IgnoreUppercase' , 'AlwaysSuggest' , 'SpellLang' , 
			 'lcid' , ), 505, (505, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 4 , 440 , (3, 0, None, None) , 0 , )),
	(( 'CircularReference' , 'lcid' , 'RHS' , ), 1069, (1069, (), [ (3, 5, None, None) , 
			 (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'ClearArrows' , 'lcid' , ), 970, (970, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'Columns' , 'RHS' , ), 241, (241, (), [ (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 1024 , )),
	(( 'ConsolidationFunction' , 'lcid' , 'RHS' , ), 789, (789, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'ConsolidationOptions' , 'lcid' , 'RHS' , ), 790, (790, (), [ (3, 5, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'ConsolidationSources' , 'lcid' , 'RHS' , ), 791, (791, (), [ (3, 5, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'DisplayAutomaticPageBreaks' , 'lcid' , 'RHS' , ), 643, (643, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 64 , )),
	(( 'DisplayAutomaticPageBreaks' , 'lcid' , 'RHS' , ), 643, (643, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 64 , )),
	(( 'Drawings' , 'Index' , 'lcid' , 'RHS' , ), 772, (772, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 512 , (3, 0, None, None) , 64 , )),
	(( 'DrawingObjects' , 'Index' , 'lcid' , 'RHS' , ), 88, (88, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 520 , (3, 0, None, None) , 64 , )),
	(( 'DropDowns' , 'Index' , 'lcid' , 'RHS' , ), 836, (836, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 528 , (3, 0, None, None) , 64 , )),
	(( 'EnableAutoFilter' , 'lcid' , 'RHS' , ), 1156, (1156, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'EnableAutoFilter' , 'lcid' , 'RHS' , ), 1156, (1156, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'EnableSelection' , 'RHS' , ), 1425, (1425, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'EnableSelection' , 'RHS' , ), 1425, (1425, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'EnableOutlining' , 'lcid' , 'RHS' , ), 1157, (1157, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'EnableOutlining' , 'lcid' , 'RHS' , ), 1157, (1157, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'EnablePivotTable' , 'lcid' , 'RHS' , ), 1158, (1158, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'EnablePivotTable' , 'lcid' , 'RHS' , ), 1158, (1158, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'Evaluate' , 'Name' , 'lcid' , 'RHS' , ), 1, (1, (), [ 
			 (12, 1, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( '_Evaluate' , 'Name' , 'lcid' , 'RHS' , ), -5, (-5, (), [ 
			 (12, 1, None, None) , (3, 5, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 608 , (3, 0, None, None) , 1024 , )),
	(( 'FilterMode' , 'lcid' , 'RHS' , ), 800, (800, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'ResetAllPageBreaks' , ), 1426, (1426, (), [ ], 1 , 1 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'GroupBoxes' , 'Index' , 'lcid' , 'RHS' , ), 834, (834, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 632 , (3, 0, None, None) , 64 , )),
	(( 'GroupObjects' , 'Index' , 'lcid' , 'RHS' , ), 1113, (1113, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 640 , (3, 0, None, None) , 64 , )),
	(( 'Labels' , 'Index' , 'lcid' , 'RHS' , ), 841, (841, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 648 , (3, 0, None, None) , 64 , )),
	(( 'Lines' , 'Index' , 'lcid' , 'RHS' , ), 767, (767, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 656 , (3, 0, None, None) , 64 , )),
	(( 'ListBoxes' , 'Index' , 'lcid' , 'RHS' , ), 832, (832, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 664 , (3, 0, None, None) , 64 , )),
	(( 'Names' , 'RHS' , ), 442, (442, (), [ (16393, 10, None, "IID('{000208B8-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'OLEObjects' , 'Index' , 'lcid' , 'RHS' , ), 799, (799, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 680 , (3, 0, None, None) , 0 , )),
	(( 'OnCalculate' , 'lcid' , 'RHS' , ), 625, (625, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 64 , )),
	(( 'OnCalculate' , 'lcid' , 'RHS' , ), 625, (625, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 64 , )),
	(( 'OnData' , 'lcid' , 'RHS' , ), 629, (629, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 64 , )),
	(( 'OnData' , 'lcid' , 'RHS' , ), 629, (629, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 64 , )),
	(( 'OnEntry' , 'lcid' , 'RHS' , ), 627, (627, (), [ (3, 5, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 64 , )),
	(( 'OnEntry' , 'lcid' , 'RHS' , ), 627, (627, (), [ (3, 5, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 64 , )),
	(( 'OptionButtons' , 'Index' , 'lcid' , 'RHS' , ), 826, (826, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 736 , (3, 0, None, None) , 64 , )),
	(( 'Outline' , 'RHS' , ), 102, (102, (), [ (16393, 10, None, "IID('{000208AB-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
	(( 'Ovals' , 'Index' , 'lcid' , 'RHS' , ), 801, (801, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 752 , (3, 0, None, None) , 64 , )),
	(( 'Paste' , 'Destination' , 'Link' , 'lcid' , ), 211, (211, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 2 , 760 , (3, 0, None, None) , 0 , )),
	(( '_PasteSpecial' , 'Format' , 'Link' , 'DisplayAsIcon' , 'IconFileName' , 
			 'IconIndex' , 'IconLabel' , 'lcid' , ), 1027, (1027, (), [ (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 6 , 768 , (3, 0, None, None) , 1088 , )),
	(( 'Pictures' , 'Index' , 'lcid' , 'RHS' , ), 771, (771, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 776 , (3, 0, None, None) , 64 , )),
	(( 'PivotTables' , 'Index' , 'lcid' , 'RHS' , ), 690, (690, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 784 , (3, 0, None, None) , 0 , )),
	(( 'PivotTableWizard' , 'SourceType' , 'SourceData' , 'TableDestination' , 'TableName' , 
			 'RowGrand' , 'ColumnGrand' , 'SaveData' , 'HasAutoFormat' , 'AutoPage' , 
			 'Reserved' , 'BackgroundQuery' , 'OptimizeCache' , 'PageFieldOrder' , 'PageFieldWrapCount' , 
			 'ReadData' , 'Connection' , 'lcid' , 'RHS' , ), 684, (684, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, "IID('{00020872-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 16 , 792 , (3, 0, None, None) , 0 , )),
	(( 'Range' , 'Cell1' , 'Cell2' , 'RHS' , ), 197, (197, (), [ 
			 (12, 1, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 1 , 800 , (3, 0, None, None) , 0 , )),
	(( 'Rectangles' , 'Index' , 'lcid' , 'RHS' , ), 774, (774, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 808 , (3, 0, None, None) , 64 , )),
	(( 'Rows' , 'RHS' , ), 258, (258, (), [ (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 816 , (3, 0, None, None) , 1024 , )),
	(( 'Scenarios' , 'Index' , 'lcid' , 'RHS' , ), 908, (908, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 824 , (3, 0, None, None) , 0 , )),
	(( 'ScrollArea' , 'RHS' , ), 1433, (1433, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
	(( 'ScrollArea' , 'RHS' , ), 1433, (1433, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
	(( 'ScrollBars' , 'Index' , 'lcid' , 'RHS' , ), 830, (830, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 848 , (3, 0, None, None) , 64 , )),
	(( 'ShowAllData' , 'lcid' , ), 794, (794, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
	(( 'ShowDataForm' , 'lcid' , ), 409, (409, (), [ (3, 5, None, None) , ], 1 , 1 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
	(( 'Spinners' , 'Index' , 'lcid' , 'RHS' , ), 838, (838, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 872 , (3, 0, None, None) , 64 , )),
	(( 'StandardHeight' , 'lcid' , 'RHS' , ), 407, (407, (), [ (3, 5, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
	(( 'StandardWidth' , 'lcid' , 'RHS' , ), 408, (408, (), [ (3, 5, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
	(( 'StandardWidth' , 'lcid' , 'RHS' , ), 408, (408, (), [ (3, 5, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
	(( 'TextBoxes' , 'Index' , 'lcid' , 'RHS' , ), 777, (777, (), [ 
			 (12, 17, None, None) , (3, 5, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 1 , 904 , (3, 0, None, None) , 64 , )),
	(( 'TransitionFormEntry' , 'lcid' , 'RHS' , ), 402, (402, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 912 , (3, 0, None, None) , 1024 , )),
	(( 'TransitionFormEntry' , 'lcid' , 'RHS' , ), 402, (402, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 920 , (3, 0, None, None) , 1024 , )),
	(( 'Type' , 'lcid' , 'RHS' , ), 108, (108, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
	(( 'UsedRange' , 'lcid' , 'RHS' , ), 412, (412, (), [ (3, 5, None, None) , 
			 (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
	(( 'HPageBreaks' , 'RHS' , ), 1418, (1418, (), [ (16393, 10, None, "IID('{00024404-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
	(( 'VPageBreaks' , 'RHS' , ), 1419, (1419, (), [ (16393, 10, None, "IID('{00024405-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
	(( 'QueryTables' , 'RHS' , ), 1434, (1434, (), [ (16393, 10, None, "IID('{00024429-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
	(( 'DisplayPageBreaks' , 'RHS' , ), 1435, (1435, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
	(( 'DisplayPageBreaks' , 'RHS' , ), 1435, (1435, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
	(( 'Comments' , 'RHS' , ), 575, (575, (), [ (16393, 10, None, "IID('{00024426-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
	(( 'Hyperlinks' , 'RHS' , ), 1393, (1393, (), [ (16393, 10, None, "IID('{00024430-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
	(( 'ClearCircles' , ), 1436, (1436, (), [ ], 1 , 1 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
	(( 'CircleInvalid' , ), 1437, (1437, (), [ ], 1 , 1 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
	(( '_DisplayRightToLeft' , 'lcid' , 'RHS' , ), 648, (648, (), [ (3, 5, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 1088 , )),
	(( '_DisplayRightToLeft' , 'lcid' , 'RHS' , ), 648, (648, (), [ (3, 5, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1024 , (3, 0, None, None) , 1088 , )),
	(( '_AutoFilter' , 'RHS' , ), 793, (793, (), [ (16393, 10, None, "IID('{00024432-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 1088 , )),
	(( 'DisplayRightToLeft' , 'lcid' , 'RHS' , ), 1774, (1774, (), [ (3, 5, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
	(( 'DisplayRightToLeft' , 'lcid' , 'RHS' , ), 1774, (1774, (), [ (3, 5, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
	(( 'Scripts' , 'RHS' , ), 1816, (1816, (), [ (16393, 10, None, "IID('{000C0340-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1056 , (3, 0, None, None) , 64 , )),
	(( '_PrintOut' , 'From' , 'To' , 'Copies' , 'Preview' , 
			 'ActivePrinter' , 'PrintToFile' , 'Collate' , 'PrToFileName' , 'lcid' , 
			 ), 1772, (1772, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 8 , 1064 , (3, 0, None, None) , 1088 , )),
	(( '_CheckSpelling' , 'CustomDictionary' , 'IgnoreUppercase' , 'AlwaysSuggest' , 'SpellLang' , 
			 'IgnoreFinalYaa' , 'SpellScript' , 'lcid' , ), 1817, (1817, (), [ (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (3, 5, None, None) , ], 1 , 1 , 4 , 6 , 1072 , (3, 0, None, None) , 1088 , )),
	(( 'Tab' , 'RHS' , ), 1041, (1041, (), [ (16393, 10, None, "IID('{00024469-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
	(( 'MailEnvelope' , 'RHS' , ), 2021, (2021, (), [ (16397, 10, None, "IID('{0006F01A-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
	(( '_SaveAs' , 'Filename' , 'FileFormat' , 'Password' , 'WriteResPassword' , 
			 'ReadOnlyRecommended' , 'CreateBackup' , 'AddToMru' , 'TextCodepage' , 'TextVisualLayout' , 
			 'Local' , ), 1925, (1925, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 9 , 1096 , (3, 0, None, None) , 1088 , )),
	(( 'CustomProperties' , 'RHS' , ), 2030, (2030, (), [ (16393, 10, None, "IID('{00024452-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
	(( 'SmartTags' , 'RHS' , ), 2016, (2016, (), [ (16393, 10, None, "IID('{00024461-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 64 , )),
	(( 'Protection' , 'RHS' , ), 176, (176, (), [ (16393, 10, None, "IID('{00024467-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
	(( 'PasteSpecial' , 'Format' , 'Link' , 'DisplayAsIcon' , 'IconFileName' , 
			 'IconIndex' , 'IconLabel' , 'NoHTMLFormatting' , 'lcid' , ), 1928, (1928, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 7 , 1128 , (3, 0, None, None) , 0 , )),
	(( 'Protect' , 'Password' , 'DrawingObjects' , 'Contents' , 'Scenarios' , 
			 'UserInterfaceOnly' , 'AllowFormattingCells' , 'AllowFormattingColumns' , 'AllowFormattingRows' , 'AllowInsertingColumns' , 
			 'AllowInsertingRows' , 'AllowInsertingHyperlinks' , 'AllowDeletingColumns' , 'AllowDeletingRows' , 'AllowSorting' , 
			 'AllowFiltering' , 'AllowUsingPivotTables' , ), 2029, (2029, (), [ (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 16 , 1136 , (3, 0, None, None) , 0 , )),
	(( 'ListObjects' , 'RHS' , ), 2259, (2259, (), [ (16393, 10, None, "IID('{00024470-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1144 , (3, 0, None, None) , 0 , )),
	(( 'XmlDataQuery' , 'XPath' , 'SelectionNamespaces' , 'Map' , 'RHS' , 
			 ), 2260, (2260, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 2 , 1152 , (3, 0, None, None) , 0 , )),
	(( 'XmlMapQuery' , 'XPath' , 'SelectionNamespaces' , 'Map' , 'RHS' , 
			 ), 2263, (2263, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{00020846-0000-0000-C000-000000000046}')") , ], 1 , 1 , 4 , 2 , 1160 , (3, 0, None, None) , 0 , )),
	(( 'PrintOut' , 'From' , 'To' , 'Copies' , 'Preview' , 
			 'ActivePrinter' , 'PrintToFile' , 'Collate' , 'PrToFileName' , 'IgnorePrintAreas' , 
			 'lcid' , ), 2361, (2361, (), [ (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (3, 5, None, None) , ], 1 , 1 , 4 , 9 , 1168 , (3, 0, None, None) , 0 , )),
	(( 'EnableFormatConditionsCalculation' , 'RHS' , ), 2511, (2511, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
	(( 'EnableFormatConditionsCalculation' , 'RHS' , ), 2511, (2511, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
	(( '_Sort' , 'RHS' , ), 880, (880, (), [ (16393, 10, None, "IID('{000244AB-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 1088 , )),
	(( '_ExportAsFixedFormat' , 'Type' , 'Filename' , 'Quality' , 'IncludeDocProperties' , 
			 'IgnorePrintAreas' , 'From' , 'To' , 'OpenAfterPublish' , 'FixedFormatExtClassPtr' , 
			 ), 2493, (2493, (), [ (3, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 8 , 1200 , (3, 0, None, None) , 1088 , )),
	(( 'PrintedCommentPages' , 'RHS' , ), 2857, (2857, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
	(( 'ExportAsFixedFormat' , 'Type' , 'Filename' , 'Quality' , 'IncludeDocProperties' , 
			 'IgnorePrintAreas' , 'From' , 'To' , 'OpenAfterPublish' , 'FixedFormatExtClassPtr' , 
			 'WorkIdentity' , ), 3175, (3175, (), [ (3, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 9 , 1216 , (3, 0, None, None) , 0 , )),
	(( 'SaveAs' , 'Filename' , 'FileFormat' , 'Password' , 'WriteResPassword' , 
			 'ReadOnlyRecommended' , 'CreateBackup' , 'AddToMru' , 'TextCodepage' , 'TextVisualLayout' , 
			 'Local' , ), 3174, (3174, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 9 , 1224 , (3, 0, None, None) , 0 , )),
	(( 'CommentsThreaded' , 'RHS' , ), 3282, (3282, (), [ (16393, 10, None, "IID('{000244FC-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
	(( 'AutoFilter' , 'RHS' , ), 3289, (3289, (), [ (16393, 10, None, "IID('{00024432-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , 'RHS' , ), 3288, (3288, (), [ (16393, 10, None, "IID('{000244AB-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
	(( 'NamedSheetViews' , 'RHS' , ), 3309, (3309, (), [ (16393, 10, None, "IID('{00024501-0000-0000-C000-000000000046}')") , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
]

RecordMap = {
}

CLSIDToClassMap = {
	'{000C0310-0000-0000-C000-000000000046}' : Adjustments,
	'{000C0311-0000-0000-C000-000000000046}' : CalloutFormat,
	'{000C0312-0000-0000-C000-000000000046}' : ColorFormat,
	'{000C0317-0000-0000-C000-000000000046}' : LineFormat,
	'{000C0318-0000-0000-C000-000000000046}' : ShapeNode,
	'{000C0319-0000-0000-C000-000000000046}' : ShapeNodes,
	'{000C031A-0000-0000-C000-000000000046}' : PictureFormat,
	'{000C031B-0000-0000-C000-000000000046}' : ShadowFormat,
	'{000C031F-0000-0000-C000-000000000046}' : TextEffectFormat,
	'{000C0321-0000-0000-C000-000000000046}' : ThreeDFormat,
	'{000C0314-0000-0000-C000-000000000046}' : FillFormat,
	'{000C036E-0000-0000-C000-000000000046}' : DiagramNodes,
	'{000C036F-0000-0000-C000-000000000046}' : DiagramNodeChildren,
	'{000C0370-0000-0000-C000-000000000046}' : DiagramNode,
	'{A43788C1-D91B-11D3-8F39-00C04F3651B8}' : IRTDUpdateEvent,
	'{EC0E6191-DB51-11D3-8F3E-00C04F3651B8}' : IRtdServer,
	'{000C0398-0000-0000-C000-000000000046}' : TextFrame2,
	'{000C03D8-0000-0000-C000-000000000046}' : Model3DFormat,
	'{0002084D-0001-0000-C000-000000000046}' : IFont,
	'{00020893-0001-0000-C000-000000000046}' : IWindow,
	'{00020892-0001-0000-C000-000000000046}' : IWindows,
	'{00024413-0001-0000-C000-000000000046}' : IAppEvents,
	'{000208D5-0000-0000-C000-000000000046}' : _Application,
	'{00020845-0001-0000-C000-000000000046}' : IWorksheetFunction,
	'{00020846-0001-0000-C000-000000000046}' : IRange,
	'{0002440F-0001-0000-C000-000000000046}' : IChartEvents,
	'{000208D6-0000-0000-C000-000000000046}' : _Chart,
	'{000208D7-0000-0000-C000-000000000046}' : Sheets,
	'{00024402-0001-0000-C000-000000000046}' : IVPageBreak,
	'{00024401-0001-0000-C000-000000000046}' : IHPageBreak,
	'{00024404-0001-0000-C000-000000000046}' : IHPageBreaks,
	'{00024405-0001-0000-C000-000000000046}' : IVPageBreaks,
	'{00024407-0001-0000-C000-000000000046}' : IRecentFile,
	'{00024406-0001-0000-C000-000000000046}' : IRecentFiles,
	'{00024411-0001-0000-C000-000000000046}' : IDocEvents,
	'{000208D8-0000-0000-C000-000000000046}' : _Worksheet,
	'{00020852-0001-0000-C000-000000000046}' : IStyle,
	'{00020853-0001-0000-C000-000000000046}' : IStyles,
	'{00020855-0001-0000-C000-000000000046}' : IBorders,
	'{000208D9-0000-0000-C000-000000000046}' : _Global,
	'{00020857-0001-0000-C000-000000000046}' : IAddIn,
	'{00020858-0001-0000-C000-000000000046}' : IAddIns,
	'{0002085C-0001-0000-C000-000000000046}' : IToolbar,
	'{0002085D-0001-0000-C000-000000000046}' : IToolbars,
	'{0002085E-0001-0000-C000-000000000046}' : IToolbarButton,
	'{0002085F-0001-0000-C000-000000000046}' : IToolbarButtons,
	'{00020860-0001-0000-C000-000000000046}' : IAreas,
	'{00024412-0001-0000-C000-000000000046}' : IWorkbookEvents,
	'{000208DA-0000-0000-C000-000000000046}' : _Workbook,
	'{000208DB-0000-0000-C000-000000000046}' : Workbooks,
	'{00020863-0001-0000-C000-000000000046}' : IMenuBars,
	'{00020864-0001-0000-C000-000000000046}' : IMenuBar,
	'{00020865-0001-0000-C000-000000000046}' : IMenus,
	'{00020866-0001-0000-C000-000000000046}' : IMenu,
	'{00020867-0001-0000-C000-000000000046}' : IMenuItems,
	'{00020868-0001-0000-C000-000000000046}' : IMenuItem,
	'{0002086D-0001-0000-C000-000000000046}' : ICharts,
	'{0002086F-0001-0000-C000-000000000046}' : IDrawingObjects,
	'{0002441C-0001-0000-C000-000000000046}' : IPivotCache,
	'{0002441D-0001-0000-C000-000000000046}' : IPivotCaches,
	'{0002441E-0001-0000-C000-000000000046}' : IPivotFormula,
	'{0002441F-0001-0000-C000-000000000046}' : IPivotFormulas,
	'{00020872-0001-0000-C000-000000000046}' : IPivotTable,
	'{00020873-0001-0000-C000-000000000046}' : IPivotTables,
	'{00020874-0001-0000-C000-000000000046}' : IPivotField,
	'{00020875-0001-0000-C000-000000000046}' : IPivotFields,
	'{00024420-0001-0000-C000-000000000046}' : ICalculatedFields,
	'{00020876-0001-0000-C000-000000000046}' : IPivotItem,
	'{00020877-0001-0000-C000-000000000046}' : IPivotItems,
	'{00024421-0001-0000-C000-000000000046}' : ICalculatedItems,
	'{00020878-0001-0000-C000-000000000046}' : ICharacters,
	'{00020879-0001-0000-C000-000000000046}' : IDialogs,
	'{0002087A-0001-0000-C000-000000000046}' : IDialog,
	'{0002087B-0001-0000-C000-000000000046}' : ISoundNote,
	'{0002087D-0001-0000-C000-000000000046}' : IButton,
	'{0002087E-0001-0000-C000-000000000046}' : IButtons,
	'{0002087F-0001-0000-C000-000000000046}' : ICheckBox,
	'{00020880-0001-0000-C000-000000000046}' : ICheckBoxes,
	'{00020881-0001-0000-C000-000000000046}' : IOptionButton,
	'{00020882-0001-0000-C000-000000000046}' : IOptionButtons,
	'{00020883-0001-0000-C000-000000000046}' : IEditBox,
	'{00020884-0001-0000-C000-000000000046}' : IEditBoxes,
	'{00020885-0001-0000-C000-000000000046}' : IScrollBar,
	'{00020886-0001-0000-C000-000000000046}' : IScrollBars,
	'{00020887-0001-0000-C000-000000000046}' : IListBox,
	'{00020888-0001-0000-C000-000000000046}' : IListBoxes,
	'{00020889-0001-0000-C000-000000000046}' : IGroupBox,
	'{0002088A-0001-0000-C000-000000000046}' : IGroupBoxes,
	'{0002088B-0001-0000-C000-000000000046}' : IDropDown,
	'{0002088C-0001-0000-C000-000000000046}' : IDropDowns,
	'{0002088D-0001-0000-C000-000000000046}' : ISpinner,
	'{0002088E-0001-0000-C000-000000000046}' : ISpinners,
	'{0002088F-0001-0000-C000-000000000046}' : IDialogFrame,
	'{00020890-0001-0000-C000-000000000046}' : ILabel,
	'{00020891-0001-0000-C000-000000000046}' : ILabels,
	'{00020894-0001-0000-C000-000000000046}' : IPanes,
	'{00020895-0001-0000-C000-000000000046}' : IPane,
	'{00020896-0001-0000-C000-000000000046}' : IScenarios,
	'{00020897-0001-0000-C000-000000000046}' : IScenario,
	'{00020898-0001-0000-C000-000000000046}' : IGroupObject,
	'{00020899-0001-0000-C000-000000000046}' : IGroupObjects,
	'{0002089A-0001-0000-C000-000000000046}' : ILine,
	'{0002089B-0001-0000-C000-000000000046}' : ILines,
	'{0002089C-0001-0000-C000-000000000046}' : IRectangle,
	'{0002089D-0001-0000-C000-000000000046}' : IRectangles,
	'{0002089E-0001-0000-C000-000000000046}' : IOval,
	'{0002089F-0001-0000-C000-000000000046}' : IOvals,
	'{000208A0-0001-0000-C000-000000000046}' : IArc,
	'{000208A1-0001-0000-C000-000000000046}' : IArcs,
	'{00024410-0001-0000-C000-000000000046}' : IOLEObjectEvents,
	'{000208A2-0001-0000-C000-000000000046}' : _IOLEObject,
	'{000208A3-0001-0000-C000-000000000046}' : IOLEObjects,
	'{000208A4-0001-0000-C000-000000000046}' : ITextBox,
	'{000208A5-0001-0000-C000-000000000046}' : ITextBoxes,
	'{000208A6-0001-0000-C000-000000000046}' : IPicture,
	'{000208A7-0001-0000-C000-000000000046}' : IPictures,
	'{000208A8-0001-0000-C000-000000000046}' : IDrawing,
	'{000208A9-0001-0000-C000-000000000046}' : IDrawings,
	'{000208AA-0001-0000-C000-000000000046}' : IRoutingSlip,
	'{000208AB-0001-0000-C000-000000000046}' : IOutline,
	'{000208AD-0001-0000-C000-000000000046}' : IModule,
	'{000208AE-0001-0000-C000-000000000046}' : IModules,
	'{000208AF-0001-0000-C000-000000000046}' : IDialogSheet,
	'{000208B0-0001-0000-C000-000000000046}' : IDialogSheets,
	'{000208B1-0001-0000-C000-000000000046}' : IWorksheets,
	'{000208B4-0001-0000-C000-000000000046}' : IPageSetup,
	'{000208B8-0001-0000-C000-000000000046}' : INames,
	'{000208B9-0001-0000-C000-000000000046}' : IName,
	'{000208CF-0001-0000-C000-000000000046}' : IChartObject,
	'{000208D0-0001-0000-C000-000000000046}' : IChartObjects,
	'{000208D1-0001-0000-C000-000000000046}' : IMailer,
	'{00024422-0001-0000-C000-000000000046}' : ICustomViews,
	'{00024423-0001-0000-C000-000000000046}' : ICustomView,
	'{00024424-0001-0000-C000-000000000046}' : IFormatConditions,
	'{00024425-0001-0000-C000-000000000046}' : IFormatCondition,
	'{00024426-0001-0000-C000-000000000046}' : IComments,
	'{00024427-0001-0000-C000-000000000046}' : IComment,
	'{0002441B-0001-0000-C000-000000000046}' : IRefreshEvents,
	'{00024428-0001-0000-C000-000000000046}' : _IQueryTable,
	'{00024429-0001-0000-C000-000000000046}' : IQueryTables,
	'{0002442A-0001-0000-C000-000000000046}' : IParameter,
	'{0002442B-0001-0000-C000-000000000046}' : IParameters,
	'{0002442C-0001-0000-C000-000000000046}' : IODBCError,
	'{0002442D-0001-0000-C000-000000000046}' : IODBCErrors,
	'{0002442F-0001-0000-C000-000000000046}' : IValidation,
	'{00024430-0001-0000-C000-000000000046}' : IHyperlinks,
	'{00024431-0001-0000-C000-000000000046}' : IHyperlink,
	'{00024432-0001-0000-C000-000000000046}' : IAutoFilter,
	'{00024433-0001-0000-C000-000000000046}' : IFilters,
	'{00024434-0001-0000-C000-000000000046}' : IFilter,
	'{000208D4-0001-0000-C000-000000000046}' : IAutoCorrect,
	'{00020854-0001-0000-C000-000000000046}' : IBorder,
	'{00020870-0001-0000-C000-000000000046}' : IInterior,
	'{00024435-0001-0000-C000-000000000046}' : IChartFillFormat,
	'{00024436-0001-0000-C000-000000000046}' : IChartColorFormat,
	'{00020848-0001-0000-C000-000000000046}' : IAxis,
	'{00020849-0001-0000-C000-000000000046}' : IChartTitle,
	'{0002084A-0001-0000-C000-000000000046}' : IAxisTitle,
	'{00020859-0001-0000-C000-000000000046}' : IChartGroup,
	'{0002085A-0001-0000-C000-000000000046}' : IChartGroups,
	'{0002085B-0001-0000-C000-000000000046}' : IAxes,
	'{00020869-0001-0000-C000-000000000046}' : IPoints,
	'{0002086A-0001-0000-C000-000000000046}' : IPoint,
	'{0002086B-0001-0000-C000-000000000046}' : ISeries,
	'{0002086C-0001-0000-C000-000000000046}' : ISeriesCollection,
	'{000208B2-0001-0000-C000-000000000046}' : IDataLabel,
	'{000208B3-0001-0000-C000-000000000046}' : IDataLabels,
	'{000208BA-0001-0000-C000-000000000046}' : ILegendEntry,
	'{000208BB-0001-0000-C000-000000000046}' : ILegendEntries,
	'{000208BC-0001-0000-C000-000000000046}' : ILegendKey,
	'{000208BD-0001-0000-C000-000000000046}' : ITrendlines,
	'{000208BE-0001-0000-C000-000000000046}' : ITrendline,
	'{000208C0-0001-0000-C000-000000000046}' : ICorners,
	'{000208C1-0001-0000-C000-000000000046}' : ISeriesLines,
	'{000208C2-0001-0000-C000-000000000046}' : IHiLoLines,
	'{000208C3-0001-0000-C000-000000000046}' : IGridlines,
	'{000208C4-0001-0000-C000-000000000046}' : IDropLines,
	'{00024437-0001-0000-C000-000000000046}' : ILeaderLines,
	'{000208C5-0001-0000-C000-000000000046}' : IUpBars,
	'{000208C6-0001-0000-C000-000000000046}' : IDownBars,
	'{000208C7-0001-0000-C000-000000000046}' : IFloor,
	'{000208C8-0001-0000-C000-000000000046}' : IWalls,
	'{000208C9-0001-0000-C000-000000000046}' : ITickLabels,
	'{000208CB-0001-0000-C000-000000000046}' : IPlotArea,
	'{000208CC-0001-0000-C000-000000000046}' : IChartArea,
	'{000208CD-0001-0000-C000-000000000046}' : ILegend,
	'{000208CE-0001-0000-C000-000000000046}' : IErrorBars,
	'{00020843-0001-0000-C000-000000000046}' : IDataTable,
	'{00024438-0001-0000-C000-000000000046}' : IPhonetic,
	'{00024439-0001-0000-C000-000000000046}' : IShape,
	'{0002443A-0001-0000-C000-000000000046}' : IShapes,
	'{0002443B-0001-0000-C000-000000000046}' : IShapeRange,
	'{0002443C-0001-0000-C000-000000000046}' : IGroupShapes,
	'{0002443D-0001-0000-C000-000000000046}' : ITextFrame,
	'{0002443E-0001-0000-C000-000000000046}' : IConnectorFormat,
	'{0002443F-0001-0000-C000-000000000046}' : IFreeformBuilder,
	'{00024440-0001-0000-C000-000000000046}' : IControlFormat,
	'{00024441-0001-0000-C000-000000000046}' : IOLEFormat,
	'{00024442-0001-0000-C000-000000000046}' : ILinkFormat,
	'{00024443-0001-0000-C000-000000000046}' : IPublishObjects,
	'{00024444-0000-0000-C000-000000000046}' : PublishObject,
	'{00024445-0001-0000-C000-000000000046}' : IOLEDBError,
	'{00024446-0001-0000-C000-000000000046}' : IOLEDBErrors,
	'{00024447-0001-0000-C000-000000000046}' : IPhonetics,
	'{00024448-0000-0000-C000-000000000046}' : DefaultWebOptions,
	'{00024449-0000-0000-C000-000000000046}' : WebOptions,
	'{0002444A-0001-0000-C000-000000000046}' : IPivotLayout,
	'{0002444B-0000-0000-C000-000000000046}' : TreeviewControl,
	'{0002444C-0000-0000-C000-000000000046}' : CubeField,
	'{0002444D-0000-0000-C000-000000000046}' : CubeFields,
	'{0002084C-0001-0000-C000-000000000046}' : IDisplayUnitLabel,
	'{00024450-0001-0000-C000-000000000046}' : ICellFormat,
	'{00024451-0001-0000-C000-000000000046}' : IUsedObjects,
	'{00024452-0001-0000-C000-000000000046}' : ICustomProperties,
	'{00024453-0001-0000-C000-000000000046}' : ICustomProperty,
	'{00024454-0001-0000-C000-000000000046}' : ICalculatedMembers,
	'{00024455-0001-0000-C000-000000000046}' : ICalculatedMember,
	'{00024456-0001-0000-C000-000000000046}' : IWatches,
	'{00024457-0001-0000-C000-000000000046}' : IWatch,
	'{00024458-0001-0000-C000-000000000046}' : IPivotCell,
	'{00024459-0001-0000-C000-000000000046}' : IGraphic,
	'{0002445A-0001-0000-C000-000000000046}' : IAutoRecover,
	'{0002445B-0001-0000-C000-000000000046}' : IErrorCheckingOptions,
	'{0002445C-0001-0000-C000-000000000046}' : IErrors,
	'{0002445D-0001-0000-C000-000000000046}' : IError,
	'{0002445E-0001-0000-C000-000000000046}' : ISmartTagAction,
	'{0002445F-0001-0000-C000-000000000046}' : ISmartTagActions,
	'{00024460-0001-0000-C000-000000000046}' : ISmartTag,
	'{00024461-0001-0000-C000-000000000046}' : ISmartTags,
	'{00024462-0001-0000-C000-000000000046}' : ISmartTagRecognizer,
	'{00024463-0001-0000-C000-000000000046}' : ISmartTagRecognizers,
	'{00024464-0001-0000-C000-000000000046}' : ISmartTagOptions,
	'{00024465-0001-0000-C000-000000000046}' : ISpellingOptions,
	'{00024466-0001-0000-C000-000000000046}' : ISpeech,
	'{00024467-0001-0000-C000-000000000046}' : IProtection,
	'{00024468-0001-0000-C000-000000000046}' : IPivotItemList,
	'{00024469-0001-0000-C000-000000000046}' : ITab,
	'{0002446A-0001-0000-C000-000000000046}' : IAllowEditRanges,
	'{0002446B-0001-0000-C000-000000000046}' : IAllowEditRange,
	'{0002446C-0001-0000-C000-000000000046}' : IUserAccessList,
	'{0002446D-0001-0000-C000-000000000046}' : IUserAccess,
	'{0002446E-0001-0000-C000-000000000046}' : IRTD,
	'{0002446F-0001-0000-C000-000000000046}' : IDiagram,
	'{00024470-0001-0000-C000-000000000046}' : IListObjects,
	'{00024471-0001-0000-C000-000000000046}' : IListObject,
	'{00024472-0001-0000-C000-000000000046}' : IListColumns,
	'{00024473-0001-0000-C000-000000000046}' : IListColumn,
	'{00024474-0001-0000-C000-000000000046}' : IListRows,
	'{00024475-0001-0000-C000-000000000046}' : IListRow,
	'{00024476-0001-0000-C000-000000000046}' : IXmlNamespace,
	'{00024477-0001-0000-C000-000000000046}' : IXmlNamespaces,
	'{00024478-0001-0000-C000-000000000046}' : IXmlDataBinding,
	'{00024479-0001-0000-C000-000000000046}' : IXmlSchema,
	'{0002447A-0001-0000-C000-000000000046}' : IXmlSchemas,
	'{0002447B-0001-0000-C000-000000000046}' : IXmlMap,
	'{0002447C-0001-0000-C000-000000000046}' : IXmlMaps,
	'{0002447D-0001-0000-C000-000000000046}' : IListDataFormat,
	'{0002447E-0001-0000-C000-000000000046}' : IXPath,
	'{0002447F-0001-0000-C000-000000000046}' : IPivotLineCells,
	'{00024480-0001-0000-C000-000000000046}' : IPivotLine,
	'{00024481-0001-0000-C000-000000000046}' : IPivotLines,
	'{00024482-0001-0000-C000-000000000046}' : IPivotAxis,
	'{00024483-0001-0000-C000-000000000046}' : IPivotFilter,
	'{00024484-0001-0000-C000-000000000046}' : IPivotFilters,
	'{00024485-0001-0000-C000-000000000046}' : IWorkbookConnection,
	'{00024486-0001-0000-C000-000000000046}' : IConnections,
	'{00024487-0001-0000-C000-000000000046}' : IWorksheetView,
	'{00024488-0001-0000-C000-000000000046}' : IChartView,
	'{00024489-0001-0000-C000-000000000046}' : IModuleView,
	'{0002448A-0001-0000-C000-000000000046}' : IDialogSheetView,
	'{0002448C-0001-0000-C000-000000000046}' : ISheetViews,
	'{0002448D-0001-0000-C000-000000000046}' : IOLEDBConnection,
	'{0002448E-0001-0000-C000-000000000046}' : IODBCConnection,
	'{0002448F-0001-0000-C000-000000000046}' : IAction,
	'{00024490-0001-0000-C000-000000000046}' : IActions,
	'{00024491-0001-0000-C000-000000000046}' : IFormatColor,
	'{00024492-0001-0000-C000-000000000046}' : IConditionValue,
	'{00024493-0001-0000-C000-000000000046}' : IColorScale,
	'{00024494-0001-0000-C000-000000000046}' : IColorScaleCriteria,
	'{00024495-0001-0000-C000-000000000046}' : IColorScaleCriterion,
	'{00024496-0001-0000-C000-000000000046}' : IDatabar,
	'{00024497-0001-0000-C000-000000000046}' : IIconSetCondition,
	'{00024498-0001-0000-C000-000000000046}' : IIconCriteria,
	'{00024499-0001-0000-C000-000000000046}' : IIconCriterion,
	'{0002449A-0001-0000-C000-000000000046}' : IIcon,
	'{0002449B-0001-0000-C000-000000000046}' : IIconSet,
	'{0002449C-0001-0000-C000-000000000046}' : IIconSets,
	'{0002449D-0001-0000-C000-000000000046}' : ITop10,
	'{0002449E-0001-0000-C000-000000000046}' : IAboveAverage,
	'{0002449F-0001-0000-C000-000000000046}' : IUniqueValues,
	'{000244A0-0001-0000-C000-000000000046}' : IRanges,
	'{000244A1-0001-0000-C000-000000000046}' : IHeaderFooter,
	'{000244A2-0001-0000-C000-000000000046}' : IPage,
	'{000244A3-0001-0000-C000-000000000046}' : IPages,
	'{000244A4-0001-0000-C000-000000000046}' : IServerViewableItems,
	'{000244A5-0001-0000-C000-000000000046}' : ITableStyleElement,
	'{000244A6-0001-0000-C000-000000000046}' : ITableStyleElements,
	'{000244A7-0001-0000-C000-000000000046}' : ITableStyle,
	'{000244A8-0001-0000-C000-000000000046}' : ITableStyles,
	'{000244A9-0001-0000-C000-000000000046}' : ISortField,
	'{000244AA-0001-0000-C000-000000000046}' : ISortFields,
	'{000244AB-0001-0000-C000-000000000046}' : ISort,
	'{000244AC-0001-0000-C000-000000000046}' : IResearch,
	'{000244AD-0001-0000-C000-000000000046}' : IColorStop,
	'{000244AE-0001-0000-C000-000000000046}' : IColorStops,
	'{000244AF-0001-0000-C000-000000000046}' : ILinearGradient,
	'{000244B0-0001-0000-C000-000000000046}' : IRectangularGradient,
	'{000244B1-0001-0000-C000-000000000046}' : IMultiThreadedCalculation,
	'{000244B2-0001-0000-C000-000000000046}' : IChartFormat,
	'{000244B3-0001-0000-C000-000000000046}' : IFileExportConverter,
	'{000244B4-0001-0000-C000-000000000046}' : IFileExportConverters,
	'{000244B5-0001-0000-C000-000000000046}' : IAddIns2,
	'{000244B6-0001-0000-C000-000000000046}' : ISparklineGroups,
	'{000244B7-0001-0000-C000-000000000046}' : ISparklineGroup,
	'{000244B8-0001-0000-C000-000000000046}' : ISparkPoints,
	'{000244B9-0001-0000-C000-000000000046}' : ISparkline,
	'{000244BA-0001-0000-C000-000000000046}' : ISparkAxes,
	'{000244BB-0001-0000-C000-000000000046}' : ISparkHorizontalAxis,
	'{000244BC-0001-0000-C000-000000000046}' : ISparkVerticalAxis,
	'{000244BD-0001-0000-C000-000000000046}' : ISparkColor,
	'{000244BE-0001-0000-C000-000000000046}' : IDataBarBorder,
	'{000244BF-0001-0000-C000-000000000046}' : INegativeBarFormat,
	'{000244C0-0001-0000-C000-000000000046}' : IValueChange,
	'{000244C1-0001-0000-C000-000000000046}' : IPivotTableChangeList,
	'{000244C2-0001-0000-C000-000000000046}' : IDisplayFormat,
	'{000244C3-0001-0000-C000-000000000046}' : ISlicerCaches,
	'{000244C4-0001-0000-C000-000000000046}' : ISlicerCache,
	'{000244C5-0001-0000-C000-000000000046}' : ISlicerCacheLevels,
	'{000244C6-0001-0000-C000-000000000046}' : ISlicerCacheLevel,
	'{000244C7-0001-0000-C000-000000000046}' : ISlicers,
	'{000244C8-0001-0000-C000-000000000046}' : ISlicer,
	'{000244C9-0001-0000-C000-000000000046}' : ISlicerItem,
	'{000244CA-0001-0000-C000-000000000046}' : ISlicerItems,
	'{000244CB-0001-0000-C000-000000000046}' : ISlicerPivotTables,
	'{000244CC-0001-0000-C000-000000000046}' : IProtectedViewWindows,
	'{000244CD-0001-0000-C000-000000000046}' : IProtectedViewWindow,
	'{000244CE-0001-0000-C000-000000000046}' : ITableObject,
	'{000244CF-0001-0000-C000-000000000046}' : IPivotValueCell,
	'{000244D0-0001-0000-C000-000000000046}' : IQuickAnalysis,
	'{000244D1-0001-0000-C000-000000000046}' : IModelConnection,
	'{000244D2-0001-0000-C000-000000000046}' : IWorksheetDataConnection,
	'{000244D3-0001-0000-C000-000000000046}' : ITextConnection,
	'{000244D4-0001-0000-C000-000000000046}' : IDataFeedConnection,
	'{000244D5-0001-0000-C000-000000000046}' : IModelTableColumn,
	'{000244D6-0001-0000-C000-000000000046}' : IModelTableColumns,
	'{000244D7-0001-0000-C000-000000000046}' : IModelTable,
	'{000244D8-0001-0000-C000-000000000046}' : IModelTables,
	'{000244D9-0001-0000-C000-000000000046}' : IModelRelationship,
	'{000244DA-0001-0000-C000-000000000046}' : IModelRelationships,
	'{000244DB-0001-0000-C000-000000000046}' : IModel,
	'{000244DC-0001-0000-C000-000000000046}' : IFullSeriesCollection,
	'{000244DD-0001-0000-C000-000000000046}' : IChartCategory,
	'{000244DE-0001-0000-C000-000000000046}' : ICategoryCollection,
	'{000244DF-0001-0000-C000-000000000046}' : ITimelineState,
	'{000244E0-0001-0000-C000-000000000046}' : ITimelineViewState,
	'{000244E1-0001-0000-C000-000000000046}' : IModelTableNames,
	'{000244E2-0001-0000-C000-000000000046}' : IModelTableNameChange,
	'{000244E3-0001-0000-C000-000000000046}' : IModelTableNameChanges,
	'{000244E4-0001-0000-C000-000000000046}' : IModelChanges,
	'{000244E5-0001-0000-C000-000000000046}' : IModelColumnName,
	'{000244E6-0001-0000-C000-000000000046}' : IModelColumnNames,
	'{000244E7-0001-0000-C000-000000000046}' : IModelColumnChange,
	'{000244E8-0001-0000-C000-000000000046}' : IModelColumnChanges,
	'{000244E9-0001-0000-C000-000000000046}' : IModelMeasureName,
	'{000244EA-0001-0000-C000-000000000046}' : IModelMeasureNames,
	'{000244EB-0001-0000-C000-000000000046}' : IWorkbookQuery,
	'{000244EC-0001-0000-C000-000000000046}' : IQueries,
	'{000244ED-0001-0000-C000-000000000046}' : IModelMeasure,
	'{000244EE-0001-0000-C000-000000000046}' : IModelMeasures,
	'{000244EF-0001-0000-C000-000000000046}' : IModelFormatGeneral,
	'{000244F0-0001-0000-C000-000000000046}' : IModelFormatDate,
	'{000244F1-0001-0000-C000-000000000046}' : IModelFormatDecimalNumber,
	'{000244F2-0001-0000-C000-000000000046}' : IModelFormatWholeNumber,
	'{000244F3-0001-0000-C000-000000000046}' : IModelFormatPercentageNumber,
	'{000244F4-0001-0000-C000-000000000046}' : IModelFormatScientificNumber,
	'{000244F5-0001-0000-C000-000000000046}' : IModelFormatCurrency,
	'{000244F6-0001-0000-C000-000000000046}' : IModelFormatBoolean,
	'{000244F7-0001-0000-C000-000000000046}' : IPublishedDocs,
	'{000244F8-0001-0000-C000-000000000046}' : IPublishedDoc,
	'{000244F9-0001-0000-C000-000000000046}' : ISeriesGradientStopColorFormat,
	'{000244FA-0001-0000-C000-000000000046}' : IChartSeriesGradientStopData,
	'{000244FB-0001-0000-C000-000000000046}' : IDefaultPivotTableLayoutOptions,
	'{000244FC-0001-0000-C000-000000000046}' : ICommentsThreaded,
	'{000244FD-0001-0000-C000-000000000046}' : ICommentThreaded,
	'{000244FE-0001-0000-C000-000000000046}' : IAuthor,
	'{00024501-0001-0000-C000-000000000046}' : INamedSheetViewCollection,
	'{00024502-0001-0000-C000-000000000046}' : INamedSheetView,
	'{00024503-0001-0000-C000-000000000046}' : ICellControl,
	'{0002084D-0000-0000-C000-000000000046}' : Font,
	'{00020893-0000-0000-C000-000000000046}' : Window,
	'{00020892-0000-0000-C000-000000000046}' : Windows,
	'{00024413-0000-0000-C000-000000000046}' : AppEvents,
	'{00020845-0000-0000-C000-000000000046}' : WorksheetFunction,
	'{00020846-0000-0000-C000-000000000046}' : Range,
	'{0002440F-0000-0000-C000-000000000046}' : ChartEvents,
	'{00024402-0000-0000-C000-000000000046}' : VPageBreak,
	'{00024401-0000-0000-C000-000000000046}' : HPageBreak,
	'{00024404-0000-0000-C000-000000000046}' : HPageBreaks,
	'{00024405-0000-0000-C000-000000000046}' : VPageBreaks,
	'{00024407-0000-0000-C000-000000000046}' : RecentFile,
	'{00024406-0000-0000-C000-000000000046}' : RecentFiles,
	'{00024411-0000-0000-C000-000000000046}' : DocEvents,
	'{00020852-0000-0000-C000-000000000046}' : Style,
	'{00020853-0000-0000-C000-000000000046}' : Styles,
	'{00020855-0000-0000-C000-000000000046}' : Borders,
	'{00020857-0000-0000-C000-000000000046}' : AddIn,
	'{00020858-0000-0000-C000-000000000046}' : AddIns,
	'{0002085C-0000-0000-C000-000000000046}' : Toolbar,
	'{0002085D-0000-0000-C000-000000000046}' : Toolbars,
	'{0002085E-0000-0000-C000-000000000046}' : ToolbarButton,
	'{0002085F-0000-0000-C000-000000000046}' : ToolbarButtons,
	'{00020860-0000-0000-C000-000000000046}' : Areas,
	'{00024412-0000-0000-C000-000000000046}' : WorkbookEvents,
	'{00020863-0000-0000-C000-000000000046}' : MenuBars,
	'{00020864-0000-0000-C000-000000000046}' : MenuBar,
	'{00020865-0000-0000-C000-000000000046}' : Menus,
	'{00020866-0000-0000-C000-000000000046}' : Menu,
	'{00020867-0000-0000-C000-000000000046}' : MenuItems,
	'{00020868-0000-0000-C000-000000000046}' : MenuItem,
	'{0002086D-0000-0000-C000-000000000046}' : Charts,
	'{0002086F-0000-0000-C000-000000000046}' : DrawingObjects,
	'{0002441C-0000-0000-C000-000000000046}' : PivotCache,
	'{0002441D-0000-0000-C000-000000000046}' : PivotCaches,
	'{0002441E-0000-0000-C000-000000000046}' : PivotFormula,
	'{0002441F-0000-0000-C000-000000000046}' : PivotFormulas,
	'{00020872-0000-0000-C000-000000000046}' : PivotTable,
	'{00020873-0000-0000-C000-000000000046}' : PivotTables,
	'{00020874-0000-0000-C000-000000000046}' : PivotField,
	'{00020875-0000-0000-C000-000000000046}' : PivotFields,
	'{00024420-0000-0000-C000-000000000046}' : CalculatedFields,
	'{00020876-0000-0000-C000-000000000046}' : PivotItem,
	'{00020877-0000-0000-C000-000000000046}' : PivotItems,
	'{00024421-0000-0000-C000-000000000046}' : CalculatedItems,
	'{00020878-0000-0000-C000-000000000046}' : Characters,
	'{00020879-0000-0000-C000-000000000046}' : Dialogs,
	'{0002087A-0000-0000-C000-000000000046}' : Dialog,
	'{0002087B-0000-0000-C000-000000000046}' : SoundNote,
	'{0002087D-0000-0000-C000-000000000046}' : Button,
	'{0002087E-0000-0000-C000-000000000046}' : Buttons,
	'{0002087F-0000-0000-C000-000000000046}' : CheckBox,
	'{00020880-0000-0000-C000-000000000046}' : CheckBoxes,
	'{00020881-0000-0000-C000-000000000046}' : OptionButton,
	'{00020882-0000-0000-C000-000000000046}' : OptionButtons,
	'{00020883-0000-0000-C000-000000000046}' : EditBox,
	'{00020884-0000-0000-C000-000000000046}' : EditBoxes,
	'{00020885-0000-0000-C000-000000000046}' : ScrollBar,
	'{00020886-0000-0000-C000-000000000046}' : ScrollBars,
	'{00020887-0000-0000-C000-000000000046}' : ListBox,
	'{00020888-0000-0000-C000-000000000046}' : ListBoxes,
	'{00020889-0000-0000-C000-000000000046}' : GroupBox,
	'{0002088A-0000-0000-C000-000000000046}' : GroupBoxes,
	'{0002088B-0000-0000-C000-000000000046}' : DropDown,
	'{0002088C-0000-0000-C000-000000000046}' : DropDowns,
	'{0002088D-0000-0000-C000-000000000046}' : Spinner,
	'{0002088E-0000-0000-C000-000000000046}' : Spinners,
	'{0002088F-0000-0000-C000-000000000046}' : DialogFrame,
	'{00020890-0000-0000-C000-000000000046}' : Label,
	'{00020891-0000-0000-C000-000000000046}' : Labels,
	'{00020894-0000-0000-C000-000000000046}' : Panes,
	'{00020895-0000-0000-C000-000000000046}' : Pane,
	'{00020896-0000-0000-C000-000000000046}' : Scenarios,
	'{00020897-0000-0000-C000-000000000046}' : Scenario,
	'{00020898-0000-0000-C000-000000000046}' : GroupObject,
	'{00020899-0000-0000-C000-000000000046}' : GroupObjects,
	'{0002089A-0000-0000-C000-000000000046}' : Line,
	'{0002089B-0000-0000-C000-000000000046}' : Lines,
	'{0002089C-0000-0000-C000-000000000046}' : Rectangle,
	'{0002089D-0000-0000-C000-000000000046}' : Rectangles,
	'{0002089E-0000-0000-C000-000000000046}' : Oval,
	'{0002089F-0000-0000-C000-000000000046}' : Ovals,
	'{000208A0-0000-0000-C000-000000000046}' : Arc,
	'{000208A1-0000-0000-C000-000000000046}' : Arcs,
	'{00024410-0000-0000-C000-000000000046}' : OLEObjectEvents,
	'{000208A2-0000-0000-C000-000000000046}' : _OLEObject,
	'{000208A3-0000-0000-C000-000000000046}' : OLEObjects,
	'{000208A4-0000-0000-C000-000000000046}' : TextBox,
	'{000208A5-0000-0000-C000-000000000046}' : TextBoxes,
	'{000208A6-0000-0000-C000-000000000046}' : Picture,
	'{000208A7-0000-0000-C000-000000000046}' : Pictures,
	'{000208A8-0000-0000-C000-000000000046}' : Drawing,
	'{000208A9-0000-0000-C000-000000000046}' : Drawings,
	'{000208AA-0000-0000-C000-000000000046}' : RoutingSlip,
	'{000208AB-0000-0000-C000-000000000046}' : Outline,
	'{000208AD-0000-0000-C000-000000000046}' : Module,
	'{000208AE-0000-0000-C000-000000000046}' : Modules,
	'{000208AF-0000-0000-C000-000000000046}' : DialogSheet,
	'{000208B0-0000-0000-C000-000000000046}' : DialogSheets,
	'{000208B1-0000-0000-C000-000000000046}' : Worksheets,
	'{000208B4-0000-0000-C000-000000000046}' : PageSetup,
	'{000208B8-0000-0000-C000-000000000046}' : Names,
	'{000208B9-0000-0000-C000-000000000046}' : Name,
	'{000208CF-0000-0000-C000-000000000046}' : ChartObject,
	'{000208D0-0000-0000-C000-000000000046}' : ChartObjects,
	'{000208D1-0000-0000-C000-000000000046}' : Mailer,
	'{00024422-0000-0000-C000-000000000046}' : CustomViews,
	'{00024423-0000-0000-C000-000000000046}' : CustomView,
	'{00024424-0000-0000-C000-000000000046}' : FormatConditions,
	'{00024425-0000-0000-C000-000000000046}' : FormatCondition,
	'{00024426-0000-0000-C000-000000000046}' : Comments,
	'{00024427-0000-0000-C000-000000000046}' : Comment,
	'{0002441B-0000-0000-C000-000000000046}' : RefreshEvents,
	'{00024428-0000-0000-C000-000000000046}' : _QueryTable,
	'{00024429-0000-0000-C000-000000000046}' : QueryTables,
	'{0002442A-0000-0000-C000-000000000046}' : Parameter,
	'{0002442B-0000-0000-C000-000000000046}' : Parameters,
	'{0002442C-0000-0000-C000-000000000046}' : ODBCError,
	'{0002442D-0000-0000-C000-000000000046}' : ODBCErrors,
	'{0002442F-0000-0000-C000-000000000046}' : Validation,
	'{00024430-0000-0000-C000-000000000046}' : Hyperlinks,
	'{00024431-0000-0000-C000-000000000046}' : Hyperlink,
	'{00024432-0000-0000-C000-000000000046}' : AutoFilter,
	'{00024433-0000-0000-C000-000000000046}' : Filters,
	'{00024434-0000-0000-C000-000000000046}' : Filter,
	'{000208D4-0000-0000-C000-000000000046}' : AutoCorrect,
	'{00020854-0000-0000-C000-000000000046}' : Border,
	'{00020870-0000-0000-C000-000000000046}' : Interior,
	'{00024435-0000-0000-C000-000000000046}' : ChartFillFormat,
	'{00024436-0000-0000-C000-000000000046}' : ChartColorFormat,
	'{00020848-0000-0000-C000-000000000046}' : Axis,
	'{00020849-0000-0000-C000-000000000046}' : ChartTitle,
	'{0002084A-0000-0000-C000-000000000046}' : AxisTitle,
	'{00020859-0000-0000-C000-000000000046}' : ChartGroup,
	'{0002085A-0000-0000-C000-000000000046}' : ChartGroups,
	'{0002085B-0000-0000-C000-000000000046}' : Axes,
	'{00020869-0000-0000-C000-000000000046}' : Points,
	'{0002086A-0000-0000-C000-000000000046}' : Point,
	'{0002086B-0000-0000-C000-000000000046}' : Series,
	'{0002086C-0000-0000-C000-000000000046}' : SeriesCollection,
	'{000208B2-0000-0000-C000-000000000046}' : DataLabel,
	'{000208B3-0000-0000-C000-000000000046}' : DataLabels,
	'{000208BA-0000-0000-C000-000000000046}' : LegendEntry,
	'{000208BB-0000-0000-C000-000000000046}' : LegendEntries,
	'{000208BC-0000-0000-C000-000000000046}' : LegendKey,
	'{000208BD-0000-0000-C000-000000000046}' : Trendlines,
	'{000208BE-0000-0000-C000-000000000046}' : Trendline,
	'{000208C0-0000-0000-C000-000000000046}' : Corners,
	'{000208C1-0000-0000-C000-000000000046}' : SeriesLines,
	'{000208C2-0000-0000-C000-000000000046}' : HiLoLines,
	'{000208C3-0000-0000-C000-000000000046}' : Gridlines,
	'{000208C4-0000-0000-C000-000000000046}' : DropLines,
	'{00024437-0000-0000-C000-000000000046}' : LeaderLines,
	'{000208C5-0000-0000-C000-000000000046}' : UpBars,
	'{000208C6-0000-0000-C000-000000000046}' : DownBars,
	'{000208C7-0000-0000-C000-000000000046}' : Floor,
	'{000208C8-0000-0000-C000-000000000046}' : Walls,
	'{000208C9-0000-0000-C000-000000000046}' : TickLabels,
	'{000208CB-0000-0000-C000-000000000046}' : PlotArea,
	'{000208CC-0000-0000-C000-000000000046}' : ChartArea,
	'{000208CD-0000-0000-C000-000000000046}' : Legend,
	'{000208CE-0000-0000-C000-000000000046}' : ErrorBars,
	'{00020843-0000-0000-C000-000000000046}' : DataTable,
	'{00024438-0000-0000-C000-000000000046}' : Phonetic,
	'{00024439-0000-0000-C000-000000000046}' : Shape,
	'{0002443A-0000-0000-C000-000000000046}' : Shapes,
	'{0002443B-0000-0000-C000-000000000046}' : ShapeRange,
	'{0002443C-0000-0000-C000-000000000046}' : GroupShapes,
	'{0002443D-0000-0000-C000-000000000046}' : TextFrame,
	'{0002443E-0000-0000-C000-000000000046}' : ConnectorFormat,
	'{0002443F-0000-0000-C000-000000000046}' : FreeformBuilder,
	'{00024440-0000-0000-C000-000000000046}' : ControlFormat,
	'{00024441-0000-0000-C000-000000000046}' : OLEFormat,
	'{00024442-0000-0000-C000-000000000046}' : LinkFormat,
	'{00024443-0000-0000-C000-000000000046}' : PublishObjects,
	'{00024445-0000-0000-C000-000000000046}' : OLEDBError,
	'{00024446-0000-0000-C000-000000000046}' : OLEDBErrors,
	'{00024447-0000-0000-C000-000000000046}' : Phonetics,
	'{0002444A-0000-0000-C000-000000000046}' : PivotLayout,
	'{0002084C-0000-0000-C000-000000000046}' : DisplayUnitLabel,
	'{00024450-0000-0000-C000-000000000046}' : CellFormat,
	'{00024451-0000-0000-C000-000000000046}' : UsedObjects,
	'{00024452-0000-0000-C000-000000000046}' : CustomProperties,
	'{00024453-0000-0000-C000-000000000046}' : CustomProperty,
	'{00024454-0000-0000-C000-000000000046}' : CalculatedMembers,
	'{00024455-0000-0000-C000-000000000046}' : CalculatedMember,
	'{00024456-0000-0000-C000-000000000046}' : Watches,
	'{00024457-0000-0000-C000-000000000046}' : Watch,
	'{00024458-0000-0000-C000-000000000046}' : PivotCell,
	'{00024459-0000-0000-C000-000000000046}' : Graphic,
	'{0002445A-0000-0000-C000-000000000046}' : AutoRecover,
	'{0002445B-0000-0000-C000-000000000046}' : ErrorCheckingOptions,
	'{0002445C-0000-0000-C000-000000000046}' : Errors,
	'{0002445D-0000-0000-C000-000000000046}' : Error,
	'{0002445E-0000-0000-C000-000000000046}' : SmartTagAction,
	'{0002445F-0000-0000-C000-000000000046}' : SmartTagActions,
	'{00024460-0000-0000-C000-000000000046}' : SmartTag,
	'{00024461-0000-0000-C000-000000000046}' : SmartTags,
	'{00024462-0000-0000-C000-000000000046}' : SmartTagRecognizer,
	'{00024463-0000-0000-C000-000000000046}' : SmartTagRecognizers,
	'{00024464-0000-0000-C000-000000000046}' : SmartTagOptions,
	'{00024465-0000-0000-C000-000000000046}' : SpellingOptions,
	'{00024466-0000-0000-C000-000000000046}' : Speech,
	'{00024467-0000-0000-C000-000000000046}' : Protection,
	'{00024468-0000-0000-C000-000000000046}' : PivotItemList,
	'{00024469-0000-0000-C000-000000000046}' : Tab,
	'{0002446A-0000-0000-C000-000000000046}' : AllowEditRanges,
	'{0002446B-0000-0000-C000-000000000046}' : AllowEditRange,
	'{0002446C-0000-0000-C000-000000000046}' : UserAccessList,
	'{0002446D-0000-0000-C000-000000000046}' : UserAccess,
	'{0002446E-0000-0000-C000-000000000046}' : RTD,
	'{0002446F-0000-0000-C000-000000000046}' : Diagram,
	'{00024470-0000-0000-C000-000000000046}' : ListObjects,
	'{00024471-0000-0000-C000-000000000046}' : ListObject,
	'{00024472-0000-0000-C000-000000000046}' : ListColumns,
	'{00024473-0000-0000-C000-000000000046}' : ListColumn,
	'{00024474-0000-0000-C000-000000000046}' : ListRows,
	'{00024475-0000-0000-C000-000000000046}' : ListRow,
	'{00024476-0000-0000-C000-000000000046}' : XmlNamespace,
	'{00024477-0000-0000-C000-000000000046}' : XmlNamespaces,
	'{00024478-0000-0000-C000-000000000046}' : XmlDataBinding,
	'{00024479-0000-0000-C000-000000000046}' : XmlSchema,
	'{0002447A-0000-0000-C000-000000000046}' : XmlSchemas,
	'{0002447B-0000-0000-C000-000000000046}' : XmlMap,
	'{0002447C-0000-0000-C000-000000000046}' : XmlMaps,
	'{0002447D-0000-0000-C000-000000000046}' : ListDataFormat,
	'{0002447E-0000-0000-C000-000000000046}' : XPath,
	'{0002447F-0000-0000-C000-000000000046}' : PivotLineCells,
	'{00024480-0000-0000-C000-000000000046}' : PivotLine,
	'{00024481-0000-0000-C000-000000000046}' : PivotLines,
	'{00024482-0000-0000-C000-000000000046}' : PivotAxis,
	'{00024483-0000-0000-C000-000000000046}' : PivotFilter,
	'{00024484-0000-0000-C000-000000000046}' : PivotFilters,
	'{00024485-0000-0000-C000-000000000046}' : WorkbookConnection,
	'{00024486-0000-0000-C000-000000000046}' : Connections,
	'{00024487-0000-0000-C000-000000000046}' : WorksheetView,
	'{00024488-0000-0000-C000-000000000046}' : ChartView,
	'{00024489-0000-0000-C000-000000000046}' : ModuleView,
	'{0002448A-0000-0000-C000-000000000046}' : DialogSheetView,
	'{0002448C-0000-0000-C000-000000000046}' : SheetViews,
	'{0002448D-0000-0000-C000-000000000046}' : OLEDBConnection,
	'{0002448E-0000-0000-C000-000000000046}' : ODBCConnection,
	'{0002448F-0000-0000-C000-000000000046}' : Action,
	'{00024490-0000-0000-C000-000000000046}' : Actions,
	'{00024491-0000-0000-C000-000000000046}' : FormatColor,
	'{00024492-0000-0000-C000-000000000046}' : ConditionValue,
	'{00024493-0000-0000-C000-000000000046}' : ColorScale,
	'{00024494-0000-0000-C000-000000000046}' : ColorScaleCriteria,
	'{00024495-0000-0000-C000-000000000046}' : ColorScaleCriterion,
	'{00024496-0000-0000-C000-000000000046}' : Databar,
	'{00024497-0000-0000-C000-000000000046}' : IconSetCondition,
	'{00024498-0000-0000-C000-000000000046}' : IconCriteria,
	'{00024499-0000-0000-C000-000000000046}' : IconCriterion,
	'{0002449A-0000-0000-C000-000000000046}' : Icon,
	'{0002449B-0000-0000-C000-000000000046}' : IconSet,
	'{0002449C-0000-0000-C000-000000000046}' : IconSets,
	'{0002449D-0000-0000-C000-000000000046}' : Top10,
	'{0002449E-0000-0000-C000-000000000046}' : AboveAverage,
	'{0002449F-0000-0000-C000-000000000046}' : UniqueValues,
	'{000244A0-0000-0000-C000-000000000046}' : Ranges,
	'{000244A1-0000-0000-C000-000000000046}' : HeaderFooter,
	'{000244A2-0000-0000-C000-000000000046}' : Page,
	'{000244A3-0000-0000-C000-000000000046}' : Pages,
	'{000244A4-0000-0000-C000-000000000046}' : ServerViewableItems,
	'{000244A5-0000-0000-C000-000000000046}' : TableStyleElement,
	'{000244A6-0000-0000-C000-000000000046}' : TableStyleElements,
	'{000244A7-0000-0000-C000-000000000046}' : TableStyle,
	'{000244A8-0000-0000-C000-000000000046}' : TableStyles,
	'{000244A9-0000-0000-C000-000000000046}' : SortField,
	'{000244AA-0000-0000-C000-000000000046}' : SortFields,
	'{000244AB-0000-0000-C000-000000000046}' : Sort,
	'{000244AC-0000-0000-C000-000000000046}' : Research,
	'{000244AD-0000-0000-C000-000000000046}' : ColorStop,
	'{000244AE-0000-0000-C000-000000000046}' : ColorStops,
	'{000244AF-0000-0000-C000-000000000046}' : LinearGradient,
	'{000244B0-0000-0000-C000-000000000046}' : RectangularGradient,
	'{000244B1-0000-0000-C000-000000000046}' : MultiThreadedCalculation,
	'{000244B2-0000-0000-C000-000000000046}' : ChartFormat,
	'{000244B3-0000-0000-C000-000000000046}' : FileExportConverter,
	'{000244B4-0000-0000-C000-000000000046}' : FileExportConverters,
	'{000244B5-0000-0000-C000-000000000046}' : AddIns2,
	'{000244B6-0000-0000-C000-000000000046}' : SparklineGroups,
	'{000244B7-0000-0000-C000-000000000046}' : SparklineGroup,
	'{000244B8-0000-0000-C000-000000000046}' : SparkPoints,
	'{000244B9-0000-0000-C000-000000000046}' : Sparkline,
	'{000244BA-0000-0000-C000-000000000046}' : SparkAxes,
	'{000244BB-0000-0000-C000-000000000046}' : SparkHorizontalAxis,
	'{000244BC-0000-0000-C000-000000000046}' : SparkVerticalAxis,
	'{000244BD-0000-0000-C000-000000000046}' : SparkColor,
	'{000244BE-0000-0000-C000-000000000046}' : DataBarBorder,
	'{000244BF-0000-0000-C000-000000000046}' : NegativeBarFormat,
	'{000244C0-0000-0000-C000-000000000046}' : ValueChange,
	'{000244C1-0000-0000-C000-000000000046}' : PivotTableChangeList,
	'{000244C2-0000-0000-C000-000000000046}' : DisplayFormat,
	'{000244C3-0000-0000-C000-000000000046}' : SlicerCaches,
	'{000244C4-0000-0000-C000-000000000046}' : SlicerCache,
	'{000244C5-0000-0000-C000-000000000046}' : SlicerCacheLevels,
	'{000244C6-0000-0000-C000-000000000046}' : SlicerCacheLevel,
	'{000244C7-0000-0000-C000-000000000046}' : Slicers,
	'{000244C8-0000-0000-C000-000000000046}' : Slicer,
	'{000244C9-0000-0000-C000-000000000046}' : SlicerItem,
	'{000244CA-0000-0000-C000-000000000046}' : SlicerItems,
	'{000244CB-0000-0000-C000-000000000046}' : SlicerPivotTables,
	'{000244CC-0000-0000-C000-000000000046}' : ProtectedViewWindows,
	'{000244CD-0000-0000-C000-000000000046}' : ProtectedViewWindow,
	'{000244CE-0000-0000-C000-000000000046}' : TableObject,
	'{000244CF-0000-0000-C000-000000000046}' : PivotValueCell,
	'{000244D0-0000-0000-C000-000000000046}' : QuickAnalysis,
	'{000244D1-0000-0000-C000-000000000046}' : ModelConnection,
	'{000244D2-0000-0000-C000-000000000046}' : WorksheetDataConnection,
	'{000244D3-0000-0000-C000-000000000046}' : TextConnection,
	'{000244D4-0000-0000-C000-000000000046}' : DataFeedConnection,
	'{000244D5-0000-0000-C000-000000000046}' : ModelTableColumn,
	'{000244D6-0000-0000-C000-000000000046}' : ModelTableColumns,
	'{000244D7-0000-0000-C000-000000000046}' : ModelTable,
	'{000244D8-0000-0000-C000-000000000046}' : ModelTables,
	'{000244D9-0000-0000-C000-000000000046}' : ModelRelationship,
	'{000244DA-0000-0000-C000-000000000046}' : ModelRelationships,
	'{000244DB-0000-0000-C000-000000000046}' : Model,
	'{000244DC-0000-0000-C000-000000000046}' : FullSeriesCollection,
	'{000244DD-0000-0000-C000-000000000046}' : ChartCategory,
	'{000244DE-0000-0000-C000-000000000046}' : CategoryCollection,
	'{000244DF-0000-0000-C000-000000000046}' : TimelineState,
	'{000244E0-0000-0000-C000-000000000046}' : TimelineViewState,
	'{000244E1-0000-0000-C000-000000000046}' : ModelTableNames,
	'{000244E2-0000-0000-C000-000000000046}' : ModelTableNameChange,
	'{000244E3-0000-0000-C000-000000000046}' : ModelTableNameChanges,
	'{000244E4-0000-0000-C000-000000000046}' : ModelChanges,
	'{000244E5-0000-0000-C000-000000000046}' : ModelColumnName,
	'{000244E6-0000-0000-C000-000000000046}' : ModelColumnNames,
	'{000244E7-0000-0000-C000-000000000046}' : ModelColumnChange,
	'{000244E8-0000-0000-C000-000000000046}' : ModelColumnChanges,
	'{000244E9-0000-0000-C000-000000000046}' : ModelMeasureName,
	'{000244EA-0000-0000-C000-000000000046}' : ModelMeasureNames,
	'{000244EB-0000-0000-C000-000000000046}' : WorkbookQuery,
	'{000244EC-0000-0000-C000-000000000046}' : Queries,
	'{000244ED-0000-0000-C000-000000000046}' : ModelMeasure,
	'{000244EE-0000-0000-C000-000000000046}' : ModelMeasures,
	'{000244EF-0000-0000-C000-000000000046}' : ModelFormatGeneral,
	'{000244F0-0000-0000-C000-000000000046}' : ModelFormatDate,
	'{000244F1-0000-0000-C000-000000000046}' : ModelFormatDecimalNumber,
	'{000244F2-0000-0000-C000-000000000046}' : ModelFormatWholeNumber,
	'{000244F3-0000-0000-C000-000000000046}' : ModelFormatPercentageNumber,
	'{000244F4-0000-0000-C000-000000000046}' : ModelFormatScientificNumber,
	'{000244F5-0000-0000-C000-000000000046}' : ModelFormatCurrency,
	'{000244F6-0000-0000-C000-000000000046}' : ModelFormatBoolean,
	'{000244F7-0000-0000-C000-000000000046}' : PublishedDocs,
	'{000244F8-0000-0000-C000-000000000046}' : PublishedDoc,
	'{000244F9-0000-0000-C000-000000000046}' : SeriesGradientStopColorFormat,
	'{000244FA-0000-0000-C000-000000000046}' : ChartSeriesGradientStopData,
	'{000244FB-0000-0000-C000-000000000046}' : DefaultPivotTableLayoutOptions,
	'{000244FC-0000-0000-C000-000000000046}' : CommentsThreaded,
	'{000244FD-0000-0000-C000-000000000046}' : CommentThreaded,
	'{000244FE-0000-0000-C000-000000000046}' : Author,
	'{00024501-0000-0000-C000-000000000046}' : NamedSheetViewCollection,
	'{00024502-0000-0000-C000-000000000046}' : NamedSheetView,
	'{00024503-0000-0000-C000-000000000046}' : CellControl,
	'{0002442E-0001-0000-C000-000000000046}' : IDummy,
	'{0002444F-0001-0000-C000-000000000046}' : ICanvasShapes,
	'{59191DA1-EA47-11CE-A51F-00AA0061507F}' : QueryTable,
	'{00024500-0000-0000-C000-000000000046}' : Application,
	'{00020821-0000-0000-C000-000000000046}' : Chart,
	'{00020820-0000-0000-C000-000000000046}' : Worksheet,
	'{00020812-0000-0000-C000-000000000046}' : Global,
	'{00020819-0000-0000-C000-000000000046}' : Workbook,
	'{00020818-0000-0000-C000-000000000046}' : OLEObject,
}
CLSIDToPackageMap = {}
win32com.client.CLSIDToClass.RegisterCLSIDsFromDict( CLSIDToClassMap )
VTablesToPackageMap = {}
VTablesToClassMap = {
	'{000C0310-0000-0000-C000-000000000046}' : 'Adjustments',
	'{000C0311-0000-0000-C000-000000000046}' : 'CalloutFormat',
	'{000C0312-0000-0000-C000-000000000046}' : 'ColorFormat',
	'{000C0317-0000-0000-C000-000000000046}' : 'LineFormat',
	'{000C0318-0000-0000-C000-000000000046}' : 'ShapeNode',
	'{000C0319-0000-0000-C000-000000000046}' : 'ShapeNodes',
	'{000C031A-0000-0000-C000-000000000046}' : 'PictureFormat',
	'{000C031B-0000-0000-C000-000000000046}' : 'ShadowFormat',
	'{000C031F-0000-0000-C000-000000000046}' : 'TextEffectFormat',
	'{000C0321-0000-0000-C000-000000000046}' : 'ThreeDFormat',
	'{000C0314-0000-0000-C000-000000000046}' : 'FillFormat',
	'{000C036E-0000-0000-C000-000000000046}' : 'DiagramNodes',
	'{000C036F-0000-0000-C000-000000000046}' : 'DiagramNodeChildren',
	'{000C0370-0000-0000-C000-000000000046}' : 'DiagramNode',
	'{A43788C1-D91B-11D3-8F39-00C04F3651B8}' : 'IRTDUpdateEvent',
	'{EC0E6191-DB51-11D3-8F3E-00C04F3651B8}' : 'IRtdServer',
	'{000C0398-0000-0000-C000-000000000046}' : 'TextFrame2',
	'{000C03D8-0000-0000-C000-000000000046}' : 'Model3DFormat',
	'{000208D5-0000-0000-C000-000000000046}' : '_Application',
	'{000208D6-0000-0000-C000-000000000046}' : '_Chart',
	'{000208D7-0000-0000-C000-000000000046}' : 'Sheets',
	'{000208D8-0000-0000-C000-000000000046}' : '_Worksheet',
	'{000208D9-0000-0000-C000-000000000046}' : '_Global',
	'{000208DA-0000-0000-C000-000000000046}' : '_Workbook',
	'{000208DB-0000-0000-C000-000000000046}' : 'Workbooks',
	'{00024444-0000-0000-C000-000000000046}' : 'PublishObject',
	'{00024448-0000-0000-C000-000000000046}' : 'DefaultWebOptions',
	'{00024449-0000-0000-C000-000000000046}' : 'WebOptions',
	'{0002444B-0000-0000-C000-000000000046}' : 'TreeviewControl',
	'{0002444C-0000-0000-C000-000000000046}' : 'CubeField',
	'{0002444D-0000-0000-C000-000000000046}' : 'CubeFields',
}


NamesToIIDMap = {
	'Adjustments' : '{000C0310-0000-0000-C000-000000000046}',
	'CalloutFormat' : '{000C0311-0000-0000-C000-000000000046}',
	'ColorFormat' : '{000C0312-0000-0000-C000-000000000046}',
	'LineFormat' : '{000C0317-0000-0000-C000-000000000046}',
	'ShapeNode' : '{000C0318-0000-0000-C000-000000000046}',
	'ShapeNodes' : '{000C0319-0000-0000-C000-000000000046}',
	'PictureFormat' : '{000C031A-0000-0000-C000-000000000046}',
	'ShadowFormat' : '{000C031B-0000-0000-C000-000000000046}',
	'TextEffectFormat' : '{000C031F-0000-0000-C000-000000000046}',
	'ThreeDFormat' : '{000C0321-0000-0000-C000-000000000046}',
	'FillFormat' : '{000C0314-0000-0000-C000-000000000046}',
	'DiagramNodes' : '{000C036E-0000-0000-C000-000000000046}',
	'DiagramNodeChildren' : '{000C036F-0000-0000-C000-000000000046}',
	'DiagramNode' : '{000C0370-0000-0000-C000-000000000046}',
	'IRTDUpdateEvent' : '{A43788C1-D91B-11D3-8F39-00C04F3651B8}',
	'IRtdServer' : '{EC0E6191-DB51-11D3-8F3E-00C04F3651B8}',
	'TextFrame2' : '{000C0398-0000-0000-C000-000000000046}',
	'Model3DFormat' : '{000C03D8-0000-0000-C000-000000000046}',
	'IFont' : '{0002084D-0001-0000-C000-000000000046}',
	'IWindow' : '{00020893-0001-0000-C000-000000000046}',
	'IWindows' : '{00020892-0001-0000-C000-000000000046}',
	'IAppEvents' : '{00024413-0001-0000-C000-000000000046}',
	'_Application' : '{000208D5-0000-0000-C000-000000000046}',
	'IWorksheetFunction' : '{00020845-0001-0000-C000-000000000046}',
	'IRange' : '{00020846-0001-0000-C000-000000000046}',
	'IChartEvents' : '{0002440F-0001-0000-C000-000000000046}',
	'_Chart' : '{000208D6-0000-0000-C000-000000000046}',
	'Sheets' : '{000208D7-0000-0000-C000-000000000046}',
	'IVPageBreak' : '{00024402-0001-0000-C000-000000000046}',
	'IHPageBreak' : '{00024401-0001-0000-C000-000000000046}',
	'IHPageBreaks' : '{00024404-0001-0000-C000-000000000046}',
	'IVPageBreaks' : '{00024405-0001-0000-C000-000000000046}',
	'IRecentFile' : '{00024407-0001-0000-C000-000000000046}',
	'IRecentFiles' : '{00024406-0001-0000-C000-000000000046}',
	'IDocEvents' : '{00024411-0001-0000-C000-000000000046}',
	'_Worksheet' : '{000208D8-0000-0000-C000-000000000046}',
	'IStyle' : '{00020852-0001-0000-C000-000000000046}',
	'IStyles' : '{00020853-0001-0000-C000-000000000046}',
	'IBorders' : '{00020855-0001-0000-C000-000000000046}',
	'_Global' : '{000208D9-0000-0000-C000-000000000046}',
	'IAddIn' : '{00020857-0001-0000-C000-000000000046}',
	'IAddIns' : '{00020858-0001-0000-C000-000000000046}',
	'IToolbar' : '{0002085C-0001-0000-C000-000000000046}',
	'IToolbars' : '{0002085D-0001-0000-C000-000000000046}',
	'IToolbarButton' : '{0002085E-0001-0000-C000-000000000046}',
	'IToolbarButtons' : '{0002085F-0001-0000-C000-000000000046}',
	'IAreas' : '{00020860-0001-0000-C000-000000000046}',
	'IWorkbookEvents' : '{00024412-0001-0000-C000-000000000046}',
	'_Workbook' : '{000208DA-0000-0000-C000-000000000046}',
	'Workbooks' : '{000208DB-0000-0000-C000-000000000046}',
	'IMenuBars' : '{00020863-0001-0000-C000-000000000046}',
	'IMenuBar' : '{00020864-0001-0000-C000-000000000046}',
	'IMenus' : '{00020865-0001-0000-C000-000000000046}',
	'IMenu' : '{00020866-0001-0000-C000-000000000046}',
	'IMenuItems' : '{00020867-0001-0000-C000-000000000046}',
	'IMenuItem' : '{00020868-0001-0000-C000-000000000046}',
	'ICharts' : '{0002086D-0001-0000-C000-000000000046}',
	'IDrawingObjects' : '{0002086F-0001-0000-C000-000000000046}',
	'IPivotCache' : '{0002441C-0001-0000-C000-000000000046}',
	'IPivotCaches' : '{0002441D-0001-0000-C000-000000000046}',
	'IPivotFormula' : '{0002441E-0001-0000-C000-000000000046}',
	'IPivotFormulas' : '{0002441F-0001-0000-C000-000000000046}',
	'IPivotTable' : '{00020872-0001-0000-C000-000000000046}',
	'IPivotTables' : '{00020873-0001-0000-C000-000000000046}',
	'IPivotField' : '{00020874-0001-0000-C000-000000000046}',
	'IPivotFields' : '{00020875-0001-0000-C000-000000000046}',
	'ICalculatedFields' : '{00024420-0001-0000-C000-000000000046}',
	'IPivotItem' : '{00020876-0001-0000-C000-000000000046}',
	'IPivotItems' : '{00020877-0001-0000-C000-000000000046}',
	'ICalculatedItems' : '{00024421-0001-0000-C000-000000000046}',
	'ICharacters' : '{00020878-0001-0000-C000-000000000046}',
	'IDialogs' : '{00020879-0001-0000-C000-000000000046}',
	'IDialog' : '{0002087A-0001-0000-C000-000000000046}',
	'ISoundNote' : '{0002087B-0001-0000-C000-000000000046}',
	'IButton' : '{0002087D-0001-0000-C000-000000000046}',
	'IButtons' : '{0002087E-0001-0000-C000-000000000046}',
	'ICheckBox' : '{0002087F-0001-0000-C000-000000000046}',
	'ICheckBoxes' : '{00020880-0001-0000-C000-000000000046}',
	'IOptionButton' : '{00020881-0001-0000-C000-000000000046}',
	'IOptionButtons' : '{00020882-0001-0000-C000-000000000046}',
	'IEditBox' : '{00020883-0001-0000-C000-000000000046}',
	'IEditBoxes' : '{00020884-0001-0000-C000-000000000046}',
	'IScrollBar' : '{00020885-0001-0000-C000-000000000046}',
	'IScrollBars' : '{00020886-0001-0000-C000-000000000046}',
	'IListBox' : '{00020887-0001-0000-C000-000000000046}',
	'IListBoxes' : '{00020888-0001-0000-C000-000000000046}',
	'IGroupBox' : '{00020889-0001-0000-C000-000000000046}',
	'IGroupBoxes' : '{0002088A-0001-0000-C000-000000000046}',
	'IDropDown' : '{0002088B-0001-0000-C000-000000000046}',
	'IDropDowns' : '{0002088C-0001-0000-C000-000000000046}',
	'ISpinner' : '{0002088D-0001-0000-C000-000000000046}',
	'ISpinners' : '{0002088E-0001-0000-C000-000000000046}',
	'IDialogFrame' : '{0002088F-0001-0000-C000-000000000046}',
	'ILabel' : '{00020890-0001-0000-C000-000000000046}',
	'ILabels' : '{00020891-0001-0000-C000-000000000046}',
	'IPanes' : '{00020894-0001-0000-C000-000000000046}',
	'IPane' : '{00020895-0001-0000-C000-000000000046}',
	'IScenarios' : '{00020896-0001-0000-C000-000000000046}',
	'IScenario' : '{00020897-0001-0000-C000-000000000046}',
	'IGroupObject' : '{00020898-0001-0000-C000-000000000046}',
	'IGroupObjects' : '{00020899-0001-0000-C000-000000000046}',
	'ILine' : '{0002089A-0001-0000-C000-000000000046}',
	'ILines' : '{0002089B-0001-0000-C000-000000000046}',
	'IRectangle' : '{0002089C-0001-0000-C000-000000000046}',
	'IRectangles' : '{0002089D-0001-0000-C000-000000000046}',
	'IOval' : '{0002089E-0001-0000-C000-000000000046}',
	'IOvals' : '{0002089F-0001-0000-C000-000000000046}',
	'IArc' : '{000208A0-0001-0000-C000-000000000046}',
	'IArcs' : '{000208A1-0001-0000-C000-000000000046}',
	'IOLEObjectEvents' : '{00024410-0001-0000-C000-000000000046}',
	'_IOLEObject' : '{000208A2-0001-0000-C000-000000000046}',
	'IOLEObjects' : '{000208A3-0001-0000-C000-000000000046}',
	'ITextBox' : '{000208A4-0001-0000-C000-000000000046}',
	'ITextBoxes' : '{000208A5-0001-0000-C000-000000000046}',
	'IPicture' : '{000208A6-0001-0000-C000-000000000046}',
	'IPictures' : '{000208A7-0001-0000-C000-000000000046}',
	'IDrawing' : '{000208A8-0001-0000-C000-000000000046}',
	'IDrawings' : '{000208A9-0001-0000-C000-000000000046}',
	'IRoutingSlip' : '{000208AA-0001-0000-C000-000000000046}',
	'IOutline' : '{000208AB-0001-0000-C000-000000000046}',
	'IModule' : '{000208AD-0001-0000-C000-000000000046}',
	'IModules' : '{000208AE-0001-0000-C000-000000000046}',
	'IDialogSheet' : '{000208AF-0001-0000-C000-000000000046}',
	'IDialogSheets' : '{000208B0-0001-0000-C000-000000000046}',
	'IWorksheets' : '{000208B1-0001-0000-C000-000000000046}',
	'IPageSetup' : '{000208B4-0001-0000-C000-000000000046}',
	'INames' : '{000208B8-0001-0000-C000-000000000046}',
	'IName' : '{000208B9-0001-0000-C000-000000000046}',
	'IChartObject' : '{000208CF-0001-0000-C000-000000000046}',
	'IChartObjects' : '{000208D0-0001-0000-C000-000000000046}',
	'IMailer' : '{000208D1-0001-0000-C000-000000000046}',
	'ICustomViews' : '{00024422-0001-0000-C000-000000000046}',
	'ICustomView' : '{00024423-0001-0000-C000-000000000046}',
	'IFormatConditions' : '{00024424-0001-0000-C000-000000000046}',
	'IFormatCondition' : '{00024425-0001-0000-C000-000000000046}',
	'IComments' : '{00024426-0001-0000-C000-000000000046}',
	'IComment' : '{00024427-0001-0000-C000-000000000046}',
	'IRefreshEvents' : '{0002441B-0001-0000-C000-000000000046}',
	'_IQueryTable' : '{00024428-0001-0000-C000-000000000046}',
	'IQueryTables' : '{00024429-0001-0000-C000-000000000046}',
	'IParameter' : '{0002442A-0001-0000-C000-000000000046}',
	'IParameters' : '{0002442B-0001-0000-C000-000000000046}',
	'IODBCError' : '{0002442C-0001-0000-C000-000000000046}',
	'IODBCErrors' : '{0002442D-0001-0000-C000-000000000046}',
	'IValidation' : '{0002442F-0001-0000-C000-000000000046}',
	'IHyperlinks' : '{00024430-0001-0000-C000-000000000046}',
	'IHyperlink' : '{00024431-0001-0000-C000-000000000046}',
	'IAutoFilter' : '{00024432-0001-0000-C000-000000000046}',
	'IFilters' : '{00024433-0001-0000-C000-000000000046}',
	'IFilter' : '{00024434-0001-0000-C000-000000000046}',
	'IAutoCorrect' : '{000208D4-0001-0000-C000-000000000046}',
	'IBorder' : '{00020854-0001-0000-C000-000000000046}',
	'IInterior' : '{00020870-0001-0000-C000-000000000046}',
	'IChartFillFormat' : '{00024435-0001-0000-C000-000000000046}',
	'IChartColorFormat' : '{00024436-0001-0000-C000-000000000046}',
	'IAxis' : '{00020848-0001-0000-C000-000000000046}',
	'IChartTitle' : '{00020849-0001-0000-C000-000000000046}',
	'IAxisTitle' : '{0002084A-0001-0000-C000-000000000046}',
	'IChartGroup' : '{00020859-0001-0000-C000-000000000046}',
	'IChartGroups' : '{0002085A-0001-0000-C000-000000000046}',
	'IAxes' : '{0002085B-0001-0000-C000-000000000046}',
	'IPoints' : '{00020869-0001-0000-C000-000000000046}',
	'IPoint' : '{0002086A-0001-0000-C000-000000000046}',
	'ISeries' : '{0002086B-0001-0000-C000-000000000046}',
	'ISeriesCollection' : '{0002086C-0001-0000-C000-000000000046}',
	'IDataLabel' : '{000208B2-0001-0000-C000-000000000046}',
	'IDataLabels' : '{000208B3-0001-0000-C000-000000000046}',
	'ILegendEntry' : '{000208BA-0001-0000-C000-000000000046}',
	'ILegendEntries' : '{000208BB-0001-0000-C000-000000000046}',
	'ILegendKey' : '{000208BC-0001-0000-C000-000000000046}',
	'ITrendlines' : '{000208BD-0001-0000-C000-000000000046}',
	'ITrendline' : '{000208BE-0001-0000-C000-000000000046}',
	'ICorners' : '{000208C0-0001-0000-C000-000000000046}',
	'ISeriesLines' : '{000208C1-0001-0000-C000-000000000046}',
	'IHiLoLines' : '{000208C2-0001-0000-C000-000000000046}',
	'IGridlines' : '{000208C3-0001-0000-C000-000000000046}',
	'IDropLines' : '{000208C4-0001-0000-C000-000000000046}',
	'ILeaderLines' : '{00024437-0001-0000-C000-000000000046}',
	'IUpBars' : '{000208C5-0001-0000-C000-000000000046}',
	'IDownBars' : '{000208C6-0001-0000-C000-000000000046}',
	'IFloor' : '{000208C7-0001-0000-C000-000000000046}',
	'IWalls' : '{000208C8-0001-0000-C000-000000000046}',
	'ITickLabels' : '{000208C9-0001-0000-C000-000000000046}',
	'IPlotArea' : '{000208CB-0001-0000-C000-000000000046}',
	'IChartArea' : '{000208CC-0001-0000-C000-000000000046}',
	'ILegend' : '{000208CD-0001-0000-C000-000000000046}',
	'IErrorBars' : '{000208CE-0001-0000-C000-000000000046}',
	'IDataTable' : '{00020843-0001-0000-C000-000000000046}',
	'IPhonetic' : '{00024438-0001-0000-C000-000000000046}',
	'IShape' : '{00024439-0001-0000-C000-000000000046}',
	'IShapes' : '{0002443A-0001-0000-C000-000000000046}',
	'IShapeRange' : '{0002443B-0001-0000-C000-000000000046}',
	'IGroupShapes' : '{0002443C-0001-0000-C000-000000000046}',
	'ITextFrame' : '{0002443D-0001-0000-C000-000000000046}',
	'IConnectorFormat' : '{0002443E-0001-0000-C000-000000000046}',
	'IFreeformBuilder' : '{0002443F-0001-0000-C000-000000000046}',
	'IControlFormat' : '{00024440-0001-0000-C000-000000000046}',
	'IOLEFormat' : '{00024441-0001-0000-C000-000000000046}',
	'ILinkFormat' : '{00024442-0001-0000-C000-000000000046}',
	'IPublishObjects' : '{00024443-0001-0000-C000-000000000046}',
	'PublishObject' : '{00024444-0000-0000-C000-000000000046}',
	'IOLEDBError' : '{00024445-0001-0000-C000-000000000046}',
	'IOLEDBErrors' : '{00024446-0001-0000-C000-000000000046}',
	'IPhonetics' : '{00024447-0001-0000-C000-000000000046}',
	'DefaultWebOptions' : '{00024448-0000-0000-C000-000000000046}',
	'WebOptions' : '{00024449-0000-0000-C000-000000000046}',
	'IPivotLayout' : '{0002444A-0001-0000-C000-000000000046}',
	'TreeviewControl' : '{0002444B-0000-0000-C000-000000000046}',
	'CubeField' : '{0002444C-0000-0000-C000-000000000046}',
	'CubeFields' : '{0002444D-0000-0000-C000-000000000046}',
	'IDisplayUnitLabel' : '{0002084C-0001-0000-C000-000000000046}',
	'ICellFormat' : '{00024450-0001-0000-C000-000000000046}',
	'IUsedObjects' : '{00024451-0001-0000-C000-000000000046}',
	'ICustomProperties' : '{00024452-0001-0000-C000-000000000046}',
	'ICustomProperty' : '{00024453-0001-0000-C000-000000000046}',
	'ICalculatedMembers' : '{00024454-0001-0000-C000-000000000046}',
	'ICalculatedMember' : '{00024455-0001-0000-C000-000000000046}',
	'IWatches' : '{00024456-0001-0000-C000-000000000046}',
	'IWatch' : '{00024457-0001-0000-C000-000000000046}',
	'IPivotCell' : '{00024458-0001-0000-C000-000000000046}',
	'IGraphic' : '{00024459-0001-0000-C000-000000000046}',
	'IAutoRecover' : '{0002445A-0001-0000-C000-000000000046}',
	'IErrorCheckingOptions' : '{0002445B-0001-0000-C000-000000000046}',
	'IErrors' : '{0002445C-0001-0000-C000-000000000046}',
	'IError' : '{0002445D-0001-0000-C000-000000000046}',
	'ISmartTagAction' : '{0002445E-0001-0000-C000-000000000046}',
	'ISmartTagActions' : '{0002445F-0001-0000-C000-000000000046}',
	'ISmartTag' : '{00024460-0001-0000-C000-000000000046}',
	'ISmartTags' : '{00024461-0001-0000-C000-000000000046}',
	'ISmartTagRecognizer' : '{00024462-0001-0000-C000-000000000046}',
	'ISmartTagRecognizers' : '{00024463-0001-0000-C000-000000000046}',
	'ISmartTagOptions' : '{00024464-0001-0000-C000-000000000046}',
	'ISpellingOptions' : '{00024465-0001-0000-C000-000000000046}',
	'ISpeech' : '{00024466-0001-0000-C000-000000000046}',
	'IProtection' : '{00024467-0001-0000-C000-000000000046}',
	'IPivotItemList' : '{00024468-0001-0000-C000-000000000046}',
	'ITab' : '{00024469-0001-0000-C000-000000000046}',
	'IAllowEditRanges' : '{0002446A-0001-0000-C000-000000000046}',
	'IAllowEditRange' : '{0002446B-0001-0000-C000-000000000046}',
	'IUserAccessList' : '{0002446C-0001-0000-C000-000000000046}',
	'IUserAccess' : '{0002446D-0001-0000-C000-000000000046}',
	'IRTD' : '{0002446E-0001-0000-C000-000000000046}',
	'IDiagram' : '{0002446F-0001-0000-C000-000000000046}',
	'IListObjects' : '{00024470-0001-0000-C000-000000000046}',
	'IListObject' : '{00024471-0001-0000-C000-000000000046}',
	'IListColumns' : '{00024472-0001-0000-C000-000000000046}',
	'IListColumn' : '{00024473-0001-0000-C000-000000000046}',
	'IListRows' : '{00024474-0001-0000-C000-000000000046}',
	'IListRow' : '{00024475-0001-0000-C000-000000000046}',
	'IXmlNamespace' : '{00024476-0001-0000-C000-000000000046}',
	'IXmlNamespaces' : '{00024477-0001-0000-C000-000000000046}',
	'IXmlDataBinding' : '{00024478-0001-0000-C000-000000000046}',
	'IXmlSchema' : '{00024479-0001-0000-C000-000000000046}',
	'IXmlSchemas' : '{0002447A-0001-0000-C000-000000000046}',
	'IXmlMap' : '{0002447B-0001-0000-C000-000000000046}',
	'IXmlMaps' : '{0002447C-0001-0000-C000-000000000046}',
	'IListDataFormat' : '{0002447D-0001-0000-C000-000000000046}',
	'IXPath' : '{0002447E-0001-0000-C000-000000000046}',
	'IPivotLineCells' : '{0002447F-0001-0000-C000-000000000046}',
	'IPivotLine' : '{00024480-0001-0000-C000-000000000046}',
	'IPivotLines' : '{00024481-0001-0000-C000-000000000046}',
	'IPivotAxis' : '{00024482-0001-0000-C000-000000000046}',
	'IPivotFilter' : '{00024483-0001-0000-C000-000000000046}',
	'IPivotFilters' : '{00024484-0001-0000-C000-000000000046}',
	'IWorkbookConnection' : '{00024485-0001-0000-C000-000000000046}',
	'IConnections' : '{00024486-0001-0000-C000-000000000046}',
	'IWorksheetView' : '{00024487-0001-0000-C000-000000000046}',
	'IChartView' : '{00024488-0001-0000-C000-000000000046}',
	'IModuleView' : '{00024489-0001-0000-C000-000000000046}',
	'IDialogSheetView' : '{0002448A-0001-0000-C000-000000000046}',
	'ISheetViews' : '{0002448C-0001-0000-C000-000000000046}',
	'IOLEDBConnection' : '{0002448D-0001-0000-C000-000000000046}',
	'IODBCConnection' : '{0002448E-0001-0000-C000-000000000046}',
	'IAction' : '{0002448F-0001-0000-C000-000000000046}',
	'IActions' : '{00024490-0001-0000-C000-000000000046}',
	'IFormatColor' : '{00024491-0001-0000-C000-000000000046}',
	'IConditionValue' : '{00024492-0001-0000-C000-000000000046}',
	'IColorScale' : '{00024493-0001-0000-C000-000000000046}',
	'IColorScaleCriteria' : '{00024494-0001-0000-C000-000000000046}',
	'IColorScaleCriterion' : '{00024495-0001-0000-C000-000000000046}',
	'IDatabar' : '{00024496-0001-0000-C000-000000000046}',
	'IIconSetCondition' : '{00024497-0001-0000-C000-000000000046}',
	'IIconCriteria' : '{00024498-0001-0000-C000-000000000046}',
	'IIconCriterion' : '{00024499-0001-0000-C000-000000000046}',
	'IIcon' : '{0002449A-0001-0000-C000-000000000046}',
	'IIconSet' : '{0002449B-0001-0000-C000-000000000046}',
	'IIconSets' : '{0002449C-0001-0000-C000-000000000046}',
	'ITop10' : '{0002449D-0001-0000-C000-000000000046}',
	'IAboveAverage' : '{0002449E-0001-0000-C000-000000000046}',
	'IUniqueValues' : '{0002449F-0001-0000-C000-000000000046}',
	'IRanges' : '{000244A0-0001-0000-C000-000000000046}',
	'IHeaderFooter' : '{000244A1-0001-0000-C000-000000000046}',
	'IPage' : '{000244A2-0001-0000-C000-000000000046}',
	'IPages' : '{000244A3-0001-0000-C000-000000000046}',
	'IServerViewableItems' : '{000244A4-0001-0000-C000-000000000046}',
	'ITableStyleElement' : '{000244A5-0001-0000-C000-000000000046}',
	'ITableStyleElements' : '{000244A6-0001-0000-C000-000000000046}',
	'ITableStyle' : '{000244A7-0001-0000-C000-000000000046}',
	'ITableStyles' : '{000244A8-0001-0000-C000-000000000046}',
	'ISortField' : '{000244A9-0001-0000-C000-000000000046}',
	'ISortFields' : '{000244AA-0001-0000-C000-000000000046}',
	'ISort' : '{000244AB-0001-0000-C000-000000000046}',
	'IResearch' : '{000244AC-0001-0000-C000-000000000046}',
	'IColorStop' : '{000244AD-0001-0000-C000-000000000046}',
	'IColorStops' : '{000244AE-0001-0000-C000-000000000046}',
	'ILinearGradient' : '{000244AF-0001-0000-C000-000000000046}',
	'IRectangularGradient' : '{000244B0-0001-0000-C000-000000000046}',
	'IMultiThreadedCalculation' : '{000244B1-0001-0000-C000-000000000046}',
	'IChartFormat' : '{000244B2-0001-0000-C000-000000000046}',
	'IFileExportConverter' : '{000244B3-0001-0000-C000-000000000046}',
	'IFileExportConverters' : '{000244B4-0001-0000-C000-000000000046}',
	'IAddIns2' : '{000244B5-0001-0000-C000-000000000046}',
	'ISparklineGroups' : '{000244B6-0001-0000-C000-000000000046}',
	'ISparklineGroup' : '{000244B7-0001-0000-C000-000000000046}',
	'ISparkPoints' : '{000244B8-0001-0000-C000-000000000046}',
	'ISparkline' : '{000244B9-0001-0000-C000-000000000046}',
	'ISparkAxes' : '{000244BA-0001-0000-C000-000000000046}',
	'ISparkHorizontalAxis' : '{000244BB-0001-0000-C000-000000000046}',
	'ISparkVerticalAxis' : '{000244BC-0001-0000-C000-000000000046}',
	'ISparkColor' : '{000244BD-0001-0000-C000-000000000046}',
	'IDataBarBorder' : '{000244BE-0001-0000-C000-000000000046}',
	'INegativeBarFormat' : '{000244BF-0001-0000-C000-000000000046}',
	'IValueChange' : '{000244C0-0001-0000-C000-000000000046}',
	'IPivotTableChangeList' : '{000244C1-0001-0000-C000-000000000046}',
	'IDisplayFormat' : '{000244C2-0001-0000-C000-000000000046}',
	'ISlicerCaches' : '{000244C3-0001-0000-C000-000000000046}',
	'ISlicerCache' : '{000244C4-0001-0000-C000-000000000046}',
	'ISlicerCacheLevels' : '{000244C5-0001-0000-C000-000000000046}',
	'ISlicerCacheLevel' : '{000244C6-0001-0000-C000-000000000046}',
	'ISlicers' : '{000244C7-0001-0000-C000-000000000046}',
	'ISlicer' : '{000244C8-0001-0000-C000-000000000046}',
	'ISlicerItem' : '{000244C9-0001-0000-C000-000000000046}',
	'ISlicerItems' : '{000244CA-0001-0000-C000-000000000046}',
	'ISlicerPivotTables' : '{000244CB-0001-0000-C000-000000000046}',
	'IProtectedViewWindows' : '{000244CC-0001-0000-C000-000000000046}',
	'IProtectedViewWindow' : '{000244CD-0001-0000-C000-000000000046}',
	'ITableObject' : '{000244CE-0001-0000-C000-000000000046}',
	'IPivotValueCell' : '{000244CF-0001-0000-C000-000000000046}',
	'IQuickAnalysis' : '{000244D0-0001-0000-C000-000000000046}',
	'IModelConnection' : '{000244D1-0001-0000-C000-000000000046}',
	'IWorksheetDataConnection' : '{000244D2-0001-0000-C000-000000000046}',
	'ITextConnection' : '{000244D3-0001-0000-C000-000000000046}',
	'IDataFeedConnection' : '{000244D4-0001-0000-C000-000000000046}',
	'IModelTableColumn' : '{000244D5-0001-0000-C000-000000000046}',
	'IModelTableColumns' : '{000244D6-0001-0000-C000-000000000046}',
	'IModelTable' : '{000244D7-0001-0000-C000-000000000046}',
	'IModelTables' : '{000244D8-0001-0000-C000-000000000046}',
	'IModelRelationship' : '{000244D9-0001-0000-C000-000000000046}',
	'IModelRelationships' : '{000244DA-0001-0000-C000-000000000046}',
	'IModel' : '{000244DB-0001-0000-C000-000000000046}',
	'IFullSeriesCollection' : '{000244DC-0001-0000-C000-000000000046}',
	'IChartCategory' : '{000244DD-0001-0000-C000-000000000046}',
	'ICategoryCollection' : '{000244DE-0001-0000-C000-000000000046}',
	'ITimelineState' : '{000244DF-0001-0000-C000-000000000046}',
	'ITimelineViewState' : '{000244E0-0001-0000-C000-000000000046}',
	'IModelTableNames' : '{000244E1-0001-0000-C000-000000000046}',
	'IModelTableNameChange' : '{000244E2-0001-0000-C000-000000000046}',
	'IModelTableNameChanges' : '{000244E3-0001-0000-C000-000000000046}',
	'IModelChanges' : '{000244E4-0001-0000-C000-000000000046}',
	'IModelColumnName' : '{000244E5-0001-0000-C000-000000000046}',
	'IModelColumnNames' : '{000244E6-0001-0000-C000-000000000046}',
	'IModelColumnChange' : '{000244E7-0001-0000-C000-000000000046}',
	'IModelColumnChanges' : '{000244E8-0001-0000-C000-000000000046}',
	'IModelMeasureName' : '{000244E9-0001-0000-C000-000000000046}',
	'IModelMeasureNames' : '{000244EA-0001-0000-C000-000000000046}',
	'IWorkbookQuery' : '{000244EB-0001-0000-C000-000000000046}',
	'IQueries' : '{000244EC-0001-0000-C000-000000000046}',
	'IModelMeasure' : '{000244ED-0001-0000-C000-000000000046}',
	'IModelMeasures' : '{000244EE-0001-0000-C000-000000000046}',
	'IModelFormatGeneral' : '{000244EF-0001-0000-C000-000000000046}',
	'IModelFormatDate' : '{000244F0-0001-0000-C000-000000000046}',
	'IModelFormatDecimalNumber' : '{000244F1-0001-0000-C000-000000000046}',
	'IModelFormatWholeNumber' : '{000244F2-0001-0000-C000-000000000046}',
	'IModelFormatPercentageNumber' : '{000244F3-0001-0000-C000-000000000046}',
	'IModelFormatScientificNumber' : '{000244F4-0001-0000-C000-000000000046}',
	'IModelFormatCurrency' : '{000244F5-0001-0000-C000-000000000046}',
	'IModelFormatBoolean' : '{000244F6-0001-0000-C000-000000000046}',
	'IPublishedDocs' : '{000244F7-0001-0000-C000-000000000046}',
	'IPublishedDoc' : '{000244F8-0001-0000-C000-000000000046}',
	'ISeriesGradientStopColorFormat' : '{000244F9-0001-0000-C000-000000000046}',
	'IChartSeriesGradientStopData' : '{000244FA-0001-0000-C000-000000000046}',
	'IDefaultPivotTableLayoutOptions' : '{000244FB-0001-0000-C000-000000000046}',
	'ICommentsThreaded' : '{000244FC-0001-0000-C000-000000000046}',
	'ICommentThreaded' : '{000244FD-0001-0000-C000-000000000046}',
	'IAuthor' : '{000244FE-0001-0000-C000-000000000046}',
	'INamedSheetViewCollection' : '{00024501-0001-0000-C000-000000000046}',
	'INamedSheetView' : '{00024502-0001-0000-C000-000000000046}',
	'ICellControl' : '{00024503-0001-0000-C000-000000000046}',
	'Font' : '{0002084D-0000-0000-C000-000000000046}',
	'Window' : '{00020893-0000-0000-C000-000000000046}',
	'Windows' : '{00020892-0000-0000-C000-000000000046}',
	'AppEvents' : '{00024413-0000-0000-C000-000000000046}',
	'WorksheetFunction' : '{00020845-0000-0000-C000-000000000046}',
	'Range' : '{00020846-0000-0000-C000-000000000046}',
	'ChartEvents' : '{0002440F-0000-0000-C000-000000000046}',
	'VPageBreak' : '{00024402-0000-0000-C000-000000000046}',
	'HPageBreak' : '{00024401-0000-0000-C000-000000000046}',
	'HPageBreaks' : '{00024404-0000-0000-C000-000000000046}',
	'VPageBreaks' : '{00024405-0000-0000-C000-000000000046}',
	'RecentFile' : '{00024407-0000-0000-C000-000000000046}',
	'RecentFiles' : '{00024406-0000-0000-C000-000000000046}',
	'DocEvents' : '{00024411-0000-0000-C000-000000000046}',
	'Style' : '{00020852-0000-0000-C000-000000000046}',
	'Styles' : '{00020853-0000-0000-C000-000000000046}',
	'Borders' : '{00020855-0000-0000-C000-000000000046}',
	'AddIn' : '{00020857-0000-0000-C000-000000000046}',
	'AddIns' : '{00020858-0000-0000-C000-000000000046}',
	'Toolbar' : '{0002085C-0000-0000-C000-000000000046}',
	'Toolbars' : '{0002085D-0000-0000-C000-000000000046}',
	'ToolbarButton' : '{0002085E-0000-0000-C000-000000000046}',
	'ToolbarButtons' : '{0002085F-0000-0000-C000-000000000046}',
	'Areas' : '{00020860-0000-0000-C000-000000000046}',
	'WorkbookEvents' : '{00024412-0000-0000-C000-000000000046}',
	'MenuBars' : '{00020863-0000-0000-C000-000000000046}',
	'MenuBar' : '{00020864-0000-0000-C000-000000000046}',
	'Menus' : '{00020865-0000-0000-C000-000000000046}',
	'Menu' : '{00020866-0000-0000-C000-000000000046}',
	'MenuItems' : '{00020867-0000-0000-C000-000000000046}',
	'MenuItem' : '{00020868-0000-0000-C000-000000000046}',
	'Charts' : '{0002086D-0000-0000-C000-000000000046}',
	'DrawingObjects' : '{0002086F-0000-0000-C000-000000000046}',
	'PivotCache' : '{0002441C-0000-0000-C000-000000000046}',
	'PivotCaches' : '{0002441D-0000-0000-C000-000000000046}',
	'PivotFormula' : '{0002441E-0000-0000-C000-000000000046}',
	'PivotFormulas' : '{0002441F-0000-0000-C000-000000000046}',
	'PivotTable' : '{00020872-0000-0000-C000-000000000046}',
	'PivotTables' : '{00020873-0000-0000-C000-000000000046}',
	'PivotField' : '{00020874-0000-0000-C000-000000000046}',
	'PivotFields' : '{00020875-0000-0000-C000-000000000046}',
	'CalculatedFields' : '{00024420-0000-0000-C000-000000000046}',
	'PivotItem' : '{00020876-0000-0000-C000-000000000046}',
	'PivotItems' : '{00020877-0000-0000-C000-000000000046}',
	'CalculatedItems' : '{00024421-0000-0000-C000-000000000046}',
	'Characters' : '{00020878-0000-0000-C000-000000000046}',
	'Dialogs' : '{00020879-0000-0000-C000-000000000046}',
	'Dialog' : '{0002087A-0000-0000-C000-000000000046}',
	'SoundNote' : '{0002087B-0000-0000-C000-000000000046}',
	'Button' : '{0002087D-0000-0000-C000-000000000046}',
	'Buttons' : '{0002087E-0000-0000-C000-000000000046}',
	'CheckBox' : '{0002087F-0000-0000-C000-000000000046}',
	'CheckBoxes' : '{00020880-0000-0000-C000-000000000046}',
	'OptionButton' : '{00020881-0000-0000-C000-000000000046}',
	'OptionButtons' : '{00020882-0000-0000-C000-000000000046}',
	'EditBox' : '{00020883-0000-0000-C000-000000000046}',
	'EditBoxes' : '{00020884-0000-0000-C000-000000000046}',
	'ScrollBar' : '{00020885-0000-0000-C000-000000000046}',
	'ScrollBars' : '{00020886-0000-0000-C000-000000000046}',
	'ListBox' : '{00020887-0000-0000-C000-000000000046}',
	'ListBoxes' : '{00020888-0000-0000-C000-000000000046}',
	'GroupBox' : '{00020889-0000-0000-C000-000000000046}',
	'GroupBoxes' : '{0002088A-0000-0000-C000-000000000046}',
	'DropDown' : '{0002088B-0000-0000-C000-000000000046}',
	'DropDowns' : '{0002088C-0000-0000-C000-000000000046}',
	'Spinner' : '{0002088D-0000-0000-C000-000000000046}',
	'Spinners' : '{0002088E-0000-0000-C000-000000000046}',
	'DialogFrame' : '{0002088F-0000-0000-C000-000000000046}',
	'Label' : '{00020890-0000-0000-C000-000000000046}',
	'Labels' : '{00020891-0000-0000-C000-000000000046}',
	'Panes' : '{00020894-0000-0000-C000-000000000046}',
	'Pane' : '{00020895-0000-0000-C000-000000000046}',
	'Scenarios' : '{00020896-0000-0000-C000-000000000046}',
	'Scenario' : '{00020897-0000-0000-C000-000000000046}',
	'GroupObject' : '{00020898-0000-0000-C000-000000000046}',
	'GroupObjects' : '{00020899-0000-0000-C000-000000000046}',
	'Line' : '{0002089A-0000-0000-C000-000000000046}',
	'Lines' : '{0002089B-0000-0000-C000-000000000046}',
	'Rectangle' : '{0002089C-0000-0000-C000-000000000046}',
	'Rectangles' : '{0002089D-0000-0000-C000-000000000046}',
	'Oval' : '{0002089E-0000-0000-C000-000000000046}',
	'Ovals' : '{0002089F-0000-0000-C000-000000000046}',
	'Arc' : '{000208A0-0000-0000-C000-000000000046}',
	'Arcs' : '{000208A1-0000-0000-C000-000000000046}',
	'OLEObjectEvents' : '{00024410-0000-0000-C000-000000000046}',
	'_OLEObject' : '{000208A2-0000-0000-C000-000000000046}',
	'OLEObjects' : '{000208A3-0000-0000-C000-000000000046}',
	'TextBox' : '{000208A4-0000-0000-C000-000000000046}',
	'TextBoxes' : '{000208A5-0000-0000-C000-000000000046}',
	'Picture' : '{000208A6-0000-0000-C000-000000000046}',
	'Pictures' : '{000208A7-0000-0000-C000-000000000046}',
	'Drawing' : '{000208A8-0000-0000-C000-000000000046}',
	'Drawings' : '{000208A9-0000-0000-C000-000000000046}',
	'RoutingSlip' : '{000208AA-0000-0000-C000-000000000046}',
	'Outline' : '{000208AB-0000-0000-C000-000000000046}',
	'Module' : '{000208AD-0000-0000-C000-000000000046}',
	'Modules' : '{000208AE-0000-0000-C000-000000000046}',
	'DialogSheet' : '{000208AF-0000-0000-C000-000000000046}',
	'DialogSheets' : '{000208B0-0000-0000-C000-000000000046}',
	'Worksheets' : '{000208B1-0000-0000-C000-000000000046}',
	'PageSetup' : '{000208B4-0000-0000-C000-000000000046}',
	'Names' : '{000208B8-0000-0000-C000-000000000046}',
	'Name' : '{000208B9-0000-0000-C000-000000000046}',
	'ChartObject' : '{000208CF-0000-0000-C000-000000000046}',
	'ChartObjects' : '{000208D0-0000-0000-C000-000000000046}',
	'Mailer' : '{000208D1-0000-0000-C000-000000000046}',
	'CustomViews' : '{00024422-0000-0000-C000-000000000046}',
	'CustomView' : '{00024423-0000-0000-C000-000000000046}',
	'FormatConditions' : '{00024424-0000-0000-C000-000000000046}',
	'FormatCondition' : '{00024425-0000-0000-C000-000000000046}',
	'Comments' : '{00024426-0000-0000-C000-000000000046}',
	'Comment' : '{00024427-0000-0000-C000-000000000046}',
	'RefreshEvents' : '{0002441B-0000-0000-C000-000000000046}',
	'_QueryTable' : '{00024428-0000-0000-C000-000000000046}',
	'QueryTables' : '{00024429-0000-0000-C000-000000000046}',
	'Parameter' : '{0002442A-0000-0000-C000-000000000046}',
	'Parameters' : '{0002442B-0000-0000-C000-000000000046}',
	'ODBCError' : '{0002442C-0000-0000-C000-000000000046}',
	'ODBCErrors' : '{0002442D-0000-0000-C000-000000000046}',
	'Validation' : '{0002442F-0000-0000-C000-000000000046}',
	'Hyperlinks' : '{00024430-0000-0000-C000-000000000046}',
	'Hyperlink' : '{00024431-0000-0000-C000-000000000046}',
	'AutoFilter' : '{00024432-0000-0000-C000-000000000046}',
	'Filters' : '{00024433-0000-0000-C000-000000000046}',
	'Filter' : '{00024434-0000-0000-C000-000000000046}',
	'AutoCorrect' : '{000208D4-0000-0000-C000-000000000046}',
	'Border' : '{00020854-0000-0000-C000-000000000046}',
	'Interior' : '{00020870-0000-0000-C000-000000000046}',
	'ChartFillFormat' : '{00024435-0000-0000-C000-000000000046}',
	'ChartColorFormat' : '{00024436-0000-0000-C000-000000000046}',
	'Axis' : '{00020848-0000-0000-C000-000000000046}',
	'ChartTitle' : '{00020849-0000-0000-C000-000000000046}',
	'AxisTitle' : '{0002084A-0000-0000-C000-000000000046}',
	'ChartGroup' : '{00020859-0000-0000-C000-000000000046}',
	'ChartGroups' : '{0002085A-0000-0000-C000-000000000046}',
	'Axes' : '{0002085B-0000-0000-C000-000000000046}',
	'Points' : '{00020869-0000-0000-C000-000000000046}',
	'Point' : '{0002086A-0000-0000-C000-000000000046}',
	'Series' : '{0002086B-0000-0000-C000-000000000046}',
	'SeriesCollection' : '{0002086C-0000-0000-C000-000000000046}',
	'DataLabel' : '{000208B2-0000-0000-C000-000000000046}',
	'DataLabels' : '{000208B3-0000-0000-C000-000000000046}',
	'LegendEntry' : '{000208BA-0000-0000-C000-000000000046}',
	'LegendEntries' : '{000208BB-0000-0000-C000-000000000046}',
	'LegendKey' : '{000208BC-0000-0000-C000-000000000046}',
	'Trendlines' : '{000208BD-0000-0000-C000-000000000046}',
	'Trendline' : '{000208BE-0000-0000-C000-000000000046}',
	'Corners' : '{000208C0-0000-0000-C000-000000000046}',
	'SeriesLines' : '{000208C1-0000-0000-C000-000000000046}',
	'HiLoLines' : '{000208C2-0000-0000-C000-000000000046}',
	'Gridlines' : '{000208C3-0000-0000-C000-000000000046}',
	'DropLines' : '{000208C4-0000-0000-C000-000000000046}',
	'LeaderLines' : '{00024437-0000-0000-C000-000000000046}',
	'UpBars' : '{000208C5-0000-0000-C000-000000000046}',
	'DownBars' : '{000208C6-0000-0000-C000-000000000046}',
	'Floor' : '{000208C7-0000-0000-C000-000000000046}',
	'Walls' : '{000208C8-0000-0000-C000-000000000046}',
	'TickLabels' : '{000208C9-0000-0000-C000-000000000046}',
	'PlotArea' : '{000208CB-0000-0000-C000-000000000046}',
	'ChartArea' : '{000208CC-0000-0000-C000-000000000046}',
	'Legend' : '{000208CD-0000-0000-C000-000000000046}',
	'ErrorBars' : '{000208CE-0000-0000-C000-000000000046}',
	'DataTable' : '{00020843-0000-0000-C000-000000000046}',
	'Phonetic' : '{00024438-0000-0000-C000-000000000046}',
	'Shape' : '{00024439-0000-0000-C000-000000000046}',
	'Shapes' : '{0002443A-0000-0000-C000-000000000046}',
	'ShapeRange' : '{0002443B-0000-0000-C000-000000000046}',
	'GroupShapes' : '{0002443C-0000-0000-C000-000000000046}',
	'TextFrame' : '{0002443D-0000-0000-C000-000000000046}',
	'ConnectorFormat' : '{0002443E-0000-0000-C000-000000000046}',
	'FreeformBuilder' : '{0002443F-0000-0000-C000-000000000046}',
	'ControlFormat' : '{00024440-0000-0000-C000-000000000046}',
	'OLEFormat' : '{00024441-0000-0000-C000-000000000046}',
	'LinkFormat' : '{00024442-0000-0000-C000-000000000046}',
	'PublishObjects' : '{00024443-0000-0000-C000-000000000046}',
	'OLEDBError' : '{00024445-0000-0000-C000-000000000046}',
	'OLEDBErrors' : '{00024446-0000-0000-C000-000000000046}',
	'Phonetics' : '{00024447-0000-0000-C000-000000000046}',
	'PivotLayout' : '{0002444A-0000-0000-C000-000000000046}',
	'DisplayUnitLabel' : '{0002084C-0000-0000-C000-000000000046}',
	'CellFormat' : '{00024450-0000-0000-C000-000000000046}',
	'UsedObjects' : '{00024451-0000-0000-C000-000000000046}',
	'CustomProperties' : '{00024452-0000-0000-C000-000000000046}',
	'CustomProperty' : '{00024453-0000-0000-C000-000000000046}',
	'CalculatedMembers' : '{00024454-0000-0000-C000-000000000046}',
	'CalculatedMember' : '{00024455-0000-0000-C000-000000000046}',
	'Watches' : '{00024456-0000-0000-C000-000000000046}',
	'Watch' : '{00024457-0000-0000-C000-000000000046}',
	'PivotCell' : '{00024458-0000-0000-C000-000000000046}',
	'Graphic' : '{00024459-0000-0000-C000-000000000046}',
	'AutoRecover' : '{0002445A-0000-0000-C000-000000000046}',
	'ErrorCheckingOptions' : '{0002445B-0000-0000-C000-000000000046}',
	'Errors' : '{0002445C-0000-0000-C000-000000000046}',
	'Error' : '{0002445D-0000-0000-C000-000000000046}',
	'SmartTagAction' : '{0002445E-0000-0000-C000-000000000046}',
	'SmartTagActions' : '{0002445F-0000-0000-C000-000000000046}',
	'SmartTag' : '{00024460-0000-0000-C000-000000000046}',
	'SmartTags' : '{00024461-0000-0000-C000-000000000046}',
	'SmartTagRecognizer' : '{00024462-0000-0000-C000-000000000046}',
	'SmartTagRecognizers' : '{00024463-0000-0000-C000-000000000046}',
	'SmartTagOptions' : '{00024464-0000-0000-C000-000000000046}',
	'SpellingOptions' : '{00024465-0000-0000-C000-000000000046}',
	'Speech' : '{00024466-0000-0000-C000-000000000046}',
	'Protection' : '{00024467-0000-0000-C000-000000000046}',
	'PivotItemList' : '{00024468-0000-0000-C000-000000000046}',
	'Tab' : '{00024469-0000-0000-C000-000000000046}',
	'AllowEditRanges' : '{0002446A-0000-0000-C000-000000000046}',
	'AllowEditRange' : '{0002446B-0000-0000-C000-000000000046}',
	'UserAccessList' : '{0002446C-0000-0000-C000-000000000046}',
	'UserAccess' : '{0002446D-0000-0000-C000-000000000046}',
	'RTD' : '{0002446E-0000-0000-C000-000000000046}',
	'Diagram' : '{0002446F-0000-0000-C000-000000000046}',
	'ListObjects' : '{00024470-0000-0000-C000-000000000046}',
	'ListObject' : '{00024471-0000-0000-C000-000000000046}',
	'ListColumns' : '{00024472-0000-0000-C000-000000000046}',
	'ListColumn' : '{00024473-0000-0000-C000-000000000046}',
	'ListRows' : '{00024474-0000-0000-C000-000000000046}',
	'ListRow' : '{00024475-0000-0000-C000-000000000046}',
	'XmlNamespace' : '{00024476-0000-0000-C000-000000000046}',
	'XmlNamespaces' : '{00024477-0000-0000-C000-000000000046}',
	'XmlDataBinding' : '{00024478-0000-0000-C000-000000000046}',
	'XmlSchema' : '{00024479-0000-0000-C000-000000000046}',
	'XmlSchemas' : '{0002447A-0000-0000-C000-000000000046}',
	'XmlMap' : '{0002447B-0000-0000-C000-000000000046}',
	'XmlMaps' : '{0002447C-0000-0000-C000-000000000046}',
	'ListDataFormat' : '{0002447D-0000-0000-C000-000000000046}',
	'XPath' : '{0002447E-0000-0000-C000-000000000046}',
	'PivotLineCells' : '{0002447F-0000-0000-C000-000000000046}',
	'PivotLine' : '{00024480-0000-0000-C000-000000000046}',
	'PivotLines' : '{00024481-0000-0000-C000-000000000046}',
	'PivotAxis' : '{00024482-0000-0000-C000-000000000046}',
	'PivotFilter' : '{00024483-0000-0000-C000-000000000046}',
	'PivotFilters' : '{00024484-0000-0000-C000-000000000046}',
	'WorkbookConnection' : '{00024485-0000-0000-C000-000000000046}',
	'Connections' : '{00024486-0000-0000-C000-000000000046}',
	'WorksheetView' : '{00024487-0000-0000-C000-000000000046}',
	'ChartView' : '{00024488-0000-0000-C000-000000000046}',
	'ModuleView' : '{00024489-0000-0000-C000-000000000046}',
	'DialogSheetView' : '{0002448A-0000-0000-C000-000000000046}',
	'SheetViews' : '{0002448C-0000-0000-C000-000000000046}',
	'OLEDBConnection' : '{0002448D-0000-0000-C000-000000000046}',
	'ODBCConnection' : '{0002448E-0000-0000-C000-000000000046}',
	'Action' : '{0002448F-0000-0000-C000-000000000046}',
	'Actions' : '{00024490-0000-0000-C000-000000000046}',
	'FormatColor' : '{00024491-0000-0000-C000-000000000046}',
	'ConditionValue' : '{00024492-0000-0000-C000-000000000046}',
	'ColorScale' : '{00024493-0000-0000-C000-000000000046}',
	'ColorScaleCriteria' : '{00024494-0000-0000-C000-000000000046}',
	'ColorScaleCriterion' : '{00024495-0000-0000-C000-000000000046}',
	'Databar' : '{00024496-0000-0000-C000-000000000046}',
	'IconSetCondition' : '{00024497-0000-0000-C000-000000000046}',
	'IconCriteria' : '{00024498-0000-0000-C000-000000000046}',
	'IconCriterion' : '{00024499-0000-0000-C000-000000000046}',
	'Icon' : '{0002449A-0000-0000-C000-000000000046}',
	'IconSet' : '{0002449B-0000-0000-C000-000000000046}',
	'IconSets' : '{0002449C-0000-0000-C000-000000000046}',
	'Top10' : '{0002449D-0000-0000-C000-000000000046}',
	'AboveAverage' : '{0002449E-0000-0000-C000-000000000046}',
	'UniqueValues' : '{0002449F-0000-0000-C000-000000000046}',
	'Ranges' : '{000244A0-0000-0000-C000-000000000046}',
	'HeaderFooter' : '{000244A1-0000-0000-C000-000000000046}',
	'Page' : '{000244A2-0000-0000-C000-000000000046}',
	'Pages' : '{000244A3-0000-0000-C000-000000000046}',
	'ServerViewableItems' : '{000244A4-0000-0000-C000-000000000046}',
	'TableStyleElement' : '{000244A5-0000-0000-C000-000000000046}',
	'TableStyleElements' : '{000244A6-0000-0000-C000-000000000046}',
	'TableStyle' : '{000244A7-0000-0000-C000-000000000046}',
	'TableStyles' : '{000244A8-0000-0000-C000-000000000046}',
	'SortField' : '{000244A9-0000-0000-C000-000000000046}',
	'SortFields' : '{000244AA-0000-0000-C000-000000000046}',
	'Sort' : '{000244AB-0000-0000-C000-000000000046}',
	'Research' : '{000244AC-0000-0000-C000-000000000046}',
	'ColorStop' : '{000244AD-0000-0000-C000-000000000046}',
	'ColorStops' : '{000244AE-0000-0000-C000-000000000046}',
	'LinearGradient' : '{000244AF-0000-0000-C000-000000000046}',
	'RectangularGradient' : '{000244B0-0000-0000-C000-000000000046}',
	'MultiThreadedCalculation' : '{000244B1-0000-0000-C000-000000000046}',
	'ChartFormat' : '{000244B2-0000-0000-C000-000000000046}',
	'FileExportConverter' : '{000244B3-0000-0000-C000-000000000046}',
	'FileExportConverters' : '{000244B4-0000-0000-C000-000000000046}',
	'AddIns2' : '{000244B5-0000-0000-C000-000000000046}',
	'SparklineGroups' : '{000244B6-0000-0000-C000-000000000046}',
	'SparklineGroup' : '{000244B7-0000-0000-C000-000000000046}',
	'SparkPoints' : '{000244B8-0000-0000-C000-000000000046}',
	'Sparkline' : '{000244B9-0000-0000-C000-000000000046}',
	'SparkAxes' : '{000244BA-0000-0000-C000-000000000046}',
	'SparkHorizontalAxis' : '{000244BB-0000-0000-C000-000000000046}',
	'SparkVerticalAxis' : '{000244BC-0000-0000-C000-000000000046}',
	'SparkColor' : '{000244BD-0000-0000-C000-000000000046}',
	'DataBarBorder' : '{000244BE-0000-0000-C000-000000000046}',
	'NegativeBarFormat' : '{000244BF-0000-0000-C000-000000000046}',
	'ValueChange' : '{000244C0-0000-0000-C000-000000000046}',
	'PivotTableChangeList' : '{000244C1-0000-0000-C000-000000000046}',
	'DisplayFormat' : '{000244C2-0000-0000-C000-000000000046}',
	'SlicerCaches' : '{000244C3-0000-0000-C000-000000000046}',
	'SlicerCache' : '{000244C4-0000-0000-C000-000000000046}',
	'SlicerCacheLevels' : '{000244C5-0000-0000-C000-000000000046}',
	'SlicerCacheLevel' : '{000244C6-0000-0000-C000-000000000046}',
	'Slicers' : '{000244C7-0000-0000-C000-000000000046}',
	'Slicer' : '{000244C8-0000-0000-C000-000000000046}',
	'SlicerItem' : '{000244C9-0000-0000-C000-000000000046}',
	'SlicerItems' : '{000244CA-0000-0000-C000-000000000046}',
	'SlicerPivotTables' : '{000244CB-0000-0000-C000-000000000046}',
	'ProtectedViewWindows' : '{000244CC-0000-0000-C000-000000000046}',
	'ProtectedViewWindow' : '{000244CD-0000-0000-C000-000000000046}',
	'TableObject' : '{000244CE-0000-0000-C000-000000000046}',
	'PivotValueCell' : '{000244CF-0000-0000-C000-000000000046}',
	'QuickAnalysis' : '{000244D0-0000-0000-C000-000000000046}',
	'ModelConnection' : '{000244D1-0000-0000-C000-000000000046}',
	'WorksheetDataConnection' : '{000244D2-0000-0000-C000-000000000046}',
	'TextConnection' : '{000244D3-0000-0000-C000-000000000046}',
	'DataFeedConnection' : '{000244D4-0000-0000-C000-000000000046}',
	'ModelTableColumn' : '{000244D5-0000-0000-C000-000000000046}',
	'ModelTableColumns' : '{000244D6-0000-0000-C000-000000000046}',
	'ModelTable' : '{000244D7-0000-0000-C000-000000000046}',
	'ModelTables' : '{000244D8-0000-0000-C000-000000000046}',
	'ModelRelationship' : '{000244D9-0000-0000-C000-000000000046}',
	'ModelRelationships' : '{000244DA-0000-0000-C000-000000000046}',
	'Model' : '{000244DB-0000-0000-C000-000000000046}',
	'FullSeriesCollection' : '{000244DC-0000-0000-C000-000000000046}',
	'ChartCategory' : '{000244DD-0000-0000-C000-000000000046}',
	'CategoryCollection' : '{000244DE-0000-0000-C000-000000000046}',
	'TimelineState' : '{000244DF-0000-0000-C000-000000000046}',
	'TimelineViewState' : '{000244E0-0000-0000-C000-000000000046}',
	'ModelTableNames' : '{000244E1-0000-0000-C000-000000000046}',
	'ModelTableNameChange' : '{000244E2-0000-0000-C000-000000000046}',
	'ModelTableNameChanges' : '{000244E3-0000-0000-C000-000000000046}',
	'ModelChanges' : '{000244E4-0000-0000-C000-000000000046}',
	'ModelColumnName' : '{000244E5-0000-0000-C000-000000000046}',
	'ModelColumnNames' : '{000244E6-0000-0000-C000-000000000046}',
	'ModelColumnChange' : '{000244E7-0000-0000-C000-000000000046}',
	'ModelColumnChanges' : '{000244E8-0000-0000-C000-000000000046}',
	'ModelMeasureName' : '{000244E9-0000-0000-C000-000000000046}',
	'ModelMeasureNames' : '{000244EA-0000-0000-C000-000000000046}',
	'WorkbookQuery' : '{000244EB-0000-0000-C000-000000000046}',
	'Queries' : '{000244EC-0000-0000-C000-000000000046}',
	'ModelMeasure' : '{000244ED-0000-0000-C000-000000000046}',
	'ModelMeasures' : '{000244EE-0000-0000-C000-000000000046}',
	'ModelFormatGeneral' : '{000244EF-0000-0000-C000-000000000046}',
	'ModelFormatDate' : '{000244F0-0000-0000-C000-000000000046}',
	'ModelFormatDecimalNumber' : '{000244F1-0000-0000-C000-000000000046}',
	'ModelFormatWholeNumber' : '{000244F2-0000-0000-C000-000000000046}',
	'ModelFormatPercentageNumber' : '{000244F3-0000-0000-C000-000000000046}',
	'ModelFormatScientificNumber' : '{000244F4-0000-0000-C000-000000000046}',
	'ModelFormatCurrency' : '{000244F5-0000-0000-C000-000000000046}',
	'ModelFormatBoolean' : '{000244F6-0000-0000-C000-000000000046}',
	'PublishedDocs' : '{000244F7-0000-0000-C000-000000000046}',
	'PublishedDoc' : '{000244F8-0000-0000-C000-000000000046}',
	'SeriesGradientStopColorFormat' : '{000244F9-0000-0000-C000-000000000046}',
	'ChartSeriesGradientStopData' : '{000244FA-0000-0000-C000-000000000046}',
	'DefaultPivotTableLayoutOptions' : '{000244FB-0000-0000-C000-000000000046}',
	'CommentsThreaded' : '{000244FC-0000-0000-C000-000000000046}',
	'CommentThreaded' : '{000244FD-0000-0000-C000-000000000046}',
	'Author' : '{000244FE-0000-0000-C000-000000000046}',
	'NamedSheetViewCollection' : '{00024501-0000-0000-C000-000000000046}',
	'NamedSheetView' : '{00024502-0000-0000-C000-000000000046}',
	'CellControl' : '{00024503-0000-0000-C000-000000000046}',
	'IDummy' : '{0002442E-0001-0000-C000-000000000046}',
	'ICanvasShapes' : '{0002444F-0001-0000-C000-000000000046}',
}

win32com.client.constants.__dicts__.append(constants.__dict__)

